(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[   2559418,      46840]
NotebookOptionsPosition[   2553902,      46672]
NotebookOutlinePosition[   2554284,      46689]
CellTagsIndexPosition[   2554241,      46686]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[StyleBox["Styles", "Subsubsection"]], "Text",
 CellChangeTimes->{{3.7657904299056168`*^9, 3.765790430639618*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Plot", ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "20"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ContourPlot", ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontSize", "\[Rule]", "20"}], ",", " ", 
       RowBox[{"FontColor", " ", "\[Rule]", "  ", "Black"}]}], "}"}]}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ListContourPlot", ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontSize", "\[Rule]", "20"}], ",", " ", 
       RowBox[{"FontColor", " ", "\[Rule]", "  ", "Black"}]}], "}"}]}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ListLinePlot", ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontSize", "\[Rule]", "20"}], ",", " ", 
       RowBox[{"FontColor", " ", "\[Rule]", "  ", "Black"}]}], "}"}]}]}], 
   "]"}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7651149102509604`*^9, 3.765114918565547*^9}, {
   3.7651149681398373`*^9, 3.7651149865785646`*^9}, 3.765116057659563*^9, {
   3.765116103980563*^9, 3.7651161079785633`*^9}, {3.7651161622805634`*^9, 
   3.7651161648705635`*^9}, {3.765165926456825*^9, 3.7651659470758247`*^9}},
 ExpressionUUID -> "3f0c451b-8993-4e98-8b4d-acfe09cb7194"],

Cell[CellGroupData[{

Cell["Variables and Definitions", "Section",
 CellChangeTimes->{{3.7657904419182005`*^9, 3.765790448650998*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"hbar", "=", 
   RowBox[{"1.05457148", "\[Times]", "10", 
    SuperscriptBox[
     RowBox[{"(", "10", ")"}], 
     RowBox[{"-", "34"}]]}]}], ";", " ", 
  RowBox[{"Delta", " ", "=", " ", 
   RowBox[{"40", " ", 
    SuperscriptBox["10", "9"]}]}], ";", 
  RowBox[{"Gam", " ", "=", " ", 
   RowBox[{"32.8", " ", 
    RowBox[{
     SuperscriptBox["10", "6"], "/", 
     RowBox[{"(", 
      RowBox[{"2", " ", "Pi"}], ")"}]}]}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"Gamma", " ", "D2", " ", "Line"}], "*)"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{"\[Lambda]", " ", "=", " ", 
   RowBox[{"852.1", " ", 
    SuperscriptBox["10", 
     RowBox[{"-", "9"}]]}]}], " ", 
  RowBox[{"(*", "Red", "*)"}], " ", ";", " ", 
  RowBox[{"Inti", " ", "=", " ", "15000"}], ";", 
  RowBox[{"mCs", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{"133", " ", "1.660", " ", 
     SuperscriptBox["10", 
      RowBox[{"-", "27"}]]}], ")"}]}], ";", 
  RowBox[{"Er", " ", "=", " ", 
   RowBox[{
    SuperscriptBox["hbar", "2"], 
    FractionBox[
     SuperscriptBox["k", "2"], 
     RowBox[{"2", "*", "mCs"}]]}]}], " ", 
  RowBox[{"(*", 
   RowBox[{"Recoil", " ", "Energy"}], "*)"}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alal", " ", "=", " ", "2"}], ";", 
  RowBox[{"k", "=", " ", 
   RowBox[{"2", " ", 
    RowBox[{"Pi", "/", "\[Lambda]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"el", " ", "=", " ", 
   RowBox[{"1.602", " ", 
    SuperscriptBox["10", 
     RowBox[{"-", "19"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"me", " ", "=", " ", 
   RowBox[{"9.1", " ", 
    SuperscriptBox["10", 
     RowBox[{"-", "31"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]red", " ", "=", " ", 
   RowBox[{"852", " ", 
    SuperscriptBox["10", 
     RowBox[{"-", "9"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]red", " ", "=", " ", 
   RowBox[{"32.8", " ", 
    SuperscriptBox["10", "6"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hp", " ", "=", " ", 
   RowBox[{"hbar", " ", "2", " ", "Pi"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Ints", " ", "=", " ", 
    FractionBox[
     RowBox[{"Pi", " ", "hp", " ", "c", " ", "\[Gamma]red"}], 
     RowBox[{"3", " ", 
      SuperscriptBox["\[Lambda]red", "3"]}]]}], ";", "  ", 
   RowBox[{"(*", 
    RowBox[{"Saturation", " ", "Intensity"}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"UDsim", "[", 
     RowBox[{"x_", ",", "y_", ",", "z_", ",", "a_", ",", "b_"}], "]"}], ":=", 
    " ", 
    RowBox[{"(*", 
     RowBox[{"Lattice", " ", "Potrential"}], "*)"}], 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"12", " ", "Delta", " ", "Ints"}]]}], 
     SuperscriptBox["Gam", "2"], " ", "hbar", " ", "Inti", " ", 
     RowBox[{"(", 
      RowBox[{"4", "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"a", "-", "b", "-", 
         RowBox[{"2", " ", "k", " ", "x"}]}], "]"}], "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"a", "-", "b", "+", 
         RowBox[{"2", " ", "k", " ", "x"}]}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", "a", "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"k", " ", 
          RowBox[{"(", 
           RowBox[{"x", "-", "y"}], ")"}]}], "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", "b", "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"k", " ", 
          RowBox[{"(", 
           RowBox[{"x", "+", "y"}], ")"}]}], "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"k", " ", 
          RowBox[{"(", 
           RowBox[{"x", "+", "z"}], ")"}]}], "]"}], " ", 
        RowBox[{"Sin", "[", "b", "]"}]}], "+", 
       RowBox[{"Sin", "[", 
        RowBox[{"a", "+", 
         RowBox[{"k", " ", "x"}], "-", 
         RowBox[{"k", " ", "z"}]}], "]"}], "+", 
       RowBox[{"Sin", "[", 
        RowBox[{"a", "-", 
         RowBox[{"k", " ", "x"}], "+", 
         RowBox[{"k", " ", "z"}]}], "]"}]}], ")"}]}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ecrosss", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_", ",", "a_", ",", "b_"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"(*", 
   RowBox[{"Polarization", " ", "Lattice"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"+", "1"}], "/", "3"}], "*", "hbar", " ", 
   SuperscriptBox["Gam", "2"], 
   RowBox[{"Inti", " ", "/", " ", 
    RowBox[{"(", 
     RowBox[{"Delta", "*", "8", " ", "Ints"}], ")"}]}], 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"r", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"k", " ", 
           RowBox[{"(", 
            RowBox[{"y", "+", "z"}], ")"}]}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"a", "-", "b"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "k", " ", "x"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", "a", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"k", " ", 
           RowBox[{"(", 
            RowBox[{"x", "-", "y"}], ")"}]}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"Sin", "[", "b", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"k", " ", 
           RowBox[{"(", 
            RowBox[{"x", "+", "y"}], ")"}]}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", "a", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"k", " ", 
              RowBox[{"(", 
               RowBox[{"x", "+", "z"}], ")"}]}], "]"}]}], "-", 
           RowBox[{"Sin", "[", 
            RowBox[{"k", " ", 
             RowBox[{"(", 
              RowBox[{"x", "-", "z"}], ")"}]}], "]"}]}], ")"}]}], "-", 
        RowBox[{"Sin", "[", 
         RowBox[{"k", " ", 
          RowBox[{"(", 
           RowBox[{"y", "-", "z"}], ")"}]}], "]"}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", "b", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"k", " ", 
              RowBox[{"(", 
               RowBox[{"x", "-", "z"}], ")"}]}], "]"}]}], "+", 
           RowBox[{"Sin", "[", 
            RowBox[{"k", " ", 
             RowBox[{"(", 
              RowBox[{"x", "+", "z"}], ")"}]}], "]"}]}], ")"}]}]}], ")"}]}], 
     ",", 
     RowBox[{"2", " ", "r", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "b", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"k", " ", 
           RowBox[{"(", 
            RowBox[{"x", "-", "z"}], ")"}]}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", "a", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"k", " ", 
           RowBox[{"(", 
            RowBox[{"x", "+", "z"}], ")"}]}], "]"}]}], "-", 
        RowBox[{"Sin", "[", 
         RowBox[{"k", " ", 
          RowBox[{"(", 
           RowBox[{"y", "+", "z"}], ")"}]}], "]"}]}], ")"}]}], ",", 
     RowBox[{"2", " ", "r", " ", 
      RowBox[{"(", 
       RowBox[{"r", "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"k", " ", "z"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Sin", "[", "a", "]"}], "-", 
           RowBox[{"Sin", "[", "b", "]"}]}], ")"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"k", " ", "x"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"k", " ", "x"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Sin", "[", "a", "]"}], "+", 
           RowBox[{"Sin", "[", "b", "]"}]}], ")"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"k", " ", "z"}], "]"}]}], "+", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "k", " ", "z"}], "]"}]}], ")"}]}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalOmega]rabired", "[", "Int_", "]"}], ":=", " ", 
    RowBox[{"Sqrt", "[", 
     FractionBox[
      RowBox[{"3", " ", 
       SuperscriptBox["\[Lambda]red", "3"], " ", "\[Gamma]red", " ", "Int"}], 
      RowBox[{"2", " ", "Pi", " ", "hp", " ", "c"}]], "]"}]}], ";", " ", 
   RowBox[{"(*", 
    RowBox[{"Rabi", " ", "frequency", " ", "red", " ", "light"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ecrosssdel", "[", 
     RowBox[{
     "x_", ",", "y_", ",", "z_", ",", "a_", ",", "b_", ",", " ", "Delta_", 
      ",", " ", "Inti_"}], "]"}], " ", ":=", "  ", 
    RowBox[{"(*", 
     RowBox[{
     "ecrosss", " ", "function", " ", "with", " ", "two", " ", "additonal", 
      " ", 
      RowBox[{"parameters", ":", " ", 
       RowBox[{"Detuning", " ", "and", " ", "Intensity"}]}]}], "*)"}], " ", 
    RowBox[{
     RowBox[{
      RowBox[{"+", "1"}], "/", "3"}], "*", "hbar", " ", 
     SuperscriptBox["Gam", "2"], 
     RowBox[{"Inti", " ", "/", " ", 
      RowBox[{"(", 
       RowBox[{"Delta", "*", "8", " ", "Ints"}], ")"}]}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"r", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"k", " ", 
             RowBox[{"(", 
              RowBox[{"y", "+", "z"}], ")"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"a", "-", "b"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "k", " ", "x"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", "a", "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"k", " ", 
             RowBox[{"(", 
              RowBox[{"x", "-", "y"}], ")"}]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"Sin", "[", "b", "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"k", " ", 
             RowBox[{"(", 
              RowBox[{"x", "+", "y"}], ")"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", "a", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"r", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"k", " ", 
                RowBox[{"(", 
                 RowBox[{"x", "+", "z"}], ")"}]}], "]"}]}], "-", 
             RowBox[{"Sin", "[", 
              RowBox[{"k", " ", 
               RowBox[{"(", 
                RowBox[{"x", "-", "z"}], ")"}]}], "]"}]}], ")"}]}], "-", 
          RowBox[{"Sin", "[", 
           RowBox[{"k", " ", 
            RowBox[{"(", 
             RowBox[{"y", "-", "z"}], ")"}]}], "]"}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", "b", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"r", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"k", " ", 
                RowBox[{"(", 
                 RowBox[{"x", "-", "z"}], ")"}]}], "]"}]}], "+", 
             RowBox[{"Sin", "[", 
              RowBox[{"k", " ", 
               RowBox[{"(", 
                RowBox[{"x", "+", "z"}], ")"}]}], "]"}]}], ")"}]}]}], ")"}]}],
        ",", 
       RowBox[{"2", " ", "r", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "b", "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"k", " ", 
             RowBox[{"(", 
              RowBox[{"x", "-", "z"}], ")"}]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", "a", "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"k", " ", 
             RowBox[{"(", 
              RowBox[{"x", "+", "z"}], ")"}]}], "]"}]}], "-", 
          RowBox[{"Sin", "[", 
           RowBox[{"k", " ", 
            RowBox[{"(", 
             RowBox[{"y", "+", "z"}], ")"}]}], "]"}]}], ")"}]}], ",", 
       RowBox[{"2", " ", "r", " ", 
        RowBox[{"(", 
         RowBox[{"r", "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"k", " ", "z"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Sin", "[", "a", "]"}], "-", 
             RowBox[{"Sin", "[", "b", "]"}]}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"k", " ", "x"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"k", " ", "x"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Sin", "[", "a", "]"}], "+", 
             RowBox[{"Sin", "[", "b", "]"}]}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"k", " ", "z"}], "]"}]}], "+", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "k", " ", "z"}], "]"}]}], ")"}]}]}], "}"}]}]}]}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BeffCouplingDegenerate", "[", 
    RowBox[{"\[Theta]_", ",", " ", "F_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "4"], 
          FractionBox["1", "F"], 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"F", 
             RowBox[{"(", 
              RowBox[{"F", "+", "1"}], ")"}]}], "-", 
            RowBox[{"mF", 
             RowBox[{"(", 
              RowBox[{"mF", "-", "1"}], ")"}]}]}], "]"}]}], ")"}], ",", 
        RowBox[{"{", 
         RowBox[{"mF", ",", " ", "2", ",", " ", "3"}], "}"}]}], "]"}]}], " ", 
     "+", " ", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", "0"}]}], " ", "//", "N"}]}],
   ";", 
  RowBox[{"(*", 
   RowBox[{
   "matrix", " ", "elements", " ", "which", " ", "couple", " ", "m", " ", 
    "and", " ", "F", " ", "states", " ", "in", " ", "the", " ", "case", " ", 
    "of", " ", "DEGENERATE", " ", "Raman", " ", "Sideband", " ", "cooling", 
    " ", 
    RowBox[{"(", 
     RowBox[{"mF", "\[UndirectedEdge]", 
      RowBox[{"mF", "-", "1"}]}], ")"}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"BeffCouplingGenerate", "[", 
    RowBox[{"\[Theta]_", ",", " ", "F_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "4"]}], 
           FractionBox["1", "F"], 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"F", 
              RowBox[{"(", 
               RowBox[{"F", "-", "1"}], ")"}]}], "+", 
             RowBox[{"mF", 
              RowBox[{"(", 
               RowBox[{"mF", "-", "1", " ", "+", " ", 
                RowBox[{"2", "F"}]}], ")"}]}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"mF", ",", " ", 
            RowBox[{
             RowBox[{"-", "F"}], "+", "2"}], ",", " ", "F"}], "}"}]}], "]"}], 
        " ", "+", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           FractionBox["1", "4"], 
           FractionBox["1", "F"], 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"F", 
              RowBox[{"(", 
               RowBox[{"F", "-", "1"}], ")"}]}], "+", 
             RowBox[{"mF", 
              RowBox[{"(", 
               RowBox[{"mF", "+", "1", " ", "-", " ", 
                RowBox[{"2", "F"}]}], ")"}]}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"mF", ",", " ", 
            RowBox[{"-", "F"}], ",", " ", 
            RowBox[{"F", "-", "2"}]}], "}"}]}], "]"}]}], " ", ")"}]}], "+", 
     " ", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"-", "1"}], 
          RowBox[{"2", " ", "F"}]], 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           SuperscriptBox["F", "2"], "-", 
           SuperscriptBox["mF", "2"]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"mF", ",", " ", 
          RowBox[{
           RowBox[{"-", "F"}], "+", "1"}], ",", " ", 
          RowBox[{"F", "-", "1"}]}], "}"}]}], "]"}]}]}], "//", "N"}]}], "  ", 
  ";", 
  RowBox[{"(*", 
   RowBox[{
   "matrix", " ", "elements", " ", "which", " ", "couple", " ", "m", " ", 
    "and", " ", "F", " ", "states", " ", "in", " ", "the", " ", "case", " ", 
    "of", " ", "DEGENERATE", " ", "Raman", " ", "Sideband", " ", "cooling", 
    " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"F", "\[UndirectedEdge]", 
       RowBox[{"F", "-", "1"}]}], ",", " ", 
      RowBox[{"mF", " ", "doesnt", " ", "matter"}]}], ")"}]}], 
   "*)"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.765105686364481*^9, 3.7651056939497538`*^9}, {
   3.7651141745242214`*^9, 3.7651142122157383`*^9}, 3.7651160576605635`*^9, {
   3.7657908690616274`*^9, 3.7657909166380005`*^9}, {3.7657910591291666`*^9, 
   3.7657911428225327`*^9}, {3.765791216932391*^9, 3.7657912172291307`*^9}, {
   3.765791325315388*^9, 3.7657914304185386`*^9}, {3.7657915051680174`*^9, 
   3.7657915335848355`*^9}, {3.7657916587928*^9, 3.765791812978492*^9}, {
   3.765791886197075*^9, 3.765791902366356*^9}, {3.765792245792592*^9, 
   3.7657922982976313`*^9}, {3.7657923670643606`*^9, 3.765792367486099*^9}, {
   3.7657982495910864`*^9, 3.765798249919117*^9}, {3.765798444851051*^9, 
   3.7657984595879736`*^9}, {3.7657985042031865`*^9, 
   3.7657985047811375`*^9}, {3.765867408425313*^9, 3.7658674507920685`*^9}, {
   3.765867524838126*^9, 3.765867696768648*^9}, {3.7658692543299804`*^9, 
   3.7658692766843224`*^9}},
 ExpressionUUID -> "39694125-875d-45a5-9ff3-cbf1ce29260e"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "a", ",", "b", ",", "x", ",", "y", ",", "z", ",", "r", ",", " ", "hbar", 
   ",", " ", "Gam", ",", " ", "Inti", ",", " ", "Ints", ",", " ", "Delta", 
   ",", "k"}], "]"}]], "Input",
 CellChangeTimes->{{3.7651663928868246`*^9, 3.765166393892825*^9}},
 ExpressionUUID -> "9ea1a26b-27aa-4587-bcad-c842d76d6074"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"BeffCouplingDegenerate", "[", 
    RowBox[{"\[Theta]", ",", " ", "4"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", 
     RowBox[{
      RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
     RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7657923363838844`*^9, 3.7657923442884436`*^9}, {
  3.7657923892310514`*^9, 3.765792500410101*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJw12Hk0Vd/7B3BEKSVRlFLRaEhIczzyqTSYCZUMFYlPhCTzkC5SIpLM13Az
hsxDNrrmWbqm7j18JGPIeC/hu1vr9/vrrNc6a52197PPfu/nHNE7NtpmHGxs
bGvY2dj+Xq9e4f1nSZSFbnP1rVE8Yqp4Ns91ins3Cx22ZndQegYgJToWLSjM
QsM/Y+sXvTWAl1XDlOVnoXP+pIgOb2NoS/b6aMGB7+f8FMz1tgED7rkdtP+Y
qCqB95C1twfcr+mdykpgonTrUafHXq/B52JKjPkBJhovU1yMcosF245F/hCB
BRRDTX1rbZwF9beFh38IzCO/r3HDAYqFsFyWmnVmxxxq4blim89AMPDpd7DW
+llUbK8xWMtGhRPktR2veGYQz8x1vseFNXBOrF06gPkbVd2V1jdJaoBdLrxu
L0enUJ66x16WSQu0RskamNMnURNxtMXVqA1aLHKGjpf8Ql8EhT4VinwFinjb
Kc3PY+jgnPADSloHyES0PrKrG0EU/hvldBEaiMoo9AimDaGd1ezX0t91wmjx
Ra612YMoa4Px4dt9XbDTqsTU8eUAutWvUywl3gMr9fxJU7b96G5OfleNei/Y
w0bdBwsMFJaQ42tx8TsUHmsqn8vrQVXW0VRROTrICL26zE/pQcvsR6P1j9Mh
eVG1VTqsB62fG0oOOEWH8IpG4v6THpQ8znVjQpEOjhqNK90nepA701Yw5hod
Tlg1nCsr6EZ60eY9lHt0yI2vKyQVdSHqVbejhm/pkLmlOkvoMw21Oht8uvab
DtpGW672pdHQL26eTyqzdJhPNRxIjqAh7wcdpPMLdDh3YWbbmac0lHCx5aP0
Mh1qn+x1MTxGQ+cy7k9PcDOgr9f5IjnlG2LcKtq+bi8DtlCO9kiEdSCjOJp1
qCoD7M+8X6No045G+iOObI9lQGjozu96Ru1oRS7Wx5XMgNyJ6FwbtXbUeTmt
kJHAgPn4eDOyZDuifpApiEpmwFOe9BrO4TY006y1fjWbAe7fywIaTNqQDfdT
uiGVAX7uPwRuaLciPXFPcdchBiR3mY/bnm9FjV6jbZEjDKiTG6G+kGlFlDJd
7aIxBmwY+uVQytuKluaCe35NMkA4diITwlpQw9l3nApMBhw4v/VUk28z+pz+
Isaem4Azz40vD1s2Ir2+8UmlQwTUMd2SjK41ore3Dr9eOkyAwb9RHN8kG1F5
rujVXAkCHHS6SyvGG1DJ9gH+vdIEZInqyEZaNyCzz8XjffIEHCq7JKxuV4+2
l06krlMmYOvCkfEcp1p0sWglbvgmAQmWqlckbtYi7s4bJHNDAuQYlpS4M7VI
67OOz3+3CdCs+mDyaqkGqZTU1HWYEBAQIvrN3K0G1X+XfRpvTgCHzLayHV7V
KGzAWeM/WwImLf689vCjon0T17VmSAR0fJTlUzenIqf5h5s0/AgonjUP2nWB
ig58e+qf7E+Aj2dbUNHqF5QUx1mh+5IA4XBK8MyTL0hAQVXyTTABF2o0Q+6b
VaKb032dcZEEiG8iCZz4pxLZd//27YoigFenJIRTtBI9s3Cf3xRDQDfjQCj5
ewVS1/3EaxdHgPX8YmivTgXyhAPie5IICD+QFKahXI6+xX2e2fiRADerHsHd
e8uRjIO/195MAqru7JHuXkJIheXdKJtFwE3nWWkBe4T0T2a/V/tEwPOUGBlf
0zLknPAfr2U+AT3rZo7ZKJaiqFhT3RNlBDyjRp4BZgE6NxTYvrORgOHm0yFm
hQVo3/EJ125s9e7OsYCnBchovE/qbROe74RAdBczH7lwaEevbcHrJ/Ry1ZaV
h5IT9qG2NgLolq7UxMUcxNc5/Ye7kwBlB2GRhuIcxB6uu0TBTvYodPjtnIPO
F0WvKHcR8Dh09qDi0ickZIkEHLoJ2FD2r3/nUjZq9D/lWNGL6yFWHLV1MRPV
2InvXCIIOH1yXs3UORMZxxbddeojgFNVbjVj8SPK/piYNYcd6ZBqqrKUgYQ+
/Ks/3E9AbW3EQec/aeim8kxn3gABIXRaZ7VrGlIa81Pe/4MAo2l+f4HlVCSz
GbKDsOd2BoylL6eg1+O/I+4OEiBm45JFrHxASoOlMb9/EvDrWYGplMcHpG0b
J645REBh+Ay/0yoFFc/bFqZja1RaOfCzUdAhrtp+42ECXLcZnrnInojyEeXO
xxECVCTCx4K9EpBvrfHGZWx+6IhisCeg0qPfi66MEpBiobrqyBGPXu3fuJeO
TSs5R01dE4eK+uq3j48RsMvpDmN6YyzyE7dKER8n4KXzNfkg/hiUZ2KrZYZt
5SbSVy8ShVbsyEM07B73tScs9kWi4GfUbxt/EXDVczKASzwCPfgFvUrYEs8q
TirJhyMFp2NSCdgRPqmv6KffIbPiJMc27A2kkAFnCEPHQ+71LGOP+pm9zrsa
igIDPg9qTuD37YX6oLZmCOLK1Q50xK4POHl26vobxE6SUI/CTglcPyRhGoQ6
nd4L9GHL7R10CmoKRPcCpXasYvPvKzjQ0PUSMWQXj++aJGD6gH8b148XKIPC
ZnkSu+3wLTelST9kr6qYp4mdJXlE3GWRhHjisoUssIOkVzvyuJ4jv7M3gt2w
H8m2eU7xPUNnaMfEgrE15ROkJHd5oQ8XlOrjsY2tR7Ma1N1R4FM3/0/Yux8H
cp83c0bjnqPG5dgMJzmTfJcnaNqfpNaIHe1BK5B8Y4f46ZraNOzCDXO7lbUe
oqm+y9YM7JOCCs1S7mbo0Q5r8g9sq382LEnr3UJph8rHhrFbc+VzuE1UEKtO
UW0Mu+NxuqJc9lEY7B2p+utox4sjmlE6oKBXcX3073izblYpkE2BQ6Pqz8+/
80/kF9R5/ABsWHPF/dgpqmbHchMewXKSTlAP9uilil7FV4/BsJLh2oYtcV7E
p+7JU3DsfudZ/Xc8Z52kdE1cwS7EI7IImxZhaTm53xNS88KaUrHn34WX5e7w
hkIxhmAEtuDban5nXh+w6dFz9P07vzez5rCGBDQW+6QdtsFrsRJOpi+cLOlz
M8R++lJzc/24P2x8Mrvvwt/6kNILdGmvQKa2PG8TdtezHh7hhtcQEedKnsTr
7arEmTVJBEHmrH1iC3a0ghxnXscbeP5115Q/tvS5Kx+FWkJAwr/91D3ssjMm
Bs51oXCerzH8HDbjZGA6lIXBgnhozBB+H61PJOnFF74Dpbb7F4qxV+RL2bhy
wkHF3p89AHu33Khu/YcIUOOvrDiIbSx1aVk3OAYMeIxvquD9cS6cEjgfFwtt
8XEeXNgbvdfwqRrEwUOZXrMKvN9Gft0l/7pPBkcvdQc57Piq/VQZ3wTQ3lUW
x8L7N2ip4yX75kSQstJrTsJ2l31+vT0sEb7b8X/WwL4VPfjTnpIEOby8jCic
B1sdKOsLqj4Az2q19C6cFxxpeu2+askg63nUPB/ny1Tf2kiDb8mQ/n7KSB27
SfW+1OKPFCjhigh1xHlE2n9YQ4EzHSTTTLZk4jz7M6JbbyqaBWZCLP1POB9n
ODOkr5plwdJ0dvJh7NE9XCFyKVlw/+m1kigGXo/rebfWyGaDF8/lg+50AvIq
tv1KVPoEszM+Ww/+zdv3tM3DxrlQesPj1gYaAWa50o9bE3LBN/tUi+E3Agxb
SF2FQ7nwQOIZV0YHAde4TpL9bfKAW2y56NJXAg7bvpOT9MgHYeuRf4xbCei/
bHDdOqYQFJauDO2vJ0Bx0NW0iV4IE81B4aZ1OG+8yA+lRIrg2KZj+lG1BGgX
jz4fjSyC4PPFf3hqCKiUdMs3f18MQ55HRr9+wfXnjRcyDi2FN1d7b6z9jPNk
dG780MVyCB86Pj6XQYDJKW77znvl4D+deGc2nYBAkjCL5FMOf/SODE+l4XqI
AdfPL+XQ+qNu748U/LxbfiKJyhUQXDN/JQeftwJNwup7lSpBWCTlxSw+r2cz
IXP7WSps71qANS8IaJQ8y//oNhWWFSy/J+P+IOHDCYcaDyr0ZdQdU/XF4489
cvYJlQpWp3IFXvoQkB24s+arWhUYLLBFTrnj+j5cYASaVANF9ipD1Z6AIYlM
Xi5SLUgW58xr4/6mjJJqa5hcCwneQfuzDAgIE6N05NTXwrJaMx+PPgGXhKMj
7myug2ydn/uLdQhIXB9wsDy8Dr6t/Ke4rIrnP2yu6JJWD+anra8LAc7/pN3W
v1sbQWHh8lSkKAH5a9O1k6cbgbn1t1jxHnwe3j990nhrE+x7+1WKJkKAqrgu
W5N+E1jLNFevE8bjSfd/k8xoghYjDSEtfgLIObP5xuPNkP8h7bIrBwG5JoOr
P5+1wiLf7ODxfga4WJdcvh7bDg4WwlqK4QxQhrl7vJnt4NrJdmj5Le4v+Y56
1ZS1Q9Zd7f3FIQwIz44vOs1oB/miyrfSrxmQP+svsRt/Z5z9nq3PTmLAtLPB
xqGIr2CFuyx1ewZY+s61PA3rgOzoA2J+uH82iDuqH/WKBiJrT3p5sehg7lvH
QbT2wIEwm9QMKTp88ZGUfNnAgB/9RtFBGt/BaMtg5dYb/eDMmtkXfasXZs7U
KPY/GQCflY6b3sd7INNmE+vOo0EIzFJcH8vdDZweP73uhA6B+RuPK+OUTvB6
v++KUOgIFFVGu4lfoME1Tg9xqv8YaMmP7vvS3gEfrzzsmkj5Bau3/8iQJL/C
qQhU1Zw0CSorglO/X7bBxzvtSoI/p2APsS3P5VELmO/VlTw/+xsKEzdONOc2
wKeBdXmXpqahOkLU+aFILVzdynUwgH0WvE6t/6m0mwpPrsqfSGWbgwWaMT+o
l0Nd8rR21eIc2D2cFzVZUwQWjxf19mxYAH/t98oXUrMg8qL8os46JrhqFlqx
xZAhNUP/XRkPEy4UWlkk6pOhcJuLvDgfE5aMe/lVtpCBNlhhvbKdCVIPTEl+
PnHAR9IYSJZgQoSp/h/mtxggVVs2Lqsx4dAxZepNmwiwUyHHfAhlgvWiimB2
XDB4ZVLP8r9nQlvB48tFAsEQJDTc5RrNBA7HF0fKSUGQMSQtoE1hgnlRy5PQ
7kAY9i31/VPAhN4LxgfIti/AqLbzkVYvE/anVksak71wDi9tKiWYoKXnuKrh
6wmu4bvTDv5gQoW3r6hHjzu8tzAbXBpngvJ9NZ8Tds7QwT1zg7LChKDQHPtA
si0MPBJc4FvDgs6BbM2KHmuY7jod6rKOBS8cJEzu2lnC5hTPZk0+FvzL5l9H
xufu7i2JViVbWSD2ojLGze4mSDnVcB/cwYLNve8oeWQtONs/mhQkwoJdtusz
usjn4f/+D8D//x/4HyXfooo=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->(FontSize -> 20),
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{Rational[-1, 2] Pi, Rational[1, 2] Pi}, {0., 
     0.49901861503116}}, {{-1.5707963267948966`, 1.5707963267948966`}, {0., 
    0.49901861503116}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7657923447569027`*^9, 3.765792500644444*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"BeffCouplingGenerate", "[", 
    RowBox[{"\[Theta]", ",", " ", "4"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", 
     RowBox[{
      RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
     RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.765792564209426*^9, 3.765792569114541*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->(FontSize -> 20),
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{Rational[-1, 2] Pi, Rational[1, 2] Pi}, {-2.9957090681024345`, 
     2.9957090681024345`}}, {{-1.5707963267948966`, 
    1.5707963267948966`}, {-2.9957090681024345`, 2.9957090681024345`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7657925694424143`*^9, 3.7657928439166546`*^9, 
  3.7657929091681385`*^9, 3.7657937901048193`*^9, 3.7657940050575237`*^9}]
}, Open  ]],

Cell[TextData[StyleBox["Stuff (to be ignored by the unaware reader)", \
"Subsubsection"]], "Text",
 CellChangeTimes->{{3.7657923162621193`*^9, 3.7657923167777104`*^9}, {
  3.76586857183068*^9, 3.7658685760640635`*^9}, {3.765868638142812*^9, 
  3.7658686425012817`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"UDsim", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_", ",", "a_", ",", "b_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", 
     RowBox[{"12", " ", "Delta", " ", "Ints"}]]}], 
   SuperscriptBox["Gam", "2"], " ", "hbar", " ", "Inti", " ", 
   RowBox[{"(", 
    RowBox[{"4", "+", 
     RowBox[{"Cos", "[", 
      RowBox[{"a", "-", "b", "-", 
       RowBox[{"2", " ", "k", " ", "x"}]}], "]"}], "+", 
     RowBox[{"Cos", "[", 
      RowBox[{"a", "-", "b", "+", 
       RowBox[{"2", " ", "k", " ", "x"}]}], "]"}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", "a", "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"k", " ", 
        RowBox[{"(", 
         RowBox[{"x", "-", "y"}], ")"}]}], "]"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", "b", "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"k", " ", 
        RowBox[{"(", 
         RowBox[{"x", "+", "y"}], ")"}]}], "]"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"k", " ", 
        RowBox[{"(", 
         RowBox[{"x", "+", "z"}], ")"}]}], "]"}], " ", 
      RowBox[{"Sin", "[", "b", "]"}]}], "+", 
     RowBox[{"Sin", "[", 
      RowBox[{"a", "+", 
       RowBox[{"k", " ", "x"}], "-", 
       RowBox[{"k", " ", "z"}]}], "]"}], "+", 
     RowBox[{"Sin", "[", 
      RowBox[{"a", "-", 
       RowBox[{"k", " ", "x"}], "+", 
       RowBox[{"k", " ", "z"}]}], "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{3.765115796907563*^9},
 ExpressionUUID -> "96829789-04af-4410-a5ea-13c483504ad2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[Epsilon]1", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"r", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], "*", "k", "*", "z"}], "]"}]}], ",", 
    " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "a", "]"}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"\[ImaginaryI]", "*", "k", "*", "x"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", "b", "]"}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "*", "k", "*", "x"}], "]"}]}], "+", 
     RowBox[{"Exp", "[", 
      RowBox[{"\[ImaginaryI]", "*", "k", "*", "z"}], "]"}], "+", " ", 
     RowBox[{"\[ImaginaryI]", " ", "r", " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "*", "k", "*", "z"}], "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "a", "]"}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"\[ImaginaryI]", "*", "k", "*", "x"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", "b", "]"}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "*", "k", "*", "x"}], "]"}]}], "+", 
     RowBox[{"Exp", "[", 
      RowBox[{"\[ImaginaryI]", "*", "k", "*", "y"}], "]"}]}]}], " ", 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Epsilon]1s", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"r", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"+", "\[ImaginaryI]"}], "*", "k", "*", "z"}], "]"}]}], ",", 
    " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "a", "]"}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "*", "k", "*", "x"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", "b", "]"}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"\[ImaginaryI]", "*", "k", "*", "x"}], "]"}]}], "+", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], "*", "k", "*", "z"}], "]"}], "-", " ", 
     RowBox[{"\[ImaginaryI]", " ", "r", " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"+", "\[ImaginaryI]"}], "*", "k", "*", "z"}], "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "a", "]"}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "*", "k", "*", "x"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", "b", "]"}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"\[ImaginaryI]", "*", "k", "*", "x"}], "]"}]}], "+", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], "*", "k", "*", "y"}], "]"}]}]}], 
   "}"}]}]}], "Input",
 CellChangeTimes->{{3.765105098329622*^9, 3.7651051181724405`*^9}, {
  3.76510518261862*^9, 3.765105185488964*^9}, {3.7651052427124825`*^9, 
  3.765105249342355*^9}, {3.7651053051930995`*^9, 3.765105360622652*^9}, {
  3.765106590018783*^9, 3.765106608114435*^9}},
 ExpressionUUID -> "fd075526-98ec-40c2-8c7e-6adfdc93ec18"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "k", " ", "z"}]], " ", "r"}], ",", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "k", " ", "z"}]], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "k", " ", "z"}]], " ", "r"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "k", " ", "x"}]], " ", 
     RowBox[{"Sin", "[", "a", "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "k", " ", "x"}]], " ", 
     RowBox[{"Sin", "[", "b", "]"}]}]}], ",", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "k", " ", "y"}]], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "k", " ", "x"}]], " ", 
     RowBox[{"Cos", "[", "a", "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "k", " ", "x"}]], " ", 
     RowBox[{"Cos", "[", "b", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7651051858321576`*^9, 3.7651053112925825`*^9, 
  3.76510536280661*^9, 3.7651061107186513`*^9, 3.7651066088788204`*^9, 
  3.765115813810563*^9, 
  3.7651664062048244`*^9},ExpressionUUID->"4a73b0d1-4ed1-4919-b875-\
e0107537d6f2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "k", " ", "z"}]], " ", "r"}], ",", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "k", " ", "z"}]], "-", 
    RowBox[{"\[ImaginaryI]", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "k", " ", "z"}]], " ", "r"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "k", " ", "x"}]], " ", 
     RowBox[{"Sin", "[", "a", "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "k", " ", "x"}]], " ", 
     RowBox[{"Sin", "[", "b", "]"}]}]}], ",", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "k", " ", "y"}]], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "k", " ", "x"}]], " ", 
     RowBox[{"Cos", "[", "a", "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "k", " ", "x"}]], " ", 
     RowBox[{"Cos", "[", "b", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7651051858321576`*^9, 3.7651053112925825`*^9, 
  3.76510536280661*^9, 3.7651061107186513`*^9, 3.7651066088788204`*^9, 
  3.765115813810563*^9, 
  3.765166406210825*^9},ExpressionUUID->"42cb1eeb-a3fe-4d5b-a79d-\
4463964ea010"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ecrossold", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"+", "1"}], "/", "3"}], "*", "hbar", " ", 
    SuperscriptBox["Gam", "2"], 
    RowBox[{"Inti", " ", "/", " ", 
     RowBox[{"(", 
      RowBox[{"Delta", "*", "8", " ", "Ints"}], ")"}]}], "\[ImaginaryI]", "*", 
    RowBox[{"Cross", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", "a", "]"}], "*", 
          RowBox[{"Exp", "[", 
           RowBox[{"\[ImaginaryI]", "*", "k", "*", "x"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", "b", "]"}], "*", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], "*", "k", "*", "x"}], "]"}]}], 
         "+", 
         RowBox[{"Exp", "[", 
          RowBox[{"\[ImaginaryI]", "*", "k", "*", "z"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "a", "]"}], "*", 
          RowBox[{"Exp", "[", 
           RowBox[{"\[ImaginaryI]", "*", "k", "*", "x"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", "b", "]"}], "*", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], "*", "k", "*", "x"}], "]"}]}], 
         "+", 
         RowBox[{"Exp", "[", 
          RowBox[{"\[ImaginaryI]", "*", "k", "*", "y"}], "]"}]}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", "a", "]"}], "*", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], "*", "k", "*", "x"}], "]"}]}], 
         "+", 
         RowBox[{
          RowBox[{"Sin", "[", "b", "]"}], "*", 
          RowBox[{"Exp", "[", 
           RowBox[{"\[ImaginaryI]", "*", "k", "*", "x"}], "]"}]}], "+", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], "*", "k", "*", "z"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "a", "]"}], "*", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], "*", "k", "*", "x"}], "]"}]}], 
         "+", 
         RowBox[{
          RowBox[{"Cos", "[", "b", "]"}], "*", 
          RowBox[{"Exp", "[", 
           RowBox[{"\[ImaginaryI]", "*", "k", "*", "x"}], "]"}]}], "+", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], "*", "k", "*", "y"}], "]"}]}]}], 
       "}"}]}], "]"}]}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.7651057781451535`*^9, 3.7651057798923197`*^9}, {
  3.7651058609053807`*^9, 3.7651058638849235`*^9}},
 ExpressionUUID -> "9e88ba93-e693-40dd-96a9-ce32cb2b03d3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"12", " ", "Delta", " ", "Ints"}]], 
    RowBox[{
     SuperscriptBox["Gam", "2"], " ", "hbar", " ", "Inti", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", 
          RowBox[{"a", "-", "b"}], "]"}]}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "k", " ", "x"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", "a", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"k", " ", 
          RowBox[{"(", 
           RowBox[{"x", "-", "y"}], ")"}]}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", "b", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"k", " ", 
          RowBox[{"(", 
           RowBox[{"x", "+", "y"}], ")"}]}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "a", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"k", " ", 
          RowBox[{"(", 
           RowBox[{"x", "-", "z"}], ")"}]}], "]"}]}], "+", 
       RowBox[{"Sin", "[", 
        RowBox[{"k", " ", 
         RowBox[{"(", 
          RowBox[{"y", "-", "z"}], ")"}]}], "]"}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", "b", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"k", " ", 
          RowBox[{"(", 
           RowBox[{"x", "+", "z"}], ")"}]}], "]"}]}]}], ")"}]}]}], ",", "0", 
   ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.7651058846675425`*^9, 3.7651059454321923`*^9},
 ExpressionUUID -> "22bb491a-3db3-42de-b6f2-0ae179002195"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ecrosssold", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{"12", " ", "Delta", " ", "Ints"}]], 
     SuperscriptBox["Gam", "2"], " ", "hbar", " ", "Inti", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", 
          RowBox[{"a", "-", "b"}], "]"}]}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "k", " ", "x"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", "a", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"k", " ", 
          RowBox[{"(", 
           RowBox[{"x", "-", "y"}], ")"}]}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", "b", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"k", " ", 
          RowBox[{"(", 
           RowBox[{"x", "+", "y"}], ")"}]}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "a", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"k", " ", 
          RowBox[{"(", 
           RowBox[{"x", "-", "z"}], ")"}]}], "]"}]}], "+", 
       RowBox[{"Sin", "[", 
        RowBox[{"k", " ", 
         RowBox[{"(", 
          RowBox[{"y", "-", "z"}], ")"}]}], "]"}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", "b", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"k", " ", 
          RowBox[{"(", 
           RowBox[{"x", "+", "z"}], ")"}]}], "]"}]}]}], ")"}]}], ",", "0", 
    ",", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7651062211565647`*^9, 3.7651062250252905`*^9}},
 ExpressionUUID -> "446fdbac-3c8c-4706-85ec-0ff56d1b2f94"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1.7354161721758096`*^-28", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"7.373765176833219`*^6", " ", 
          RowBox[{"(", 
           RowBox[{"x", "-", "y"}], ")"}]}], "]"}], 
        SqrtBox["2"]]}], "+", 
      RowBox[{"Sin", "[", 
       RowBox[{"7.373765176833219`*^6", " ", "y"}], "]"}], "+", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"7.373765176833219`*^6", " ", 
         RowBox[{"(", 
          RowBox[{"x", "+", "y"}], ")"}]}], "]"}], 
       SqrtBox["2"]]}], ")"}]}], ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.765106225930073*^9, 3.7651149297910757`*^9, 
  3.7651158235485635`*^9},ExpressionUUID->"68e7409b-11f6-4fe5-b019-\
cbee653ab6e5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"+", "1"}], "/", "3"}], "*", "hbar", " ", 
  SuperscriptBox["Gam", "2"], 
  RowBox[{"Inti", " ", "/", " ", 
   RowBox[{"(", 
    RowBox[{"Delta", "*", "8", " ", "Ints"}], ")"}]}]}]], "Input",
 ExpressionUUID -> "82279fcd-b358-4490-85a7-e8a312aeefff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ecross", " ", "=", "  ", 
  RowBox[{
   RowBox[{"\[ImaginaryI]", "*", 
    RowBox[{"Cross", "[", 
     RowBox[{"\[Epsilon]1", ",", "\[Epsilon]1s"}], "]"}]}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.7651053697796764`*^9, 3.76510540226207*^9}, {
   3.765105663183327*^9, 3.765105664914894*^9}, {3.7651058816724*^9, 
   3.7651058825615826`*^9}, 3.7651061519836764`*^9},
 ExpressionUUID -> "3d50f9f4-47ab-42f1-82a4-e5b9f360c1bf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"r", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"k", " ", 
         RowBox[{"(", 
          RowBox[{"y", "+", "z"}], ")"}]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"a", "-", "b"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "k", " ", "x"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Sin", "[", "a", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"k", " ", 
         RowBox[{"(", 
          RowBox[{"x", "-", "y"}], ")"}]}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", "b", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"k", " ", 
         RowBox[{"(", 
          RowBox[{"x", "+", "y"}], ")"}]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", "a", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"r", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"k", " ", 
            RowBox[{"(", 
             RowBox[{"x", "+", "z"}], ")"}]}], "]"}]}], "-", 
         RowBox[{"Sin", "[", 
          RowBox[{"k", " ", 
           RowBox[{"(", 
            RowBox[{"x", "-", "z"}], ")"}]}], "]"}]}], ")"}]}], "-", 
      RowBox[{"Sin", "[", 
       RowBox[{"k", " ", 
        RowBox[{"(", 
         RowBox[{"y", "-", "z"}], ")"}]}], "]"}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", "b", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"r", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"k", " ", 
            RowBox[{"(", 
             RowBox[{"x", "-", "z"}], ")"}]}], "]"}]}], "+", 
         RowBox[{"Sin", "[", 
          RowBox[{"k", " ", 
           RowBox[{"(", 
            RowBox[{"x", "+", "z"}], ")"}]}], "]"}]}], ")"}]}]}], ")"}]}], 
   ",", 
   RowBox[{"2", " ", "r", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "b", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"k", " ", 
         RowBox[{"(", 
          RowBox[{"x", "-", "z"}], ")"}]}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"Cos", "[", "a", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"k", " ", 
         RowBox[{"(", 
          RowBox[{"x", "+", "z"}], ")"}]}], "]"}]}], "-", 
      RowBox[{"Sin", "[", 
       RowBox[{"k", " ", 
        RowBox[{"(", 
         RowBox[{"y", "+", "z"}], ")"}]}], "]"}]}], ")"}]}], ",", 
   RowBox[{"2", " ", "r", " ", 
    RowBox[{"(", 
     RowBox[{"r", "+", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"k", " ", "z"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", "a", "]"}], "-", 
         RowBox[{"Sin", "[", "b", "]"}]}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"k", " ", "x"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"k", " ", "x"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", "a", "]"}], "+", 
         RowBox[{"Sin", "[", "b", "]"}]}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"k", " ", "z"}], "]"}]}], "+", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "k", " ", "z"}], "]"}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.765105379763484*^9, 3.765105396926973*^9}, 
   3.7651054361914177`*^9, 3.7651060016199145`*^9, 3.765106072265391*^9, 
   3.7651061058827443`*^9, 3.765106145385003*^9, 3.7651061905655527`*^9, 
   3.765106659160472*^9},
 ExpressionUUID -> "265b47e0-3d20-4b5e-9115-ef0c0cee53c2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ecrosss", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_", ",", "a_", ",", "b_"}], "]"}], " ", ":=",
   " ", 
  RowBox[{
   RowBox[{
    RowBox[{"+", "1"}], "/", "3"}], "*", "hbar", " ", 
   SuperscriptBox["Gam", "2"], 
   RowBox[{"Inti", " ", "/", " ", 
    RowBox[{"(", 
     RowBox[{"Delta", "*", "8", " ", "Ints"}], ")"}]}], 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"r", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"k", " ", 
           RowBox[{"(", 
            RowBox[{"y", "+", "z"}], ")"}]}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"a", "-", "b"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "k", " ", "x"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", "a", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"k", " ", 
           RowBox[{"(", 
            RowBox[{"x", "-", "y"}], ")"}]}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"Sin", "[", "b", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"k", " ", 
           RowBox[{"(", 
            RowBox[{"x", "+", "y"}], ")"}]}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", "a", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"k", " ", 
              RowBox[{"(", 
               RowBox[{"x", "+", "z"}], ")"}]}], "]"}]}], "-", 
           RowBox[{"Sin", "[", 
            RowBox[{"k", " ", 
             RowBox[{"(", 
              RowBox[{"x", "-", "z"}], ")"}]}], "]"}]}], ")"}]}], "-", 
        RowBox[{"Sin", "[", 
         RowBox[{"k", " ", 
          RowBox[{"(", 
           RowBox[{"y", "-", "z"}], ")"}]}], "]"}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", "b", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"k", " ", 
              RowBox[{"(", 
               RowBox[{"x", "-", "z"}], ")"}]}], "]"}]}], "+", 
           RowBox[{"Sin", "[", 
            RowBox[{"k", " ", 
             RowBox[{"(", 
              RowBox[{"x", "+", "z"}], ")"}]}], "]"}]}], ")"}]}]}], ")"}]}], 
     ",", 
     RowBox[{"2", " ", "r", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "b", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"k", " ", 
           RowBox[{"(", 
            RowBox[{"x", "-", "z"}], ")"}]}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", "a", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"k", " ", 
           RowBox[{"(", 
            RowBox[{"x", "+", "z"}], ")"}]}], "]"}]}], "-", 
        RowBox[{"Sin", "[", 
         RowBox[{"k", " ", 
          RowBox[{"(", 
           RowBox[{"y", "+", "z"}], ")"}]}], "]"}]}], ")"}]}], ",", 
     RowBox[{"2", " ", "r", " ", 
      RowBox[{"(", 
       RowBox[{"r", "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"k", " ", "z"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Sin", "[", "a", "]"}], "-", 
           RowBox[{"Sin", "[", "b", "]"}]}], ")"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"k", " ", "x"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"k", " ", "x"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Sin", "[", "a", "]"}], "+", 
           RowBox[{"Sin", "[", "b", "]"}]}], ")"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"k", " ", "z"}], "]"}]}], "+", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "k", " ", "z"}], "]"}]}], ")"}]}]}], 
    "}"}]}]}]], "Input",
 CellChangeTimes->{{3.7651061977258153`*^9, 3.7651062057284613`*^9}, 
   3.765106732311284*^9, {3.7651082680427327`*^9, 3.765108283205738*^9}, {
   3.7651832592856026`*^9, 3.765183265384822*^9}, 3.7657905195734196`*^9, {
   3.7657922876593857`*^9, 3.7657922882842116`*^9}},
 ExpressionUUID -> "b7a6c568-a978-4cbb-959e-dc716bb14ff8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"r", "=", "0"}], ";", 
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ecrosss", "[", 
       RowBox[{"x", ",", "y", ",", "0", ",", "0", ",", "0"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", 
     SuperscriptBox["10", "50"]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{
       RowBox[{"-", "\[Lambda]"}], "/", "2"}], ",", 
      RowBox[{"\[Lambda]", "/", "2"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{
       RowBox[{"-", "\[Lambda]"}], "/", "2"}], ",", 
      RowBox[{"\[Lambda]", "/", "2"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.765183088437681*^9, 3.765183190216791*^9}, {
   3.765183225056758*^9, 3.765183228494445*^9}, 3.765183267722289*^9, {
   3.765183300418827*^9, 3.765183316379019*^9}, 3.7651839653998814`*^9, {
   3.7651840753528757`*^9, 3.7651840754288836`*^9}, {3.7657827585175285`*^9, 
   3.765782841483411*^9}, {3.7657829323387337`*^9, 3.7657829498044252`*^9}},
 ExpressionUUID -> "e9167726-bc53-4966-a062-1f1a534f4f21"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJytnXu0XnV551O8FNfMEiytMFUhFxJIwjUhgXDwNZRQjy0CCloa1NKCgIjK
iIVIU24GDBfxgEBeJbaxLQItVSfDXNqRt3YalaJ2ddFOoSqXjqjQVpZFsGJR
Gs5+Ps8++/PsvaazVvnnrPfDk2c/+/u77N/9t+DX3vPGt+8yb9680a7z5r1g
59/DL73nvb+xZeuEv5fPrFu/7Q+m/uzgeU9fef9l4+RfveroWb7fpQtuWXnu
jYXvM+/4T3/4zTOFHzTrZ3Phe8/aX1r4q2b5eYXPm/1v7ZTjXNDYj2w/v/Ff
+CFNPAP2M4Xv37zvgJ9x4fF75Dj5ja7/sseNu/3g8vfv4Lc5OsOfDY7O5uhs
js7wHwZHZ3N0djzobI7O5uhs/+jsONG538+4cHQe4BP0W/Pcr5244tkrU2f4
kcH5bXt0Nkdnc3S2f3TOchMcne0Hnc3R2Ryd++1nCkfnfj/jwtF5gE/Q6ZuP
T312wx3Xps7m/Htzfpujszk6m6Mz/NHg6Gx7dDZHZ3N07refKRyd+/2MC0fn
AT5Bj3sefubquTrD/zw4Otsev+b8Nkdn+BeDo7Ofi872g87m6GyOzv32M4Wj
c7+fceHoPMAnvPfbz3/bFw6dU2+YozP8zODobM7z4GcE57f9o7M5Opujszk6
m6Nzv/1M4ejc72dcODoP8Anvd8FLt1/6/TnfQfivB0dn+PuCo7M5OsM3BCcO
P5ff5uhsjs7m6GyOzv32M4Wjc7+fceHoPMAnvMceDy6//Y77X3c0OsOnVzz4
o2Vnvv5odDZHZ3N0Nkdnc+Iz5zd/v/7az1/4fJzobHt0NkfnfvuZwtG538+4
cHS2nuhMvL/R6L8Onc3R2RydzdHZHJ3N0dmcuM35bY7O8N8Mjs7m6Gw/6Ax/
f8fPuNij8wCfENdZTX2SOpujszk6m6OzOTqbo7M5OpvzPub8NkfnfvuZ5PF9
SZ37/YyLPTrbHp15fnzfU2dzdDZHZ3N0Nkdnc3Q2R2dzdDbnPc353W8/kzza
Calzv59xsUdn23fz88wo2nvKzzOjaMcqP7f23fzc8m5+bnk3P7e8m59b3s3P
Le/m55Z383Mbfzc/t7ybn1s/3fzc8m5+bnk3Pxc+wd/qpv+SOpujszk6m6Oz
OTqbo7M5OpujM3xVcHS2PTqbo0uOZwTnd7+fcbFHZ9t3643x6KmmP656o+Xd
eqPl3Xqj5d16o+XdeqPl3Xqj5d16o+XdeqPl3XpjPHoyeLfeaHm33mj9dOuN
8ej7HT/jYt+tNwpnfGwU40vHaLxuFONRx2i8LrnG65JrvC65xuuSa7wuucbr
Mk6N16W9xuuSa7xO9jOFa7xOfsaFa7wu41z5uYc23nHtxyb83TD1uuufWHbO
juVr/8P1L7rw5uTvD37ArP8Nhb9iNs7Tip9FDR+ZN3FuGBX/zXMLP6z5Xfzw
e9HnDr/1V3/1hsnT9/7jf3xg49XJV8++77WTCw99vn37oewv2J73HeL2g53t
+W17fvP/vxf2cP5uCPsls+m7qfiH2z/pgv33wx5u/6SX44HbnnQs7xvc9qSv
7eG2b/LzpmIPt/0Rze9iD7f9vo1dsYfbnnxoe7jtyZ+2h9uefDjAiz35mfcL
vg7OezzZPDfrT9uTn4e4/fA+tofbnrhtD7c9+dn2cNuTn20Ptz352fbw8r6R
n7G/kPcNbnvyM/bvD3u47cnPtofbHjvHz2/so/yu47f9w4uekZ/9vnDbk59t
Dx/KhwO82JOf8XdOU89n/jQn3c1JX3PS0Zz0Kv5DB3N+mxO/58uI35z4zYnf
nPj75+k2FE785sRtTvyeXyB+c+oBc8q7x/kp17ZHB9ujgzk69M87bBiYp9hU
OPnYnHxpjp5D8xpD9b/t0dn9OHQ2x685Opujszk6m6NzeW7o3N/P3TDQn91U
ODqbo3OJM3T2c9HZ9SE6217lMdvDKo/JVR6TqzwmV3lUO3xD4SqPyVUek9Pf
cb6iv+P2G/nMnP6O24f0d+yf/o45/R1z+jvm9Hf624GbB+xnBtqBNw74GReO
bpSP+A6mbm5foZs5upmjm/2jm9vn6GY/6GaObv3t6s0D9jMD7eobB/yMC0c3
f9/RzeUO3czRzRzdzNHNHN3M0c0c3Rw/upmjm/2gW3+7blzs0c3tGXQzRzdz
dDNHN3N0M0c3c3SD/1NwdOtv324uHN3c/kS3fj/jYn/oI49ftvaDH50ctXb7
2a//netGn7x5/VsfWP2hdUtPe/nNW//zTYUveOTnfv8Hp15f+IrZ+vPqwhfO
Pu/ywvedjfN9he85+14nVv+z8Z89Mm/ywcbktwdv6vkrC+e3/SzZdsC2e8/8
SOEHzZ937bs3bikc3Y5s+OSOhu84sLFPHvY70NN8cfPc4ged4RH/Dn6bo7/5
skaH4p90sf1hjZ4lTtKr+G/SpdiTjrbfr+GjEn+kr/00+fl9xZ50N2/y9+WF
kx/K+za6FU56my9s0qVw8k/Rp0n3wslXRYcmXxVOvnI+JP+Y8+/NyQ/mpHux
j/Q1Jx3htwYnvUp5j3Qpzw39S70ROrv8omepH0I389Xb/urCn7rhlpKvVjW8
vBfc5QU/tqf/5nFR/PD3Xff95a+86U3rs33i8VV0tj3fEftHf9tTz9sefWxP
e9f5jffy+/Kddb+b+hCdTmj8Jx8at7cf6g37geNn2+pjO+P89kN9Yj/wofF5
++Hf2w+/HQ+60//buuvf3Xn/nPFwr3OjH2R7uNe/0c62Pdz2tC+xvyXs4V6f
hp3989v+6a/x/z8e9nD7px/neOC2p39X3jd4/3q8DcUe3r+ub1Oxh9uedqft
4banvWV7uO3pn9oebnu+C3z/T73z+nVz2xXw9cEp5+Z8F8z5Ltg/9ZXtqZfM
+S6Y810oz43vgjnfhRJ/fBf6/Xys6AkfWp/p+pB60zrA3Q+lfnA81BfmWc+o
30q9QX78rSb+HFfxeg/qW/SLOPO7Zs77Dtm7v0a95Hjgjof8af+0h82px+wf
bv/kc/uh/WyOvvYPt3/ygf2QfubkM/uH2z/lzn5on5tTr9o/3P4pv/ZDe96c
etj+4SX+qAfsh+91Sd+ot0v6Bi/rvqI+wc969I/vuP1Tz9s/3P6pl+yH/gX8
LcHxa//8tn/qt5KO0R+xf8ob/n47/MO97ot/b/+020q6x3fH8cMdP/Wt46S/
0/9eNxf/8JJ/ot62H/pH5tTb9g+3f9q99kM7lnr0wmgnU3+6nax2bM7XkM9t
r/bqJNqHuY+stM8jP9uP2qtl/5f98B2xH7VXMx78DPWbSv0Z3ONy3e9I237O
76Paz3C3n+kf2Q/1jP3Ay3qkqDdsD/dz6TeVfkTkn9KPCO7nkh683ztDf+pP
c+o9pxdxDHGnC/nT7Qq+s2638H20Pb9Luyu+R6X9Ft8Rc/J/8R/52Zz61px6
0pz8ak69ZE59Yk56mVM/uN2Izny3v7Pgr5+870+uyXkN92vQ3/aMP9uedMH+
ibCnnep+FnHbP+PVjp90tH/KXemnRPraP/1325Pu9k+9Z3vyg/0zHt7fz9pY
7Kn3+/tNVw74nyn25CvbM65e+sWR3/rjGRd78qHtqUdsT71je/It7e7H7t7v
rt88+fLk3g9L/WN7uO2pl2wP935Y6iXbw21POeLvzSufmn/RO8/P/GNOPjFH
H3Pyp+PBP/2Sc+bfvPnk6UtSf9vj3/bY2Z73NCc++6FdanvKizk6DMXjdMRu
6LlOF9rDxf6897zw2hd+tOwfp34zX3ji3fv94UPXl/YS3Puy6X/ZHl72cc8+
94piDy/5M/pBZR1OcOt26Cw/d+B8gOlyPsCrG/ui55FRX5kvb+Is7Tq441kT
7S3bw+1/UaNzsYdbT9rhtoeX8tvkh7oOKvKJ96eTT7y/m/xgTrqXfeWRvuak
oznp2L8vfrrsiycdzUlHc9LLnHQxR39zdC7xh85lH33o7HVN6Oz1Xehszvva
D+9rzvua875lPVjE6XE24jQnTo8zE6ftidOcOM2Js4wbR5zeR0yc3mdNnObk
27KvOfKt92WTb21Pvu3flz1d9mWjjzn6mKOPOfqYk2/Nybcl/si3ZR936Oz9
1+jsfdbobI7OZV9z6Ay/MDg62x6d+/dlT5d92ehsjs7m6GyOzubobI7OJf7Q
uezjDp1pB33iJ/f7q/VPHXc0OnvfMTqbo3PZ1xw6m6OzOTrDf3jYz37l+XjQ
Gc6+bHSG/0vYo7P9o7M5Opujszk6l/hDZ+uJzt5HjM7m6GyOzmVfc+hsjs7m
6Ny/L3u67MtGZ3N09v5rdDZHZ/jG4OgMvyg4Opujs+NBZ+8jRmdzdDbvrtdt
OTqbo7M5Ovfvy54u+7LR2RydzdHZHJ29zxqdzdG5xB862x6dPY6KzmV8OHQ2
533LfEq8rznva877ety7mx/a9cbd/NCuZ+7mh5Z306Xl3XRp/XfTpbXvpsuc
fcQRp/exEqc5cZp3561aTr41J9+ak2/79wVPl33B6ON9wehje/QxRx/v8yXf
mpNvS/yRb23fzbftPtZuvm15N9+2vDsPOGdfbehsjs7m6Ny/L3i67AvulpeW
d8tLu/+3W15a3i0v49H3gqMz/Ong6Oz9wujseNDZ497obK5xgOTq77f7arv9
+uToY44+ZX9Bt3+dXP3odh9Bt7/c7iMgX8Xfexat22vNhRdke5Vxna+f8so7
Dz/u/GyvrjjxjOeeesnHJqs/vulX/sc33pPtVcbntv2n4+995vJ3ZHv1sEN+
+Ydv3e2Wya4377nqqIWnZzuT534pnpv5IZ77cDyX9+W5R8Zzed8V8dxPxnN5
X577knhu1lffvWWvx564cfKtg05eeux9V+T78nfmbcfucsrtm/J9l/3lzB5v
eOqmyTG/u/TpA5d8IN+Xcamtm15+wP0PXZbve8BnrnjpHz9z8+Spt7/g9Eu3
XJrtc8adtlz3yMqTtl2cOjierH8inhsiHnQgnnURDzosUzzo4HgoF8Tz0Ygn
vzvn3XPAur+dmSxdePbMiXu3/VnG79+1/sYz9v/INakPf//LDZ87Yt6u1+R7
2U9+d8LPu8MP74Wf7eGH91qofSWZb2fzyVWTn/rC58/a/7ttP/rg4C8LznMP
1TxIvu9sPJdN/utez73m1K9/MN+X+YSfmPz2H2367OZ8331nx8U/MDn+9LUr
P7X1qnacIfxsDz/Zzgw/88IP77so/Lw+/PC+izVvku3wWT/vnVz6jpULf+9l
GzPOxTGPcfWOu/7sDTvTMb+zs/nhgsm9u92y/ZKd6U6+ZT3FG+4+9QN/Myff
HjKrz0WT/3POK09+Pl/l+or4u36vB/fd9K5N2a88YnY+4eLJw5//+NNfveuK
0n8/Q/33+RH/JRE/+iyK+K+K+NFnieLPfB7xnxDxZ/2v+HP+3fFH/e/40Xn3
2fjXTk6ZbZ+/LnXeK8bXz57lv5w6L5mN55TJfVdf8cgRO+sZdGb+4bxZ+7Y+
bN73jMkeNzw0/66d9RjxMd97/6yf81Nn/n7yy7d8ZssbL0idX6lxA3R+YcQ/
HfGj8+4R/2kRfztO0sT/lYgfnfeM+M+N+NGZ+HeP+NGZ+B8g/tDZ8aPzkRHv
nQ3P9gzzAA82frI9s7x57uiVzXOzPcO8zcVNnNmeWd281+iR5r3admPMk29u
dMj2zGGNbqOtjW7ZnuHv7W/+h8e/uOyk7L/z91MRPzqvjvj/LuLPce+If3HE
n+OoEf+miB+dif/hiD/HUSP+K4k/dF4Z8X8s4kfnZt7v4tH/bfJ56sx841ua
cpE6N/NaF40eaMqR2o0bRm9syl3q3MxDXjD6SlNOU+elMd8y05Tr1HlJUw+M
rmzqgdR5ofrX6DtS/OjM37dF/Oi8OuL/24g/2wkR/8kRf34fFT86E/91xB86
L1b8OQ48+z394OjHd5x/0s7vXeqc66He951X7Pzepc7LIt53jM569LmfvCbf
9+Dw81z44T0PlB/ed7n88L5LYx3RNtaJRZyj+bed/t9v+/Do2LVfunbn9zGf
+xpxnvtq7VPIeZDdb3vVJY9/ZLT4vVf8yc7vXb4v88Y//c3bDrris5vzfRcf
sn3hyx+9YfSCU+79+M7vXT4XP/uGH56Lnz3CT34Xws8u4Yf3LfvCmNebuegl
i57bMjrmDX/8iVt3pleOz8d89Q1N+yfjPLBpL42+27SXMv+zzmvctK8y/y9v
2mOjtU17LPM/+ejbf3rU5Pn8Sf5f2rT3Rtc9csIHv7YzP7t/ukr9U+I/OuLP
eYGI/7qIP+cFIv4nIn70If4tET/53/Fnfe74I/8T/4cjfnRevfvxT3/hp7eO
Hn7sf/7CW970C6kz88zbf/7uFz+5bH1bzzTt89ELm/Z56sy8+rhpz6fOK5v2
/+iApv2f+hwez/1SPDfr4XjurfFc9FkVz332pua56MNzZ+K56OPn8l6sX/rT
xn9+x4c4/amvRb8m+9Gh3zmrH3hwy1nt9515yWc03xrvNbkr/JNOfi7c/bjs
/8Zz3xnP5feSpjxOljblsW1nxnrkPZvy2LaHm/I4eXFTHpMfcdrd73p064cm
uz96yx9edvyHsv1je7j7EfAhP4fNvu81k8feffgnnufoTJx7RZw5nqx+R36P
4n2XxPvm+Gf0X/aP/sv/a14VP/uHH+yH5h+jfpu8POIkf6LPi0If+BrpoHpv
8lT0j7rjAHPOWYr8bP3h1h9u/bN/Hfo/HvqT35xPcjxc/UfyoXXL8Vv1HzPf
Rv/usLu273frA+385oLGfhTpleWUdb7nNs/N+qcpR9eM/r6JPznv9+lGh7Y9
KXv4kY0+o90afZIP+fF3kPzpOOH+nuY8iN431wPou9wdt6/jw/gJnQfHS8m3
jjPrVemjfn3qoPyZ+9z9HX+Kc5NoD8s/HP0jfya3/vy2/uRPvxe86M88jvVn
PUPoH/VJfh/5/2c09W3b34n1tn/d1M+Z7kPc39PsJ4b/08O/x2Of1Hgs9meG
PenLc/8mnpv7jwZ4iYd+38D7el2NxjnLeiev60AH16vo0H9/Qa2HyQ/mvFfx
H+9Tzv/pzK+15as7v9by7vyaz4mt5bQ7/9Xy7vxXO4/Tnf+q8XgcWOujyviw
zz8hHRfpu5P1p3jWhz6/KOLxuTHoYz/oYz/kZ/McX/K5i4y/iVP/lHMIqU/E
0c0c/ct5MrST9V3OdrJ4fqeCs28uv0fiWT/ID3r2nxszXc6NQU/zbH+KZ79b
HD3LeY/U5+JZnzj+0LOcMxN6eh9fd3yj/b5ku1Q825ni6Gme45/i6GmOnubo
Wc5LDD3N0bOcl0g7LTj7VtCzxM/4pzh6uh+NnubZ/vc5hLTzfb5f6GmOnv3n
zEyXc2bQ0+fMoKfts10t7vbG99TesD16lvhDT/vJcc5on7w02ifo5nYjnPGZ
n9f4zBrZ875TGp/hfafULoK/Ovy/Nvyjw5qB/DY0739U42cSftryGP2Fl0V/
gffCPt4r6zFz8gP8WHH8h56D33e4+0E5fiv/OZ4Q/kPnHdK5Pa8m+Brx1F/6
dNcf1nZI0SHy1RAf6hc7/6DbEHc+HGqHwJ1PiL/4jziHuJ9LPD4/JL9fzTjP
5EWPz47zJGee9833jbd9+fdPz3T3/sFuftg6OW792zrr3rH/dZ7LuLr85Pco
4vnxYxFPcOL5pYiHclHOBQ3OeNTrGvvU2fbkzyGOn+PDT84DRr449qavnvCm
vdtxFf6e1Ywbt+Mzmt+Ee91yjnNyvkIzLp3c86dwr08mHQ9oxr0nP2rGvdtx
GM3Pwvvvz5qeOlD+u/VDXW88tL56qXTrrntv96nlOh/pmd8R6Qn3c3PcVXpm
/1TzyPBy7gfzuZofz/HGAe7xtO44ZNVz1UC77hDNv1MuSvrST3H6Bh9ax970
0y8b/bfGPstR0z+9ahTv1Y5Lx7hBjFOpPXP5aJdGzywvTX//A6MTm/RKbv/o
bHu453e666zm7NMPbv/d9lIbJ9zzSt31WnPOzYj0tW5ZjjRv1V3fVf04zqyf
pTP5ZMHAetEFEc9dEY/ym+6pmS731MAPHeAeX8pxD8Wf332NL3X7j63+8JU6
NwC+Spz6ZHHkkxMin8BXRjx7RDyqZ/IcADjvy3pRyp3zIZx8eHbkw+56uVY3
uNO32+5tdYA7H3bX3c3JP1GuFyrds7w7H3bW6bXvCy/5kO+y0pF6wOchaN5q
8qP4juf3euA77nEq8o/bCdmPDv+Ph//8jof/t4R/rQNM/1k/+1yybrto9O2Y
/4LTHnhttAe070/nlWW7aBTtouQ896x4ru257yPbP46z214aPUKcwd3+0f67
Mh7FdyrSN/sX/n7lOtiBdWKrNH+hcp3rxLKcyh5+qL53lFN/H7v7Get3rZzr
FZzv5tfmfXty62GtPd+NddE+yfl374vnuzbA8f/18J/fNZ8rFd+Xcm5A5Ctz
8ol5zpcN8AP1vrlOQO+b82jyA1+ufeXwpcH/MXiuK/A5dayviHi+GvGQjuXc
NuphcezdLs35BevJvNiAzgc16wEm3/3O//7mhuM2Jmcd6TdiHSm8/37qdn75
WfE8j1n7SYf2yZZ4WMce8XyTeIKX+6lpv8X63jvO/vJdG9ael+kOvy048Xj/
OPmfda3f+uI//a9nfqbd3237XLcT8a/42Z857pNv39iWu1g3+9Kz1jx70rOX
7tC6i8k3wj9x2n/u6wz/h4R/OP53D/95/5fm5fOeL+aR7vvBuo++8YI8Z8M8
7/kSz3u+WBcTPO/nYl1t8Lyfq9d+ZmT/eT+X/PBepM/fN+tJ8r3MeS9z3suc
94L/Q3D2DcIfC8772g/va877mvO+/X7GhaOD59nzHj31H/PePeZPtrzmJy7e
3J7PDz8z7PN+PfG8Xy94tANTNz8379cTb8rd2inzvF9PPO/XE8/79XrtZwrP
+/V6/YwLz/v1xPN81/iOsR44z3cSR2f4qcHR2Ryd7QedzfM8KHF0Ns/zYMXR
2Ryd++1nCkfnfj/jwvNcWXF05vtza6z7RWevB0Zn+O8FR2dzdIbfHhyd7R+d
+9dRr50yR2dzdC7rmUPnfvuZwtG538+4cHQ2795DPT310C/+8527Pnly3k/t
9cnd+6ynp9Z9Yu9d7ll2Ut6/bPvufdatf7jtu/dct/Zw23fvv27t4bbv3ovd
2sNt370vu7WH2578gD3rveG2796v3fqH27577/b01MNhD8f+M2HfvY+7tYfb
vntPdxsP3PF07+9u7eHY39mJZ1zs4QP5Le2V34o9+dbruvPcWvE8h0Wc/GZO
vjIn/5iTT8zJD+akuznpa0469tvPJH9rcNLFHP3N8/xz+c9znBiXatoVqbM5
Opujszk6m6OzOTqbo7N5nh8ljs7m6NxvP5N83+Do3O9nXOzzfC3Z5/1K0S/8
VKxDy/uVtD4t71cSz/uVxPN+JfG8X0kcPc3zfiXFmfcrief9Sr32M8k/w7rH
0NPPzfuVZJ/3nckePb0unXxrjs7m6GyOzubobI7O5uhsjs7wbwVHZ9ujszk6
w6Nfkzr3+xkXe3S2fbbftH4v22nsA2j6d6mnebbTxLOdJp7tND0322ni2U4T
z3Ya4xDhP9tp4tlOUzzZTgu+vONnXJ6b7TRxxkHoF58b/XrWN7sfzXilOfNk
7l+zL9T7CHaLfYDe3z0V+6lsz/i7/TN/b846V3P2q/h9Gf91PKwLd3+Z8z/N
mQd1f599sO7vcy6i93ezn8p+OCcT/nhw1gGXcYnYh2POulg/l3FqxgGi3tvB
PHHZBxH7YL0/mn2n9sM6Ifth3bM5+53MGZc3Xxr7PN3vy/Oo3X+M9C7tzygX
pZ0c5aK0D6NclH5HlIviJ8qFOftjzdln6HY1+/HM2S9X+k1RLtx+plzAPx2c
clH0iXzjdh37592uY397aZdyH5Y4+67N2SdsTnkxZ3+ged4b5XY490PpvfI+
I9nn/t9oX50T85jMx3j/I/vqzdlPbs7+Z3PWz/m57D+0PfvuzClH5uyX9veX
cmTOPKLHh3N8WfUt+5ldz7N/tdjHfKTLO+PU5uwjMmddmusl9ue7HlsY+8nh
n8ZP7H8u8cR+XXPmv82ZDzZn36M5+/3MY15z4vVv6Ob2KvMW5rEPs/hBZ7er
Oe/Dftj3ZT+ki+1ZB2l70sv2fKfMWf9Unhvlrr//sqHYkx/KPqkop/39o9OK
H/KP7fk+DvjJ9a6sGye/lfSKffsD75V+WHdN/rT9qtiXPqBn8UN+dn6IdWmF
s97F+pD/B/JPeS7thIF8W3SjHNmedkXJV7E+wH4od0W3qD/78/PWkr7Uk26H
U0+WfkS0E8xpP5uvinrV+62oV23Pd9+c774560hKfRX1RtmnGfVAqfeivLse
Zl651KtRTl0/c46J/XDuhv1wTkRpx0Y+L9+LyAfl+xL5s7/+r+1V+l8D9Xat
5wfqc7jz1fKBehte9hsO1M/wkm8H6uc858T120A9DC/ld6Aehtv+FQP1Lby8
70C9Cu8fR6r1J7x8FwbqSbjtjxioD+EedxqqD+H/1voQ3l8/by3xDNWHcPth
fMb5mfEZl1PGZ8wZn3F5Z3zG/hmfMWd8xpzxGXPGZ/rrjc0D9jMD9cmNA37G
haObdc79/EoXdDNHN3N0M0c3c3QzRzdzdHP86GaObvaDbv3lblzsVwzUk8sG
6sP9B/ScP6An6+TMDx7QefFAvbfPgP7LBuq9fQbSZc+Beq9Jr3lHmO83UO+t
GKjfDv7/TK+hemkoHYfqpaH0PWigXCwZSMe9B9LxwIH0etVAuiwayOcLBvL5
of9O+Xx1tBv/rfXwUL1Nue4/v2XtVDlfJfQ3P3wonuhXeh0L/Uqv/8z7NGVP
v9KcfqX95D2YsqdfWfa5cK+lOP1Kr0eiX+nn5jnAsqdf6X1MeR+l1wVFv9Lr
nehX2k/eOyl7+pWOh36l48/7JWW/KvqVRf/oV9pP3iPpdIx+pTnntdlP3hcp
e/qVJZ7oV9pP3gspe/qVJd0jH5vTr7T/vLdR9vQrzelX2k/ezyh7+pXm9Cvt
J+9htM5RHj2Ol/dVedwvzmMq7cMoj7bPe5fEKXdlnDPKXTn/LcqdeZ5b63HR
KEfmK6IcefyT8tLv54zC834uj5dGuSjvFfm/jJdG/jfPe6bE2W9jTn7uT69r
yngv+dmcfFvijHxbdIv8WXSO/Gme946J0471d4R248D3pXDG2/19zHV6A/OY
Li95Tpbrn5ivcX3LPGbhMQ5jP4zD2H5NzJeYM49pP8xjmjNfY864TflOxbiN
OeXd8315n7XaCYz/Y//hsM/7iGW/tJmXKfOJeb+w0pd5BOyvZ/6R+2RtH+0K
z8/yvTPn+2VOvWpOu8jxkz/L/Gyss3f85H9z7nezH8qFed7rLZ3zPmXNj3CO
XtEzzns1Xx3zWH4uOrt/SnusjHeFzv3jVxfVeVvuQ9c8bN5XLp73jAdnPXPe
Dx48zondkfd6y8/yyJ/mnKNqnvdH67l577N43tcsPzne29QHuT42x3uDsw6Z
8+a8rphzFszZH+X1xpwf7ecy72bOubfm7Ic0Z39jWZ8c546Zcy7nwPrhsu53
aP3w0LrfofW99PuG1uWac261Oef/9q+nretm6Q8OrXcdWtc6tH618Cjvno9e
FeXd89eU64H2QGlHHRTlurTTolwPtSc9L0y5Nqdcm1OuzSnX5pRrr1ujXJtT
ru2Hcm17yrXXp2U51bqsLKfBlwXPciqe5UvrvrJ8iWf5kh/Ke/kuR7nz94L1
A2U9ZLSj3L7K+kT81bEupZynR3kPzjl+hwyM5ywcmI/YZ2AcZp+BcZilA+Pw
rxgYTxsad+L8F7ffOHfD5YVzJF0uON/c7bHc/6t1dHmeufevxb/3erY8V0Hp
nvfUyD7vqRHPffd6bu6XV/4h/rKuLOIv+9EifvM8j128e85Ju/4tzw8Pzvo3
4refPC9dPPet63tNPTt0L8OQ/dA9Al43RRzm6GmOnv3rr64onPjMia9/X8l0
2T+S56sHZ11ZntMlTrrYD+liTrqUOEPnId38XcvzyvQdRDfzPBdXHN3KurXQ
rX+fxXTZZ4E+5uhT1rmFPn4v9CnxcD6V7PcfqJcWDdRLvFf/+vDpKX8H83sj
+7xfTOOTeR6C29uRjqX9zDkJ4nnuuniesy3/eX6FOHqVfkHoYv957rp4ni8t
P1lvqj2f91Wp3c77mvO+ZV9evC/8NtrzEYft8zwZ8bxvSDzPixDPc13E0cE8
z3UfqA/JX9es3rpl/h+drHtR57S3Qx/z7r2oc9rPoY95917UlnfvRZ2eOvwr
N934fDzd+0+np44I3r3/tPXTvf+0bf+jm+2795+2vHv/6Zw4o9xZt+49NXPW
u0b8rh/y/Fi19/Djck26mHfvB5mz/jPSxbx73lTLidP1DHGb5/1iA/WPefd8
obbdnuVR7dUsj2rPZ3lUezvLo3iWR/nPciee5U7t/Cx34lnutO8jy53b25G+
ZZ186OB1F6SL7fN8da9nCP+lHR7+y3rI+PdlPjF08zqWPG9ZPM8dlR/Kie3z
PEzZ5/0F4nl+suMJffv3r01Ped0dfsu6r3hfr2/J89CULvgv43IRp3meZzWQ
Xo4/z80e0NnrfPL8Ma9DCz1tT3kZSndzdBg6z9P9O3QofkKHoXziflPewxXx
Mr+W59iI46d/vrLOD2Z5Fs9zYEK/b/3Fcb/z4+3t+cbw21+8/phLHrx6cN8B
8due+O0/z4cR5728bzTPL5J/9HU86FDiof4aeF/3l/M+SvXHu/dRzlknEH7L
vE/o7PHwvP8o+FG7H33aE1e37cliz3ci+Cjs0c3j6nm+k3jek6v+dd43qvz5
r05vVcM=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNnHkYVlPXxp8z7HMeJSJkqhQJkaJoUFIpVErmJCFzyhCJZJ7lNStTE0WG
DKUyRRQyJFMqQwqZQ0SE7/6593t97x/7WuvsZ59z9tnTutfa934aHjekz+C0
UqmsCpVKJvlPXql0U8ZfknUlhyeVyknS31E6T/qJkicrbSC9juS2KjNC+sZK
DaRfIFlbabaeN1HPa1ooKX+k8jZTelH59yt/F+WfrRduLf15/f6C8u+TvrPy
79X1PUq3Kd2iMkcq/1vpN0s/Qvo30p9X+QnSd1L556SPlz5Pv8+Ufrf0Jso/
VKm+6rhFtVL5TvJivX+w5BHK30ZyS+WPlGyg/O0kj1J+I8mtlN9L+sN6zit6
Xh/pj0h/VfrX+v0ilT9d8ild36n8xvp9hvS7pG8vfZb0e6TvIP1p6fdK31F6
E9X7Qt27idIBuv8b5f+iOh+j356Q/qbKnqXrraQ/q7JnSt9S+tPSj5WuWyqP
SN9f5baQvlpyX6WNpX8veZzKSFSmqsyAzP35kPRMmT0kE8kTlFlD+TN0fZr0
OtIfld5bqZfS17o+Ufk1JWfpem/dM06yveSpmd/1sK4P1HVD6aco7w19z+fS
S6UD9Ntbuv5C+iD9tonkY8o7RJX/R3ohebDSX9JzyWNV9ifp2yp11/X3kr/q
vh7SV0lfI72P9D+lZ5IHKa2VnkgO1L2/0eZKd+sddyndpHSK8hOlpso/XvJX
+kjpOOmrJbdT6sz4VNl9JM/I3J4zdd1DffEQY0n5B0ifIn2u9HP1vg3pO8nR
Sp2kv6/yzXXvAyqzsfJaSH+w4jJ3K3VXmX0kn6G/E/82S3I/pcn0q+T+ie8f
pXJtpS/kG/TeetL7St6h/H2kv6f8BUq7qux1yhuvvDZKbyvvfsl2Srvpt10z
P3sjlXlFed2UJul6b54vWUtyx9zjratkm9zj4Ufdt4v0HZjveu8Ype14r+RA
vaOr0r5KX6nsHsrfQPKgOG721HVH3dtOeRtKduC50teTnK7fOid+9wzJLonL
zZPsqrSX9BGFZQ3Jtrm/Y63q00767tL/kv4u75F+G2uR9D2k3yL9Tv12rPSf
lTdB+snS/2AsSD+OOSJ9tvQrpNeVnKJ0pvRU8gWlK6VvLtmpcJvV1dw/RPcc
zJhV/faWvExyG6Uh+n1ryYaSZyjVl76tZGeVuVx6I6V9C4+FzfWcmXruRXp+
bcnTlTaV/oTKzpA+kraSfEbpEul1GDu6v71SS13vlVv+Q3/STonbor3yW1F/
yYeU1yHxdX099/zE69GTuud8yZqS05QukL6+5LNKlzI+JZ9Tukz6ppLPK10u
fTPJp5QulL6B5HSlEYwZyVlKFzOuJJvq3U9K7yZ5kq7Xl/6M3n+q3p8p7cyc
1287U2fJU9Qm85X3uebRJaXX/B7SLy7dJvux9udeM36gr5T/pvSVyl9Mvflu
yUVKT0tvJ/mp0ovMY8kPaUfaTPJUvet16V/o3sv0nHnSl0l/JI5txvhuKrNK
ZRupj3aXvrnKbK2yp0tfiK1R+dq6Hst3BffRTdIbsf4pfxzrs/JvLG2DsEWb
lLZB2KJbg8cYY+0JpWukbyF5ttpouerQU9ctGG+SW+m+wdLfkf6d7msuvbb0
LqzVqmuBPZXsq+v2yl+i35fpWXMoI/mf0nYH+zMl9/q9Wvltlb8NbSXZpvA4
qqPv3UvXTWhPybaFx9Emyn9d8ky9qz/zuPD8miD5GmNd+UdLNtc9LfWedirf
M/dayjxtqXLNpB+h31oXnq8bq0yrwuvVXZJ7KrWQfg/PVmrOms28LzyvJ0om
ap+z9K51jG/pZ0v/m7Wr8LqymZ55aO61nbXlT8lBSj8y5yVPU/qBdUT3rqdU
Mp90b2vl3SfZofD6t6mesw4brvQzdkVlhyYYFdkL/Z5K1pQMyj9X+kDpfzP/
lfqBE5R+UfE/9Z07q00aSO+pby9Lzz9wQZA+Rvr0YMN4h8Q06VsFj4MtsNe5
31lK1tP159KfwCbm/u4Q10/qQJ2OKzzv3gpeS4cp5fxWeq1/V7/fzlrDmql3
1Eq9zlaVblX+adRZeSeo3DTpC/Sc25Q/SPo65ffN3Za/ZbYvtO2Ryrs9d18M
4Lt172zJPdSG16vcwcxr3dtUz/pFZV7Qb/tKBuaafrs+d78cIXmtyh+kvOUq
fx12XfoK6Y1ZFyS3DbZlg2O/TI5tTluzNjIO11S87jFWf5d+a+4xc4zkTXrm
Scr7Xc+6UfqJfEvEjdiFtdLvkD5Y+t/Sm+l9v+veubFu2JGflL+z8tcof47y
t5H+jfQZ0q9I/Y2Hqdw1Kj8Au6m8q8Fw0ldJv0p6f9YxcJf6ZTTrsZ5xTur+
PVDXV6hMP+Y79ly/FWAmPf9K5R+t/O91PUzpS5Xvpeu3E9tdbG4Dlf9K19NU
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
C8bnktL8VNb/N0vzSlljPyzNPWUtXVyat8o69qnSpMw25dXSnFps0/zSvFvW
wzdKc0+xC0tL81yxNa+U5tFi1/B94M/VUZ3+Lr03P1Lyn9L70BdJri29T3+B
JM5rq9x70PhxcF82C8bwcGI2D/ah4HVtEuy/EAffXff9XpoTcL7kH6X3+0eU
9ungkWws+XJp7v6u2GXpkzPbgs+UHshsL5YrPZjZpswrzRXGzv5Vmj9xoeSf
Srvm5huML32OLiHWh33NbH8/wQZkxh7nRBuEna1f9X7M9co/V/mnKH99xlTV
/CG4gnzPuXENb1U1drxJesuqudrbS68l/arce+4jg7m+2N9S+Zfl5jfOT82H
4pzXRso/PzMPChwMHuY81+upOWCcC6tXNW8Gnl5z6a9kPt9XVL0PCh91SPC5
HtaHj/WO+zLjLuw09hqMyphmbLcJPt+xUuX3VpkFpTni4IqFpbnv4IS3SvPF
se/vl+ZGgwcWleZDgx/eLs2hB3u8V5pLDX54pzTnHpz5bml+ORgDPwVc1y6Y
MzMmtc+EHwQ2bFv1WY/lFXMVGla9JzeqdDnKt1W5nZT/UuYzhpwZIX7UQWXu
Ln2+7k+wZDD/EP2u0uf6WBs5s0G84EZixrkxcO/cvFY4M5xpgx8GT44zefQP
PDbO6p2WO8b6We69QPb/4NfAsyd+zZziPAAxceYC50aIR9ycm5sBR/fC3ByJ
uxPve3O+knzOtw2KMc2Vuc9pwucZVfjMCzGFu3JzGK6QrFH1mU34wPCvOV9H
/eHkEvNlP4DYLXuxxB3Ym4WL8nnFPgl8c9oNrhfnjDivOCn3XCdOBKeFWB7x
UOJ5k2N87cHc52C7xbFEXIm4EZyWIYV5S/BFOVfZI/YX3Et8h8NyczjxNXrl
5qHBVeO8aTX6HZxl6RdjPexdw5ME8x+em8MBZoPjDL8Uv+PA3Jwx+EMtc581
gxMFf3m7zLhllfLPK9yn9O2o2LbwV4cV5g/B74XzA//n6tzcyEt5N+tfZo7Q
tfRnYc4N3Bs48HCohubmTzIfmZfwEjjPyDX76F1i+3MGkH30Mbn9LsYePGH4
Ae3j915TeI/5wOiLEQuHL8k5Ss5FXk7dCo89xiBn9KgD/P2Pg2N9cNLhCsMR
hKfKWQC+9wKVXxTMu8N+weumrc7JzVG5UnJ91f+D4PgS+AQ+P2NsRO4zaLTx
utJnyog7EoPqmXlvl3NtJGKQ8IRvixibfrsj+qRwaD8JPtvFmg9HfG7FZ9A4
m9ZM8rfSviR76XC+zijMr4JrzVlI+A035I6/cW6I2Btn6+DPPZ77TBrY9Rvi
Abrn8cx4+Anpj2XGydNKnwkEDz8ufWpmnHxf6fPVrP+PgjMy4/DHpD+aGW93
DT4j/IPk0mA8M5yy0U6Bz6dEWwbOXxLMyzqP36Mdxy94KNo4/IUHom3Cj5gq
/ZHMmHZyXM/xESZFW4Y/cnPp88zUoVvwmWLOqx8WzHMGTx4QfFb6F8nuwWeo
fw0+Z8h5wzVg5NLnnylzS+kz1TznztJnm8GQt5Y+R/2j9D7BMQHw5yHBtgyM
Cqcf/AlXbnTpM5A8/47SZ6d576HBdg18e3hwTAAbTRxqm4rPfXPukfOPvGtO
ahzLeWdiQMSCOAfN2UDWHNYe4pYjIm4npncVdjRiAWKmcP+2zeyPfJ+bRwq/
kXHWpup4GXEGzkPOqxircMaSsxXgiuXBZzfALYx1xjx8Ts5usR9cO/gcJbzJ
R3P7jthWzg5z9pBzSg/n5rETG+GM4H95e5znJt7NPjTx76+Cz4CAx+Becr6J
eNPZufdR1kkuDj7nMQzsFnw2BMz2WfD5DjDbScFxy6al45Pske9UOv7Jea0m
9ElwPJP8E4JjpDtih6uODxIvIm55bcz/MPjcybnSXyp9BhWu+4DgGG/j0r4E
PsWK3Fx41gTWBmKhN8T6fBTsC7BGEfu9ON67V9UxQeI8xwTHnLcrHU8eGXVi
5kPjfL+uME+LcwfsKRDXpi/Yp2TvEtvHHjfxvsWSH+beF0bHR2Pvt2nEEZy/
wMfE72CPq0XVccVpca1m7w+u4S+590nZW2cfnbgiZ5DAA3tF+4KdIcZNDJ1z
afiGxCB3rtpfY2+wWdU+G74bvjZ7iJyVwu5zfoNzHPjX7J+xv4b9xQ9l72s3
zqWWjg0RL4KPgY+zYzAnAd4C5w7hMbC/DlaHl8CeOlidGDSxaOLeK0rHG4ih
cE0+5/z+uwfAd8AbYG+Z/d1e0TZho4i3sy/CmFyde6+T9mG/kr1L9jvZi+Qc
CvOOsyjo5MFpwRfjfCd4lvMm2Og+sU/pW/h7YxJjHbDzrdH2tYv2GrtN3JXY
NTxH+F3gZPAytgSbAq8HbuTCOAfBSPD34PHBDYOXBT8LLg68EPwRuFILIs6B
B/VmxEXEb4m3w5n6l9cUbQ32jnEOvwke3cyI0+DksL/DmVY4AOzpbB18DgHu
Kn4FHKT347rBHtiKuA7AjSFWuX0wVx7eIt8G93RkrDPY8e6ISVpG3AX+guM3
JeJbfJG7Ip6BP3lnYhvP+V8w7fDC/MmbE2MduIWTom1tFW0uthdOPDxNuJtw
XsHA+EpwDh+O+JZ17IdYhnPN2AHOeH1QOi5JzA2OLOsYeB5+Prxc+Ll7REz1
L7YqvO9DfAZeHO2EHwYmZH8PbgTnnTj3RNzg62jfOV8D14d9Nngzq0qfeSMO
8Hm048QAvy99Po2YxhfRzhJXJFbM2VF8upURDxCHBD+zj8czfyx9lo94zk+l
z/sRz+G8Fue2iEv0iNgMjLa69Dk91kz2sy5N7SfCr+oUv+Wb0ufhiT3ynzJw
KJhrM0r/7wBxMPaQ2EsibvNVxDDEVNlzYu+JGNSXEZ8QL2X/6+poB38tfYYQ
7AEXi7blTDHjjX1DfFr26tizWxnjJOfFOCf/9UEsh3OBa0qfVwTn/FL6vCI2
6IfSZ/yIHbGHx14eMaL/A751tLA=
          "]], Polygon3DBox[CompressedData["
1:eJxNm3f8j9X7x+957k9oU0SKEJFkS6SBJEJpb+1JSymSSksqEQ1F49u30t5S
Ge00vg0NaZCWVNLQ9Hs9vc4fv8fD8bmuc8493vd9znW9rtd13U2OPn3IaVmS
JL/mSVLo76tlkkxIk+R8KQ1qkuSMKkmeVH9Xjf8ouanaKB2wq/oO09xm0sdI
3136EdJfV5uo40fr+IY6vnlIkps0tp2O3076kRrfQ/ocjTeX3kN/d9H8WWrX
Sf6f2jSNnyv9HcmLNP8Z6R/q+Pm61uHSd5P+hMa20fFnqe9p6TtpfJXk83S9
tdJHSd9Y4y3UN07310zHdZT+kY5rKv1mzsn1JO8o+Q5d72ruSfPHZr5H7nWW
+t7W2AbS75N8oNoKybepb4LkMzX/KenddL2fJJ+j9qz0XaSvlvx77nOfqnaw
5rdRm6/x66RfxG/QNS7S9fZT30U8I/XNk3ytxsdKfkVtreSVas9Ivqrwtbuq
vaXjWkqfq/nXSL9QcqFr1sv8DHPJG6lvL8kjNX6s5BfV1kg+SH3fad5rhX/r
CPW9LjnVMRuqf6r6Esk76/5uk36X2r3cp+5xkea+r/aF5ExzNlX/etJ76dl/
oPam5Lt5znreP+pvV41P0umaaf7WPCPpu0g/ROdupHa29IHSL9T4etI/lvyB
zlFL8iKNfcG96+/5Gl+g8+2p8UL6Qsm1C8tna84wyb3U+kh+Su0myder3Z96
jb2jeb10ztv19261J9S20/3ervO11bnb6X5v5xlp7lC1voWfT6J5P0p/jrWg
toH0y9XdQMccpPaJxharfZX7ep01dob0yZK31PVGav4+6hur8XfVV1f6FdK3
kN6o8Pq+UvPPYz3o+VyQeY2z1rdS3xzJV2l8FGtPbQbnkv695DfVguYfrL4V
+ruF9NmSr9D4uZKnqHWRfqb0GyR/w/rhWUv/VnL9wvvncukjJR/G+ki85l7l
9+serpZ8geQt9Hx+0j1/rfFO6uumviPV/pb+YDz/4Wp/Jn5mrKcm+j3n8tzV
dajOdUQcvz8+nwbqO1PjA9Q3RufeWX09NXav2jXsFY1fKvksyZvr+gukj5d+
NvdeY5uD7XlaejPpK3SOZdJ3ZI+ob0np/fa5+l/QvSzHRklvr7GNNL9e5fX5
cnz/B+vvITp2e7Wvc9vFJtg26f11zFNaL5MlXyy50vyHC7/7NmoP8S50vvo6
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
A/trdGbMRMzQK3EM2Jh3Xdk+Y6d/0PVuLhyrh9T8xBSNP6LxejpmrOTempeD
ffTfpMrv4AGNb5r43bymdzAbrIO9DV4DT2m8QeK18WxhLHNhZszNHnlIct3E
e4dzzsrsY7lW69J7hz10ia45LJgPuIPYC/tVGHst1/idhfWF6TqqZB0egyeD
L9sQjJabB4IPaggmy43Tweu1pL8ueZDO/5zkW3VsY52/i/qe0Pj66luYO54C
6/bLknUbfXrh+QPUdic2DI5niGu20vEr9bdjZrwObr8NjJQao+xRGJeBz/Af
+JHeYETJCzQ+U/LlheOxh9TXEb9cOTaAM9go7vf1JO+tvlzylZp/S+pzdIo2
+0+NnZDYlk8Cl2f2GfiOm6SnuX0ivvELHT9ax09PjI//VrtE+p2J8TFrjLU2
IF7vDbVHpLeK+O0l9beQ/rvav9Gm/6y+oxLb+ivVtyqzD8QXvhD3wmq1Nbn3
RnPJv6r9Lb2xjt9PffvpHt4PjhOIF7aU/nbuuID4YCswJ34P/xdjceJX+Ba4
kF5q7+o8Jc8X/kLtqML+HGzOb4IjezwYz4JrSx2/qc7XKTPHswnxjFqPzFh0
nuT11Jpk5i7nSq6ICVLzX0dLfj+z76FvmvT5wfgWnFsHvkLPYLzG5/I7dPy8
4HiLuKuWxh/CHmj8eX53ZVwJvtw8Mb56EH8n+TnWtcbflP6o9NYRn39dOLbj
nKdIfkLnryP5eMlB47uC5zR/jvpu4V0X5lPuwV/onJeDD2MsAL+yMJg/gUdp
RDyLL078TKcWxlxguadyY7EHpF8s/VnpcyrHrGCRObljWTAZ2PLJ3FgNzAL2
fjw3lgGDgU2fyI3N7izN1T0i/Tvpj1Xm7ehj7F7JmVqutqwyTwVfxR5mf4PB
weIzJS+ubPOxPafk9gX7lbatI3LH+/uXtuVn5uYDhpb2BWfk5k/GST9b+m3S
P6r8fHiWPNP7gm08tvPU3Lafc8IlEPNxrTc051liJemzgjEPtnJ4biz0pvrm
avwB9T0o+R21F1LvuUeD7c2CuN8fkfyIjtk895q5Ted6SHq93O/g5tLrM9H8
3eJ6PEV9R4BfNOfVyvvjX+m7xvf5us75TFwP9wbz5z/h61Lz84/qmPq51/BM
sB54Aryjvlcq+1x8w8m5ffHD7KHca3a6xk5SOww8pb6XK/M1v0j/NvIzJ2j8
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
sSExIPzJVcFcDhwP8T38LDVKcBy7xfgZ23Jubn8J30ONCjn8Q4L5AGpGyEkf
GByPU4tFPqV/cL6b2JGaOWrnVsS1gI3H1m8fXAtBTDdPY1sG2x7qMqivmsb6
yJwzp96OGJNYk5ph8tfkZMnN8q0a+Xw4G7gbvoWjHpucKrlVvr3roLYkeO/y
TSH76/Pg2g0wGd+bks/jmyw4Xrhe5rMX4ZThlrcIzm1Q40V9RsPg2nZq5Mnf
830u3NT8xHmHjzXeI3FOgNzA9+CD1DXN8EmMY2vwUQdr7LHS347yzR1FoxsF
15vxDQjfghB/4FupKcZ/wj/VTv2NLd/abhxcv8Y3FHxLAccHtwaHBn++SXA9
HN9Q8C0F8SC/h2/A+L6pcbBtpA6G+rf6wbVU1HCtq+UKruWiZmpd7VRw7RQ1
XdR2wTHCNcJJwqcvDa7vJadBboOc21hsb+5cXKPgbxv4RoD6OnLE5IqXJa4P
x17eKXlX9dUHm5V+3o0yfz8G5gf7s4YaVI5ZwJXY2M0rf6+DrSOfzPd8rLe7
En9jtUXl76PhKuclrkPA33Fu7unJ0jlqctVfJ67nbqB2WeIaM2rN+IaTb5bw
t3wrxnri22VyBuQO+J6b2pgF6tsj9/MgFsBn8L3r/wFITfl/
          "]], Polygon3DBox[CompressedData["
1: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
J9X+DLhZu1o=
          "]], Polygon3DBox[{{1857, 878, 712, 711, 1332, 1840}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0stLlGEUx/GTmWPeaW/SRldKZVfQnUKiFYqXHEeCFsa00F0YtJXGRVt1
08awTUSoExERIrpyI2pZea29f4SfRxdnvt/zm/Oc931n3mvPJvrGL0TEe3Wd
JN/w0XEpoo4/xAY8UU94C5aXRGTMtPOsrAfzOIKT+AILOK1e8QUsYBFn8Yrz
lc7/LYvYwQ+yMd7Iv/Atc+vYkIkYMLvDh3DQ97uq/2LEz5TxAf6LD+JuyvB3
ulf8gw9KebpWum97s/YMp17tySplOVlWf6CGnduXj/AsP0iOh5jDIxzFY+yy
O2fuH6+156k9o/pj9V92iCfybX6Ea9gk2+RF3md+znP3yxb0q/IZXMI36T/B
eTXJpzCPL9Mz4Ftnn/NuXsXL7dhWbfrXdnbyZn7fb/jO91d5PX/Ma3kv3jWz
gjX6O/wHr+bfsQq/pf8Jv2JF2uV5b5u7zEtd+5H8lr6Yri/rxlb9cno/9Df5
Inc78RkdiU9oTXxEP2Pc09wwpz0b6Co5fw9PAex7SZ4=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1348, 1584, 1837, 1844, 862, 1819, 1585, 1854, 2109, 1517, 
       1349, 1938, 1518, 1350, 1939, 1519, 1351, 1940, 1520, 1352, 1920, 1941,
        1521, 1750, 1006, 1839, 1845, 1522, 1751, 2082, 1586, 1841, 1846, 867,
        1820, 1587, 1855, 2110, 1523, 1353, 1942, 1524, 1354, 1943, 1525, 
       1355, 1944, 1526, 1356, 1921, 1945, 1527, 1752, 1011, 1843, 1847, 1528,
        1821}], 
      Line3DBox[{1357, 1836, 1856, 2103, 1851, 1850, 873, 1358, 1946, 1529, 
       1359, 1947, 1530, 1360, 1948, 1531, 1361, 1949, 1532, 1362, 2104, 1838,
        1533, 1848, 2107, 1840, 1857, 2105, 1853, 1852, 1858, 2108, 1363, 
       1950, 1534, 1364, 1951, 1535, 1365, 1952, 1536, 1366, 1953, 1537, 1367,
        2106, 1842, 1538, 1849}], 
      Line3DBox[{1368, 1588, 1647, 1859, 2049, 1691, 1589, 1648, 1860, 2050, 
       1692, 1590, 1649, 886, 1693, 1591, 1650, 1539, 1694, 1017, 1651, 1540, 
       1695, 2066, 1592, 1652, 1541, 1696, 2067, 1593, 1653, 1542, 1697, 2068,
        1594, 1654, 1861, 2051, 1698, 1595, 1655, 1862, 2052, 1699, 1596, 
       1656, 889, 1700, 1597, 1657, 2065, 1543, 1701, 1033, 1658, 1544, 1702, 
       2069, 1598, 1659, 1545, 1703, 2070, 1599, 1661, 1546, 1660}], 
      Line3DBox[{263, 522, 235, 1112, 363, 238, 1113, 364, 240, 1114, 365, 
       242, 366, 1115, 244, 367, 1116, 246, 368, 1117, 248, 369, 1118, 250, 
       1119, 370, 252, 1120, 371, 254, 1121, 372, 256, 1122, 373, 1123, 258, 
       374, 1124, 260, 375, 1125, 262, 525, 264}], Line3DBox[CompressedData["
1:eJwNzkdOQgEUhtFrouIenIhUdai4D5nZBdsMd0LCVmQFDtyEiljA3hEriGfw
Je8/N+/lJct7xcpQRCxoaSTiaDTiRMcatxfV8NzUqWbHIiYSEcv8zD7X/nBE
kq2wC7ulS02yVVZ3v7LbSrE1lvKda/tWN0rzdZ7md/aD7pXhGzzDH+1nPSnL
51jJ7cV+06sKrOZW5h27q3fN8xzf5B/2pw7tqvLa4gf+85t/aYpts6z3fuye
fjXNd3iO9+2B/jTDd/k/eCo0Iw==
       "]], 
      Line3DBox[{1385, 1863, 1990, 1384, 1864, 1991, 1386, 1865, 1992, 1387, 
       1866, 1993, 1388, 1867, 1994, 1389, 906, 1390, 1954, 1547, 1391, 1955, 
       1868, 1995, 1392, 1869, 1996, 1393, 1870, 1997, 1394, 1871, 1998, 1395,
        1872, 1999, 1396, 914, 1397, 1956, 1548, 1398}], 
      Line3DBox[{1400, 1873, 2000, 1399, 1874, 2001, 1401, 1875, 2002, 1402, 
       1876, 2003, 1403, 1877, 2004, 1404, 1878, 2005, 1405, 922, 1406, 1957, 
       1879, 2006, 1407, 1880, 2007, 1408, 1881, 2008, 1409, 1882, 2009, 1410,
        1883, 2010, 1411, 1884, 2011, 1412, 930, 1413}], 
      Line3DBox[{1417, 1958, 1549, 1415, 1959, 1550, 1419, 1960, 1551, 1421, 
       1961, 1552, 1423, 1962, 1553, 1425, 1963, 1554, 1427, 1964, 1555, 1429,
        1965, 939, 1431, 1966, 1556, 1433, 1967, 1557, 1435, 1968, 1558, 1437,
        1969, 1559, 1439, 1970, 1560, 1441, 1971, 1561, 1443}], 
      Line3DBox[{1442, 2025, 1897, 1440, 2024, 1896, 1438, 2023, 1895, 1436, 
       2022, 1894, 1434, 2021, 1893, 1432, 2020, 1892, 1430, 2019, 938, 1428, 
       2018, 1891, 1426, 2017, 1890, 1424, 2016, 1889, 1422, 2015, 1888, 1420,
        2014, 1887, 1418, 2013, 1886, 1414, 2012, 1885, 1416}], 
      Line3DBox[{1445, 1898, 2026, 1444, 1972, 1562, 1446, 1973, 1563, 1447, 
       1974, 1564, 1448, 1975, 1565, 1449, 1976, 1566, 1450, 1977, 1567, 1451,
        1978, 1899, 2027, 1452, 955, 1453, 1979, 1568, 1454, 1980, 1569, 1455,
        1981, 1570, 1456, 1982, 1571, 1457, 1983, 1572, 1458}], 
      Line3DBox[{1460, 1792, 1793, 1900, 2088, 1459, 1795, 1796, 1901, 2089, 
       1461, 1797, 1798, 2090, 1573, 1462, 1799, 1800, 1574, 1463, 1935, 1984,
        1801, 1575, 1464, 2091, 1802, 1803, 1576, 1465, 2092, 1804, 1805, 
       1577, 1466, 2094, 1806, 1807, 1902, 2093, 1467, 1808, 1809, 1903, 2095,
        1468, 1810, 1811, 966, 1469, 1812, 1813, 2096, 1578, 1470, 1936, 1985,
        1814, 1579, 1471, 2097, 1815, 1816, 1580, 1472, 2098, 1817, 1818, 
       1581, 1473}], 
      Line3DBox[{1487, 1637, 1690, 1636, 2063, 1486, 1634, 1687, 1633, 2062, 
       1485, 1631, 1685, 1063, 1484, 1922, 2028, 1683, 1629, 1483, 2075, 1627,
        1681, 1626, 1482, 2074, 1624, 1679, 1623, 1481, 2073, 1621, 1677, 
       1620, 2059, 1480, 1618, 1675, 1617, 2057, 1479, 1615, 1673, 1614, 2056,
        1478, 1612, 1671, 1047, 1477, 1610, 1669, 1609, 1476, 1044, 1667, 
       1607, 1475, 2072, 1605, 1665, 1604, 1474, 2071, 1602, 1663, 1601, 
       1638}], Line3DBox[{1489, 1904, 2029, 1488, 1905, 2030, 1490, 1906, 
       2031, 1491, 1907, 2032, 1492, 1908, 2033, 1493, 983, 1494, 1986, 1582, 
       1495, 1987, 1909, 2034, 1496, 1910, 2035, 1497, 1911, 2036, 1498, 1912,
        2037, 1499, 1913, 2038, 1500, 991, 1501, 1988, 1583, 1502}], 
      Line3DBox[{1516, 1646, 1079, 1515, 1645, 2048, 1926, 1514, 2047, 1919, 
       1513, 2046, 1918, 1512, 2045, 1917, 1511, 1925, 2044, 1644, 1510, 1075,
        1643, 2064, 1509, 1642, 1073, 1508, 1641, 2043, 1924, 1507, 2042, 
       1916, 1506, 2041, 1915, 1505, 2040, 1914, 1504, 1923, 2039, 1640, 1503,
        1069, 1639, 1823}], Line3DBox[CompressedData["
1:eJwVz9kqhWEUBuBF7C1xB6Z9J0pJSYlSSpJ9zh1IEhubJIkzh+Z5nud5Hg7c
jec/eHpX37v+VX+mu7elpyAissymIn6pSkf8yDmyZEoixr3tmB+4Z4YuanRf
cps7bpmmk2rdp9zihpGiiCnZwQebXFNub8z9SXM772ww6q1Md2WeoI031pNb
ulLdpTlPK/Pur8kLzpPvaU7+x17e/qr5jFNyNFGpe5UrnHDMEI1U6F7kMkcc
MkgDzyxxQNpezv0Bcz1PLLJPSrcn+6njkQWG7Rfrds191FLo7Vv+8Q8HtjpA

       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{683, 864, 1938, 684, 874, 1946, 706, 1014, 1100, 886, 721, 
       1165, 1015, 1114, 1297, 1298, 728, 1310, 1202, 1309, 896, 735, 1992, 
       903, 750, 2002, 918, 765, 2014, 933, 1960, 780, 948, 1973, 795, 1236, 
       963, 2090, 810, 1237, 1043, 1128, 2055, 1155, 1156, 817, 1044, 1142, 
       973, 824, 2031, 980, 839, 2040, 995, 854}], 
      Line3DBox[{685, 865, 1939, 686, 875, 1947, 707, 241, 1650, 315, 242, 
       487, 1764, 486, 736, 1993, 904, 751, 2003, 919, 766, 2015, 934, 1961, 
       781, 949, 1974, 796, 540, 1800, 541, 272, 1668, 330, 1669, 273, 825, 
       2032, 981, 840, 2041, 996, 855}], 
      Line3DBox[{687, 866, 1940, 688, 876, 1948, 708, 1016, 1101, 1017, 1082, 
       1166, 1018, 1115, 1019, 1223, 1205, 1203, 1311, 1204, 737, 1994, 905, 
       752, 2004, 920, 767, 2016, 935, 1962, 782, 950, 1975, 797, 1238, 1239, 
       1984, 1240, 1241, 1045, 1129, 2076, 1046, 1180, 1089, 1047, 1143, 1048,
        826, 2033, 982, 841, 2042, 997, 856}], 
      Line3DBox[{689, 1004, 1005, 1941, 690, 877, 1949, 709, 1020, 1102, 2066,
        1021, 1083, 424, 1116, 510, 1208, 1206, 2083, 1312, 1207, 738, 906, 
       753, 2005, 921, 768, 2017, 936, 1963, 783, 951, 1976, 798, 1242, 2091, 
       1243, 1244, 550, 1130, 2077, 445, 1090, 1049, 2056, 1144, 1050, 827, 
       983, 842, 2043, 1071, 1072, 1096}], 
      Line3DBox[{691, 1189, 1190, 1188, 1006, 1330, 1328, 2104, 1329, 710, 
       1022, 1103, 2067, 1023, 1084, 1167, 1168, 1117, 1225, 1224, 1211, 1209,
        2084, 1313, 1210, 739, 907, 1954, 754, 922, 769, 2018, 937, 1964, 784,
        952, 1977, 799, 1245, 2092, 1246, 1247, 1248, 1249, 1131, 2078, 1182, 
       1181, 1091, 1051, 2057, 1145, 1052, 828, 984, 1986, 843, 1073, 1285, 
       1287, 1286, 1288}], 
      Line3DBox[{692, 1192, 1193, 1191, 2082, 1007, 1333, 1331, 1339, 2107, 
       1332, 711, 1024, 1104, 2068, 1026, 1085, 1169, 1170, 1118, 1227, 1226, 
       1214, 1212, 2085, 1314, 1213, 740, 908, 1955, 755, 923, 1957, 770, 938,
        1965, 785, 953, 1978, 800, 1250, 2094, 1252, 1253, 1254, 1255, 1132, 
       1184, 1183, 1092, 1053, 2059, 1146, 1055, 829, 985, 1987, 844, 1074, 
       2064, 1199, 1290, 1289, 1291}], 
      Line3DBox[{695, 869, 1942, 696, 880, 1950, 714, 1028, 1107, 889, 724, 
       1175, 1029, 1121, 1301, 1302, 731, 1322, 1215, 2102, 1321, 899, 743, 
       1997, 911, 758, 2008, 926, 773, 2021, 941, 1967, 788, 956, 1979, 803, 
       1261, 966, 813, 1262, 1057, 1135, 2061, 1159, 1160, 820, 1058, 2075, 
       1149, 976, 832, 2036, 988, 847, 2045, 1000, 859}], 
      Line3DBox[{697, 870, 1943, 698, 881, 1951, 715, 1030, 1108, 890, 2065, 
       725, 1176, 1031, 1122, 1303, 1304, 732, 1325, 1989, 1216, 1323, 900, 
       744, 1998, 912, 759, 2009, 927, 774, 2022, 942, 1968, 789, 957, 1980, 
       804, 1263, 967, 2096, 814, 1264, 1059, 1136, 1161, 1162, 821, 2028, 
       1060, 1150, 977, 833, 2037, 989, 848, 2046, 1001, 860}], 
      Line3DBox[{699, 871, 1944, 700, 882, 1952, 716, 1032, 1109, 1033, 1086, 
       1177, 1034, 1123, 1035, 1228, 1219, 1217, 1324, 1218, 745, 1999, 913, 
       760, 2010, 928, 775, 2023, 943, 1969, 790, 958, 1981, 805, 1265, 1266, 
       1985, 1267, 1268, 1061, 1137, 2079, 1062, 1185, 1093, 1063, 1151, 1064,
        834, 2038, 990, 849, 2047, 1002, 861}], 
      Line3DBox[{701, 1009, 1010, 1945, 702, 883, 1953, 717, 1036, 1110, 2069,
        1037, 1087, 438, 1124, 517, 1222, 1220, 2086, 1326, 1221, 746, 914, 
       761, 2011, 929, 776, 2024, 944, 1970, 791, 959, 1982, 806, 1269, 2097, 
       1270, 1271, 578, 1138, 2080, 452, 1094, 1065, 2062, 1152, 1066, 835, 
       991, 850, 2048, 1077, 1078, 1097}], 
      Line3DBox[{703, 1195, 1196, 1194, 1011, 1336, 1334, 2106, 1335, 718, 
       1038, 1111, 2070, 1039, 1088, 1178, 1179, 1125, 1040, 1231, 1229, 2087,
        1327, 1230, 747, 915, 1956, 762, 930, 777, 2025, 945, 1971, 792, 960, 
       1983, 807, 1272, 2098, 1273, 1274, 1275, 1276, 1139, 2081, 1187, 1186, 
       1095, 1067, 2063, 1153, 1068, 836, 992, 1988, 851, 1079, 1292, 1294, 
       1293, 1295}], 
      Line3DBox[{852, 993, 1198, 1197, 1069, 837, 978, 2029, 822, 971, 1140, 
       2071, 1041, 815, 968, 1154, 2053, 1126, 1234, 1233, 808, 961, 2088, 
       1232, 793, 946, 2026, 778, 1958, 931, 2012, 763, 916, 2000, 748, 901, 
       1990, 733, 894, 1305, 1307, 1306, 726, 891, 1296, 1112, 1164, 1163, 
       719, 884, 2049, 1098, 1012, 704, 872, 2103, 1341, 1343, 1342, 681, 862,
        1337, 1277, 1279, 1278, 1280}], 
      Line3DBox[{853, 994, 1070, 2039, 838, 979, 2030, 823, 972, 1141, 2072, 
       1042, 816, 403, 2054, 1127, 535, 809, 962, 2089, 1235, 794, 1972, 947, 
       779, 1959, 932, 2013, 764, 917, 2001, 749, 902, 1991, 734, 895, 1308, 
       2099, 630, 727, 614, 1113, 417, 720, 885, 2050, 1099, 1013, 705, 873, 
       1340, 682, 2109, 863, 1003, 1080}], 
      Line3DBox[{857, 998, 1201, 1200, 1075, 845, 986, 2034, 830, 974, 1147, 
       2073, 1054, 818, 969, 1157, 2058, 1133, 1257, 1256, 811, 964, 2093, 
       1251, 801, 954, 2027, 786, 939, 2019, 771, 924, 2006, 756, 909, 1995, 
       741, 897, 1315, 1317, 2100, 1316, 729, 892, 1299, 1119, 1172, 1171, 
       722, 887, 2051, 1105, 1025, 712, 878, 2105, 1345, 1347, 1346, 693, 867,
        1338, 1281, 1283, 1282, 1284}], 
      Line3DBox[{858, 999, 1076, 2044, 846, 987, 2035, 831, 975, 1148, 2074, 
       1056, 819, 970, 1158, 2060, 1134, 1260, 1259, 812, 965, 2095, 1258, 
       802, 955, 787, 1966, 940, 2020, 772, 925, 2007, 757, 910, 1996, 742, 
       898, 1318, 2101, 1320, 1319, 730, 893, 1300, 1120, 1174, 1173, 723, 
       888, 2052, 1106, 1027, 713, 879, 2108, 1344, 694, 2110, 868, 1008, 
       1081}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
VcsOdRP7Kw33v2P7/fp94sLPgwT/meCJeYzfGDPF6bsiWj2f1eV3/Snld/3K
7Km8L6F/LXe5EkjsB+fzbyGuG9o5Ds2Kxfbj1etear7XIac530f84dRxTgU6
aPsKOQ/q4+rff2SyxNnnWA/OxwDf12TzqUOL9wn/P9fvX5bKfVp5eq1Cs4eU
2yTtpw5cXOj4uU9PS/ynsUWmZE44IXH2OUTUcwPg01cUTi99cKf4XtD+ZYf/
F95U3UdcR9Qb2nfs8Kj5bHX/tezPVGJf9ljC3my56QS/kk3/W5msT7SPOM/y
b0o0nv79rd/F/U4G3qnJNwdcKp0SnO/Lno72ZU8H7qxew8XvcRLwr5m+4KMs
+on2Eec53pLgTYC/OK6PkqTFOUgnXrR7Xpwze1Gfnrp92ZsF9wG+YO3NZ+de
0s4PeZ3wB82jPjRfql5FfKIkAM8X/7+r1s7HGux3dnNyL6ZkXBDxz0Z9vjEv
F+dFSzztWVVHxEVhwBPVq9jPblsP/KB63Sv4WuDKg/OrRbloH+sTw/fuutpz
2quL12NednnX0rVLHhX36wncXb3GCV4d+E9Dbo8+vHhfrP1yfxL6zwMPZfai
3krq9gXHCe4CPHmZ6o/gRYj7Qvtb8yzvHdFry5Byop20HQFetGiv5PtxkeB8
X/ABtC+Y6+xRr2Gi3vi+4E5MX/DfLPqJ8mcEr5LL3O0RldsNzXt8uj/y80pF
5fHyja//Cl8bkiLNb1x+r9nqt+an8Hk2rb1q26u/RwO5Pud3HFfzzZRkiQ8i
yr0K5eJ5g7NQ7n9QuVuIchdAuZcHpA6P8Lom7MeXTNx60S1dsm/vlzo41i9N
Go9PTpkyLfr4nx5dfMK6+rnGaOtrQUsCF/a9JM3PjPVe+1ngzQuSfvfzCSMG
TDov8dGEPx+CP5gHgj/t0DzkKPAHz4cMJ/zpD/7gcXeb+I7l3RoVkdr5r35v
M6ZItUISL3jv3ZNpz8j9QltCZx2hU5rQOa/fl8G5UivgctvBp5/x3KWub2j9
b13g2P6Yfh1E8FYnV55a0DJdOn+s+7pWThPXXQEu+gVl6MyM+oMqXZPjH9DB
3A90MB9C6EyCeXJnJ8fqXXZsEfe1suW2tpPHnYXxphbHFl8z8XzC9HMelQfe
rp5+WIuLhpZp/JnTV6keR0YWfP69EDFPpbDP56Xxe7NTW1cGRUrPibKy4QSv
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
E1eP23zI/Pz5FcKems9vR/BVBvM2/wXp0BMY
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{586.8454946175675, 300.},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-4.2605000000000003`*^-7, 
   4.2605000000000003`*^-7}, {-4.2605000000000003`*^-7, 
   4.2605000000000003`*^-7}, {-1.7354161721757667`*^22, 
   1.7354161721757667`*^22}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.672522430887218, -0.966369010924906, 1.8367785753431973`},
  ViewVertical->{0., 0., -1.}]], "Output",
 CellChangeTimes->{{3.765183102030758*^9, 3.7651831201407785`*^9}, {
   3.7651831703818254`*^9, 3.765183190981944*^9}, 3.765183229960738*^9, 
   3.765183269590663*^9, {3.765183302323208*^9, 3.765183312988341*^9}, {
   3.7651839675470963`*^9, 3.7651839816255035`*^9}, 3.765184078176158*^9, 
   3.7657765442189426`*^9, {3.7657827535832443`*^9, 3.765782841858137*^9}, {
   3.7657829343536916`*^9, 3.7657829501324615`*^9}},
 ExpressionUUID -> "17a5dcc5-ea4e-4673-8984-837f4e9b1ca8"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7657906121134853`*^9, 3.765790612129072*^9}}],

Cell[TextData[StyleBox["Absolute effective magnetic field", "Section"]], \
"Input",
 CellChangeTimes->{{3.7657904904080954`*^9, 3.7657905850411053`*^9}, {
  3.765868656607154*^9, 3.7658686574196014`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"beffplot", "[", 
    RowBox[{"rs_", ",", " ", "n0_"}], "]"}], ":=", "\[IndentingNewLine]", " ", 
   RowBox[{"ListContourPlot", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"ho", " ", "=", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "10"}]]}], ";", 
      RowBox[{"r", "=", "rs"}], ";", 
      RowBox[{"n", "=", "n0"}], ";", 
      RowBox[{"\[CapitalDelta]", " ", "=", " ", 
       RowBox[{"40", " ", 
        SuperscriptBox["10", "9"]}]}], ";", " ", 
      RowBox[{"Inti", " ", "=", " ", "15000"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"beff", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"udsmintest", " ", "=", " ", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y", ",", "zf"}], "}"}], ",", " ", 
                 RowBox[{
                  RowBox[{"UDsim", "[", 
                   RowBox[{"x", ",", "y", ",", "zf", ",", "a", ",", "b"}], 
                   "]"}], "/", "Er"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", 
                 RowBox[{
                  RowBox[{"-", "1"}], 
                  RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                 RowBox[{"1", "*", " ", "1", 
                  RowBox[{"\[Lambda]", "/", "2"}]}], ",", " ", 
                 RowBox[{"\[Lambda]", "/", "10"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"y", ",", 
                 RowBox[{
                  RowBox[{"-", "1"}], 
                  RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                 RowBox[{"1", 
                  RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                 RowBox[{"\[Lambda]", "/", "10"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"zf", ",", 
                 RowBox[{
                  RowBox[{"-", " ", "1"}], 
                  RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                 RowBox[{"1", 
                  RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                 RowBox[{"\[Lambda]", "/", "10"}]}], "}"}]}], "]"}], ",", 
             "2"}], "]"}]}], ";", "\n", 
          RowBox[{"res", " ", "=", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Pick", "[", 
                RowBox[{"#1", ",", "#2", ",", 
                 RowBox[{"Min", "[", "#2", "]"}]}], "]"}], "&"}], "@@", 
              RowBox[{"Transpose", "[", "udsmintest", "]"}]}], ")"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"mi", " ", "=", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x", "\[Rule]", " ", 
                RowBox[{"res", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
               RowBox[{"y", " ", "\[Rule]", " ", 
                RowBox[{"res", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
               RowBox[{"zf", " ", "\[Rule]", " ", 
                RowBox[{"res", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"x0", "=", 
           RowBox[{"x", "/.", 
            RowBox[{"mi", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], ";", " ", 
          RowBox[{"y0", "=", 
           RowBox[{"y", "/.", 
            RowBox[{"mi", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], ";", " ", 
          RowBox[{"z0", "=", 
           RowBox[{"zf", "/.", 
            RowBox[{"mi", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"abola", " ", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"cart", " ", "=", " ", 
               RowBox[{
                RowBox[{"FromSphericalCoordinates", "[", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], "]"}],
                 "//", "N"}]}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"\[Phi]", ",", "\[Theta]", ",", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  FractionBox["1", "mCs"], 
                  FractionBox["1", 
                   SuperscriptBox["ho", "2"]], 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"UDsim", "[", 
                    RowBox[{
                    RowBox[{"x0", "+", " ", 
                    RowBox[{"ho", " ", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
                    RowBox[{"y0", " ", "+", 
                    RowBox[{"ho", " ", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
                    RowBox[{"z0", " ", "+", " ", 
                    RowBox[{"ho", " ", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], ",", "a", ",", "b"}], 
                    "]"}], "-", " ", 
                    RowBox[{"2", 
                    RowBox[{"UDsim", "[", 
                    RowBox[{
                    "x0", ",", "y0", " ", ",", "z0", ",", "a", ",", "b"}], 
                    "]"}]}], " ", "+", " ", 
                    RowBox[{"UDsim", "[", 
                    RowBox[{
                    RowBox[{"x0", "-", 
                    RowBox[{"ho", " ", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
                    RowBox[{"y0", " ", "-", 
                    RowBox[{"ho", " ", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
                    RowBox[{"z0", " ", "-", " ", 
                    RowBox[{"ho", " ", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], ",", "a", ",", "b"}], 
                    "]"}]}], ")"}]}], "]"}]}], "}"}]}], "\[IndentingNewLine]",
              "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"\[Theta]", ",", "0.0001", " ", ",", 
               RowBox[{"0.999", " ", "Pi"}], ",", " ", 
               RowBox[{"Pi", "/", "20"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Phi]", ",", 
               RowBox[{
                RowBox[{"-", "Pi"}], "*", "0.999"}], " ", ",", " ", "Pi", ",",
                " ", 
               RowBox[{"Pi", "/", "20"}]}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"avgomega", " ", "=", " ", 
           RowBox[{"Mean", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"abola", ",", "1"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"deltax", " ", "=", " ", 
           RowBox[{"Sqrt", "[", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", "n"}], "+", "1"}], ")"}], " ", "hbar"}], 
             RowBox[{"2", " ", "mCs", " ", "avgomega", " "}]], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{"Mean", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"cart", " ", "=", " ", 
                    RowBox[{
                    RowBox[{"FromSphericalCoordinates", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], 
                    "]"}], "//", "N"}]}], ";", 
                   RowBox[{"Re", "[", 
                    RowBox[{
                    RowBox[{"ecrosss", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"deltax", "*", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], " ", "+", " ", "x"}], 
                    " ", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"deltax", "*", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], " ", "+", "  ", "y"}], "/.",
                     " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"deltax", "*", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], " ", "+", " ", "zf"}], "/.",
                     " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b"}], 
                    "]"}], ".", 
                    RowBox[{"ecrosss", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"deltax", "*", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "  ", "+", " ", "x"}], 
                    " ", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"deltax", "*", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], " ", "+", "  ", "y"}], "/.",
                     " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"deltax", "*", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], " ", "+", "  ", "zf"}], 
                    "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b"}], 
                    "]"}]}], "]"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"\[Theta]", ",", "0.0001", " ", ",", 
                    RowBox[{"0.999", " ", "Pi"}], ",", " ", 
                    RowBox[{"Pi", "/", "20"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"\[Phi]", ",", 
                    RowBox[{
                    RowBox[{"-", "Pi"}], "*", "0.999"}], " ", ",", " ", "Pi", 
                    ",", " ", 
                    RowBox[{"Pi", "/", "20"}]}], "}"}]}], "]"}], ",", "1"}], 
               "]"}], "]"}], "]"}], "/", 
            RowBox[{"(", 
             RowBox[{"0.7", "*", "el", " ", 
              RowBox[{"hbar", "/", 
               RowBox[{"(", 
                RowBox[{"2", " ", "me"}], ")"}]}]}], ")"}]}], " ", "*", " ", 
           SuperscriptBox["10", "4"], "*", 
           SuperscriptBox["10", "3"]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", " ", 
           RowBox[{
            RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
           RowBox[{"Pi", "/", "2"}], ",", " ", 
           RowBox[{"Pi", "/", "13"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"b", ",", " ", 
           RowBox[{
            RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
           RowBox[{"Pi", "/", "2"}], ",", " ", 
           RowBox[{"Pi", "/", "13"}]}], "}"}]}], "]"}]}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", " ", 
      RowBox[{"BarLegend", "[", 
       RowBox[{"All", ",", "None", ",", 
        RowBox[{"LegendMarkerSize", "\[Rule]", "250"}], ",", " ", 
        RowBox[{
        "LegendLabel", " ", "\[Rule]", " ", 
         "\"\<|\!\(\*SubscriptBox[\(B\), \(eff\)]\)| (mG)\>\""}], ",", " ", 
        RowBox[{"LabelStyle", " ", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"FontSize", " ", "\[Rule]", " ", "20"}], "}"}]}]}], "]"}]}],
      ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Alpha]\>\"", ",", "\"\<\[Beta]\>\""}], "}"}]}], ",", 
     " ", 
     RowBox[{"FrameStyle", " ", "\[Rule]", " ", "Black"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", " ", 
     RowBox[{"PlotLabel", " ", "\[Rule]", " ", 
      RowBox[{"HoldForm", "[", 
       RowBox[{"\"\<r\>\"", " ", "=", " ", "r"}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7651682136158247`*^9, 3.765168213837825*^9}, {
   3.765168277982825*^9, 3.765168281307825*^9}, {3.7651683708888245`*^9, 
   3.7651683712538247`*^9}, {3.7651686522313976`*^9, 
   3.7651686565511246`*^9}, {3.765168687681572*^9, 3.7651686947884135`*^9}, {
   3.765777247057985*^9, 3.7657772492449446`*^9}, {3.7657772974327946`*^9, 
   3.7657773566416583`*^9}, {3.765779534947542*^9, 3.7657795908560987`*^9}, {
   3.7657797199546924`*^9, 3.7657797488385487`*^9}, {3.7657799220521135`*^9, 
   3.765780028388884*^9}, {3.765780170429121*^9, 3.7657801732566133`*^9}, {
   3.765780260997218*^9, 3.765780261215903*^9}, {3.7657803074686317`*^9, 
   3.7657803480355053`*^9}, {3.7657804798473153`*^9, 
   3.7657804856271563`*^9}, {3.7657805372400618`*^9, 
   3.7657805388800488`*^9}, {3.7657818219854107`*^9, 
   3.7657818731466184`*^9}, {3.7657819750159426`*^9, 
   3.7657819822798624`*^9}, {3.765782106425376*^9, 3.7657821169543037`*^9}, {
   3.7657821621320643`*^9, 3.7657821626008835`*^9}, {3.7657822194474325`*^9, 
   3.765782239958233*^9}, 3.765782339952653*^9, {3.7657823792559147`*^9, 
   3.7657824458674164`*^9}, {3.7657824965586634`*^9, 3.7657825091500034`*^9}, 
   3.7657825539520054`*^9, {3.765783102505341*^9, 3.7657831745677223`*^9}, {
   3.7657833299256268`*^9, 3.7657833448752165`*^9}, {3.765783473144695*^9, 
   3.765783481642741*^9}, {3.76578379487949*^9, 3.765783798816085*^9}, {
   3.7658689149268255`*^9, 3.765868922056326*^9}, {3.7658693059578743`*^9, 
   3.765869306264056*^9}},
 ExpressionUUID -> "69b7d8cd-d4e4-4b62-9ac8-d53ff14ae24c"],

Cell[BoxData[
 StyleBox[
  RowBox[{"\[CapitalOmega]free", " ", 
   RowBox[{"(", "nondegenerate", ")"}]}], "Section"]], "Input",
 CellChangeTimes->{{3.7657905895086*^9, 3.765790593601595*^9}, {
  3.7657987888866863`*^9, 3.765798794681964*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalOmega]freeplot", "[", 
   RowBox[{"rs_", ",", " ", "n0_"}], "]"}], ":=", "\[IndentingNewLine]", " ", 
  RowBox[{"ListContourPlot", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"ho", " ", "=", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "10"}]]}], ";", 
     RowBox[{"r", "=", "rs"}], ";", 
     RowBox[{"n", "=", "n0"}], ";", 
     RowBox[{"\[CapitalDelta]", " ", "=", " ", 
      RowBox[{"40", " ", 
       SuperscriptBox["10", "9"]}]}], ";", " ", 
     RowBox[{"Inti", " ", "=", " ", "15000"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalOmega]freetab", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"udsmintest", " ", "=", " ", 
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"x", ",", "y", ",", "zf"}], "}"}], ",", " ", 
                  RowBox[{
                   RowBox[{"UDsim", "[", 
                    RowBox[{"x", ",", "y", ",", "zf", ",", "a", ",", "b"}], 
                    "]"}], "/", "Er"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", 
                  RowBox[{
                   RowBox[{"-", "1"}], 
                   RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                  RowBox[{"1", "*", " ", "1", 
                   RowBox[{"\[Lambda]", "/", "2"}]}], ",", " ", 
                  RowBox[{"\[Lambda]", "/", "10"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"y", ",", 
                  RowBox[{
                   RowBox[{"-", "1"}], 
                   RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                  RowBox[{"1", 
                   RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                  RowBox[{"\[Lambda]", "/", "10"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"zf", ",", 
                  RowBox[{
                   RowBox[{"-", " ", "1"}], 
                   RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                  RowBox[{"1", 
                   RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                  RowBox[{"\[Lambda]", "/", "10"}]}], "}"}]}], "]"}], ",", 
              "2"}], "]"}]}], ";", "\n", 
           RowBox[{"res", " ", "=", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Pick", "[", 
                 RowBox[{"#1", ",", "#2", ",", 
                  RowBox[{"Min", "[", "#2", "]"}]}], "]"}], "&"}], "@@", 
               RowBox[{"Transpose", "[", "udsmintest", "]"}]}], ")"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"mi", " ", "=", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"x", "\[Rule]", " ", 
                 RowBox[{"res", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
                RowBox[{"y", " ", "\[Rule]", " ", 
                 RowBox[{"res", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
                RowBox[{"zf", " ", "\[Rule]", " ", 
                 RowBox[{"res", "[", 
                  RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"x0", "=", 
            RowBox[{"x", "/.", 
             RowBox[{"mi", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], ";", " ", 
           RowBox[{"y0", "=", 
            RowBox[{"y", "/.", 
             RowBox[{"mi", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], ";", " ", 
           RowBox[{"z0", "=", 
            RowBox[{"zf", "/.", 
             RowBox[{"mi", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"abola", " ", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"cart", " ", "=", " ", 
                RowBox[{
                 RowBox[{"FromSphericalCoordinates", "[", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], 
                  "]"}], "//", "N"}]}], ";", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"\[Phi]", ",", "\[Theta]", ",", 
                 RowBox[{"Sqrt", "[", 
                  RowBox[{
                   FractionBox["1", "mCs"], 
                   FractionBox["1", 
                    SuperscriptBox["ho", "2"]], 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"UDsim", "[", 
                    RowBox[{
                    RowBox[{"x0", "+", " ", 
                    RowBox[{"ho", " ", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
                    RowBox[{"y0", " ", "+", 
                    RowBox[{"ho", " ", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
                    RowBox[{"z0", " ", "+", " ", 
                    RowBox[{"ho", " ", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], ",", "a", ",", "b"}], 
                    "]"}], "-", " ", 
                    RowBox[{"2", 
                    RowBox[{"UDsim", "[", 
                    RowBox[{
                    "x0", ",", "y0", " ", ",", "z0", ",", "a", ",", "b"}], 
                    "]"}]}], " ", "+", " ", 
                    RowBox[{"UDsim", "[", 
                    RowBox[{
                    RowBox[{"x0", "-", 
                    RowBox[{"ho", " ", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
                    RowBox[{"y0", " ", "-", 
                    RowBox[{"ho", " ", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
                    RowBox[{"z0", " ", "-", " ", 
                    RowBox[{"ho", " ", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], ",", "a", ",", "b"}], 
                    "]"}]}], ")"}]}], "]"}]}], "}"}]}], "\[IndentingNewLine]",
               "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"\[Theta]", ",", "0.0001", " ", ",", 
                RowBox[{"0.999", " ", "Pi"}], ",", " ", 
                RowBox[{"Pi", "/", "20"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\[Phi]", ",", 
                RowBox[{
                 RowBox[{"-", "Pi"}], "*", "0.999"}], " ", ",", " ", "Pi", 
                ",", " ", 
                RowBox[{"Pi", "/", "20"}]}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"avgomega", " ", "=", " ", 
            RowBox[{"Mean", "[", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"abola", ",", "1"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"deltax", " ", "=", " ", 
            RowBox[{"Sqrt", "[", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", "n"}], "+", "1"}], ")"}], " ", "hbar"}], 
              RowBox[{"2", " ", "mCs", " ", "avgomega", " "}]], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"beffabs", "=", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"Mean", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"cart", " ", "=", " ", 
                    RowBox[{
                    RowBox[{"FromSphericalCoordinates", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], 
                    "]"}], "//", "N"}]}], ";", "\[IndentingNewLine]", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Re", "[", 
                    RowBox[{
                    RowBox[{"ecrosssdel", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"deltax", "*", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], " ", "+", " ", "x"}], 
                    " ", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"deltax", "*", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], " ", "+", "  ", "y"}], "/.",
                     " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"deltax", "*", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], " ", "+", " ", "zf"}], "/.",
                     " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b", ",",
                     " ", "\[CapitalDelta]", ",", " ", "Inti"}], "]"}], ".", 
                    RowBox[{"ecrosssdel", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"deltax", "*", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "  ", "+", " ", "x"}], 
                    " ", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"deltax", "*", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], " ", "+", "  ", "y"}], "/.",
                     " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"deltax", "*", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], " ", "+", "  ", "zf"}], 
                    "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b", ",",
                     " ", "\[CapitalDelta]", ",", " ", "Inti"}], "]"}]}], 
                    "]"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"\[Theta]", ",", "0.0001", " ", ",", 
                    RowBox[{"0.999", " ", "Pi"}], ",", " ", 
                    RowBox[{"Pi", "/", "20"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"\[Phi]", ",", 
                    RowBox[{
                    RowBox[{"-", "Pi"}], "*", "0.999"}], " ", ",", " ", "Pi", 
                    ",", " ", 
                    RowBox[{"Pi", "/", "20"}]}], "}"}]}], "]"}], ",", "1"}], 
               "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"theta", " ", "=", " ", 
            RowBox[{
             RowBox[{"ToSphericalCoordinates", "[", 
              RowBox[{"ecrosssdel", "[", 
               RowBox[{
                RowBox[{"x", " ", "/.", " ", 
                 RowBox[{"mi", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                RowBox[{"y", "/.", " ", 
                 RowBox[{"mi", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                RowBox[{"zf", "/.", " ", 
                 RowBox[{"mi", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b", ",", 
                " ", "\[CapitalDelta]", ",", " ", "Inti"}], "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"a", ",", "b", ",", 
             RowBox[{"Abs", "[", 
              RowBox[{
               FractionBox["4", "Pi"], "beffabs", " ", 
               RowBox[{
                RowBox[{"BeffCouplingGenerate", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"ToSphericalCoordinates", "[", 
                    RowBox[{"ecrosssdel", "[", 
                    RowBox[{
                    RowBox[{"x", " ", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{"y", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{"zf", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b", ",",
                     " ", "\[CapitalDelta]", ",", " ", "Inti"}], "]"}], "]"}],
                    "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", " ", "4"}], "]"}], 
                " ", "/", "hbar"}]}], "]"}]}], "}"}]}], "\[IndentingNewLine]",
           "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", " ", 
            RowBox[{
             RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
            RowBox[{"Pi", "/", "2"}], ",", " ", 
            RowBox[{"Pi", "/", "13"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"b", ",", " ", 
            RowBox[{
             RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
            RowBox[{"Pi", "/", "2"}], ",", " ", 
            RowBox[{"Pi", "/", "13"}]}], "}"}]}], "]"}], ",", "1"}], 
       "]"}]}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Alpha]\>\"", ",", "\"\<\[Beta]\>\""}], "}"}]}], ",", " ", 
    RowBox[{"FrameStyle", " ", "\[Rule]", " ", "Black"}], ",", 
    RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", " ", 
    RowBox[{"PlotLabel", " ", "\[Rule]", " ", 
     RowBox[{"HoldForm", "[", 
      RowBox[{"\"\<r\>\"", " ", "=", " ", "rs"}], "]"}]}], ",", " ", 
    RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", 
     RowBox[{"ColorData", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<BrightBands\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "100000"}], "}"}]}], "}"}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.76578380810327*^9, 3.765783813750288*^9}, {
   3.7657839899197407`*^9, 3.765784014368162*^9}, {3.7657840470937877`*^9, 
   3.765784054420251*^9}, {3.765784094207715*^9, 3.765784142571077*^9}, {
   3.76578417961786*^9, 3.7657842125862617`*^9}, {3.765790634248892*^9, 
   3.765790650292056*^9}, {3.765790841448387*^9, 3.765790849525957*^9}, {
   3.7657909665225105`*^9, 3.765791053182398*^9}, 3.7657911835337205`*^9, {
   3.7657912336792626`*^9, 3.765791270889268*^9}, {3.765797598363031*^9, 
   3.7657977096457014`*^9}, 3.765797751927923*^9, {3.765798058269698*^9, 
   3.765798182031616*^9}, {3.7657982275975685`*^9, 3.7657982748020353`*^9}, {
   3.765798554847576*^9, 3.765798555113163*^9}, {3.765798597446765*^9, 
   3.7657986606502295`*^9}, {3.7657987130904512`*^9, 3.765798713652811*^9}, {
   3.7657987685308433`*^9, 3.765798772764182*^9}, {3.76579881611418*^9, 
   3.7657988461392646`*^9}, {3.7657989487092943`*^9, 3.765798953333082*^9}, {
   3.765798995073586*^9, 3.76579903561162*^9}, {3.765799148148877*^9, 
   3.765799155211175*^9}, 3.7657993306876*^9, {3.76579937395969*^9, 
   3.7657993757407556`*^9}, {3.7657994145138454`*^9, 
   3.7657994159976883`*^9}, {3.765799559153533*^9, 3.7657995604659586`*^9}, {
   3.765799742176914*^9, 3.7657997497376347`*^9}, {3.765867357233653*^9, 
   3.7658673621544957`*^9}, 3.7658689254305367`*^9, {3.7658693107867374`*^9, 
   3.76586932037827*^9}, {3.765870232976768*^9, 3.765870238991785*^9}, {
   3.7658702864151278`*^9, 3.7658702984756575`*^9}, {3.765870426174811*^9, 
   3.765870426690346*^9}, {3.7658705253846493`*^9, 3.765870532664031*^9}, {
   3.765870981190032*^9, 3.7658709917653*^9}, {3.765871075464955*^9, 
   3.7658710883527374`*^9}, {3.765871134452263*^9, 3.7658711547443295`*^9}, {
   3.7658712331343164`*^9, 3.7658712442876706`*^9}, {3.7658713589969296`*^9, 
   3.7658713610122747`*^9}, 3.7658715164783506`*^9, {3.7658724945120554`*^9, 
   3.7658724995735784`*^9}, {3.765872745873542*^9, 3.765872757495854*^9}}],

Cell[BoxData[
 StyleBox[
  RowBox[{"\[CapitalOmega]free", " ", 
   RowBox[{"(", "degenerate", ")"}]}], "Section"]], "Input",
 CellChangeTimes->{{3.7657905895086*^9, 3.765790593601595*^9}, {
   3.7657987888866863`*^9, 3.765798794681964*^9}, 3.7658001323900833`*^9}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[CapitalOmega]freeplotDEG", "[", 
    RowBox[{"rs_", ",", " ", "n0_"}], "]"}], ":=", "\[IndentingNewLine]", " ", 
   RowBox[{"ListContourPlot", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"ho", " ", "=", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "10"}]]}], ";", 
      RowBox[{"r", "=", "rs"}], ";", 
      RowBox[{"n", "=", "n0"}], ";", 
      RowBox[{"\[CapitalDelta]", " ", "=", 
       RowBox[{"40", " ", 
        SuperscriptBox["10", "9"]}]}], ";", " ", 
      RowBox[{"Inti", " ", "=", " ", "15000"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"\[CapitalOmega]freetab", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"udsmintest", " ", "=", " ", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "zf"}], "}"}], ",", " ", 
                   RowBox[{
                    RowBox[{"UDsim", "[", 
                    RowBox[{"x", ",", "y", ",", "zf", ",", "a", ",", "b"}], 
                    "]"}], "/", "Er"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", 
                   RowBox[{
                    RowBox[{"-", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"1", "*", " ", "1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", " ", 
                   RowBox[{"\[Lambda]", "/", "10"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"y", ",", 
                   RowBox[{
                    RowBox[{"-", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"\[Lambda]", "/", "10"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"zf", ",", 
                   RowBox[{
                    RowBox[{"-", " ", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"\[Lambda]", "/", "10"}]}], "}"}]}], "]"}], ",", 
               "2"}], "]"}]}], ";", "\n", 
            RowBox[{"res", " ", "=", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Pick", "[", 
                  RowBox[{"#1", ",", "#2", ",", 
                   RowBox[{"Min", "[", "#2", "]"}]}], "]"}], "&"}], "@@", 
                RowBox[{"Transpose", "[", "udsmintest", "]"}]}], ")"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"mi", " ", "=", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x", "\[Rule]", " ", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
                 RowBox[{"y", " ", "\[Rule]", " ", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
                 RowBox[{"zf", " ", "\[Rule]", " ", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "}"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"x0", "=", 
             RowBox[{"x", "/.", 
              RowBox[{"mi", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], ";", " ", 
            RowBox[{"y0", "=", 
             RowBox[{"y", "/.", 
              RowBox[{"mi", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], ";", " ", 
            RowBox[{"z0", "=", 
             RowBox[{"zf", "/.", 
              RowBox[{"mi", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]",
             "\[IndentingNewLine]", 
            RowBox[{"abola", " ", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"cart", " ", "=", " ", 
                 RowBox[{
                  RowBox[{"FromSphericalCoordinates", "[", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], 
                   "]"}], "//", "N"}]}], ";", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"\[Phi]", ",", "\[Theta]", ",", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{
                    FractionBox["1", "mCs"], 
                    FractionBox["1", 
                    SuperscriptBox["ho", "2"]], 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"UDsim", "[", 
                    RowBox[{
                    RowBox[{"x0", "+", " ", 
                    RowBox[{"ho", " ", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
                    RowBox[{"y0", " ", "+", 
                    RowBox[{"ho", " ", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
                    RowBox[{"z0", " ", "+", " ", 
                    RowBox[{"ho", " ", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], ",", "a", ",", "b"}], 
                    "]"}], "-", " ", 
                    RowBox[{"2", 
                    RowBox[{"UDsim", "[", 
                    RowBox[{
                    "x0", ",", "y0", " ", ",", "z0", ",", "a", ",", "b"}], 
                    "]"}]}], " ", "+", " ", 
                    RowBox[{"UDsim", "[", 
                    RowBox[{
                    RowBox[{"x0", "-", 
                    RowBox[{"ho", " ", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
                    RowBox[{"y0", " ", "-", 
                    RowBox[{"ho", " ", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
                    RowBox[{"z0", " ", "-", " ", 
                    RowBox[{"ho", " ", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], ",", "a", ",", "b"}], 
                    "]"}]}], ")"}]}], "]"}]}], "}"}]}], "\[IndentingNewLine]",
                "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{"\[Theta]", ",", "0.0001", " ", ",", 
                 RowBox[{"0.999", " ", "Pi"}], ",", " ", 
                 RowBox[{"Pi", "/", "20"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Phi]", ",", 
                 RowBox[{
                  RowBox[{"-", "Pi"}], "*", "0.999"}], " ", ",", " ", "Pi", 
                 ",", " ", 
                 RowBox[{"Pi", "/", "20"}]}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"avgomega", " ", "=", " ", 
             RowBox[{"Mean", "[", 
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{"abola", ",", "1"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"deltax", " ", "=", " ", 
             RowBox[{"Sqrt", "[", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", "n"}], "+", "1"}], ")"}], " ", "hbar"}], 
               RowBox[{"2", " ", "mCs", " ", "avgomega", " "}]], "]"}]}], ";",
             "\[IndentingNewLine]", 
            RowBox[{"beffabs", "=", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"cart", " ", "=", " ", 
                    RowBox[{
                    RowBox[{"FromSphericalCoordinates", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], 
                    "]"}], "//", "N"}]}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Re", "[", 
                    RowBox[{
                    RowBox[{"ecrosssdel", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"deltax", "*", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], " ", "+", " ", "x"}], 
                    " ", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"deltax", "*", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], " ", "+", "  ", "y"}], "/.",
                     " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"deltax", "*", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], " ", "+", " ", "zf"}], "/.",
                     " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b", ",",
                     " ", "\[CapitalDelta]", ",", " ", "Inti"}], "]"}], ".", 
                    RowBox[{"ecrosssdel", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"deltax", "*", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "  ", "+", " ", "x"}], 
                    " ", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"deltax", "*", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], " ", "+", "  ", "y"}], "/.",
                     " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"deltax", "*", 
                    RowBox[{"cart", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], " ", "+", "  ", "zf"}], 
                    "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b", ",",
                     " ", "\[CapitalDelta]", ",", " ", "Inti"}], "]"}]}], 
                    "]"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Theta]", ",", "0.0001", " ", ",", 
                    RowBox[{"0.999", " ", "Pi"}], ",", " ", 
                    RowBox[{"Pi", "/", "20"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Phi]", ",", 
                    RowBox[{
                    RowBox[{"-", "Pi"}], "*", "0.999"}], " ", ",", " ", "Pi", 
                    ",", " ", 
                    RowBox[{"Pi", "/", "20"}]}], "}"}]}], "]"}], ",", "1"}], 
                "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"theta", " ", "=", " ", 
             RowBox[{
              RowBox[{"ToSphericalCoordinates", "[", 
               RowBox[{"ecrosssdel", "[", 
                RowBox[{
                 RowBox[{"x", " ", "/.", " ", 
                  RowBox[{"mi", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                 RowBox[{"y", "/.", " ", 
                  RowBox[{"mi", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                 RowBox[{"zf", "/.", " ", 
                  RowBox[{"mi", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b", ",", 
                 " ", "\[CapitalDelta]", ",", " ", "Inti"}], "]"}], "]"}], 
              "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"a", ",", "b", ",", 
              RowBox[{"Abs", "[", 
               RowBox[{
                FractionBox["4", "Pi"], "beffabs", " ", 
                RowBox[{
                 RowBox[{"BeffCouplingDegenerate", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"ToSphericalCoordinates", "[", 
                    RowBox[{"ecrosssdel", "[", 
                    RowBox[{
                    RowBox[{"x", " ", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{"y", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{"zf", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b", ",",
                     " ", "\[CapitalDelta]", ",", " ", "Inti"}], "]"}], "]"}],
                     "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", " ", "4"}], "]"}], 
                 " ", "/", "hbar"}]}], "]"}]}], "}"}]}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"a", ",", " ", 
             RowBox[{
              RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
             RowBox[{"Pi", "/", "2"}], ",", " ", 
             RowBox[{"Pi", "/", "13"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"b", ",", " ", 
             RowBox[{
              RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
             RowBox[{"Pi", "/", "2"}], ",", " ", 
             RowBox[{"Pi", "/", "13"}]}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}]}], ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Alpha]\>\"", ",", "\"\<\[Beta]\>\""}], "}"}]}], ",", 
     " ", 
     RowBox[{"FrameStyle", " ", "\[Rule]", " ", "Black"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", " ", 
     RowBox[{"PlotLabel", " ", "\[Rule]", " ", 
      RowBox[{"HoldForm", "[", 
       RowBox[{"\"\<r\>\"", " ", "=", " ", "rs"}], "]"}]}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"ColorData", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<BrightBands\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "100000"}], "}"}]}], "}"}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.76578380810327*^9, 3.765783813750288*^9}, {
   3.7657839899197407`*^9, 3.765784014368162*^9}, {3.7657840470937877`*^9, 
   3.765784054420251*^9}, {3.765784094207715*^9, 3.765784142571077*^9}, {
   3.76578417961786*^9, 3.7657842125862617`*^9}, {3.765790634248892*^9, 
   3.765790650292056*^9}, {3.765790841448387*^9, 3.765790849525957*^9}, {
   3.7657909665225105`*^9, 3.765791053182398*^9}, 3.7657911835337205`*^9, {
   3.7657912336792626`*^9, 3.765791270889268*^9}, {3.765797598363031*^9, 
   3.7657977096457014`*^9}, 3.765797751927923*^9, {3.765798058269698*^9, 
   3.765798182031616*^9}, {3.7657982275975685`*^9, 3.7657982748020353`*^9}, {
   3.765798554847576*^9, 3.765798555113163*^9}, {3.765798597446765*^9, 
   3.7657986606502295`*^9}, {3.7657987130904512`*^9, 3.765798713652811*^9}, {
   3.7657987685308433`*^9, 3.765798772764182*^9}, {3.76579881611418*^9, 
   3.7657988461392646`*^9}, {3.7657989487092943`*^9, 3.765798953333082*^9}, {
   3.765798995073586*^9, 3.76579903561162*^9}, {3.765799148148877*^9, 
   3.765799155211175*^9}, 3.7657993306876*^9, {3.76579937395969*^9, 
   3.7657993757407556`*^9}, {3.7657994145138454`*^9, 
   3.7657994159976883`*^9}, {3.765799559153533*^9, 3.7657995604659586`*^9}, {
   3.765799742176914*^9, 3.7657997497376347`*^9}, {3.7658001359050574`*^9, 
   3.7658001500439444`*^9}, {3.765800192486926*^9, 3.7658002013598585`*^9}, {
   3.7658673753073387`*^9, 3.7658673831804*^9}, {3.765869357744504*^9, 
   3.765869361462346*^9}, {3.7658709766895876`*^9, 3.765870977017808*^9}, {
   3.765871445290527*^9, 3.765871459802718*^9}, 3.7658715131666174`*^9, {
   3.7658724728298297`*^9, 3.7658724820149927`*^9}, {3.7658727365009546`*^9, 
   3.765872741999609*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarLegend", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<BrightBands\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"100", ",", "100000"}], "}"}]}], "}"}], ",", "20", ",", " ", 
   RowBox[{
   "LegendLabel", " ", "\[Rule]", " ", 
    "\"\<\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(free\)]\)\>\""}], ",", " ", 
   RowBox[{"LabelStyle", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FontSize", " ", "\[Rule]", " ", "20"}], ",", " ", 
      RowBox[{"FontColor", "\[Rule]", " ", "Black"}]}], "}"}]}], ",", " ", 
   RowBox[{"LegendLayout", " ", "\[Rule]", " ", "\"\<Row\>\""}], ",", 
   RowBox[{"LegendMarkerSize", "\[Rule]", " ", "800"}], ",", " ", 
   RowBox[{"Method", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"FrameStyle", " ", "\[Rule]", " ", "Black"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7658719794616013`*^9, 3.7658720004722757`*^9}, {
  3.765872070652996*^9, 3.7658721067550583`*^9}, {3.765872148635665*^9, 
  3.765872165789417*^9}, {3.765872226356979*^9, 3.765872253850546*^9}, {
  3.765872288733696*^9, 3.7658723563600197`*^9}, {3.7658724151859646`*^9, 
  3.7658724239805927`*^9}}],

Cell[BoxData[
 TemplateBox[{StyleBox[
    StyleBox[
     PaneBox[
      TagBox[
       GridBox[{{
          StyleBox[
           TagBox[
            FormBox[
            "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \\(free\\)]\\)\"",
              TraditionalForm], TraditionalForm, Editable -> True], {
           FontSize -> 20, FontColor -> GrayLevel[0], FontFamily -> "Arial"}, 
           Background -> Automatic, StripOnInput -> False]}, {
          GraphicsBox[{{}, {}, 
            RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIAaxmZosq/7ce2NfPq/inJjALvu19318xJNO2r9O
110S6f3OviijpKpI/Kq9wlaFH8HH7thHXW3TPOj43n7bsqDI25/u2fe8rtkU
dvmxfWL+isXiLrftnWTe7/uidtW+r0qA//T/9/YidmEffE0e2pfr5ud8Vbxr
v4Ln+tFH/97bV7jc4Jtw7Il9+PzvPNV9j+wPzptb8+vve/trXlG6lyJe2H9a
vj35d/cz+9sGKcZCQPEHjH8Wqf47aa/4INXi0L7n9gxg8MHeb5tn/6YT1+xT
/nj56l18CRe/sbVLTdPzgf1yCYOkWY9fw8XXzLXs+pBy2j5j0epVeq/f2T/Y
d5C7cecO+x9qAglrt16zF2rQkHlu/t7+26m7Lt17ztgr1TNXP9px33537NLe
+S3v7V2j3zJq912zn5f9+xR33BP7FGul/+EX39szXMxOFNh3z37mEr+Szabv
7YMlXXaXaLyzt778ev5B73P23hFr2YVK39vvTIu9mdnwzv6YCtfeoNRr9n+4
eWYXbHlvr7Cl7HvcjXf2P+PlVh1Zctd+3f4svfOf39vXM04QDTF4b9/lO9Nb
uugR3B9ht0I3O154aO86of9kxtc9cHEL3QX+rzif2Kd7FKw3178AF//Ryfzi
+9/n9uJfPd9t4HxgDwDRLPSS
             "], {{-400, 
               Rational[-15, 2]}, {400, 
               Rational[15, 2]}}], {Antialiasing -> False, 
             AbsoluteThickness[0.1], 
             GrayLevel[0], 
             LineBox[
              NCache[{{400, 
                 Rational[-15, 2]}, {-400, 
                 Rational[-15, 2]}, {-400, 
                 Rational[15, 2]}, {400, 
                 Rational[15, 2]}, {400, 
                 Rational[-15, 2]}}, {{
                400, -7.5}, {-400, -7.5}, {-400, 7.5}, {400, 7.5}, {
                400, -7.5}}]]}, {
             CapForm[None], {}}, {Antialiasing -> False, 
             StyleBox[
              LineBox[{{-400., -7.5}, {400., -7.5}}], 
              GrayLevel[0], StripOnInput -> False], 
             StyleBox[
              StyleBox[{{
                 StyleBox[
                  LineBox[{{{-323.8095238095238, -7.5}, 
                    
                    Offset[{
                    0, -4.}, {-323.8095238095238, -7.5}]}, \
{{-247.61904761904762`, -7.5}, 
                    
                    Offset[{
                    0, -4.}, {-247.61904761904762`, -7.5}]}, \
{{-171.42857142857144`, -7.5}, 
                    
                    Offset[{
                    0, -4.}, {-171.42857142857144`, -7.5}]}, \
{{-95.23809523809526, -7.5}, 
                    
                    Offset[{
                    0, -4.}, {-95.23809523809526, -7.5}]}, \
{{-19.047619047619037`, -7.5}, 
                    Offset[{0, -4.}, {-19.047619047619037`, -7.5}]}, {{
                    57.14285714285711, -7.5}, 
                    Offset[{0, -4.}, {57.14285714285711, -7.5}]}, {{
                    133.33333333333334`, -7.5}, 
                    Offset[{0, -4.}, {133.33333333333334`, -7.5}]}, {{
                    209.5238095238095, -7.5}, 
                    Offset[{0, -4.}, {209.5238095238095, -7.5}]}, {{
                    285.7142857142858, -7.5}, 
                    Offset[{0, -4.}, {285.7142857142858, -7.5}]}, {{
                    361.9047619047619, -7.5}, 
                    Offset[{0, -4.}, {361.9047619047619, -7.5}]}}], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4]], StripOnInput -> False]}, 
                StyleBox[
                 StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["9400", TraditionalForm], 
                    Offset[{0., -7.}, {-323.8095238095238, -7.5}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["18800", TraditionalForm], 
                    Offset[{0., -7.}, {-247.61904761904762`, -7.5}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["28200", TraditionalForm], 
                    Offset[{0., -7.}, {-171.42857142857144`, -7.5}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["37600", TraditionalForm], 
                    Offset[{0., -7.}, {-95.23809523809526, -7.5}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["47000", TraditionalForm], 
                    Offset[{0., -7.}, {-19.047619047619037`, -7.5}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["56400", TraditionalForm], 
                    Offset[{0., -7.}, {57.14285714285711, -7.5}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["65800", TraditionalForm], 
                    Offset[{0., -7.}, {133.33333333333334`, -7.5}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["75200", TraditionalForm], 
                    Offset[{0., -7.}, {209.5238095238095, -7.5}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["84600", TraditionalForm], 
                    Offset[{0., -7.}, {285.7142857142858, -7.5}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["94000", TraditionalForm], 
                    Offset[{0., -7.}, {361.9047619047619, -7.5}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], FontSize -> 20, FontColor -> GrayLevel[0]]}, 
                    StripOnInput -> False]}, {}}, {
                   Directive[
                    Opacity[1], FontSize -> 20, FontColor -> GrayLevel[0]]}, 
                  StripOnInput -> False], "GraphicsLabel", StripOnInput -> 
                 False]}, "GraphicsTicks", StripOnInput -> False], 
              GrayLevel[0], StripOnInput -> False]}}, PlotRangePadding -> 
           Scaled[0.02], PlotRange -> All, Frame -> True, 
           FrameTicks -> {{True, False}, {False, False}}, FrameStyle -> 
           Opacity[0], FrameTicksStyle -> Opacity[0], 
           ImageSize -> {800, Automatic}, BaseStyle -> {}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridBoxSpacings -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
      Alignment -> Left, AppearanceElements -> None, 
      ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
     LineIndent -> 0, StripOnInput -> False], {
    FontSize -> 20, FontColor -> GrayLevel[0], FontFamily -> "Arial"}, 
    Background -> Automatic, StripOnInput -> False]},
  "BarLegend",
  DisplayFunction->(#& ),
  InterpretationFunction:>(RowBox[{"BarLegend", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"\"BrightBands\"", ",", 
           RowBox[{"{", 
             RowBox[{"100", ",", "100000"}], "}"}]}], "}"}], ",", "20", ",", 
       RowBox[{
        "LegendLabel", "\[Rule]", 
         "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \\(free\\)]\\)\""}], 
       ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
             RowBox[{"FontColor", "\[Rule]", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                 Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                 Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                GrayLevel[0], Editable -> False, Selectable -> False]}]}], 
           "}"}]}], ",", 
       RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
       RowBox[{"LegendMarkerSize", "\[Rule]", "800"}], ",", 
       RowBox[{"Method", "\[Rule]", 
         RowBox[{"{", 
           RowBox[{"FrameStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   GrayLevel[0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                 PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0], Editable -> False, Selectable -> False]}], 
           "}"}]}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7658722353390636`*^9, 3.7658722543346033`*^9}, {
   3.7658722894052324`*^9, 3.7658723213508506`*^9}, 3.7658724246366897`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p1", " ", "=", " ", 
  RowBox[{"\[CapitalOmega]freeplot", "[", 
   RowBox[{"0", ",", "0"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.7657976913845377`*^9, 3.7658703109092417`*^9, {3.7658710153690414`*^9, 
   3.765871016087797*^9}}],

Cell[BoxData[
 TemplateBox[{
  "ArcTan","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"ArcTan\\\", \\\"[\\\", \
RowBox[{\\\"0.`\\\", \\\",\\\", \\\"0.`\\\"}], \\\"]\\\"}]\\) encountered.\"",
   2,444,117,31933153767314332663,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7658703441180058`*^9, 3.765870465851963*^9, 
  3.7658705724514713`*^9, 3.7658710498304534`*^9, 3.7658711936579485`*^9, 
  3.765871295089182*^9, 3.765871579589799*^9, 3.7658725443451147`*^9, 
  3.7658727938633404`*^9}],

Cell[BoxData[
 TemplateBox[{
  "ArcTan","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"ArcTan\\\", \\\"[\\\", \
RowBox[{\\\"0.`\\\", \\\",\\\", \\\"0.`\\\"}], \\\"]\\\"}]\\) encountered.\"",
   2,444,118,31933153767314332663,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7658703441180058`*^9, 3.765870465851963*^9, 
  3.7658705724514713`*^9, 3.7658710498304534`*^9, 3.7658711936579485`*^9, 
  3.765871295089182*^9, 3.765871579589799*^9, 3.7658725443451147`*^9, 
  3.765872793894582*^9}],

Cell[BoxData[
 TemplateBox[{
  "ArcTan","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"ArcTan\\\", \\\"[\\\", \
RowBox[{\\\"0.`\\\", \\\",\\\", \\\"0.`\\\"}], \\\"]\\\"}]\\) encountered.\"",
   2,444,119,31933153767314332663,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7658703441180058`*^9, 3.765870465851963*^9, 
  3.7658705724514713`*^9, 3.7658710498304534`*^9, 3.7658711936579485`*^9, 
  3.765871295089182*^9, 3.765871579589799*^9, 3.7658725443451147`*^9, 
  3.765872793910204*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ArcTan\\\", \\\"::\\\", \
\\\"indet\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,444,120,31933153767314332663,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7658703441180058`*^9, 3.765870465851963*^9, 
  3.7658705724514713`*^9, 3.7658710498304534`*^9, 3.7658711936579485`*^9, 
  3.765871295089182*^9, 3.765871579589799*^9, 3.7658725443451147`*^9, 
  3.7658727939414463`*^9}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
4+nqrEVM3sHyRWdls/nVZOv+W/Huu7JhnfPuZPG4KvKPXOvzr65mwj7jwlM+
gyvJYYXQkxsmpzI/r9017F3OsUK277XSwNe6MSKGp/W3PjxPNYvIdciwuuJQ
zuyFnIe88bHMamIUGVkRMbEQ6ot67o7vW0n67MtbMS5WxNafc33P5Zq8RLZe
f7m1tWuOviJqOicupawqJ9fMxTNVZ+Wy5ylZH19JK/nBQtVbty6WVTMee7Rc
XX2/XyXDZKzWEsWRZWTbUc/IrjaZ7P+xtuN98+5ms/1TtU/ITsvOZFjF/fKb
GJtUuGkZp2X0sorpv9xvWDbeVsJLxx84VrhkdQX5O0KBhrqDUU0JMV9u1tJ6
dQJJGBJ48mppOQmveTvq7oiXbP/g7xGmO7eUsP2ebK126by8AvREixr6ditn
/nK6m9aytfsrmb49U9+pYHO+mmze0aFq1HYxRHiM9DkbXUW2iqLdNt2sg5fi
MoOEukqyzcyll/+nWoiyCYiT1agkOx8ZhnxpWcv2O6k58VB9TbXkvq5h88fZ
VYDiYs3vezqXkMkFLvpVL2+TL0HDW3rdKSdv7nWJ09tyHzJuZ14cuo3pA/v/
xyqfoAdyErz9e2bBgkb9FXDvBmW1hs21IP96NuU5yb0VKO95NC+a8px98z5Q
3jPs44smPEn3aP8DyJME3Nuqlvo1Qd/uL3ayyuhQxvxrdevQYVf8SsjnzsVG
E5KiGS8dMvUx9WMKa35RP9RX3I/6pczqZdQPGdwvj0W9EeZfenrYGuX43ezB
cf+We52UiCZy/7P7MtUBjfP6p9n7ltpnw6nU+bWHrEqJS5sOEXNiMmC4c1FQ
ZGwReTZ/hH5sQAo7z/KJ087rjhERB5tqKtePNE5SOReer70oFfX6Rirx/XiD
zhN+v3qi3/4bepK4NW/Qnd7mZ8sZdjD6uCdRp4i0OxUQom7/FfpYOj3ZK19O
klrH3zJf+I3t73zkRY9ptrFs3WndG07V7/EihbtztKzDSpn+JGTHhsadLSZ/
RxiqFnvhW1AZ+TuCSVDuuBYrKsjfka0/s0Q9rto8HlKtDx5Z8ukb2Vh7MEUl
II3t93uGyo88U0kcHj5ZTIJ3ZzP8a7+f3K+VWQzvtl/idTI+jeGGFd1Vtf5J
gQvqHwKkl0n08ZDR0Dcyl4rJ962BpqlalWx+9qn9yruDvoJVr43l7+d8Izpj
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
fj2oVZqC/V3s9/8BU5tXrQ==
   "], {{
     {RGBColor[0.5139898335966383, 0.8736755163363786, 1.], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[{{197, 1, 230}, {743, 193, 836}}]]}, 
     {RGBColor[0.6136466499999997, 0.9353396625, 0.9202853474999995], 
      EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{225, 13, 273}, {194, 16, 236}, {236, 16, 231}, {760, 181,
          812}, {798, 178, 799}, {231, 16, 229}, {192, 179, 178}, {16, 2, 
         15}, {273, 13, 262}, {805, 181, 747}, {747, 181, 760}, {800, 178, 
         798}, {262, 13, 223}, {830, 178, 800}}], 
        PolygonBox[{{836, 179, 192, 743}, {200, 2, 16, 194}, {835, 192, 178, 
         830}, {229, 16, 15, 293}, {230, 15, 2, 197}, {799, 178, 179, 
         695}}]}]}, 
     {RGBColor[0.49068754999999975`, 0.9444748875, 0.6697535824999996], 
      EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{825, 177, 794}, {830, 191, 835}, {754, 166, 802}, {722, 
         163, 729}, {283, 28, 288}, {342, 28, 334}, {334, 28, 283}, {293, 29, 
         229}, {301, 31, 302}, {194, 3, 200}, {294, 30, 291}, {30, 31, 17}, {
         241, 31, 301}, {198, 17, 237}, {302, 31, 299}, {739, 164, 741}, {746,
          166, 696}, {785, 163, 733}, {695, 165, 799}, {696, 166, 754}, {733, 
         163, 722}, {164, 163, 177}, {729, 163, 730}}], 
        PolygonBox[CompressedData["
1:eJwtkD0OAWEQhr9vP6HejUpil4htcACNxBXUKgfgFE5iHcAJJAqJK2j8ZaOw
Ch2dZzJTPJl3vp2fd7a7WM2WkXOuCTWYBuf2xB2M0W9iDBl8IPHkUIcGnGne
8F7AA53Rs7U8RZfEtmh4GqnNrKAVdJfMiNEdy8XDBF0x8wVf+EEZ6WzZsUbn
1PSD1kjtwKtX2ZF77ZHeITUj6Hn9Jp7m6BMxmJ+jeYrt7QB3uDm9ObGb5fYL
b1e7sbD/Jd7/W90m/A==
         "]]}]}, 
     {RGBColor[0.3677284499999998, 0.9536101124999999, 0.41922181749999976`], 
      EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{397, 42, 391}, {259, 12, 252}, {700, 154, 648}, {245, 32,
          249}, {249, 32, 309}, {688, 151, 685}, {252, 12, 222}, {685, 151, 
         691}, {648, 154, 702}, {309, 32, 312}, {391, 42, 343}, {767, 182, 
         775}, {357, 45, 354}, {775, 182, 814}, {354, 45, 353}, {356, 45, 
         357}}], PolygonBox[CompressedData["
1:eJwtz70OwVAYxvHTVsKKRbSDqtTgY8bGBZCYWcTMVXBN3ABhZCMMlAkJJib/
1znDLz15+z7tc/zBuDuylVIZxNBwlKojCxcPZnc88UKLWdPsyO6d8A0ffG2d
kWwSKcyZzfDC29YzeXfgfETaYoY4EvDgIgff0hnJ5skEuHK+YIIp1nRaYYEl
apLlWcGQ856dHc6IUOQboaM7S/elycod5a7SSbptsJUcs5PSHaVrZL4lHaRL
kVmIAAVULf3vfwfOZZTMjux20DZ39ExGsj308QP52jBk
         "]], 
        PolygonBox[{{353, 45, 302, 299, 300}, {242, 241, 301, 32, 245}, {723, 
         722, 729, 151, 688}, {762, 761, 813, 182, 767}, {691, 151, 729, 730, 
         731}, {343, 42, 342, 334, 335}, {264, 263, 224, 12, 259}, {702, 154, 
         746, 696, 697}}]}]}, 
     {RGBColor[0.24476934999999994`, 0.9627453374999999, 0.1686900524999999], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtksErRFEYxd99WE0TzWaSlVIWJlEUSjQW9pZqFFnIMGQ5Oxb+BLGwn5dk
apKdLVGE1BRLWUpT7JTf6Z7F6Xdu77vfPfe7b3BtZ6mWJkkyhrrQGYsj2ICb
IUlG8duwyvoAvwcbrBfwGZxD/fhp+MG3Y/wb3HL9Bux1jWpvYDe6cy/VqHaS
w5v4IixRV8KvwlM0ga+HmEnZMnjLuow/hyuuX4YVNIIfgq/UZfgeeu66zz5s
us9LGrMqcwvewwL6Ro/eqx5FZ+uDT96rOa17PlPwz/Xat+h7aWaZZ9UKUfJt
2PFZXyhP3ys4Di+c5xL+whx6R7M+S29S911qIc5XZ83DGfZf48uw4MwD8MGz
0swOqTvBf6Zxv/poNsOeoWbfds7nEN9Vb5eDP87c8T+hPNUQz1YG3fsfsA9F
mg==
         "]], PolygonBox[CompressedData["
1:eJwt0TEvQ2EUxvH37a2UiAVLUx1aTSohJgwWiX4A0qVikVQY+Qym1kBiY7AZ
GCQWEUKNBmHwASyabroQiZLwf3LO8Mt98p5zzz333kJ9u7qVCiEUkUYphjDJ
dQpl8nQSwhX5DBnyDc3X+MAnLnFI7QhrfqbaOL0l3JNbfo/u3UXTz1SboKeM
d3LXKffwg07KZusZbfIdbn2GZr2wY4XaIp7JA+hHgjReOR9EFr948vccxqNq
0Wrq+ULXa+p5QF9i765vMEQ+ifYsPfM02o7a9U8fkfo+Z3tooIlRjPhO2u3c
75/BMXknWtaZZq+ghiUso835W7AZmrUa7d/oHx14j3rHkMcCO7SoXWCW3OP6
rUxtDrnEauqZJ29ytoE61n2GZhVQ9Hdo+E7a7R9prUFi
         "]], 
        PolygonBox[{{240, 18, 245, 249, 250}, {735, 734, 723, 150, 721}, {681,
          150, 688, 685, 686}, {784, 176, 786, 734, 735}, {686, 685, 691, 152,
          687}, {355, 354, 353, 44, 350}, {260, 259, 252, 25, 271}, {363, 46, 
         356, 357, 358}, {768, 767, 775, 169, 765}, {310, 309, 312, 46, 
         317}}]}]}, 
     {RGBColor[0.3024845000000001, 0.97209225, 0.1769447000000001], EdgeForm[
      None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJw1krtKA1EURe/cNJaC/kC+IIWPiJrC3iofIPhAC8UUKiqIQQLiBHUEI6Ip
JIniozAgiIWfYCHphfyCYGfl2pxjcVj7zsx57HMnv1Apr8cQwgiRI36JIeKb
mElCKMA1OEdMohfhLlFCt2Hmz8/hvT+/g69EEf0CyzSooStwi/MYuua1p4Pl
LHOegqtwlEG66ALskdNG9+EGcYTehJ8+Z89D+sf7qW8KV/juBJ3BEuc8ehze
cM7Ql/Cd8wT6LbEc5R7ChvuSvw++u0A/wSpR12xw33XV/anmmeZzj/I66++0
gz2fXz767msQj3X0MXoePnjurfYcrV4TbhMpegc2fVdXcMk9ymsnsX224LX3
+u+p+VOvq/oHcCBnM3xF24Xmb8Cu+3qOdge6i2HY8Xla0XaqvqfR/gPdoe4/
+J6LieWrzmM0D8pVjT/SgEwY
         "]], PolygonBox[CompressedData["
1:eJwt00tLVlEUxvF9zqui5SUwcaTgJwiDvJX4OtKhOuoysDRC8/JqCGZBkyYa
3godVGRYBF5IB2qBETZMLK2kKNCvUAOzQCv6P6w1+HEW+6y9176WtKSauuMQ
QhJpeBaFUM33DJ4Sd0UWn8BV4vs4TVyFCeIhOo8QD+M1cS2SqEM9Fsh5jkeY
wjY+YRNbmCNnkr6DeEA8R9sslrCMdbz1MRa8z6a36d/xRAiL9H2CTOIZxhgK
Nua85kJODSpRhWMJy1WfQuJLsc1da7gc2xq11hJUqxbf99jAO2TTdhS/iH8H
G7PS2/SvLLK++ThABjXSkYNc7Pk/5QRyC7QGZOFIZGNq7B3s+homfX0fiV+S
U0FcjhXidKQhT2vDtJ+Xzuihj5nlOcr9hq9+BjqLXJ9bKU4mbM+XPEe5r6i5
ip/YxwusoBkX0YVOtKEdKdym9jgGvK3N74TuxnU/nzu4RfwGa15DtT5gC5/x
xSnWHmovk6jBKZThH//+eh/1TTHnbvSgFxE5IWE5yv2Dw9ja9G8ntr3VHm8Q
/8B3z1FuX2x3U3PuJ77JmDe8hmpdo20s2Jo7iM/RdhYNaMQFnMdd3EOn3y+9
sQHPUW4RinX3Y9sb1dNdnvK3o5qqPRjZ2esOjOq8Y9trzeExcbnfP9Wo9TuR
529Ab6HD36/uiN52a2RvWW1XiP8DAf98Cg==
         "]], 
        PolygonBox[{{822, 821, 791, 175, 820}, {584, 583, 619, 131, 588}, {
         390, 55, 392, 344, 345}, {654, 141, 649, 703, 704}, {559, 138, 687, 
         693, 694}, {279, 14, 228, 276, 277}, {660, 143, 626, 620, 621}, {757,
          756, 804, 180, 744}, {744, 180, 808, 750, 751}, {286, 285, 290, 14, 
         279}, {403, 58, 350, 346, 347}, {204, 203, 240, 19, 207}, {387, 53, 
         424, 425, 426}, {369, 368, 385, 53, 372}}]}]}, 
     {RGBColor[0.44451430000000014`, 0.98153795, 0.30596634000000017`], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNlM1vjUEUxt+Z22txo2LV+tqwKF3VQjQiaREEl6AiUm1FLAgaQpq6RYSE
dlGRKCuC3PiI1F58REKxkPpYdkPCXyBs7obG78l5FhYnv2fOO2fmnDMz79JD
J3tO5KIoBrAS9ikVxTY4DauwF9uOvWTSbfg6h2+//U8Zj8OOHN805xr8QfxG
9DdYzjG/CT63X9/74FGsH7vAt/OwBg9gNXTVHMVGsEHsuLXW2+Ec+qzlq/m7
5v1KsfZv+M65vYFbGK9En4Y9WLvi4RWsGz2eYr1ur//C4xm4EFuE3gTXY8vQ
nXAVzXuFXg0nGK9RXvBqjvyH4RHGbegNKWpRnmexj1gZ+yyfcxuE81hrEj0H
vmW8FT0F31vLt899G4CXfRZjcCd2Dr0LJuIfo/+gVxDTiv6L7XbtvfAW326i
J2F2Xc2ww/MVN9+1l1PEy/8Tu+7eqscTrld1N7FvHZ3hPcZ30HVYYfwE3VKK
b5oz47ix//oy4nHZ+1bgXteruivOYYH7rv6vg99zrK99DronuqdTrvFBjrPR
Gd1I0WPNv6uzcKzWaHYf1sJGjh5+gJuxYfQeeMZ9HoLTOWr5Cr/4THW2Dec4
N8V90r3qKmLfZ967k5hL2ku99PnWYZf3aoNLctyb9hxnprMbTXG/dc9L+C/a
r3vdkuMdtMJZ56+7sNjraL0h5i1Hn4KHnYNyOea3pPjCb342hb/f77bq96Fa
7vu/8TDF+1GNj1LEKLYB/wEseXr6
         "]], PolygonBox[CompressedData["
1:eJwtlE1sjFEUhr97p0RFpBEzbUgqLCoiUakdCdqEtGj8JBZUJBoWqgzqrzor
vwkLwkxQVAZFpgkrNFhJRLRE/USjiX27KlG6E8+bcxZP5p1773fuved9v29+
a3bLgZgkyWYog3L+tPC7HaagZ4QkqULXwHL0esZOoNtgCboh2JzW1KF/8Dvd
/09CE2saYQM0QxVrKiENmWA19fxCWI1uh6XoBVCPvs4z1yAPBZgVbe99kIm2
p/aqhFr0oWC1VDOLfqgzo1fC3WB7aH4OVKB7qdGD7oP36Bo4ht4L1dKsOQqn
4QxMMP4bEnSAIfgI72AAijxzO7Ga99Br4CS6Czaih3z+EfxDH4k2pzUd6M/8
fvI9JvwMOkuLezPgez2GJ9DK2C7YDXvgsPdP9z2FHvfeyJMRH9PcKjiLXuz1
dee16AfB5prhRTCP27wfWtsA9e6pvJ3Hmmr3VN7mGDvP2jx06/7Beq2er0MP
M1b0+dfor4x98R6ql0Vo0lr1D12KtlbPDKK7GbsBeSho32hZaIe56LJo2d0m
j9Ap2OF5VXa+ud/yQF5kUuZ9PyxLWUbUH/WwU71krBZmQxrqUra2BDPRvcHO
qowpa2PUHIVx+Kn8wLnE3pmd6E3udw626jyeT9X44J7K2x6443fUXS/BZc+g
sliCPlgR7F3ReRvRB6mZhU7lDu57/+TJVfRwMG+VpzF0PzyHp/BM2YqWTfXn
LXrQ7ydP3gSroVq605VoZ9RZu+Q9LIrmhfKs7Ke9d9OgHC4ydsEzq+x2+Puh
mjk/s85+E27pWxOtV+rZcfRkMG/VM/VuBL57hpSlV/DS76S7FfzbsR/0oZua
Mu+UAWVBPVAvlJFf6L+M/XEP5eV/HX+YTA==
         "]], PolygonBox[CompressedData["
1:eJwt0M0rZmEYB+DzvijsKRKNBc3KLJQkimxGY4G1jYxppngtsCEfJYUaZOGb
JCVWxNQ0TdPYWPrYEX8DG2wsXE/vs7j63d33OfdznvOhJ9M5kE6SpIw8rmJe
cs0ND6kkaZWn8pY72vmo1yHLqaDLohG9TplhkJR+Qh2VyrTc1N9gj229fXmk
f5jKnhHOOg5n6H9JZ/eFvU1ykQV+hh16S/J/rP/IZ16YZIIa5s2mZTdj6vE4
C8/8YErvW9wb9hfkJEk+9+pds1x1I3/VtbKGT3w1701n3w07+mT4mf18j72w
/5e7nHES7/ZbtlGtHpLDjFBMEYWUmpXIOWaZif97UjbE3eGMZlrCd+svsEy9
2T95ob+l3pErrIb764+SoSrcO5X91+G7TuJZ4cxzPuttyDXWefL+I28cmL3K
dwhGRMQ=
         "]]}]}, 
     {RGBColor[0.5865441000000002, 0.99098365, 0.43498798000000016`], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtk8tLVVEUxvc5PlCcRJYaN5SbEGQQmaAjoYnXQDPIwChsIPRAUMEoR+Kz
SYOoLio4FKlBEgQiKYbVPIjAhPwDVBxYICrWoN/H/gaL37cf63HWXifbM3Cz
Pw0hdGEFWIbFPVgJZ5IQrqIXYJb1Q3QNnGJ9DT0LL+O0im4uiGvtf4XnuNeH
roV3sGH0XfgSe4Huhc+4V48eh++wRvQkPMHZILocrriGN3AJa0F/hDucvUUf
wEJyv0eXwjOcZdAVcEI50GNw2b6K8Zp1Hp2H97FRdA/c5awTXZbGWIp5Gr5y
zap90b4f4A9YjH3Hrrhm1T7mvE/g3yT2818SfeQ7l8Y8uRBrGncfBnXXvk/h
Saxb7wITzk6h90PMMxJi3dPuj97qt3ui3hxaay+1r2KsYa36FvjZ7/Upib1W
3Aa4CUuwdX2n30Xv89xaexWuTTUes76NPoI17v91eMMz0JJGk74AL2FD6DZY
5z6Xw23nVf5R51LOi74vv1vu1WNYzfoR+jxswH9Z7w6z2Aq6CVa5HtV11vs6
L7WvYrQ7pmLn/UbzMOe8yv+Hsw71FhbZVzGC/4tC+Et72B7W75mZ0nx5/rvh
pLX2en1Hdx94DjWPO861kcQ5Vv36jlr3sC6NM6oZKk6jSW8lcc40byXs/fS7
HCbxbaT34UaI83Dk/1n1V8FvviO/A8/PF/gfEm1ylg==
         "]], PolygonBox[CompressedData["
1:eJwt0z1I1VEYx/HzP9ciC5vKHFwchHJRlChQSq74evFmWplEDTbYlBqk4Pug
OLS0CAZGLTpFOZroYLfSfAF744aiaAhJ0VBESxR9f5xn+PB/7rnnOef5P+f8
81rbG29751w5MnArcq4NcVRgBxcYv47fxL94HsNBvENOzLnnPGeRS3yKOSfx
l9//ME9cw7Ma34nvRyHW2FgU1tTaN/CHOINi2lQHDhDXoRb1SKKMOaVaE7Uo
QTEKUYTP2MUWthGjJo80uZ+wwFjShXdaJH6NV0jhJVaxYmP676e9v3J+EH/l
mYlD2Ee+D7Wq5jzitK2vfs4Sf0ETcSX2lI8qF8a+ESdQhy5040kUcrWGan1v
vVbP0+hkjw70oNeHdy60nqv3H/EB63hrPVAvNrBpNmyO5h6nN09Zdw5FxP2M
9dkd0F24xB5Ntqf2TqCbuSM6M+IlLGIcD3DXh/80p4X4LM6gVGeHCsTtTHW2
R9kjy85UZxvz4T6o5+p9meXGLTdpd+EczuMiGnAZV1CCO+QO4TTxQ0xgElO4
iUEX5hQTt/owV2P3bA2t1YyreEwNj6wn6k2v9X7C1r6GfnIHkMI0c55ZjnJ3
+X8Hh+ntEZzw4a7rHbP1brHQe51BAfEyY2+sp0t2Z3V3XyCFKtastDuTsG80
bt+AvoWZKNw13bE54jVyVq0G1TLqQ62qedh6MmlzNPc/PqV+wA==
         "]], PolygonBox[CompressedData["
1:eJwt0c0rRFEYx/Fz71BeYkMajSkUxc7Cywobg6JhrjIUCwtsUNRYTTPFrAyF
TGw1scPCZnYMRgbFf4CsbGzUSBm+T/MsPv3Oec65p3Oe2zCzFFi0jTH1KMYE
k1XSRzoYwybiCCHG2hoZsYzpYBwlA3BwQ/0alzhmLSNz6ldIY4DaBXkLP+Ms
eYoztLM3Sm2W7EQXvqgHqT2S93hAHBs4Qi9rCbKHvd1oxjy1JvIQu4x39O7y
BjfmqBkyz3d/yDP9xSdK8YFBuSuW0cZ8iKxyGXPCuIi04UKCc7aobeu75f2O
9mMYHtb65f3U00jqnc6lx9RDWNc+Sj8z2rcceYesrXdETnvxYxXOlLNryT74
8Iwnq9BT6e0L+S7rjFPkK97QypkL1PzkCEZxgH3s6XvkXV7UoUX3N5JBjGMK
YWqTZDl9KEMNUtTcZAn1acYePUPO+mZeLa3nDhWoxIr2N6b/VP7tP7M9TqI=

         "]]}]}, 
     {RGBColor[0.7252449500000001, 0.9992278875, 0.5535720499999999], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtk88rpWEUx9/nvRspLKSGskByE2VmPZGmRoaEK782NFOzJEmUhQXLmY2F
UhY36zs1i/kDCPfqZqMoS2sU8iOZBZ9vz3dx+nzP8+O855znvE3f50fn0iRJ
vmAZbCAkSRZ+hSNszKHb4SB+C7of9uAvoYdgJzaP7oIfsQV0DZzl3Cf0Cgz4
M+gU3uGPo2/gKTaMPg/R1/otvPS69ht9twJuYTvobVhkbwJ9AtucZxa+4v9E
v8Hf+JvoXdjsOIq3gG2gx9JYp+rtCzE/nanUt5z/L1ifxph1sMm1t6bxG1r/
gG7wGZ2dcvwl+N+1PIf4Pa1rf9p9m0xjDarlMcQ8lE8O/sV60SVYzbkxdBUc
d716nxnnqX6v+e6y1vwWP+ABlkdfwGP3sJzG2nR3McSeal37OcdRvGfnrzf5
5ziKt+7eqscl57kPn1zLQ4izopn5DBusu0OcG/XwG6zGr0O/+L7iFELsr85o
1jIM5h90Lexw3zR3ZedcVF6+q54VnFseXofYtyt45POao6K11lb9LpqLPc/h
Ibx3vWdp7GnW/8c79q1dng==
         "]], PolygonBox[CompressedData["
1:eJwt0c0uA1EYxvEzM6KLNj5SEoSFSISyqLQajbFqr8CiJKys2LRXwJ0QK1Yu
gU0bOzYkmhCiSEtDiKUE/yfnXfySM2feeb9mcqu2Wg2dc9PowQoPMUooI48c
FlHADzHDmMJY4NwZTvGOD2wSs4E67xvY4W4bJZQRB/5b5ejjnEcOWSzgAfe4
xR0aqBC7hnPOT2hZjGIL1tsSilhHjdgqKpz3iNm1HtRL0WI1o2ZNoBdt3nXw
gmeroVoZzOKXfH84JvYIF7gM/Uwlm0GzDHI3gDSGTNp2qF0qh3K9oYsD7vYt
p3I3ccj9CaLIuVGMYBwTka+p2o9ooT/ysfrmK/Q7zFrP6r1rtTp4dX7Gts2o
Wa+5u8INmvgO/K6180/OKfInrQf1kqJG0naWsB7Ui2IUG2MZGcxhJvT/Qv9k
nvM/MoVJYQ==
         "]], PolygonBox[CompressedData["
1:eJwt0csrRGEYx/H3zKTk0pDUJLdjlIyNZjOahRIrWUiDQk1ZWM4kTSmNcvkL
LLBAJ+uxIFvyRxiXxlpkYUONW/n+Os/i0+85z3nf5z0Xf7kwk48457pRh66o
c53wccZ1jBxCEm3WG4yGVGtdGiN45LodVVRwh1HPuQQ5RWYxi34OTCCJPPcG
yAuc4xR79MrkA3mPms3V/Fe82Bnq/ShZu0J+M7uGL0zQG8ckitzLkA3IUffZ
+XqOZ9ZOaw75iz8008/Se6NupG7CEfUYvYAsYdPO0XkfmOfep+3XnHo7yyMP
uT5A2WZoVsaeyyd70GtUx+19OshhFKgXyEUsYZ39KXr7Nlfzn1BFxd5H71Vi
7S71BnmMk0j4/fUf1mxGjgzsm++QW9jGLQJ6l/Zf9H9iWKWXIlvQinf2z9G7
Ia9w7YX7Nado5+s5/gEqykjx
         "]]}]}, 
     {RGBColor[0.8105141030254348, 0.9781730644566667, 0.42887175951641], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtkk0rhGEUht+PhdJosqBMTVGEWJAxIaz8AVOzUz5iYYNiYTMW/oGdhbCz
mZWtmpW11SRKWchkmvKRLCRx3T334sx1n+c95zxnznn61rZLW0kURZNYivXw
U4UZWI6jqB89D2cI2kMvwBvsCH0Bl7Ad9FgSfJ2fwkPr8yT40hXY6zqq14Td
WAt74I5F+Ain+baLLsJn/BL6BV7in6Hr8B62YXdYgW8D6g3e+lzf4yTU/OX8
FSujazDD+Sq6A/64h6bjFN+A39gGuouYJ/egXjrx19FZeII/gT6OQx+6t46N
ux/11XL9P+w9Drmfmiv5K+h2eB2FGWqWw8z9Cj2Shrqqvw9znpvmd+Bz3Z/1
vvJpyFHubBr2pPg5mItDD/qvH0mIV17eudp50TMvwE3X1z01z+0NDrpn9T7l
u9Rvw3PTDqvekXY16jkPwS/PU3Ot+D3ojSz7jemt/QOFk0t6
         "]], PolygonBox[CompressedData["
1:eJwtkcFKQlEQhs+cgkCsEEow2gheDFHoUhsXuuoFElp7vXYXbiqwRa/RE+QD
9Cyu2gu6cRFYSGv9ppnFz/3mnJk5/8yt58+DpxhCuESHqEOQ8x2hNvyFPuBP
9Aufokd4jFL4TkJI4Bs0ga+i1WaoCR97rD1P4D45DbiKLuBzzgp4imrRpPyq
9/C32Fv65g986/dacwbvvJf2bHH/JuZFPWXw0v2/ozm85mzg/o6Iywc2m+Zo
7ixa7v/McIyWf48k2hsN75/CWzFv6udPrGfm+yvDC7Fa7bES85S436HYDIXP
V4E3nD34fnX2kvfTevVyjV58n/qvetF2pTvpwnvC3yub
         "]]}]}}, {{}, 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{212, 216, 217, 214}], 
        LineBox[{526, 525, 524, 519, 488, 485, 483, 479, 476, 486, 509, 513, 
         514, 522, 548, 551, 552, 556, 557, 560, 604, 196}], 
        LineBox[{561, 527, 529, 532, 564, 566, 569, 573, 580, 570, 544, 538, 
         537, 533, 505, 501, 499, 496, 492, 495, 446, 494}], 
        LineBox[{828, 811, 809, 824}], 
        LineBox[{251, 233, 235, 255, 298, 305, 308, 324, 361, 382, 412, 408, 
         376, 352, 351, 341, 318, 282, 251}], 
        LineBox[{670, 637, 642, 672, 684, 690, 724, 753, 783, 797, 793, 780, 
         738, 718, 679, 670}]},
       "65000"],
      Annotation[#, 65000, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{195, 603, 602, 600, 598, 593, 554, 547, 546, 541, 520, 508, 
         507, 502, 480, 465, 469, 475, 478, 482, 484, 487, 518, 523, 491, 
         490}], LineBox[{213, 219, 232, 234, 254, 297, 304, 307, 323, 360, 
         381, 416, 432, 455, 449, 428, 407, 406, 396, 371, 340, 332, 329, 316,
          270, 248, 215, 211}], 
        LineBox[{493, 445, 448, 452, 454, 460, 500, 504, 506, 511, 536, 543, 
         545, 549, 575, 590, 586, 579, 572, 568, 565, 563, 531, 528, 562, 
         611}], LineBox[{823, 801, 796, 792, 779, 737, 717, 678, 669, 635, 
         625, 596, 601, 629, 641, 643, 653, 674, 689, 692, 707, 728, 771, 787,
          810, 827}], LineBox[{331, 326, 327, 339, 383, 375, 331}], 
        LineBox[{662, 665, 712, 714, 710, 709, 662}]},
       "62500"],
      Annotation[#, 62500, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{208, 210, 244, 257, 258, 269, 315, 328, 370, 386, 389, 395, 
         422, 442, 471, 489, 497, 498, 515, 530, 534, 535, 539, 540, 553, 581,
          591, 592, 597, 599, 605, 640, 644, 647}], 
        LineBox[{218, 239, 253, 296, 303, 306, 322, 359, 380, 415, 431, 458, 
         464, 468, 474, 477, 481, 441, 438, 440, 444}], 
        LineBox[{447, 400, 405, 410, 450, 451, 453, 459, 461, 470, 503, 510, 
         512, 516, 517, 521, 542, 550, 574, 589, 585, 578, 571, 567, 614, 613,
          610, 651}], 
        LineBox[{819, 790, 778, 736, 716, 677, 668, 634, 624, 595, 582, 555, 
         558, 587, 606, 630, 652, 658, 659, 676, 706, 727, 770, 772, 777, 789,
          816, 829}], 
        LineBox[{281, 278, 280, 287, 333, 338, 384, 394, 433, 427, 388, 374, 
         330, 325, 281}], 
        LineBox[{656, 618, 622, 661, 664, 711, 713, 759, 752, 745, 758, 705, 
         708, 657, 656}]},
       "60000"],
      Annotation[#, 60000, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{206, 204, 207, 209, 243, 256, 311, 321, 364, 377, 418, 423, 
         421, 419, 417, 411, 409, 404, 399, 403, 347, 402}], 
        LineBox[{832, 822, 820, 815, 788, 776, 732, 715, 682, 666, 636, 627, 
         628, 631, 632, 638, 639, 559, 694, 608}], 
        LineBox[{221, 247, 268, 314, 320, 272, 261, 266, 277, 279, 286, 337, 
         345, 390, 393, 434, 437, 439, 443}], 
        LineBox[{650, 609, 612, 615, 655, 654, 704, 699, 757, 744, 751, 764, 
         769, 766, 720, 726, 774, 782, 818}], 
        LineBox[{367, 379, 414, 430, 457, 463, 467, 473, 436, 426, 387, 373, 
         372, 369, 367}], 
        LineBox[{577, 617, 621, 660, 663, 671, 673, 675, 667, 633, 623, 594, 
         588, 584, 577}]},
       "57500"],
      Annotation[#, 57500, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{220, 246, 267, 313, 319, 271, 260, 265, 276, 228}], 
        LineBox[{398, 392, 344, 336, 285, 290}], 
        LineBox[{401, 346, 350, 355, 358, 363, 365, 362, 317, 310, 250, 240, 
         203, 205}], 
        LineBox[{607, 693, 687, 686, 681, 680, 683, 721, 735, 784, 791, 821, 
         831}], LineBox[{701, 649, 703, 698, 756, 804}], 
        LineBox[{808, 750, 763, 768, 765, 719, 725, 773, 781, 817}], 
        LineBox[{378, 366, 368, 385, 420, 424, 425, 435, 472, 466, 462, 456, 
         429, 413, 378}], LineBox[{576, 616, 620, 626, 619, 583, 576}]},
       "55000"],
      Annotation[#, 55000, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{202, 199, 238, 242, 245, 249, 309, 312, 356, 357, 354, 353, 
         300, 295, 292, 349}], LineBox[{222, 252, 259, 264, 275, 227}], 
        LineBox[{814, 775, 767, 762, 749, 807}], 
        LineBox[{834, 826, 795, 786, 734, 723, 688, 685, 691, 731, 740, 742, 
         646}], LineBox[{289, 284, 335, 343, 391, 397}], 
        LineBox[{700, 648, 702, 697, 755, 803}]},
       "52500"],
      Annotation[#, 52500, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{288, 283, 334, 342}], 
        LineBox[{348, 291, 294, 299, 302, 301, 241, 237, 198, 201}], 
        LineBox[{645, 741, 739, 730, 729, 722, 733, 785, 794, 825, 833}], 
        LineBox[{746, 696, 754, 802}], LineBox[{224, 263, 274, 226}], 
        LineBox[{806, 748, 761, 813}]},
       "50000"],
      Annotation[#, 50000, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{200, 194, 236, 231, 229, 293}], 
        LineBox[{223, 262, 273, 225}], 
        LineBox[{695, 799, 798, 800, 830, 835}], 
        LineBox[{812, 760, 747, 805}]},
       "47500"],
      Annotation[#, 47500, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[{230, 197}], 
        LineBox[{836, 743}]},
       "45000"],
      Annotation[#, 45000, "Tooltip"]& ], {}, {}}}],
  AspectRatio->1,
  BaseStyle->{FontSize -> 20, FontColor -> GrayLevel[0]},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{
     FormBox["\"\[Beta]\"", TraditionalForm], None}, {
     FormBox["\"\[Alpha]\"", TraditionalForm], None}},
  FrameStyle->GrayLevel[0],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotLabel->FormBox[
    TagBox[
     RowBox[{"\"r\"", "=", "0"}], HoldForm], TraditionalForm],
  PlotRange->{{-1.5707963267948966`, 
   1.5707963267948966`}, {-1.5707963267948966`, 1.5707963267948966`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7657976610216312`*^9, 3.7657976919623394`*^9, 
  3.7658693672421083`*^9, 3.765870356911081*^9, 3.765870479067256*^9, 
  3.7658705854324255`*^9, 3.7658710626398916`*^9, 3.76587120643617*^9, 
  3.7658713078830366`*^9, 3.7658715924929705`*^9, 3.765872557092097*^9, 
  3.7658728066103487`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Legended", "[", 
  RowBox[{"p1", ",", " ", 
   RowBox[{"BarLegend", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<BrightBands\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "100000"}], "}"}]}], "}"}], ",", "20", ",", 
     RowBox[{"LegendMarkerSize", "\[Rule]", "250"}], ",", " ", 
     RowBox[{
     "LegendLabel", " ", "\[Rule]", " ", 
      "\"\<\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(free\)]\)\>\""}], ",", 
     " ", 
     RowBox[{"LabelStyle", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"FontSize", " ", "\[Rule]", " ", "20"}], "}"}]}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7658713739465094`*^9, 3.765871379289009*^9}, 
   3.76587153344317*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1: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
3Ezq/wDsIgXd
     "], {{{
        EdgeForm[], 
        RGBColor[0.5139898335966383, 0.8736755163363786, 1.], 
        GraphicsGroupBox[{
          
          PolygonBox[{{573, 1, 194}, {195, 1, 573}, {747, 192, 572}, {571, 
           192, 747}}]}]}, {
        EdgeForm[], 
        RGBColor[0.6136466499999997, 0.9353396625, 0.9202853474999995], 
        GraphicsGroupBox[{
          
          PolygonBox[{{728, 177, 532}, {531, 177, 728}, {533, 178, 729}, {255,
            15, 591}, {254, 16, 592}, {233, 13, 235}, {592, 16, 197}, {730, 
           180, 540}, {550, 180, 534}, {235, 13, 590}, {534, 180, 730}, {574, 
           2, 196}, {590, 13, 242}, {746, 191, 570}}], 
          
          PolygonBox[{{573, 16, 15, 195}, {591, 15, 16, 254}, {197, 16, 2, 
           574}, {572, 191, 177, 747}, {194, 2, 16, 573}, {532, 177, 191, 
           746}, {729, 178, 177, 531}, {747, 177, 178, 571}}]}]}, {
        EdgeForm[], 
        RGBColor[0.49068754999999975`, 0.9444748875, 0.6697535824999996], 
        GraphicsGroupBox[{
          
          PolygonBox[{{500, 163, 713}, {254, 30, 591}, {531, 163, 729}, {288, 
           31, 609}, {574, 17, 197}, {286, 29, 606}, {284, 30, 608}, {746, 
           176, 532}, {502, 164, 714}, {249, 28, 280}, {575, 3, 198}, {744, 
           190, 568}, {499, 162, 711}, {505, 165, 510}, {593, 17, 200}, {609, 
           31, 257}}], 
          
          PolygonBox[{{606, 29, 30, 284}, {592, 31, 30, 254}, {608, 30, 31, 
           288}, {591, 30, 29, 255}, {200, 17, 3, 575}, {196, 3, 17, 574}, {
           532, 176, 162, 728}, {551, 550, 534, 535}, {713, 163, 162, 499}, {
           729, 163, 164, 533}, {257, 31, 17, 593}, {728, 162, 163, 531}, {
           529, 176, 190, 744}, {234, 233, 235, 236}, {714, 164, 163, 500}, {
           570, 190, 176, 746}, {197, 17, 31, 592}}], 
          
          PolygonBox[{{246, 28, 590, 242, 243}, {544, 165, 730, 540, 541}, {
           236, 235, 590, 28, 249}, {535, 534, 730, 165, 505}}]}]}, {
        EdgeForm[], 
        RGBColor[
        0.3677284499999998, 0.9536101124999999, 0.41922181749999976`], 
        GraphicsGroupBox[{
          
          PolygonBox[{{628, 45, 291}, {258, 32, 256}, {716, 153, 481}, {479, 
           150, 476}, {593, 32, 257}, {228, 12, 586}, {547, 181, 731}, {227, 
           12, 228}, {476, 150, 700}, {481, 153, 484}, {700, 150, 478}, {320, 
           45, 628}, {499, 150, 713}, {611, 32, 258}, {602, 42, 281}, {281, 
           42, 314}, {289, 45, 320}, {288, 45, 608}, {290, 32, 611}, {552, 
           181, 547}}], 
          
          PolygonBox[{{503, 502, 714, 715}, {607, 606, 284, 285}, {536, 535, 
           505, 506}, {247, 246, 243, 244}, {237, 236, 249, 250}, {530, 529, 
           744, 745}, {745, 744, 568, 569}, {287, 286, 606, 607}, {576, 575, 
           198, 199}, {715, 714, 500, 501}, {201, 200, 575, 576}, {545, 544, 
           541, 542}}], 
          
          PolygonBox[{{586, 12, 234, 236, 237}, {285, 284, 608, 45, 289}, {
           506, 505, 510, 153, 716}, {501, 500, 713, 150, 479}, {731, 181, 
           551, 535, 536}, {291, 45, 288, 609, 610}, {250, 249, 280, 42, 
           602}, {256, 32, 593, 200, 201}, {610, 609, 257, 32, 290}, {478, 
           150, 499, 711, 712}}]}]}, {
        EdgeForm[], 
        RGBColor[
        0.24476934999999994`, 0.9627453374999999, 0.1686900524999999], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJwtkT1LQ0EURPetwdaQzsIiapdoY7AS0ScIKSSQIm0gCHYKCmJtYWMt/oA0
VlqIIIi9n5BOUFBSBX+AvWe4U1zm7Oy+fXfu1gcH3f2cUmpSU9Q5iy20U6TU
p0r4DG+uiDN9+Im6gL/xZqhZuIf3jNaohLeRg+X9sb5EX/GmqSs4oyc57m+z
v0K14AZa97/0zwFnluEF+AO+gavoG+tT+A4+9plFvHWqAR/i3fqMzl6bhzm+
Ed/j/bg39TjBf4RX0TX3cAR/FpH3IcdcNJ8ddJwiu2aQnWuEbufwtb+XI9cS
ZzbhCvzinC3vj/xtBR2bNaeyiFzK1/Zb6E26nu17ijvUT+k8yqWsQ2fUDHbd
s9523ndqrj33OXE2Zfxi/9dzrqH/IrQ6zA==
           "]], 
          PolygonBox[CompressedData["
1:eJwt0LFOAkEUheHZcTsbQ+VaSFAag1baoBaACTEaG0spTHRrTYwmPgGvII9A
Z0eltYX6BGg2ayDEAioNBhr/kzvFF87cZc/MbOni+vTKO+eKiDHEAEcMj/ES
5gXUWJexjj4+MI+cm+GN/I4t8g7/beBes/CuOuqsX/FA7mDKf89Zb5IrOgPr
Exw469gmt711aZayHvGbYBGHYU/tnfPsCzfeutS5H9kddJcx6wnWyCWsoogl
PDJ/xohc9ZY1+yanuISnayGyO+vuy0iwwizBLvaQhbPpjE2ef+odPKkXdXIN
t+Q7b2fW2QcYosXszFunumNyl64esrCn9tY317fXnXS3GeaBsjrUteHtXXXk
5D99d/zgF/9w80A0
           "]], 
          
          PolygonBox[{{292, 46, 290, 611, 612}, {627, 44, 289, 320, 321}, {
           629, 628, 291, 46, 322}, {584, 11, 227, 228, 229}, {702, 151, 479, 
           476, 477}, {735, 182, 552, 547, 548}, {259, 258, 256, 18, 594}, {
           701, 700, 478, 149, 474}}]}]}, {
        EdgeForm[], 
        RGBColor[0.3024845000000001, 0.97209225, 0.1769447000000001], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJwtkU0rBFAUhu+9k62UH6ARa+WjETOLYW1hppRYiZ0okhXFWCBZ+QN2VkMz
WBD5XkwmO0UpO9kqZel5O2fx9j7zzplz7pyTnVksLaQQQg/KoLsYwg5+TDgC
5+EV+BxV4EuyIhqGl8ma8D78jT+iPbhGnoNzsJrfw7vwCXwDb8PVZL3U8wx/
97lX5B9efw1PwEPwRrI61R+pT7JZDbLVZO/vhvvQADyGz5Fn4RZlnvfiL3g7
evbPyuep/UJVuA0vJqtponH/L+tkr17Tiv/K0R8q+Dv13rL/VnPyni+RrSWb
pbcMek/13iIvwKPR9qVc33fAdbgz2TzN7ceno9XrdxfoAH6LtgvtRHc4TXYX
3ecJPoR/ot1J+QNZyfeTiXYP3eUWnvK7V8gm/dab8Kf31+5nfeddZP/T10Tn

           "]], 
          PolygonBox[CompressedData["
1:eJwtk8tLVVEUh/fevoYKjbKRoANNc2iUQQ9IrwaFSSFXKEKpUSGS6SQowUeG
TvwHxMYaViJFpBE6ybhOjB7ivYrVQAqc2sDvx1qDj7N+e619znqdqjsPOu6n
EMJ5KIaDGMIMzznYxFGDbsSugl70MDRjn4NufE/RZ4OdZdFf0Ouwg70L32A6
2DtXdQ4FKIUy2IKfcBwqoRuysrl3AvLY21CtXKAIEuRgA57AmWA5dBH/GN2E
fRo60UPoQchgt0FfMp9imtB16FrPSbndhBvwG/8f+Ad/4RD+Qz13TsJdYu5B
nrNtuIzd4mfyNRBzCoqi9U497En2Dr0r67VeitZL+R+he9E9MIH93Guu9h6p
V1egPVlOyq2C2PJoOSv3DLTCHr5fsAOFYDGK7fd5qWfN6HWex3y+HfhKoNh7
rt7fJuYWjGCPyu/16M511YM+jDZzzX4gWT3ah4vR7uiualJtqkm1XcW+BvMw
B7OcvYA3MMXdSfgc7Uy+V9ivo+1Mqe+AduGH79cYvPMZaBYFr/2h76tqvhBt
ppptq/cqF+17w7CIrki2+9rXr75jOe+JejMP4/69Zd+pjPdIvVLP1ft2n5V2
QLugHdQuKkfd1Tu+c/4pWa3KYR+9oLljT8Aa+kMyW2d59Eq0+6r5rXbD/0/1
fMD/If1Lmolm8xL7mX/vI3opWq36nnr93utRzBa+IxdIf/c=
           "]], 
          
          PolygonBox[{{680, 131, 440, 430, 431}, {319, 318, 626, 58, 317}, {
           620, 53, 307, 299, 300}, {564, 174, 743, 566, 567}, {283, 282, 315,
            56, 625}, {336, 335, 333, 53, 637}, {204, 19, 577, 202, 203}, {
           436, 435, 460, 142, 692}, {483, 482, 485, 139, 703}}]}]}, {
        EdgeForm[], 
        RGBColor[0.44451430000000014`, 0.98153795, 0.30596634000000017`], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNk99rz1EYx885TMidC4srauTHhQtaLkyxaJhkN+a7Uora15CLsR+UEd+S
pLhAG4siy0KtRIoxSuRyhZuFluRC/gKvt+etXLx7v5/nc875nOf9PGfxviO7
DpeU0l4wA1wiaIbbckoTYBz9iFwbWIKuI/cC9KEfkBsDA+gxckfRy9GL0F1w
f4p1w8TH4EG4CveCHnDQ3xXf8jmjrHmZY+9DcnfQJ9C34Xf6P3gP9hC3wN3w
ZrAB3QyfLaGV6wXt6Bo8Sv4c+jm6U/tBxbwNbNd+1iyAP4Nv6BF4dokztnpd
xWtbwRa+zYWnXJtqHCpxV935Ron4b55ch2uuen+Hz5PX8nwHPCuHzzPhengZ
WApWp6irCewvETew5qK9vpDjLJ2t+vr9v74c9/1X62v2DsO/yL9CD6J/oEdy
+K8+qDe1FH61EC+Ev/sf+tc1ctPgGXotvLFEXz7YI/2n3XdttV/HS8SbOGMo
hbf37LU8n0N+PVinOuEDnjf5sdv5UyV8lJ9P4JXukXp13z5r1hp9tzXwSc/z
zhw+6l/1njPV+xaeTlGjav0CHqNXlPCgx/P5yXs1I1X3S2+l23N4pcScqe6r
9rDT/fjpmidK3Fv31H0bc7wXvZtVvl8Xegp9XbNaYl7Vh0m/Oc2PelDJMZOn
S6zT+q/qeY4enCF32T2suQ9NnqFDJeZqfo7aqv/NZcVzed7v5CbcwPq7mnP4
jc/9mCNWvg6e9Fz9Jv/U3o3nmDPl5+kd2auBEr3X7MmXP+sehX8=
           "]], 
          PolygonBox[CompressedData["
1:eJwtlEtI1FEUh++9GZG0qEUPdGVQEkVFK9vUIjUadZHUwhrBghmKhlyaFglq
2dNNLUrsYSg1QSqJBdXCqWYShcpNlJALW0SrHqsWM9T349zFx/zOvef+77nn
MVXH25tPB+dcPZTBLYwWfo/AZe9cBnszuhp2YVfDTvRGSLO3Enu9M59V6HbW
9MEa9G44iT4B29E74C76HL5n4QF2MxyE86x3wxLrG6Ac9mPXBbN1xwJ8w87y
+xi2om/CAXQCOvjOGHYnugumsSeC3aU732C/xb6DHoIf2L/4/QlFKMF4sLM6
85r9Ln0PEugGuAqn2EvKB90T7G7F0IK9iP0VKqASjrHWBv3oS9CKbsJ3L1zA
zmnPWcyKfR/2HnQj9AWLSbEldTZ+Q99K4ZeGTbEeOtPB+oqYn+ewFHOq3B7C
7zDcRmecvUFvWRYsFzqjs39ZG0Q/BI+92lvtVQPVZjHWRrZqc081Rp+BYW89
o97R2hVvNVF+1FOd6BxnpmEWPQef4QZ79yHP+ivslzAFzyDL2iMYVy1hW7C3
ZWMvNEFjsBqqlpUx90V8SzFHytU11q7DP29v0xu/Rx/5vmfvQ7AaJ2LNVLtP
cNFZjIp1Ep+n8A49AwXIe1vT3jz6o2JXnLAWvYWzFfDb2Zv0Nr1Jb6v11guq
oWZLZ3RWOVAuNCPqRdVsIOZsNt6pu5Vz5V4xPgmWI+VqBD0KX2J+1WMvsJd7
m13dl8Je4y02xbgO/cdbLXSmEGxmNbuaAc1Cr3IU5+2o5sPbLKin1dvqWfWu
fJLxP6Amzrhm/T+bfI4/
           "]], 
          PolygonBox[CompressedData["
1:eJwtkbFLQlEUxu97+raHJpFBTgklglNk4dASLYFGJGRELU0q1PsLBNvtHxAH
h0JodmxImgL1aUNbEQhabm1t9ju8M/z4zv3OvQe+c9evvJMb2xizCg7sWMZk
YQtSnK9pjlAf+npnHy8KEdiGJ7wpOuTNAH6ghfeCdwkXkMBL462gD5zvoUt9
i/eIurBJnUHL9CpgQQdvA/2ATyjRP5V31If0zqnfqMfg6P0F3h11A46pD/Cq
aJ1zjnpPZ8isI+3X7CC35J9BE+8LfcbvgS/5YKK9P/QXXZPskKdXgLjm3EVl
sR68as6uHexH9nQmWeBbZ8Tw5rq3kOaRXC608d5137L3MPeSeEU7+Bf5n2X9
ryUrmCvz/wHy0DdY
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.5865441000000002, 0.99098365, 0.43498798000000016`], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJw1kz1o01EUxf/vWUSh0kWnTC4tpQrq0LloP7I0QmuxCHFQUJd+qEPsZ7IE
2kqkJBarglWhderUpSK4iKCLVrBNccgidixxyxLo73Bvh8M57777f+/ce9//
/J2JofGYJEkanACdIUkuw+1wYGMD3UD/h1PgHPov8W30BXgXbKLPwD89v0nO
PLiNnoU7/Mxe+BI5H9EX4X3WZfQe/I/1J/QV+AY4i/4NvkbLUW4FPEK/Jlbz
u+RxE+TQ79i/nti9WfehnBT7j9ED6DL6YbB6K+iqeziEF8ED9Krqgk+BKvhB
vAR/h//Ap0EfOWOsh9GFYJBeIf4lWr6+G0N3o7uDecok5jEbTE/D75WHfhPN
qzyrviX3I1+qWbWvoF94H9SPhteo3l8DJ9G/wDfieXiL2GC02WmGbT6vVrjL
56h5XvWe74Bl91OCDzxf36lm1V4DOfZG4efRalONmWAz0CzW4B6vVXU+9fpf
kn/L+38T/gyKmjX8zO9VP7LuuQmK0c5Qz5r+Dutgxs/U2fIt/y3odTAnD9Hm
oblMErt7/D7gKfevOup+pvqUdt99wfzJZ4H4E88vwh/0vtFviY+g+9H5aP+G
zpH3BfR99Cv4XrT3r//gCKngaaY=
           "]], 
          PolygonBox[CompressedData["
1:eJwtlM1L1UEUhmeGkIxcaKJrl9GiWhi4i/zogmKgG1skpKBm1DU3kd+bSxYq
JQgFWbfAQFMoBNMyooggAiGTBHNZKvlH2PN6zuLh9545c8+cj5lb0ZZtuplC
CDVwBALGQQxhF/agBvsoy4WwBdPYnXy74An+x9hX0K0whv0BVmEJ3sIw/jp8
tdCE/Qsm0Tn4iJ7DPwuv0W/gK4zgG4fv6AW3e+EF+xqxz3m8ZnQpnIAWfJeT
rR364AH2Bt9SKIBq36O9xewrgUr0e3wLsIOehIvoDNzCPxXtbOXwHN/DZPFV
U9ZzVu4zrL+EbrgGp1k7A21wFUZZu5esZtV+W2di55R7sJ6ORouhWHPoV95D
9VI9Uq+KkuWqnP+in+KbhhV4BxseXz3eRK/DD8Vh73KyGlTLMMyy/ijZLHX+
3Wgz7fL88uhO6IBx9k2odvR5fGfhJPpZtL36zX30mvdaPb/A/j7WGoPdkf5o
Z+gs1XxH/WPPIHoIvmAXwfFoPVQvF5Plqpx1N8qhDLKs9yTrsXrdh+7XWrTZ
a0aaVSv2pWA5Z6LVoFq60dej3Unt1Z2qijYjzarDax+IdrcVox29zfe33gP6
GDRAvc9Ys67z/qjmHHHyyWpTjTN+54q9BtUy5vFvwITeW7TeKoZi5b2/mul8
sjept/kJ/Rn20f80Z/RP74F6Ue+5/UGv8NtlOKXao52lM4fQ36K9NfVXb013
RHdl1d/ySLK3oDfREu2Mdf+P0H+FelDoM9Ps/gM8qIRQ
           "]], 
          PolygonBox[CompressedData["
1:eJwt0L1KQ0EQhuHNwWgEq+gN2NhZBIJgb2EdLcTSQkGJCQHFxtJSCCoIQhRU
LPy5gFgIKlbWkiKWYqEgegc+w0nxMu98s7tn90yuNGqbWUqpjCIuCyld4FRY
17f5CIYxhAnZotkZdvnVYH3sO5TNy5b5Frbxh1+Mmd2Zvak3+muc85bsmP/g
gL9k+frYV8WMrC4bj2/jiT/ile+bfapTqPDVLL9n3PceXdzK9swe+AbW0ZYt
xLl8mnf5h1rCaJafGWc/8y/+jROsyTqyTvwf9PQlzMn66nvK3xxvP5It6Xd4
kzcwO3hPvOsfQpEvvA==
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.7252449500000001, 0.9992278875, 0.5535720499999999], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJwtkc0qhVEUhvfeBgYyOZGxlI4zIbkBSRlKfjoTijI83zmKDPwM/GSifEeS
oxyKgXIFBgZuwSe5AFKi3IHnba3B2/us9X17rbX36l/OZmophDCCOtBnDOES
fyZZgstwFb6C1+EW/ofa8C/eRBmc45toAd7A+/ysanRx/gEexnM0C9fJn6Aa
fIt/ed/A9zc4B4tosfIv+BPxPvwYbSbV74GP0Cp8gO+iJXg7Wl3Vb/PvO96r
OujD5+nGv72v7l14XvN2Eg/Ag/hEsrMFGiIexSej9dYMY9HmUx3Vu/M3uSZ3
DzfgG7jiZ8v4q9/xB99D8/C53iZZX/U/9HtdRNuH6uud5nwe3WmFeBrfUs1k
e9F+cp+hlWw+zVlPJrH2s+Z91T+Lthftp+H5ZrK5Nf8ZuR1/2+NoO9auT/k+
BY/Di/g/YGRGGg==
           "]], 
          PolygonBox[CompressedData["
1:eJwtkstKXEEQhk83LnTE7HwAEcQIkcQ3cCG6cCHiZaegEE3ijLgQBO+gooKX
4GXGTNCVCWRmEzdeQF9B0BnHhT6C+gp+P1WLj/N396mqrr+rYWSyNxOTJGmD
KpgISfID0pCBAof/4D/6DL7AZ5hlbw6yMEDcIKyw/8C3DBV4hBf2fvI9gTf0
MizBAXGH0Ilu9/otqs3e92g1VOsWVhLLUUYfwVf0NOTRQx7fA6PBaqhWEUrk
+cC6LlhO5W4OVqsRqtFzwWKHYQE94mvl7Ebfwx1cEHsZzZO096BexmEMtjnb
gfNgd9Odr4N5IC+e4Bk2+WcjWoxic5CFPdgP5qG8VI9rwXIqt95Eb1MLKe9J
vbVy9glqIAUd3p/u34XeCtZbBnbRv/x+yr8ur6KdTcIp67+s/0ABXYRV91t3
mgnmmbyrh37+a/K1an70mIL3lPOZ0ewop3Lve6959G8oeS7l6IvmkbxKea8l
nx/5eYOe9370Rt/Qr/7e+qeimdHsuCfyZi/a3TWjU+o/Wq/qeUc+RpsV5Sij
r3ze5NFxsH8yPh+L6HdShmD2
           "]], 
          
          PolygonBox[{{211, 21, 579, 209, 210}, {662, 661, 368, 84, 386}, {
           559, 172, 741, 562, 563}, {424, 423, 672, 111, 402}, {411, 117, 
           439, 682, 683}, {636, 635, 332, 65, 327}, {372, 371, 658, 86, 
           370}, {697, 696, 445, 132, 463}, {668, 667, 405, 113, 406}, {361, 
           80, 354, 649, 650}}]}]}, {
        EdgeForm[], 
        RGBColor[0.8105141030254348, 0.9781730644566667, 0.42887175951641], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJw1kbtKQ1EQRWeOhaJgaS8oSApF7kdYJ2CvUcEQicGkVAQRC5uIRXxiq2Aq
O/0JwQfY+AniL7g2Mxabvc4wrzt3trnb6BQzq6Ex9MzjDH93s21Uh0+JHcFN
eAhX6AVewgfE1+Br+BH14RuPGtW24B3UgAfEzuEu/IAfoy34gvgbPq65Frnr
Fn1X0SbaQJ3so35Dj9gtta8eO2v3Xuarbzf7aO/D3PN/33rOaeU3HuB7HvP6
+Ae97uBfeBrNw1P4pceMET6B5uAF/Mnj23WDUebcwzMWtcqr0vXeL/FeJrfm
wSt5D/Xp5Wzt8ONxU8Wv8HaJHtprUneHF0vUV9n7M2+i23xb7PGle5bYQbuf
5Dz9hz+FTzmk
           "]], 
          PolygonBox[CompressedData["
1:eJwtkLsKwlAMhs8pgkN3d0FBHJTik1jorlVBEKqoq4gIrl4Qb4irg5ujr+EF
HXwE38Ev5Awf+f8kTXKajbth4hljMpCCA6ZGrMPSGjOCqtHcGL2hHrv6xGqP
6B6s0D7k3bwvFPA5YgWK6BLfX9A3CNBrck30AHboqfMR9NFbelpGc1I7e9o7
hCv+Tky7fR93k9wTQoIue7pLdvroIzTcPNk997RX3ti2OkNmyc0RtbfzsuMF
P3pOxAU8rc6U2ZJ7oAOrb5V/0MHvrd4qb5ih/+zlKKA=
           "]]}]}}, {{}, 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{214, 216, 221, 267, 270, 619, 305, 636, 327, 298, 296, 264,
            597, 217, 211, 210}], 
          
          LineBox[{372, 370, 387, 663, 388, 390, 409, 411, 683, 434, 679, 428,
            408, 404, 668, 406}], 
          
          LineBox[{386, 662, 385, 366, 364, 655, 360, 650, 361, 381, 383, 399,
            666, 401, 402, 424}], 
          LineBox[{467, 697, 463, 469, 493, 495, 724, 523, 559, 563}], 
          LineBox[{561, 558, 522}]}, "65000"], 
        Annotation[#, 65000, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{209, 579, 212, 596, 263, 294, 297, 325, 328, 350, 355, 380,
            382, 397, 400, 420, 671, 421, 672, 423}], 
          
          LineBox[{367, 657, 368, 661, 384, 365, 363, 654, 359, 649, 354, 332,
            635, 304, 618, 269, 266, 220, 215, 213}], 
          
          LineBox[{425, 673, 405, 667, 403, 407, 427, 678, 433, 682, 439, 445,
            696, 466}], 
          
          LineBox[{562, 741, 525, 725, 497, 494, 471, 468, 446, 442, 414, 410,
            392, 389, 376, 374, 659, 369, 658, 371}], 
          LineBox[{521, 557, 560}], 
          LineBox[{601, 276, 308, 624, 279, 274, 601}], 
          LineBox[{706, 488, 512, 723, 491, 486, 706}]}, "62500"], 
        Annotation[#, 62500, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{206, 578, 208, 260, 262, 614, 295, 324, 326, 645, 349, 378,
            379, 395, 665, 396, 398, 418, 670, 419, 422}], 
          
          LineBox[{222, 581, 218, 580, 219, 265, 268, 617, 303, 634, 331, 353,
            648, 358, 653, 362, 656, 339, 334, 310, 621, 275, 600, 273, 278, 
           623, 313, 338, 639, 341}], 
          
          LineBox[{344, 640, 343, 346, 373, 660, 375, 377, 391, 664, 393, 394,
            415, 417, 685, 447, 470, 472, 709, 496, 524, 527, 742, 565}], 
          LineBox[{452, 689}], 
          LineBox[{520, 740, 555, 739, 556}], 
          
          LineBox[{456, 691, 454, 459, 705, 487, 511, 722, 490, 707, 462, 457,
            429, 674, 426, 677, 432, 681, 438, 444, 695, 465}], 
          LineBox[{589, 241, 277, 605, 253, 240, 589}], 
          LineBox[{669, 413, 441, 684, 416, 412, 669}], 
          LineBox[{719, 509, 539, 734, 513, 504, 719}]}, "60000"], 
        Annotation[#, 60000, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{224, 583, 226, 272, 599, 232, 585, 230, 588, 239, 252, 604,
            283, 625, 311, 622, 312, 337, 638, 340}], 
          
          LineBox[{319, 317, 342, 641, 345, 642, 347, 643, 348, 644, 323, 631,
            293, 613, 261, 595, 207, 204, 203}], 
          
          LineBox[{451, 688, 450, 687, 448, 686, 449, 698, 473, 710, 498, 726,
            526, 564, 567}], 
          
          LineBox[{455, 690, 453, 458, 704, 480, 703, 483, 718, 508, 538, 733,
            549, 736, 517, 721, 515, 519, 738, 554}], 
          
          LineBox[{492, 708, 489, 461, 692, 436, 676, 431, 680, 437, 443, 694,
            464}], 
          
          LineBox[{302, 616, 300, 620, 306, 309, 637, 336, 652, 357, 647, 352,
            330, 633, 302}]}, "57500"], Annotation[#, 57500, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{202, 577, 205, 594, 259, 612, 292, 630, 322, 629, 321, 627,
            316, 626, 318}], 
          LineBox[{248, 245}], 
          LineBox[{475, 699, 474, 701, 477, 702}], 
          LineBox[{546, 543}], 
          LineBox[{566, 743, 528, 727}], 
          
          LineBox[{223, 582, 225, 271, 598, 231, 584, 229, 587, 238, 251, 603,
            282, 315}], 
          
          LineBox[{485, 482, 717, 507, 537, 732, 548, 735, 516, 720, 514, 518,
            737, 553}], 
          
          LineBox[{615, 301, 632, 329, 351, 646, 356, 651, 335, 333, 307, 299,
            615}], 
          LineBox[{675, 435, 460, 693, 440, 430, 675}]}, "55000"], 
        Annotation[#, 55000, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{227, 228, 586, 237, 250, 602, 281, 314}], 
          
          LineBox[{287, 607, 285, 289, 320, 628, 291, 610, 290, 611, 258, 256,
            201, 576, 199}], 
          LineBox[{484, 481, 716, 506, 536, 731, 547, 552}], 
          LineBox[{503, 715, 501, 479, 476, 700, 478, 712}], 
          LineBox[{530, 745, 569}], 
          LineBox[{247, 244}], 
          LineBox[{545, 542}]}, "52500"], Annotation[#, 52500, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{198, 575, 200, 593, 257, 609, 288, 608, 284, 606, 286}], 
          LineBox[{234, 236, 249, 280}], 
          LineBox[{510, 505, 535, 551}], 
          LineBox[{568, 744, 529}], 
          LineBox[{711, 499, 713, 500, 714, 502}], 
          LineBox[{246, 243}], 
          LineBox[{544, 541}]}, "50000"], Annotation[#, 50000, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{196, 574, 197, 592, 254, 591, 255}], 
          LineBox[{242, 590, 235, 233}], 
          LineBox[{533, 729, 531, 728, 532, 746, 570}], 
          LineBox[{540, 730, 534, 550}]}, "47500"], 
        Annotation[#, 47500, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{194, 573, 195}], 
          LineBox[{571, 747, 572}]}, "45000"], 
        Annotation[#, 45000, "Tooltip"]& ], {}, {}}}], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     BaseStyle -> {FontSize -> 20, FontColor -> GrayLevel[0]}, 
     DisplayFunction :> Identity, Frame -> True, FrameLabel -> {{
        FormBox["\"\[Beta]\"", TraditionalForm], None}, {
        FormBox["\"\[Alpha]\"", TraditionalForm], None}}, FrameStyle -> 
     GrayLevel[0], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {"DefaultBoundaryStyle" -> Automatic}, 
     PlotLabel -> FormBox[
       TagBox[
        RowBox[{"\"r\"", "=", "0"}], HoldForm], TraditionalForm], 
     PlotRange -> {{1., 14.}, {1., 14.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \\(free\\)]\\)\
\"", {FontSize -> 20, FontFamily -> "Arial"}, Background -> Automatic, 
                StripOnInput -> False]}, {
               GraphicsBox[{{}, {}, 
                 RasterBox[CompressedData["
1:eJxTTMoPSmVmYGAQBWJGIAaxmZosq/7ce2NfPq/inJjALvu19318xJNO2nvn
blO2DHhnfyxuBUuU51V7NZf9M1L+3rGvid8yJdHtvf2DG5FPbZTu2+va2c6t
evvY/uQNk3szUm7bP57lxu/mfdXefOHPt8f+v7efd+14wxLnh/a3v/fusna5
a+/kY/7g3r/39tcdSif9ufLEPmvVq00z5j2y9/1ecunb3/f23KuVloSkvbB/
FtHXITz7mX34ok1H+IDiOjrOkfrOp+yFdn59JXDsuT0DGHyw10m/9XPri2v2
B2Slzb5efwkXV5nTqfwq/IF9QZND482Xr+Hik5W2XV417bT928YnQUxv3tl7
3Vm5/6bwTvsHp1bctz5zzf6ie67Ccov39u9yu1rbnp6xL28pC1U6e99+C++3
t96t7+1vf5svOmHBNXsW+UWpLOlP7Kdfrtv94eJ7+13bql7EnLtnbzQzLlnR
7L39Twv1IF7Nd/bXF77ze55yzv75lEN780vf26tuvff6dcM7+6TZktO4Cq7Z
z5mgJrFvy3v7QMNpraduvLN/8HR3y8K1d+0De7qKeL68ty9b6yu/0uC9vbrE
ess5pY/g/viWlDrv2sWH9o/Vv2Vc59sLF6/d35n6luuJ/S3O9Uqexhfg4j86
mV98//vcXvyr57sNnA/sAZaY/ow=
                  "], {{
                    Rational[-15, 2], -125}, {
                    Rational[15, 2], 125}}], {Antialiasing -> False, 
                  AbsoluteThickness[0.1], 
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]], 
                  LineBox[
                   NCache[{{
                    Rational[15, 2], -125}, {
                    Rational[-15, 2], -125}, {
                    Rational[-15, 2], 125}, {
                    Rational[15, 2], 125}, {
                    Rational[15, 2], -125}}, {{
                    7.5, -125}, {-7.5, -125}, {-7.5, 125}, {7.5, 125}, {
                    7.5, -125}}]]}, {
                  CapForm[None], {}}, {Antialiasing -> False, 
                  StyleBox[
                   LineBox[{{7.5, -125.}, {7.5, 125.}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.500000000000001, -101.1904761904762}, 
                    Offset[{4., 0}, {
                    7.500000000000001, -101.1904761904762}]}, {{
                    7.500000000000001, -77.3809523809524}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -77.3809523809524}]}, {{
                    7.500000000000001, -53.57142857142858}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -53.57142857142858}]}, {{
                    7.500000000000001, -29.761904761904777`}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -29.761904761904777`}]}, {{
                    7.500000000000001, -5.952380952380952}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -5.952380952380952}]}, {{
                    7.500000000000001, 17.857142857142858`}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    17.857142857142858`}]}, {{7.500000000000001, 
                    41.666666666666686`}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    41.666666666666686`}]}, {{7.500000000000001, 
                    65.47619047619045}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    65.47619047619045}]}, {{7.500000000000001, 
                    89.28571428571429}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    89.28571428571429}]}, {{7.500000000000001, 
                    113.0952380952381}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    113.0952380952381}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["9400", TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, -101.1904761904762}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["18800", TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, -77.3809523809524}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["28200", TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, -53.57142857142858}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["37600", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -29.761904761904777`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["47000", TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, -5.952380952380952}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["56400", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    17.857142857142858`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["65800", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    41.666666666666686`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["75200", TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, 65.47619047619045}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["84600", TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, 89.28571428571429}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["94000", TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, 113.0952380952381}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], FontSize -> 20]}, StripOnInput -> 
                    False]}, {}}, {
                    Directive[
                    Opacity[1], FontSize -> 20]}, StripOnInput -> False], 
                    "GraphicsLabel", StripOnInput -> False]}, "GraphicsTicks",
                     StripOnInput -> False], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                Scaled[0.02], PlotRange -> All, Frame -> True, 
                FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                Opacity[0], FrameTicksStyle -> Opacity[0], 
                ImageSize -> {Automatic, 250}, BaseStyle -> {}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 20, FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"\"BrightBands\"", ",", 
               RowBox[{"{", 
                 RowBox[{"0", ",", "100000"}], "}"}]}], "}"}], ",", "20", ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "250"}], ",", 
           
           RowBox[{"LegendLabel", "\[Rule]", 
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \
\\(free\\)]\\)\""}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.765871379601449*^9, 3.7658715339429483`*^9, 
  3.7658715975074406`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[CapitalOmega]freeplot", "[", 
  RowBox[{"0", ",", "0"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[CapitalOmega]freeplot", "[", 
  RowBox[{"1", ",", "0"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[CapitalOmega]freeplotDEG", "[", 
  RowBox[{"0", ",", "0"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[CapitalOmega]freeplotDEG", "[", 
  RowBox[{"1", ",", "0"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[CapitalOmega]freeplot", "[", 
  RowBox[{"0", ",", "0"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[CapitalOmega]freeplot", "[", 
  RowBox[{"0", ",", "2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.765783206483569*^9, 3.765783210201632*^9}, 
   3.765798701827608*^9, {3.765869571823848*^9, 3.765869605909763*^9}, {
   3.7658716403114357`*^9, 3.7658716412486897`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "ArcTan","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"ArcTan\\\", \\\"[\\\", \
RowBox[{\\\"0.`\\\", \\\",\\\", \\\"0.`\\\"}], \\\"]\\\"}]\\) encountered.\"",
   2,445,121,31933153767314332663,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7657988800527616`*^9, 3.7657991912961*^9, 
  3.7657994560663385`*^9, 3.7657995968487544`*^9, 3.765799815348278*^9, 
  3.7657999011117544`*^9, 3.7658687696138897`*^9, 3.765869403719601*^9, 
  3.7658696430269213`*^9, 3.765871674507454*^9, 3.7658728707057233`*^9}],

Cell[BoxData[
 TemplateBox[{
  "ArcTan","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"ArcTan\\\", \\\"[\\\", \
RowBox[{\\\"0.`\\\", \\\",\\\", \\\"0.`\\\"}], \\\"]\\\"}]\\) encountered.\"",
   2,445,122,31933153767314332663,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7657988800527616`*^9, 3.7657991912961*^9, 
  3.7657994560663385`*^9, 3.7657995968487544`*^9, 3.765799815348278*^9, 
  3.7657999011117544`*^9, 3.7658687696138897`*^9, 3.765869403719601*^9, 
  3.7658696430269213`*^9, 3.765871674507454*^9, 3.7658728707213182`*^9}],

Cell[BoxData[
 TemplateBox[{
  "ArcTan","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"ArcTan\\\", \\\"[\\\", \
RowBox[{\\\"0.`\\\", \\\",\\\", \\\"0.`\\\"}], \\\"]\\\"}]\\) encountered.\"",
   2,445,123,31933153767314332663,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7657988800527616`*^9, 3.7657991912961*^9, 
  3.7657994560663385`*^9, 3.7657995968487544`*^9, 3.765799815348278*^9, 
  3.7657999011117544`*^9, 3.7658687696138897`*^9, 3.765869403719601*^9, 
  3.7658696430269213`*^9, 3.765871674507454*^9, 3.76587287073694*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ArcTan\\\", \\\"::\\\", \
\\\"indet\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,445,124,31933153767314332663,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7657988800527616`*^9, 3.7657991912961*^9, 
  3.7657994560663385`*^9, 3.7657995968487544`*^9, 3.765799815348278*^9, 
  3.7657999011117544`*^9, 3.7658687696138897`*^9, 3.765869403719601*^9, 
  3.7658696430269213`*^9, 3.765871674507454*^9, 3.76587287075261*^9}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
4+nqrEVM3sHyRWdls/nVZOv+W/Huu7JhnfPuZPG4KvKPXOvzr65mwj7jwlM+
gyvJYYXQkxsmpzI/r9017F3OsUK277XSwNe6MSKGp/W3PjxPNYvIdciwuuJQ
zuyFnIe88bHMamIUGVkRMbEQ6ot67o7vW0n67MtbMS5WxNafc33P5Zq8RLZe
f7m1tWuOviJqOicupawqJ9fMxTNVZ+Wy5ylZH19JK/nBQtVbty6WVTMee7Rc
XX2/XyXDZKzWEsWRZWTbUc/IrjaZ7P+xtuN98+5ms/1TtU/ITsvOZFjF/fKb
GJtUuGkZp2X0sorpv9xvWDbeVsJLxx84VrhkdQX5O0KBhrqDUU0JMV9u1tJ6
dQJJGBJ48mppOQmveTvq7oiXbP/g7xGmO7eUsP2ebK126by8AvREixr6ditn
/nK6m9aytfsrmb49U9+pYHO+mmze0aFq1HYxRHiM9DkbXUW2iqLdNt2sg5fi
MoOEukqyzcyll/+nWoiyCYiT1agkOx8ZhnxpWcv2O6k58VB9TbXkvq5h88fZ
VYDiYs3vezqXkMkFLvpVL2+TL0HDW3rdKSdv7nWJ09tyHzJuZ14cuo3pA/v/
xyqfoAdyErz9e2bBgkb9FXDvBmW1hs21IP96NuU5yb0VKO95NC+a8px98z5Q
3jPs44smPEn3aP8DyJME3Nuqlvo1Qd/uL3ayyuhQxvxrdevQYVf8SsjnzsVG
E5KiGS8dMvUx9WMKa35RP9RX3I/6pczqZdQPGdwvj0W9EeZfenrYGuX43ezB
cf+We52UiCZy/7P7MtUBjfP6p9n7ltpnw6nU+bWHrEqJS5sOEXNiMmC4c1FQ
ZGwReTZ/hH5sQAo7z/KJ087rjhERB5tqKtePNE5SOReer70oFfX6Rirx/XiD
zhN+v3qi3/4bepK4NW/Qnd7mZ8sZdjD6uCdRp4i0OxUQom7/FfpYOj3ZK19O
klrH3zJf+I3t73zkRY9ptrFs3WndG07V7/EihbtztKzDSpn+JGTHhsadLSZ/
RxiqFnvhW1AZ+TuCSVDuuBYrKsjfka0/s0Q9rto8HlKtDx5Z8ukb2Vh7MEUl
II3t93uGyo88U0kcHj5ZTIJ3ZzP8a7+f3K+VWQzvtl/idTI+jeGGFd1Vtf5J
gQvqHwKkl0n08ZDR0Dcyl4rJ962BpqlalWx+9qn9yruDvoJVr43l7+d8Izpj
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
fj2oVZqC/V3s9/8BU5tXrQ==
   "], {{
     {RGBColor[0.5139898335966383, 0.8736755163363786, 1.], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[{{197, 1, 230}, {743, 193, 836}}]]}, 
     {RGBColor[0.6136466499999997, 0.9353396625, 0.9202853474999995], 
      EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{225, 13, 273}, {194, 16, 236}, {236, 16, 231}, {760, 181,
          812}, {798, 178, 799}, {231, 16, 229}, {192, 179, 178}, {16, 2, 
         15}, {273, 13, 262}, {805, 181, 747}, {747, 181, 760}, {800, 178, 
         798}, {262, 13, 223}, {830, 178, 800}}], 
        PolygonBox[{{836, 179, 192, 743}, {200, 2, 16, 194}, {835, 192, 178, 
         830}, {229, 16, 15, 293}, {230, 15, 2, 197}, {799, 178, 179, 
         695}}]}]}, 
     {RGBColor[0.49068754999999975`, 0.9444748875, 0.6697535824999996], 
      EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{825, 177, 794}, {830, 191, 835}, {754, 166, 802}, {722, 
         163, 729}, {283, 28, 288}, {342, 28, 334}, {334, 28, 283}, {293, 29, 
         229}, {301, 31, 302}, {194, 3, 200}, {294, 30, 291}, {30, 31, 17}, {
         241, 31, 301}, {198, 17, 237}, {302, 31, 299}, {739, 164, 741}, {746,
          166, 696}, {785, 163, 733}, {695, 165, 799}, {696, 166, 754}, {733, 
         163, 722}, {164, 163, 177}, {729, 163, 730}}], 
        PolygonBox[CompressedData["
1:eJwtkD0OAWEQhr9vP6HejUpil4htcACNxBXUKgfgFE5iHcAJJAqJK2j8ZaOw
Ch2dZzJTPJl3vp2fd7a7WM2WkXOuCTWYBuf2xB2M0W9iDBl8IPHkUIcGnGne
8F7AA53Rs7U8RZfEtmh4GqnNrKAVdJfMiNEdy8XDBF0x8wVf+EEZ6WzZsUbn
1PSD1kjtwKtX2ZF77ZHeITUj6Hn9Jp7m6BMxmJ+jeYrt7QB3uDm9ObGb5fYL
b1e7sbD/Jd7/W90m/A==
         "]]}]}, 
     {RGBColor[0.3677284499999998, 0.9536101124999999, 0.41922181749999976`], 
      EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{397, 42, 391}, {259, 12, 252}, {700, 154, 648}, {245, 32,
          249}, {249, 32, 309}, {688, 151, 685}, {252, 12, 222}, {685, 151, 
         691}, {648, 154, 702}, {309, 32, 312}, {391, 42, 343}, {767, 182, 
         775}, {357, 45, 354}, {775, 182, 814}, {354, 45, 353}, {356, 45, 
         357}}], PolygonBox[CompressedData["
1:eJwtz70OwVAYxvHTVsKKRbSDqtTgY8bGBZCYWcTMVXBN3ABhZCMMlAkJJib/
1znDLz15+z7tc/zBuDuylVIZxNBwlKojCxcPZnc88UKLWdPsyO6d8A0ffG2d
kWwSKcyZzfDC29YzeXfgfETaYoY4EvDgIgff0hnJ5skEuHK+YIIp1nRaYYEl
apLlWcGQ856dHc6IUOQboaM7S/elycod5a7SSbptsJUcs5PSHaVrZL4lHaRL
kVmIAAVULf3vfwfOZZTMjux20DZ39ExGsj308QP52jBk
         "]], 
        PolygonBox[{{353, 45, 302, 299, 300}, {242, 241, 301, 32, 245}, {723, 
         722, 729, 151, 688}, {762, 761, 813, 182, 767}, {691, 151, 729, 730, 
         731}, {343, 42, 342, 334, 335}, {264, 263, 224, 12, 259}, {702, 154, 
         746, 696, 697}}]}]}, 
     {RGBColor[0.24476934999999994`, 0.9627453374999999, 0.1686900524999999], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtksErRFEYxd99WE0TzWaSlVIWJlEUSjQW9pZqFFnIMGQ5Oxb+BLGwn5dk
apKdLVGE1BRLWUpT7JTf6Z7F6Xdu77vfPfe7b3BtZ6mWJkkyhrrQGYsj2ICb
IUlG8duwyvoAvwcbrBfwGZxD/fhp+MG3Y/wb3HL9Bux1jWpvYDe6cy/VqHaS
w5v4IixRV8KvwlM0ga+HmEnZMnjLuow/hyuuX4YVNIIfgq/UZfgeeu66zz5s
us9LGrMqcwvewwL6Ro/eqx5FZ+uDT96rOa17PlPwz/Xat+h7aWaZZ9UKUfJt
2PFZXyhP3ys4Di+c5xL+whx6R7M+S29S911qIc5XZ83DGfZf48uw4MwD8MGz
0swOqTvBf6Zxv/poNsOeoWbfds7nEN9Vb5eDP87c8T+hPNUQz1YG3fsfsA9F
mg==
         "]], PolygonBox[CompressedData["
1:eJwt0TEvQ2EUxvH37a2UiAVLUx1aTSohJgwWiX4A0qVikVQY+Qym1kBiY7AZ
GCQWEUKNBmHwASyabroQiZLwf3LO8Mt98p5zzz333kJ9u7qVCiEUkUYphjDJ
dQpl8nQSwhX5DBnyDc3X+MAnLnFI7QhrfqbaOL0l3JNbfo/u3UXTz1SboKeM
d3LXKffwg07KZusZbfIdbn2GZr2wY4XaIp7JA+hHgjReOR9EFr948vccxqNq
0Wrq+ULXa+p5QF9i765vMEQ+ifYsPfM02o7a9U8fkfo+Z3tooIlRjPhO2u3c
75/BMXknWtaZZq+ghiUso835W7AZmrUa7d/oHx14j3rHkMcCO7SoXWCW3OP6
rUxtDrnEauqZJ29ytoE61n2GZhVQ9Hdo+E7a7R9prUFi
         "]], 
        PolygonBox[{{240, 18, 245, 249, 250}, {735, 734, 723, 150, 721}, {681,
          150, 688, 685, 686}, {784, 176, 786, 734, 735}, {686, 685, 691, 152,
          687}, {355, 354, 353, 44, 350}, {260, 259, 252, 25, 271}, {363, 46, 
         356, 357, 358}, {768, 767, 775, 169, 765}, {310, 309, 312, 46, 
         317}}]}]}, 
     {RGBColor[0.3024845000000001, 0.97209225, 0.1769447000000001], EdgeForm[
      None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJw1krtKA1EURe/cNJaC/kC+IIWPiJrC3iofIPhAC8UUKiqIQQLiBHUEI6Ip
JIniozAgiIWfYCHphfyCYGfl2pxjcVj7zsx57HMnv1Apr8cQwgiRI36JIeKb
mElCKMA1OEdMohfhLlFCt2Hmz8/hvT+/g69EEf0CyzSooStwi/MYuua1p4Pl
LHOegqtwlEG66ALskdNG9+EGcYTehJ8+Z89D+sf7qW8KV/juBJ3BEuc8ehze
cM7Ql/Cd8wT6LbEc5R7ChvuSvw++u0A/wSpR12xw33XV/anmmeZzj/I66++0
gz2fXz767msQj3X0MXoePnjurfYcrV4TbhMpegc2fVdXcMk9ymsnsX224LX3
+u+p+VOvq/oHcCBnM3xF24Xmb8Cu+3qOdge6i2HY8Xla0XaqvqfR/gPdoe4/
+J6LieWrzmM0D8pVjT/SgEwY
         "]], PolygonBox[CompressedData["
1:eJwt00tLVlEUxvF9zqui5SUwcaTgJwiDvJX4OtKhOuoysDRC8/JqCGZBkyYa
3godVGRYBF5IB2qBETZMLK2kKNCvUAOzQCv6P6w1+HEW+6y9176WtKSauuMQ
QhJpeBaFUM33DJ4Sd0UWn8BV4vs4TVyFCeIhOo8QD+M1cS2SqEM9Fsh5jkeY
wjY+YRNbmCNnkr6DeEA8R9sslrCMdbz1MRa8z6a36d/xRAiL9H2CTOIZxhgK
Nua85kJODSpRhWMJy1WfQuJLsc1da7gc2xq11hJUqxbf99jAO2TTdhS/iH8H
G7PS2/SvLLK++ThABjXSkYNc7Pk/5QRyC7QGZOFIZGNq7B3s+homfX0fiV+S
U0FcjhXidKQhT2vDtJ+Xzuihj5nlOcr9hq9+BjqLXJ9bKU4mbM+XPEe5r6i5
ip/YxwusoBkX0YVOtKEdKdym9jgGvK3N74TuxnU/nzu4RfwGa15DtT5gC5/x
xSnWHmovk6jBKZThH//+eh/1TTHnbvSgFxE5IWE5yv2Dw9ja9G8ntr3VHm8Q
/8B3z1FuX2x3U3PuJ77JmDe8hmpdo20s2Jo7iM/RdhYNaMQFnMdd3EOn3y+9
sQHPUW4RinX3Y9sb1dNdnvK3o5qqPRjZ2esOjOq8Y9trzeExcbnfP9Wo9TuR
529Ab6HD36/uiN52a2RvWW1XiP8DAf98Cg==
         "]], 
        PolygonBox[{{822, 821, 791, 175, 820}, {584, 583, 619, 131, 588}, {
         390, 55, 392, 344, 345}, {654, 141, 649, 703, 704}, {559, 138, 687, 
         693, 694}, {279, 14, 228, 276, 277}, {660, 143, 626, 620, 621}, {757,
          756, 804, 180, 744}, {744, 180, 808, 750, 751}, {286, 285, 290, 14, 
         279}, {403, 58, 350, 346, 347}, {204, 203, 240, 19, 207}, {387, 53, 
         424, 425, 426}, {369, 368, 385, 53, 372}}]}]}, 
     {RGBColor[0.44451430000000014`, 0.98153795, 0.30596634000000017`], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNlM1vjUEUxt+Z22txo2LV+tqwKF3VQjQiaREEl6AiUm1FLAgaQpq6RYSE
dlGRKCuC3PiI1F58REKxkPpYdkPCXyBs7obG78l5FhYnv2fOO2fmnDMz79JD
J3tO5KIoBrAS9ikVxTY4DauwF9uOvWTSbfg6h2+//U8Zj8OOHN805xr8QfxG
9DdYzjG/CT63X9/74FGsH7vAt/OwBg9gNXTVHMVGsEHsuLXW2+Ec+qzlq/m7
5v1KsfZv+M65vYFbGK9En4Y9WLvi4RWsGz2eYr1ur//C4xm4EFuE3gTXY8vQ
nXAVzXuFXg0nGK9RXvBqjvyH4RHGbegNKWpRnmexj1gZ+yyfcxuE81hrEj0H
vmW8FT0F31vLt899G4CXfRZjcCd2Dr0LJuIfo/+gVxDTiv6L7XbtvfAW326i
J2F2Xc2ww/MVN9+1l1PEy/8Tu+7eqscTrld1N7FvHZ3hPcZ30HVYYfwE3VKK
b5oz47ix//oy4nHZ+1bgXteruivOYYH7rv6vg99zrK99DronuqdTrvFBjrPR
Gd1I0WPNv6uzcKzWaHYf1sJGjh5+gJuxYfQeeMZ9HoLTOWr5Cr/4THW2Dec4
N8V90r3qKmLfZ967k5hL2ku99PnWYZf3aoNLctyb9hxnprMbTXG/dc9L+C/a
r3vdkuMdtMJZ56+7sNjraL0h5i1Hn4KHnYNyOea3pPjCb342hb/f77bq96Fa
7vu/8TDF+1GNj1LEKLYB/wEseXr6
         "]], PolygonBox[CompressedData["
1:eJwtlE1sjFEUhr97p0RFpBEzbUgqLCoiUakdCdqEtGj8JBZUJBoWqgzqrzor
vwkLwkxQVAZFpgkrNFhJRLRE/USjiX27KlG6E8+bcxZP5p1773fuved9v29+
a3bLgZgkyWYog3L+tPC7HaagZ4QkqULXwHL0esZOoNtgCboh2JzW1KF/8Dvd
/09CE2saYQM0QxVrKiENmWA19fxCWI1uh6XoBVCPvs4z1yAPBZgVbe99kIm2
p/aqhFr0oWC1VDOLfqgzo1fC3WB7aH4OVKB7qdGD7oP36Bo4ht4L1dKsOQqn
4QxMMP4bEnSAIfgI72AAijxzO7Ga99Br4CS6Czaih3z+EfxDH4k2pzUd6M/8
fvI9JvwMOkuLezPgez2GJ9DK2C7YDXvgsPdP9z2FHvfeyJMRH9PcKjiLXuz1
dee16AfB5prhRTCP27wfWtsA9e6pvJ3Hmmr3VN7mGDvP2jx06/7Beq2er0MP
M1b0+dfor4x98R6ql0Vo0lr1D12KtlbPDKK7GbsBeSho32hZaIe56LJo2d0m
j9Ap2OF5VXa+ud/yQF5kUuZ9PyxLWUbUH/WwU71krBZmQxrqUra2BDPRvcHO
qowpa2PUHIVx+Kn8wLnE3pmd6E3udw626jyeT9X44J7K2x6443fUXS/BZc+g
sliCPlgR7F3ReRvRB6mZhU7lDu57/+TJVfRwMG+VpzF0PzyHp/BM2YqWTfXn
LXrQ7ydP3gSroVq605VoZ9RZu+Q9LIrmhfKs7Ke9d9OgHC4ydsEzq+x2+Puh
mjk/s85+E27pWxOtV+rZcfRkMG/VM/VuBL57hpSlV/DS76S7FfzbsR/0oZua
Mu+UAWVBPVAvlJFf6L+M/XEP5eV/HX+YTA==
         "]], PolygonBox[CompressedData["
1:eJwt0M0rZmEYB+DzvijsKRKNBc3KLJQkimxGY4G1jYxppngtsCEfJYUaZOGb
JCVWxNQ0TdPYWPrYEX8DG2wsXE/vs7j63d33OfdznvOhJ9M5kE6SpIw8rmJe
cs0ND6kkaZWn8pY72vmo1yHLqaDLohG9TplhkJR+Qh2VyrTc1N9gj229fXmk
f5jKnhHOOg5n6H9JZ/eFvU1ykQV+hh16S/J/rP/IZ16YZIIa5s2mZTdj6vE4
C8/8YErvW9wb9hfkJEk+9+pds1x1I3/VtbKGT3w1701n3w07+mT4mf18j72w
/5e7nHES7/ZbtlGtHpLDjFBMEYWUmpXIOWaZif97UjbE3eGMZlrCd+svsEy9
2T95ob+l3pErrIb764+SoSrcO5X91+G7TuJZ4cxzPuttyDXWefL+I28cmL3K
dwhGRMQ=
         "]]}]}, 
     {RGBColor[0.5865441000000002, 0.99098365, 0.43498798000000016`], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtk8tLVVEUxvc5PlCcRJYaN5SbEGQQmaAjoYnXQDPIwChsIPRAUMEoR+Kz
SYOoLio4FKlBEgQiKYbVPIjAhPwDVBxYICrWoN/H/gaL37cf63HWXifbM3Cz
Pw0hdGEFWIbFPVgJZ5IQrqIXYJb1Q3QNnGJ9DT0LL+O0im4uiGvtf4XnuNeH
roV3sGH0XfgSe4Huhc+4V48eh++wRvQkPMHZILocrriGN3AJa0F/hDucvUUf
wEJyv0eXwjOcZdAVcEI50GNw2b6K8Zp1Hp2H97FRdA/c5awTXZbGWIp5Gr5y
zap90b4f4A9YjH3Hrrhm1T7mvE/g3yT2818SfeQ7l8Y8uRBrGncfBnXXvk/h
Saxb7wITzk6h90PMMxJi3dPuj97qt3ui3hxaay+1r2KsYa36FvjZ7/Upib1W
3Aa4CUuwdX2n30Xv89xaexWuTTUes76NPoI17v91eMMz0JJGk74AL2FD6DZY
5z6Xw23nVf5R51LOi74vv1vu1WNYzfoR+jxswH9Z7w6z2Aq6CVa5HtV11vs6
L7WvYrQ7pmLn/UbzMOe8yv+Hsw71FhbZVzGC/4tC+Et72B7W75mZ0nx5/rvh
pLX2en1Hdx94DjWPO861kcQ5Vv36jlr3sC6NM6oZKk6jSW8lcc40byXs/fS7
HCbxbaT34UaI83Dk/1n1V8FvviO/A8/PF/gfEm1ylg==
         "]], PolygonBox[CompressedData["
1:eJwt0z1I1VEYx/HzP9ciC5vKHFwchHJRlChQSq74evFmWplEDTbYlBqk4Pug
OLS0CAZGLTpFOZroYLfSfAF744aiaAhJ0VBESxR9f5xn+PB/7rnnOef5P+f8
81rbG29751w5MnArcq4NcVRgBxcYv47fxL94HsNBvENOzLnnPGeRS3yKOSfx
l9//ME9cw7Ma34nvRyHW2FgU1tTaN/CHOINi2lQHDhDXoRb1SKKMOaVaE7Uo
QTEKUYTP2MUWthGjJo80uZ+wwFjShXdaJH6NV0jhJVaxYmP676e9v3J+EH/l
mYlD2Ee+D7Wq5jzitK2vfs4Sf0ETcSX2lI8qF8a+ESdQhy5040kUcrWGan1v
vVbP0+hkjw70oNeHdy60nqv3H/EB63hrPVAvNrBpNmyO5h6nN09Zdw5FxP2M
9dkd0F24xB5Ntqf2TqCbuSM6M+IlLGIcD3DXh/80p4X4LM6gVGeHCsTtTHW2
R9kjy85UZxvz4T6o5+p9meXGLTdpd+EczuMiGnAZV1CCO+QO4TTxQ0xgElO4
iUEX5hQTt/owV2P3bA2t1YyreEwNj6wn6k2v9X7C1r6GfnIHkMI0c55ZjnJ3
+X8Hh+ntEZzw4a7rHbP1brHQe51BAfEyY2+sp0t2Z3V3XyCFKtastDuTsG80
bt+AvoWZKNw13bE54jVyVq0G1TLqQ62qedh6MmlzNPc/PqV+wA==
         "]], PolygonBox[CompressedData["
1:eJwt0c0rRFEYx/Fz71BeYkMajSkUxc7Cywobg6JhrjIUCwtsUNRYTTPFrAyF
TGw1scPCZnYMRgbFf4CsbGzUSBm+T/MsPv3Oec65p3Oe2zCzFFi0jTH1KMYE
k1XSRzoYwybiCCHG2hoZsYzpYBwlA3BwQ/0alzhmLSNz6ldIY4DaBXkLP+Ms
eYoztLM3Sm2W7EQXvqgHqT2S93hAHBs4Qi9rCbKHvd1oxjy1JvIQu4x39O7y
BjfmqBkyz3d/yDP9xSdK8YFBuSuW0cZ8iKxyGXPCuIi04UKCc7aobeu75f2O
9mMYHtb65f3U00jqnc6lx9RDWNc+Sj8z2rcceYesrXdETnvxYxXOlLNryT74
8Iwnq9BT6e0L+S7rjFPkK97QypkL1PzkCEZxgH3s6XvkXV7UoUX3N5JBjGMK
YWqTZDl9KEMNUtTcZAn1acYePUPO+mZeLa3nDhWoxIr2N6b/VP7tP7M9TqI=

         "]]}]}, 
     {RGBColor[0.7252449500000001, 0.9992278875, 0.5535720499999999], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtk88rpWEUx9/nvRspLKSGskByE2VmPZGmRoaEK782NFOzJEmUhQXLmY2F
UhY36zs1i/kDCPfqZqMoS2sU8iOZBZ9vz3dx+nzP8+O855znvE3f50fn0iRJ
vmAZbCAkSRZ+hSNszKHb4SB+C7of9uAvoYdgJzaP7oIfsQV0DZzl3Cf0Cgz4
M+gU3uGPo2/gKTaMPg/R1/otvPS69ht9twJuYTvobVhkbwJ9AtucZxa+4v9E
v8Hf+JvoXdjsOIq3gG2gx9JYp+rtCzE/nanUt5z/L1ifxph1sMm1t6bxG1r/
gG7wGZ2dcvwl+N+1PIf4Pa1rf9p9m0xjDarlMcQ8lE8O/sV60SVYzbkxdBUc
d716nxnnqX6v+e6y1vwWP+ABlkdfwGP3sJzG2nR3McSeal37OcdRvGfnrzf5
5ziKt+7eqscl57kPn1zLQ4izopn5DBusu0OcG/XwG6zGr0O/+L7iFELsr85o
1jIM5h90Lexw3zR3ZedcVF6+q54VnFseXofYtyt45POao6K11lb9LpqLPc/h
Ibx3vWdp7GnW/8c79q1dng==
         "]], PolygonBox[CompressedData["
1:eJwt0c0uA1EYxvEzM6KLNj5SEoSFSISyqLQajbFqr8CiJKys2LRXwJ0QK1Yu
gU0bOzYkmhCiSEtDiKUE/yfnXfySM2feeb9mcqu2Wg2dc9PowQoPMUooI48c
FlHADzHDmMJY4NwZTvGOD2wSs4E67xvY4W4bJZQRB/5b5ejjnEcOWSzgAfe4
xR0aqBC7hnPOT2hZjGIL1tsSilhHjdgqKpz3iNm1HtRL0WI1o2ZNoBdt3nXw
gmeroVoZzOKXfH84JvYIF7gM/Uwlm0GzDHI3gDSGTNp2qF0qh3K9oYsD7vYt
p3I3ccj9CaLIuVGMYBwTka+p2o9ooT/ysfrmK/Q7zFrP6r1rtTp4dX7Gts2o
Wa+5u8INmvgO/K6180/OKfInrQf1kqJG0naWsB7Ui2IUG2MZGcxhJvT/Qv9k
nvM/MoVJYQ==
         "]], PolygonBox[CompressedData["
1:eJwt0csrRGEYx/H3zKTk0pDUJLdjlIyNZjOahRIrWUiDQk1ZWM4kTSmNcvkL
LLBAJ+uxIFvyRxiXxlpkYUONW/n+Os/i0+85z3nf5z0Xf7kwk48457pRh66o
c53wccZ1jBxCEm3WG4yGVGtdGiN45LodVVRwh1HPuQQ5RWYxi34OTCCJPPcG
yAuc4xR79MrkA3mPms3V/Fe82Bnq/ShZu0J+M7uGL0zQG8ckitzLkA3IUffZ
+XqOZ9ZOaw75iz8008/Se6NupG7CEfUYvYAsYdPO0XkfmOfep+3XnHo7yyMP
uT5A2WZoVsaeyyd70GtUx+19OshhFKgXyEUsYZ39KXr7Nlfzn1BFxd5H71Vi
7S71BnmMk0j4/fUf1mxGjgzsm++QW9jGLQJ6l/Zf9H9iWKWXIlvQinf2z9G7
Ia9w7YX7Nado5+s5/gEqykjx
         "]]}]}, 
     {RGBColor[0.8105141030254348, 0.9781730644566667, 0.42887175951641], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtkk0rhGEUht+PhdJosqBMTVGEWJAxIaz8AVOzUz5iYYNiYTMW/oGdhbCz
mZWtmpW11SRKWchkmvKRLCRx3T334sx1n+c95zxnznn61rZLW0kURZNYivXw
U4UZWI6jqB89D2cI2kMvwBvsCH0Bl7Ad9FgSfJ2fwkPr8yT40hXY6zqq14Td
WAt74I5F+Ain+baLLsJn/BL6BV7in6Hr8B62YXdYgW8D6g3e+lzf4yTU/OX8
FSujazDD+Sq6A/64h6bjFN+A39gGuouYJ/egXjrx19FZeII/gT6OQx+6t46N
ux/11XL9P+w9Drmfmiv5K+h2eB2FGWqWw8z9Cj2Shrqqvw9znpvmd+Bz3Z/1
vvJpyFHubBr2pPg5mItDD/qvH0mIV17eudp50TMvwE3X1z01z+0NDrpn9T7l
u9Rvw3PTDqvekXY16jkPwS/PU3Ot+D3ojSz7jemt/QOFk0t6
         "]], PolygonBox[CompressedData["
1:eJwtkcFKQlEQhs+cgkCsEEow2gheDFHoUhsXuuoFElp7vXYXbiqwRa/RE+QD
9Cyu2gu6cRFYSGv9ppnFz/3mnJk5/8yt58+DpxhCuESHqEOQ8x2hNvyFPuBP
9Aufokd4jFL4TkJI4Bs0ga+i1WaoCR97rD1P4D45DbiKLuBzzgp4imrRpPyq
9/C32Fv65g986/dacwbvvJf2bHH/JuZFPWXw0v2/ozm85mzg/o6Iywc2m+Zo
7ixa7v/McIyWf48k2hsN75/CWzFv6udPrGfm+yvDC7Fa7bES85S436HYDIXP
V4E3nD34fnX2kvfTevVyjV58n/qvetF2pTvpwnvC3yub
         "]]}]}}, {{}, 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{212, 216, 217, 214}], 
        LineBox[{526, 525, 524, 519, 488, 485, 483, 479, 476, 486, 509, 513, 
         514, 522, 548, 551, 552, 556, 557, 560, 604, 196}], 
        LineBox[{561, 527, 529, 532, 564, 566, 569, 573, 580, 570, 544, 538, 
         537, 533, 505, 501, 499, 496, 492, 495, 446, 494}], 
        LineBox[{828, 811, 809, 824}], 
        LineBox[{251, 233, 235, 255, 298, 305, 308, 324, 361, 382, 412, 408, 
         376, 352, 351, 341, 318, 282, 251}], 
        LineBox[{670, 637, 642, 672, 684, 690, 724, 753, 783, 797, 793, 780, 
         738, 718, 679, 670}]},
       "65000"],
      Annotation[#, 65000, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{195, 603, 602, 600, 598, 593, 554, 547, 546, 541, 520, 508, 
         507, 502, 480, 465, 469, 475, 478, 482, 484, 487, 518, 523, 491, 
         490}], LineBox[{213, 219, 232, 234, 254, 297, 304, 307, 323, 360, 
         381, 416, 432, 455, 449, 428, 407, 406, 396, 371, 340, 332, 329, 316,
          270, 248, 215, 211}], 
        LineBox[{493, 445, 448, 452, 454, 460, 500, 504, 506, 511, 536, 543, 
         545, 549, 575, 590, 586, 579, 572, 568, 565, 563, 531, 528, 562, 
         611}], LineBox[{823, 801, 796, 792, 779, 737, 717, 678, 669, 635, 
         625, 596, 601, 629, 641, 643, 653, 674, 689, 692, 707, 728, 771, 787,
          810, 827}], LineBox[{331, 326, 327, 339, 383, 375, 331}], 
        LineBox[{662, 665, 712, 714, 710, 709, 662}]},
       "62500"],
      Annotation[#, 62500, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{208, 210, 244, 257, 258, 269, 315, 328, 370, 386, 389, 395, 
         422, 442, 471, 489, 497, 498, 515, 530, 534, 535, 539, 540, 553, 581,
          591, 592, 597, 599, 605, 640, 644, 647}], 
        LineBox[{218, 239, 253, 296, 303, 306, 322, 359, 380, 415, 431, 458, 
         464, 468, 474, 477, 481, 441, 438, 440, 444}], 
        LineBox[{447, 400, 405, 410, 450, 451, 453, 459, 461, 470, 503, 510, 
         512, 516, 517, 521, 542, 550, 574, 589, 585, 578, 571, 567, 614, 613,
          610, 651}], 
        LineBox[{819, 790, 778, 736, 716, 677, 668, 634, 624, 595, 582, 555, 
         558, 587, 606, 630, 652, 658, 659, 676, 706, 727, 770, 772, 777, 789,
          816, 829}], 
        LineBox[{281, 278, 280, 287, 333, 338, 384, 394, 433, 427, 388, 374, 
         330, 325, 281}], 
        LineBox[{656, 618, 622, 661, 664, 711, 713, 759, 752, 745, 758, 705, 
         708, 657, 656}]},
       "60000"],
      Annotation[#, 60000, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{206, 204, 207, 209, 243, 256, 311, 321, 364, 377, 418, 423, 
         421, 419, 417, 411, 409, 404, 399, 403, 347, 402}], 
        LineBox[{832, 822, 820, 815, 788, 776, 732, 715, 682, 666, 636, 627, 
         628, 631, 632, 638, 639, 559, 694, 608}], 
        LineBox[{221, 247, 268, 314, 320, 272, 261, 266, 277, 279, 286, 337, 
         345, 390, 393, 434, 437, 439, 443}], 
        LineBox[{650, 609, 612, 615, 655, 654, 704, 699, 757, 744, 751, 764, 
         769, 766, 720, 726, 774, 782, 818}], 
        LineBox[{367, 379, 414, 430, 457, 463, 467, 473, 436, 426, 387, 373, 
         372, 369, 367}], 
        LineBox[{577, 617, 621, 660, 663, 671, 673, 675, 667, 633, 623, 594, 
         588, 584, 577}]},
       "57500"],
      Annotation[#, 57500, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{220, 246, 267, 313, 319, 271, 260, 265, 276, 228}], 
        LineBox[{398, 392, 344, 336, 285, 290}], 
        LineBox[{401, 346, 350, 355, 358, 363, 365, 362, 317, 310, 250, 240, 
         203, 205}], 
        LineBox[{607, 693, 687, 686, 681, 680, 683, 721, 735, 784, 791, 821, 
         831}], LineBox[{701, 649, 703, 698, 756, 804}], 
        LineBox[{808, 750, 763, 768, 765, 719, 725, 773, 781, 817}], 
        LineBox[{378, 366, 368, 385, 420, 424, 425, 435, 472, 466, 462, 456, 
         429, 413, 378}], LineBox[{576, 616, 620, 626, 619, 583, 576}]},
       "55000"],
      Annotation[#, 55000, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{202, 199, 238, 242, 245, 249, 309, 312, 356, 357, 354, 353, 
         300, 295, 292, 349}], LineBox[{222, 252, 259, 264, 275, 227}], 
        LineBox[{814, 775, 767, 762, 749, 807}], 
        LineBox[{834, 826, 795, 786, 734, 723, 688, 685, 691, 731, 740, 742, 
         646}], LineBox[{289, 284, 335, 343, 391, 397}], 
        LineBox[{700, 648, 702, 697, 755, 803}]},
       "52500"],
      Annotation[#, 52500, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{288, 283, 334, 342}], 
        LineBox[{348, 291, 294, 299, 302, 301, 241, 237, 198, 201}], 
        LineBox[{645, 741, 739, 730, 729, 722, 733, 785, 794, 825, 833}], 
        LineBox[{746, 696, 754, 802}], LineBox[{224, 263, 274, 226}], 
        LineBox[{806, 748, 761, 813}]},
       "50000"],
      Annotation[#, 50000, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{200, 194, 236, 231, 229, 293}], 
        LineBox[{223, 262, 273, 225}], 
        LineBox[{695, 799, 798, 800, 830, 835}], 
        LineBox[{812, 760, 747, 805}]},
       "47500"],
      Annotation[#, 47500, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[{230, 197}], 
        LineBox[{836, 743}]},
       "45000"],
      Annotation[#, 45000, "Tooltip"]& ], {}, {}}}],
  AspectRatio->1,
  BaseStyle->{FontSize -> 20, FontColor -> GrayLevel[0]},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{
     FormBox["\"\[Beta]\"", TraditionalForm], None}, {
     FormBox["\"\[Alpha]\"", TraditionalForm], None}},
  FrameStyle->GrayLevel[0],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotLabel->FormBox[
    TagBox[
     RowBox[{"\"r\"", "=", "0"}], HoldForm], TraditionalForm],
  PlotRange->{{-1.5707963267948966`, 
   1.5707963267948966`}, {-1.5707963267948966`, 1.5707963267948966`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7657832542077923`*^9, 3.7657986284542685`*^9, 
  3.7657987233232193`*^9, 3.7657988955489483`*^9, 3.7657992069954967`*^9, 
  3.7657994715480447`*^9, 3.7657996123138695`*^9, 3.7657998308446646`*^9, 
  3.765799916639358*^9, 3.7658687855789237`*^9, 3.765869416560335*^9, 
  3.765869656992364*^9, 3.7658716874731274`*^9, 3.765872883405876*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalOmega]freeplot", "[", 
  RowBox[{"0", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.7658699264504747`*^9, 3.7658699274033794`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "ArcTan","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"ArcTan\\\", \\\"[\\\", \
RowBox[{\\\"0.`\\\", \\\",\\\", \\\"0.`\\\"}], \\\"]\\\"}]\\) encountered.\"",
   2,330,35,31933153767314332663,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.765869960504777*^9}],

Cell[BoxData[
 TemplateBox[{
  "ArcTan","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"ArcTan\\\", \\\"[\\\", \
RowBox[{\\\"0.`\\\", \\\",\\\", \\\"0.`\\\"}], \\\"]\\\"}]\\) encountered.\"",
   2,330,36,31933153767314332663,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7658699605516415`*^9}],

Cell[BoxData[
 TemplateBox[{
  "ArcTan","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"ArcTan\\\", \\\"[\\\", \
RowBox[{\\\"0.`\\\", \\\",\\\", \\\"0.`\\\"}], \\\"]\\\"}]\\) encountered.\"",
   2,330,37,31933153767314332663,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.765869960582883*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ArcTan\\\", \\\"::\\\", \
\\\"indet\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,330,38,31933153767314332663,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.765869960598505*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1: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
HP3DQgcqZzkkrI83A+Od74n39KoY/g9qOLII
     "], {{{
        EdgeForm[], 
        RGBColor[
        0.14800000000000055`, 0.33000000000000035`, 0.5400000000000006], 
        GraphicsGroupBox[{
          
          PolygonBox[{{327, 105, 508}, {312, 92, 329}, {328, 105, 343}, {510, 
           92, 313}, {343, 105, 519}, {519, 105, 330}, {311, 92, 498}, {313, 
           92, 311}, {329, 92, 510}, {330, 105, 327}, {498, 92, 312}, {508, 
           105, 328}}]}]}, {
        EdgeForm[], 
        RGBColor[0.3327130486043175, 0.4206339787427314, 0.6234849810121584], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJwtkDFOglEQhN/7qaywojKoCfEC8ptAL40GEgoCGBsrY6EFBRchoQcJNTba
AAauAQkSL2CgouIbd4vJTDa7s7N7+fRWf01CCAWQAYcYwjNcgd/BB7pIwxx9
il6CW+9R7wWooX/hFDyg/+A8qKK38ABM0Nf4rOAzMKU2BiN0Sv0LrRwL8Bhs
Vr57979yj28wB5tgeZSrBV7QJxj8wFkwo1ZKrPcTvfa9O/eSp7JrRrP30bJq
7zl8Fy2HQimrZtd+m268gTugi84ldpvyDaPNaLYc7Y/6VSNan/rb6Oj5s84+
9n+ffPT3pvtrT89/1Y/2L2nVjrxxMZw=
           "]], 
          
          PolygonBox[{{314, 93, 79, 500}, {446, 15, 16, 224}, {419, 177, 191, 
           569}, {327, 91, 106, 330}, {342, 104, 119, 344}, {311, 78, 93, 
           313}, {484, 79, 78, 286}, {343, 119, 104, 328}, {329, 106, 91, 
           312}, {195, 16, 2, 440}, {564, 178, 177, 418}}], 
          
          PolygonBox[{{310, 91, 327, 508, 509}, {287, 78, 311, 498, 499}, {
           509, 508, 328, 104, 325}, {332, 106, 329, 510, 511}, {499, 498, 
           312, 91, 309}, {346, 119, 343, 519, 520}, {520, 519, 330, 106, 
           345}, {511, 510, 313, 93, 331}}]}]}, {
        EdgeForm[], 
        RGBColor[
        0.5463141904872901, 0.4957014726952138, 0.49791753658255156`], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJw1k79L1HEYxz/PVwqzc/Amo7Su0UuHsKBcimrSCwkUO8GhRSQ4l5SaWrwi
mi0c1VpausFBEA5BonOv07Yz/AMELWwQfb15noY37/c938/n8/x4P1d4Nvuk
kqWUhkEbmLeUXsGXCGZgCj1E7AtYQ3+GB+Cr4BoocmYJfke8A/0c/Ri9bf79
N3iKfgm38/0m+IpeJnYCyujb8Ef4E1gFK2ARfIg8ytcPuiKnYjtRxzE4iHcG
4ddgQWfIs4Cu6g66N964Ab4T74OPkp+dU9/gRdTZrfPoe+h9+BCU9Cb8B4yq
b/gyGEG34By4j/4F98T5Pfh85u+PmefuSV6Lfis+Y15Xb/T1A+RAE3REDbtw
IfOZvDHvR33NoSfMax8390BevDef3f9Z6ns1en3At2n4n2Zj/qbeHjb37hR+
G/evZ74H2ofJuDcf81oNf+RbJWau2T8KL+RtA86Db6BkvkvaqWLMsGDep/rd
MN8Pzb+MPhfz+gkfxd278IXwXf6vmNcxyL1WzLAee9cVuTfNuRG9qccR+G/s
gvLcCr/k8x3eqqk/1RPeNOF68r2txf8kHzm0x4qvme+B9uGKuWfy7qL5nmnf
2tDr5ve2wgPN9CHcGfujPToD625gmg==
           "]], 
          PolygonBox[CompressedData["
1:eJwtkUsrBGAUhs8ZkplQrJTbDCULbBglG0pWlCzkUhY2khoLmcx+ZPbC3kxZ
UiaUDLks/ABqysLID6Dclp7T+RZP532/y/nOOV9ieX0mFRGRHqiGJxXpJfZB
LXoEltDT8I1+IDZBFdzDFWv1xAZ4gSjJMsQtmGevW/2u5fhC34a7jXCBfyPG
Q84bfAf3s+htyOLzcII+hAH2folt4jX+QCv7k8QF+EA3R/xtqyGNL8IxugRn
6EuoE6+5DIlQ35itof+I/aGmR3wn+fbRe1YTvgt/IL62g99QrzUNc+gStIca
K7CLL4jfyaGvrUfxM6+QJF+ReApH7A2p92I9faJXYVN8Jil0XL1Wq9lmW4Gp
cL4F/az+d9ZDFL2oPos1iPHWO3409Gu5ztVnYzMeZn9WvZcVmLDZqt/NhL8t
h/ctR0y9Rnvbakiq/5H9Vd7+DD8YcW0zKODvwt/bDGwW4+pvWY81nP0HO1hG
tQ==
           "]], 
          
          PolygonBox[{{421, 180, 565, 404, 405}, {405, 404, 407, 153, 555}, {
           222, 221, 243, 42, 455}, {507, 506, 326, 103, 323}, {373, 133, 371,
            534, 535}, {334, 107, 331, 512, 513}, {267, 64, 286, 482, 483}, {
           483, 482, 287, 77, 285}, {513, 512, 314, 94, 333}, {308, 90, 325, 
           506, 507}, {217, 13, 445, 221, 222}, {535, 534, 346, 120, 
           372}}]}]}, {
        EdgeForm[], 
        RGBColor[0.7599153323702628, 0.5707689666476962, 0.3723500921529446], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJwtkz9IlWEUxr/zKVIKDgklXCPsD2EF/rkhodcCbVJMui2JQxDUZDakgrel
QU1tyP4Mjbk1iIvWJmQUYuFmQS2SFXGnXOxKNvh7OGd4eJ7zvee873nO+371
N+/mh9IkSfKgDDwEz8EzaUuSGfgECRPoafRx9Bq6Eb0L6kFT4vEK32vgNXAp
vjcDo2YQvsJ6F+hH78F7cAv4hH5rvtcW+Bd1H/n2Fz4LSmCYeBI+wn7j6Cfo
Y+hR875r0Tm4B3RHnvJHWM+gZ9EPzL1NhtfHsU8D6z/hU+Cdee/ycDHQGH52
WLsBt8N/wHV01vw8+VLcZD7Pc+az0ExWY646cwpssHYBLodLka+6XXAb3Qmf
pKdH6DH0trmvupi9euoAs8RP4TPkFqN/+agkLsADrFeaz/lrzL47ZvSSeAFe
hL+BLPp/+Nc+v8FcvAX1/orvr+FW9i4H99DX+PbDfFZV5n7k6zC8HvsU4751
9nm4ito76D50LryX4m51lvzcT/zNKE8+pmNuteS1wZtwc+r9y8fR6EG9qHYm
auajZ/WeMZ/bd92hef/Vqc+jPfG3UxH765zB6KMQPpWvurLU30AH+qB53Rf4
FhhGH0r9znR3Bfi97hl8kAfiF/IZ/1MhznhDvAwvwafBVfQvuDf60D+Ujx40
+wPmPX82f2eaYRGuSP39XI73kot3sg/ylGwD
           "]], 
          PolygonBox[CompressedData["
1:eJwtkztszmEUh9/zp3VpWSyKRr8mjcsn0dtES1IG0dD4EgkhkUhICO3QItGh
Cy1dVC92A6MFk0oY9Ptou2mrBrcOjUkHGsXg+eWc4cn7O+/tnPec8+bOdxU6
s5TSEVgNtRh3GQdhwFLaiT2Evg/3sL9AK/oAbEV/NdcHoRo9F+stsA69m/PD
6BHdgT0FTehG+Aufsfcx7ocq9AqcQp+GQ+gyzvegu6GA/QEa4vx69L/k99XB
NPZm9g+g+6EHe9Y8Ft2/Fr0r87copiHs71BAn4Ad6Enzu+XjD7wLf/WwAjPm
dynmMnQV991J7vM69nycV0yV6BnG9zALc5Cx/yrjFTjGei3kYANs1N1wLvke
7W2KfFyE3+Y+5TsPy5qDvclzrty3me9VzpS7XMSnmt5mbQ92XjVGD8IwPGTt
id7M/Bbso8l9/kDnzXOjmH5pr/lenWlk/zPsl3FeayUowk/th2bzWrbDEvoj
4zx8Uu1hjflb9KZy9HHz3NxUfTPPmXL3gvlxeBN9uglK0TOqh2JW7NvMfSkf
6tUK895UDdU7C4y5OP8a+5p5r6gfavD3GPsRjMEDuGH+F3rhbMSgWPQGveVb
3KcavDXvkfqYk69i+FLME8nv1N2qgWpRE/9DPXmL+eXIt3qyBb09+lV/sA/7
aeRfOX9unkPlshi51x8bifqotqXwr3heYR+O/lB99dcW4++oX/U3W6P/FINi
OWNeC/WQer3DvDe1ZxV2P/ZorKvXLmNfgk7oUk9n/nfVjxfMc9gb/V3B2knz
NcVUjv0fQTyEAQ==
           "]], 
          
          PolygonBox[{{367, 366, 383, 144, 539}, {566, 181, 426, 421, 422}, {
           270, 269, 268, 51, 474}, {530, 116, 341, 361, 362}, {394, 393, 395,
            139, 548}, {485, 81, 299, 289, 290}, {245, 244, 259, 56, 
           468}}]}]}, {
        EdgeForm[], 
        RGBColor[0.9117438457273539, 0.6493596143183846, 0.326405921754797], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNkztMlFEQhf/5DVBQChi0QjABo4WQQEx8hUKhIpC4NGLQQLvYQbFCb0h8
FBQUSEUDxMJgITQ2QJAYs7GyoaCgNBYQH43fyZzC4suZ+++9d2bOne14OjNW
LYuiGIVz0AIN0AhP4BnM6Dc2VdGRKIohdBwqcASX4Dscw2X4Dc3sr6GP2P8H
7YTPxOvwgXigzPMPirxv0nmU4y90wWHk79r3EH5F5u2LzKe8O8Tb6AZswkdY
91o9tLqnlcjv79CAAeLz6H7kPerjBjWtom8i73pb5PoC6/toL1r3Wd2huqZh
yj2r9wO+12CReC6yp3l47vs2XZvYdr36tuP1Rc4Mo+2R/cuHE+2xb/Lvpj2T
N41eN6Fbkfe8j+xBtb/2HfKhDX74fuU5i/T9Nno38r3voEuwRrwWWeeKax93
Xp2v641Vf+TbtjjHWKQnDXg5QbxA/DjyXeVBzVr1e7f6nZrgZWSu7jLrVv1X
ie9FejyKXme9TLxIvAs9xD81L/7+wp5Pen5vuUf1Ou+cmulvPnsKu0XO/J7r
6fK8XivTB/nxKfJ9j92behyM9Eh7+vn2xR4fwqtIz3rK7K3tv1ns9KxMea4r
9njDs/vV3tY9XxV73+63O1I99lE96T8mX2fRK2XOnmbwH2ikbG0=
           "]], 
          PolygonBox[CompressedData["
1:eJwtkj1ok1EUhu/9THUQErAShXapiWgkAYOFULD0Zyh2aqlKJ/EHdUgh7Vil
oF1Loa51sJlcpJTSTVzaodW0dRAnHVwaJVmKgyj+gM/bc4aH7z3nXr5zzntP
z73piVoSQuiFFDyMITyAUyQ7YRa9SP4J3EIP6xw9Cb/QC/Ac/RKK3C/ACvoF
LHF2ibgeLPeMeAqqMA0z0WqoVtXPfnCvAF3wlvi7xxX4QLwLOXQe/kCO+Byk
IQNZGPH7KfQGvEGvQh09BDfR92EwWu7oDMr08TjarJr5EfoLjKKvwVl0P9xB
1+AY9xuqH6yn31AiLkIL2rAczRt5VOL+Ht8snIAGZMilE/Nc3qcS600eTxD/
hLvBal5Fl+Gy11Ctb+6F/rnlHsiLT/AZ1uAVZ69hHX0RLkATvjpN91Bedkbz
Th6e0axwO1qP6vU9el/zcd52jxZ9vjzn7/ieDubJpnvQ8pqqPa53DzbTAPpK
tF2Sx4fobv7RBU/R8zAWzes5OJnYzmh3dEd3/5H/G6wn9baD7vAe1MsNctd9
Bs2iN9Rb9sFxeeS7ph3bjrYzFY8/RptRsx5AU3vh+66ZzyfmsbxWD+rlP2sg
Xbc=
           "]], 
          
          PolygonBox[{{425, 424, 566, 166, 409}, {442, 11, 213, 215, 216}, {
           567, 182, 428, 424, 425}, {318, 97, 503, 304, 305}, {216, 215, 444,
            27, 219}, {229, 228, 450, 22, 206}, {337, 100, 516, 339, 
           340}}]}]}, {
        EdgeForm[], 
        RGBColor[0.9458654338875732, 0.7346635847189329, 0.4321828450514767], 
        GraphicsGroupBox[{
          
          PolygonBox[{{454, 26, 219}, {69, 84, 83}, {425, 167, 567}, {538, 
           128, 355}, {211, 25, 237}, {237, 25, 453}, {305, 83, 318}, {319, 
           98, 336}, {99, 114, 113}, {279, 69, 275}, {557, 167, 409}, {410, 
           168, 558}, {478, 69, 276}, {98, 83, 84}, {219, 26, 216}, {441, 25, 
           211}, {340, 114, 337}, {413, 168, 410}, {216, 26, 442}, {409, 167, 
           425}, {320, 99, 321}, {568, 168, 413}, {349, 128, 376}, {128, 113, 
           114}}], 
          PolygonBox[CompressedData["
1:eJwt0b0vg1EUx/F7nxglmrSJEAZpiQ46WGxY/AHoWqk2qYF4m0kws5sYSQxe
RrvFS5vUqGtJHhFhr/j+cs7wSc9z73NPn/O7Y7Wtpc0khFBAH25iCNe4xR1e
WHvGI57whx6a7LWwhgayNMnhg/odeRQwytoIDqmPtMfZrs6jhRXWdvg9QIX6
FW1EJLjHMHtDaOMhWq21b3zynGISRWQwgDd0sIqq1viGDGaplzlXwxx1CVPe
Q71yWAj2zhf1NMrB1ga9p3r3PIsN6nVsaw6nWjNr9nPqM89U2f5y5ifYjJpV
mSk79VAvfaO+teHZKmNlnWpWz6zpd6K7KfrsylzZ16NluYv+xO4g75komxMc
Y5y9CZRwybsXOI22pr096v1o/5n6nenuFqP1rmOeeiaxs+pxxfM/udxKTA==

           "]], 
          
          PolygonBox[{{381, 380, 376, 128, 538}, {408, 167, 557, 396, 397}, {
           209, 208, 210, 25, 441}, {493, 83, 305, 301, 302}, {258, 257, 275, 
           69, 478}, {430, 429, 427, 168, 568}, {524, 114, 340, 352, 353}, {
           239, 26, 454, 241, 242}}]}]}, {
        EdgeForm[], 
        RGBColor[0.9799870220477924, 0.8199675551194809, 0.5379597683481564], 
        GraphicsGroupBox[{
          
          PolygonBox[{{170, 185, 184}, {478, 54, 258}, {184, 169, 170}, {9, 
           24, 23}, {551, 141, 382}, {232, 24, 452}, {239, 40, 453}, {242, 40,
            239}, {467, 40, 242}, {568, 183, 430}, {256, 54, 274}, {412, 169, 
           559}, {408, 155, 558}, {550, 155, 397}, {538, 141, 381}, {207, 23, 
           230}, {441, 10, 209}, {465, 54, 256}, {382, 141, 379}, {24, 9, 
           10}, {434, 185, 432}, {397, 155, 408}, {203, 8, 205}, {169, 184, 
           183}, {23, 8, 9}}], 
          PolygonBox[CompressedData["
1:eJwt0L1OAkEQwPHdCwUhXsIlR6SRhMQvKDgq4nP4Bp4mWKBEexut4QWUUGtl
R6ipDRBarI+Ew/gE4n8yU/xyM3u7s7NTT/uX94FzroYCnrxzA76vOOVHDUd4
Zv0FTTSQYYMR3tk7wQX7FuRzbMlzJMQtyZGjghg7/OAExygjsj1bu0Pu+qJG
EYeYOz2zs5qJ9ZBZDan1y55zdLAkD+npAFfEKdrEH057fiP/xhp/5HvMvN5V
xQYV9sfosX6HT0yd1hgTr2xvCVPyodfZyQzPAq0ptWUmC+tBeinzL8Ij8YPX
GcusA6+9yxtWxDe49vqG0M7I2S5rt0Zi6VF6jWyWa3ub9NyzO+Sufwd5OQs=

           "]], 
          
          PolygonBox[{{379, 141, 538, 355, 356}, {411, 410, 558, 155, 398}, {
           236, 235, 230, 23, 451}, {238, 237, 453, 40, 240}, {274, 54, 478, 
           276, 277}, {559, 169, 413, 410, 411}, {452, 24, 211, 237, 
           238}}]}]}, {
        EdgeForm[], 
        RGBColor[1., 0.95, 0.75], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJw1ULENwkAQ+39qiiClRQKJINGEIiwQMgEjRBQ0gERLBfTJAMA0MAAMQE8R
oWwAts4Uli8++/4ug3K72ATn3BDoAEvv3AG8B6+BE+oYhifqMeoWmAMZMAO6
wfzM3YAEdQNcgQqoxfQcgVLzmaul8Y23syxnXLzlp8HeoM63z+yBU+gfaXdo
lXT2W+ns77Q/73h42/nLfjA/cxNv9zTgEZBzF287cwf6Vt72jJCL5KG3H2z+
Tv3/rSm+C+4AjlX3wC9lOYN3FfqXif5lJlDLlaeHM37eHC3w
           "]], 
          
          PolygonBox[{{274, 68, 53, 256}, {492, 67, 68, 303}, {533, 131, 130, 
           360}, {256, 53, 39, 465}, {382, 142, 156, 551}, {529, 130, 129, 
           354}, {452, 39, 38, 232}, {387, 143, 131, 542}, {236, 38, 52, 
           464}, {559, 156, 157, 412}, {379, 129, 142, 382}, {488, 66, 67, 
           298}, {255, 52, 66, 477}}]}]}}, {{}, 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{560, 412, 559, 411, 398, 551, 382, 379, 356, 525, 354, 529,
            360, 533, 365, 370, 542, 387}], 
          
          LineBox[{451, 236, 464, 255, 477, 273, 293, 488, 298, 492, 303, 494,
            277, 274, 256, 465, 240, 238, 452, 232, 451}]}, "50000"], 
        Annotation[#, 50000, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{209, 441, 211, 237, 453, 239, 242, 467, 258, 478, 276, 493,
            302, 491, 297, 487, 292, 272, 476, 254, 463, 235, 230, 207, 205, 
           203}], 
          LineBox[{415, 432, 434}], 
          
          LineBox[{430, 568, 413, 410, 558, 408, 397, 550, 381, 538, 355, 524,
            353, 528, 359, 532, 364, 369, 541, 386}]}, "48000"], 
        Annotation[#, 48000, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{202, 204, 206, 229, 234, 462, 253, 475, 271, 291, 486, 296,
            490, 301, 305, 318, 319, 336}], 
          
          LineBox[{306, 279, 275, 257, 466, 241, 454, 219, 216, 442, 210, 
           208}], 
          
          LineBox[{321, 320, 337, 340, 352, 527, 358, 531, 363, 368, 540, 
           385}], 
          
          LineBox[{350, 349, 376, 380, 549, 396, 557, 409, 425, 567, 427, 
           429}], 
          LineBox[{433, 431, 414}]}, "46000"], 
        Annotation[#, 46000, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{198, 199, 201, 449, 227, 249, 458, 250, 459, 251, 460, 231,
            450, 228, 233, 461, 252, 474, 270, 290, 485, 295, 489, 300, 304, 
           503, 316, 502, 317, 515, 335, 523, 348, 375}], 
          LineBox[{213, 215, 444, 218, 223, 456, 245, 468, 260, 278}], 
          
          LineBox[{263, 262, 280, 479, 281, 282, 495, 307, 504, 322, 517, 338,
            516, 339, 351, 526, 357, 530, 362, 367, 539, 384}], 
          LineBox[{378, 377, 548, 394, 556, 406, 422, 566, 424, 428}], 
          LineBox[{437, 435, 416, 561, 402, 401, 554, 400, 553, 399, 552}]}, 
         "44000"], Annotation[#, 44000, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{196, 197, 200, 448, 226, 457, 248, 471, 265, 470, 264, 469,
            261, 246, 247}], 
          LineBox[{259, 244, 455, 222, 217, 443, 214, 212}], 
          LineBox[{390, 545, 389, 546, 391, 547}], 
          LineBox[{403, 392}], 
          LineBox[{395, 393, 555, 405, 421, 426}], 
          LineBox[{438, 436, 417, 562}], 
          
          LineBox[{472, 267, 483, 285, 481, 283, 480, 284, 496, 308, 507, 323,
            505, 324, 518, 341, 361, 366, 383, 543, 388, 544, 373, 535, 372, 
           536, 374, 537, 347, 522, 334, 513, 333, 514, 315, 501, 299, 289, 
           269, 268, 473, 266, 472}]}, "42000"], 
        Annotation[#, 42000, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{194, 440, 195, 447, 224, 446, 225}], 
          LineBox[{220, 445, 221, 243}], 
          LineBox[{407, 404, 565, 423}], 
          LineBox[{420, 564, 418, 563, 419, 569, 439}], 
          
          LineBox[{482, 287, 499, 309, 497, 310, 509, 325, 506, 326, 342, 344,
            371, 534, 346, 520, 345, 521, 332, 511, 331, 512, 314, 500, 294, 
           288, 484, 286, 482}]}, "40000"], 
        Annotation[#, 40000, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{498, 312, 329, 510, 313, 311, 498}], 
          LineBox[{508, 328, 343, 519, 330, 327, 508}]}, "38000"], 
        Annotation[#, 38000, "Tooltip"]& ], {}, {}}}], {
    DisplayFunction -> Identity, AspectRatio -> 1, DisplayFunction :> 
     Identity, Frame -> True, FrameLabel -> {{
        FormBox["\"\[Beta]\"", TraditionalForm], None}, {
        FormBox["\"\[Alpha]\"", TraditionalForm], None}}, FrameStyle -> 
     GrayLevel[0], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {"DefaultBoundaryStyle" -> Automatic}, 
     PlotLabel -> FormBox[
       TagBox[
        RowBox[{"\"r\"", "=", "0"}], HoldForm], TraditionalForm], 
     PlotRange -> {{1., 14.}, {1., 14.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \\(free\\)]\\)\
\"", {FontSize -> 20, FontFamily -> "Arial"}, Background -> Automatic, 
                StripOnInput -> False]}, {
               GraphicsBox[{{}, {}, 
                 
                 RasterBox[{{{0.148, 0.33, 0.54}}, {{0.3327130486043175, 
                  0.4206339787427314, 0.6234849810121584}}, {{
                  0.5463141904872901, 0.4957014726952138, 
                  0.49791753658255156`}}, {{0.7599153323702628, 
                  0.5707689666476962, 0.3723500921529446}}, {{
                  0.9117438457273539, 0.6493596143183846, 
                  0.326405921754797}}, {{0.9458654338875732, 
                  0.7346635847189328, 0.43218284505147664`}}, {{
                  0.9799870220477924, 0.8199675551194809, 
                  0.5379597683481564}}, {{1., 0.95, 0.75}}}, {{
                    Rational[-15, 2], -125}, {
                    Rational[15, 2], 125}}], {Antialiasing -> False, 
                  AbsoluteThickness[0.1], 
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]], 
                  LineBox[
                   NCache[{{
                    Rational[15, 2], -125}, {
                    Rational[-15, 2], -125}, {
                    Rational[-15, 2], 125}, {
                    Rational[15, 2], 125}, {
                    Rational[15, 2], -125}}, {{
                    7.5, -125}, {-7.5, -125}, {-7.5, 125}, {7.5, 125}, {
                    7.5, -125}}]]}, {
                  CapForm[None], {{
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -93.75}, {
                    Rational[15, 2], -93.75}}, {{-7.5, -93.75}, {
                    7.5, -93.75}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -62.499999999999886`}, {
                    Rational[
                    15, 2], -62.499999999999886`}}, {{-7.5, \
-62.499999999999886`}, {7.5, -62.499999999999886`}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -31.249999999999886`}, {
                    Rational[
                    15, 2], -31.249999999999886`}}, {{-7.5, \
-31.249999999999886`}, {7.5, -31.249999999999886`}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 0.}, {
                    Rational[15, 2], 0.}}, {{-7.5, 0.}, {7.5, 0.}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 31.25}, {
                    Rational[15, 2], 31.25}}, {{-7.5, 31.25}, {7.5, 
                    31.25}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 62.5}, {
                    Rational[15, 2], 62.5}}, {{-7.5, 62.5}, {7.5, 62.5}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 93.75}, {
                    Rational[15, 2], 93.75}}, {{-7.5, 93.75}, {7.5, 
                    93.75}}]]}}}, {Antialiasing -> False, 
                  StyleBox[
                   
                   LineBox[{{7.5, -124.99999999999989`}, {7.5, 
                    125.00000000000001`}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -93.74999999999989}, 
                    Offset[{4., 0}, {7.5, -93.74999999999989}]}, {{
                    7.5, -62.49999999999988}, 
                    Offset[{4., 0}, {7.5, -62.49999999999988}]}, {{
                    7.5, -31.24999999999988}, 
                    Offset[{4., 0}, {7.5, -31.24999999999988}]}, {{7.5, 
                    1.2711282134137774`*^-13}, 
                    Offset[{4., 0}, {7.5, 1.2711282134137774`*^-13}]}, {{7.5, 
                    31.25000000000013}, 
                    Offset[{4., 0}, {7.5, 31.25000000000013}]}, {{7.5, 
                    62.500000000000135`}, 
                    Offset[{4., 0}, {7.5, 62.500000000000135`}]}, {{7.5, 
                    93.75000000000001}, 
                    Offset[{4., 0}, {7.5, 93.75000000000001}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["38000", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -93.74999999999989}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["40000", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -62.49999999999988}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["42000", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -31.24999999999988}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["44000", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 1.2711282134137774`*^-13}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["46000", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 31.25000000000013}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["48000", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 62.500000000000135`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["50000", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 93.75000000000001}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], FontSize -> 20]}, StripOnInput -> 
                    False]}, {}}, {
                    Directive[
                    Opacity[1], FontSize -> 20]}, StripOnInput -> False], 
                    "GraphicsLabel", StripOnInput -> False]}, "GraphicsTicks",
                     StripOnInput -> False], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                Scaled[0.02], PlotRange -> All, Frame -> True, 
                FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                Opacity[0], FrameTicksStyle -> Opacity[0], 
                ImageSize -> {Automatic, 250}, BaseStyle -> {}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 20, FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"36984.907321120714`", ",", "51638.3870376049`"}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"38000.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"40000.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"42000.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"44000.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"46000.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"48000.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"50000.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}], ",", 
           
           RowBox[{"LegendLabel", "\[Rule]", 
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \
\\(free\\)]\\)\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "250"}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7658699736892157`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Effective", " ", "Magnetic", " ", "Field", " ", "Vector", " ", 
  "Components"}]], "Input",
 CellChangeTimes->{{3.765869642511411*^9, 3.7658696510874968`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "=", "1"}], ";", " ", 
  RowBox[{"b", "=", " ", 
   RowBox[{"Pi", "/", "4"}]}], ";", 
  RowBox[{"r", "=", "1"}], ";"}]], "Input",
 CellChangeTimes->{{3.765780937661762*^9, 3.765780962204052*^9}, {
  3.7657810548709555`*^9, 3.7657810804130297`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", " ", 
   RowBox[{"Pi", "/", "4"}]}], ";", " ", 
  RowBox[{"b", " ", "=", " ", 
   RowBox[{
    RowBox[{"-", "Pi"}], "/", "4"}]}], ";", " ", 
  RowBox[{"r", "=", " ", "1"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"udsmintest", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "zf"}], "}"}], ",", " ", 
         RowBox[{
          RowBox[{"UDsim", "[", 
           RowBox[{"x", ",", "y", ",", "zf", ",", "a", ",", "b"}], "]"}], "/",
           "Er"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"-", "1"}], 
          RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
         RowBox[{"1", "*", " ", "1", 
          RowBox[{"\[Lambda]", "/", "2"}]}], ",", " ", 
         RowBox[{"\[Lambda]", "/", "10"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{
          RowBox[{"-", "1"}], 
          RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
         RowBox[{"1", 
          RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
         RowBox[{"\[Lambda]", "/", "10"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"zf", ",", 
         RowBox[{
          RowBox[{"-", " ", "1"}], 
          RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
         RowBox[{"1", 
          RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
         RowBox[{"\[Lambda]", "/", "10"}]}], "}"}]}], "]"}], ",", "2"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"res", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Pick", "[", 
        RowBox[{"#1", ",", "#2", ",", 
         RowBox[{"Min", "[", "#2", "]"}]}], "]"}], "&"}], "@@", 
      RowBox[{"Transpose", "[", "udsmintest", "]"}]}], ")"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"mi", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"0", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", " ", 
       RowBox[{"res", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
      RowBox[{"y", " ", "\[Rule]", " ", 
       RowBox[{"res", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
      RowBox[{"zf", " ", "\[Rule]", " ", 
       RowBox[{"res", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ecrosss", "[", 
      RowBox[{
       RowBox[{"x", " ", "/.", " ", 
        RowBox[{"mi", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", 
       RowBox[{"y", "/.", " ", 
        RowBox[{"mi", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", 
       RowBox[{"zf", "/.", " ", 
        RowBox[{"mi", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b"}], "]"}], "/", 
     RowBox[{"(", 
      RowBox[{"0.7", "*", "el", " ", 
       RowBox[{"hbar", "/", 
        RowBox[{"(", 
         RowBox[{"2", " ", "me"}], ")"}]}]}], ")"}]}], " ", "*", " ", 
    SuperscriptBox["10", "4"], "*", 
    SuperscriptBox["10", "3"]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", " ", 
     RowBox[{
      RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
     RowBox[{"Pi", "/", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", " ", 
     RowBox[{
      RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
     RowBox[{"Pi", "/", "2"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", " ", 
    RowBox[{"BarLegend", "[", 
     RowBox[{"All", ",", "None", ",", 
      RowBox[{"LegendMarkerSize", "\[Rule]", "250"}], ",", " ", 
      RowBox[{
      "LegendLabel", " ", "\[Rule]", " ", 
       "\"\<|\!\(\*SubscriptBox[\(B\), \(eff\)]\)| (mG)\>\""}], ",", " ", 
      RowBox[{"LabelStyle", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"FontSize", " ", "\[Rule]", " ", "20"}], "}"}]}]}], "]"}]}]}],
   "]"}]}], "Input",
 CellChangeTimes->{
  3.7651152315239987`*^9, {3.76511526310161*^9, 3.7651153251454353`*^9}, {
   3.765115851659563*^9, 3.7651158971115637`*^9}, 3.765115993046563*^9, {
   3.7651160297925634`*^9, 3.7651160307035637`*^9}},
 ExpressionUUID -> "59b5d29f-da7c-46dc-9d30-d9e591aa5659"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.765115232147987*^9, {3.765115271619046*^9, 3.7651153256914253`*^9}, {
   3.765115846131563*^9, 3.7651158979905634`*^9}, 3.7651159946415634`*^9, 
   3.7651160310945635`*^9},ExpressionUUID->"01f29df0-3279-404b-b496-\
f1d8f47a10d0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "3.4084000000000003`*^-7"}]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{"-", "4.2605000000000003`*^-7"}]}], ",", 
     RowBox[{"zf", "\[Rule]", 
      RowBox[{"-", "2.5563`*^-7"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.765115232147987*^9, {3.765115271619046*^9, 3.7651153256914253`*^9}, {
   3.765115846131563*^9, 3.7651158979905634`*^9}, 3.7651159946415634`*^9, 
   3.7651160311755633`*^9},ExpressionUUID->"93eb487f-9a93-426f-a83c-\
6a130e0e27c1"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
mimRCSzuZfdDRrbMC/zAvJNqr55sSuftNtwDlLg89pOFO4sTiJXPBOmC2Fra
o8OI4NwrvN3+LbcvqfxKg5LkQXzcBd97zU870CMlmI+7fsvha1p3Xm5+fZgD
sjNV1MnddeXl/nzcpd5J3aW5z63TmexTh9byfg3mlZb/5HZbjY+vYN7EE3M0
hZZ8fAXzzrDbdk73iROyJ/y8wA/Mm6g1fOYkJT6+avlOH22d+KpT4kU+TjC8
+tii+Vyg7MHWqx+M+Djh9349oVzbg6UFqnzcDt+x9e1n+vnsaD5u/83/c+o1
8NbIiul83A73cC4/rau52oSP2+FXpcsVHfvjfBwF8+pM69H7ghwft8O8o6/v
umtpy8ftMO/H3bFt+7dyQX6fnxf4gXl3LRv5vqMBH7fD91KrH3edJFXFx5+/
9e4F3aX2tpX1ND7+/L2eQjpHc8V/nldtURxVRENClfJDuvL53e/x79CEoStd
Vw90RH7/Ho3cI2uZ+I2XExjfZMncpBehf31/lvqcXywzvI7nAcZ/VtEnL+uM
C/LX/PjAw295e0DtfYfJjGvtiPxOCXXdpLn83CV7FG/vpM+58MCB7fm8/jee
RhPVX2zfM9oBxTmZ1FBqVKsrC3E+m0NbX1sULjOaz2d//69LdLhX9YdJNTiP
20lTroxK9VqM87g0akk0a870dUNxSybNSL5p0fozzuP4ecXjwEv05M2Q40Nm
OqK45Rrd6tH9wI1RDig+EZHyuSZefk/5fW95nsQfHvQ5ws4Bxc+XCIyPeCCY
h5b1E/H18+/X9N994PC0cJ4HmPdia+GOfoo8DzBvL7ccuYI2rpgHgnmAeWG/
4P/+thul5PiRyMePvfj/C/OXZgTbKNzm7UCLXBGQKyTnBMs5jJ+7eP8KjYH8
+mGcPfJXEtat/0ueCZbnFvknoF/i8XwRKSZP5KVl+X1s0WsCeg3/C75bDXYA
/hesC+wGsm8E27cWu0SKT3ovUHvD2zeYd1TT/JB3E3n7D/N+jJ9vlZTP23/4
FbeTzL4RbN9gXrDDwAN8fxjsNti3FntLwM4DPy1+gYBfAH7ge6/gR4CfFr9D
wO8g/0iwf2zxa0Tcr4nAH5EvundcLxjyeTTMe3HdmV4G+/k8GuYV97P8+ynY
P8K84MeBH/jeNPh94KfFXxOIE4CflriCQFwB/MB9mBCHAD8tcQuBuAXFVyQS
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
5WD/5JUV4w3w9SI1rQZlXj7Z+g8X05Xfed4AV/BOD9dPchCI2+0aetdf+emk
i4w3hodEX5avi3EUiNu3Srq31fw7B3v2Q3asks5fPufIp+XqyF5V0uXbFGbl
kUHILlVSe/foAXNWaSP7U0np2H5mYzfrITtTSacrFrZO/mCI7Ekl9axeu8Is
zRTZjUpabvdir8FNbB8q6d3TV8Z2GmiD7EAlHSqz01bN0w7peyU999rpUaap
A9LrSnp086CE0HyhQNzfVdLwHWu/bPzGeGP4pxyzIX3POyH5LKObZ5g/yIsd
gOSzjNLGxk11UZpIPstoXscNoTf1tZF8ltGbzxatHEl1kXyW0fIdz06NThqB
5LOMrhcmz19bbYzks4zOU3f7YXzIHMlnGf1YYR2kb2ON5LOMvnTV6Ndxvy2S
zzJqfvhba9VCeySfZfR2fPrmjLNCJJ9l9LxeglWIoxOSzzK6aOT7zA0LnJF8
llFp/12VvY1cEJ+51NRkjuKR/kMRn7l0HDe0KLfPcMRnLj03eZyz+xtdxGcu
3X6t5+EDCiMQn7k0Iza6MO+5EeLz1/jDh27+ajoK8ZlLDyxtWHPnqwDxmUuD
fBTfVL21QXzmUrfLtenU0R7xmUsP97yVdH++EPGZSw0+RQ2YOsYJ8ZlLBxz0
Llb+6Iz4zKWvj+ZYC9VdBThfmHl7ypw7zxjO8tBAu3u3eyTpMj4Bj1ilq6Ul
p8/4BPzjhp+dN08ewfgE/P77jMlVa40Yn4DX/tdtg+JoM8Yn4IVpY4eqBjPe
GH65h9X7hmxLxifgUW9CnWTT7RifgE/zJZ3LOwkZn4BfPda9rmmkE+MTcPfE
m8vXqLowPgG3MtmvP/K0K+MT8KX92ntmzXBjfAJup1NW/aXADcsn2Txzxtpg
+RFYPklqRu7b6asNsXwSvYvbi0tfGWH5JEq93IYOkzPD8km075309n1CsHyS
dxYn11j2tsTySZ6lJ7n1iLLG8km2xqanDwt3wPJJEmsSZ7S75Yjlk7ywGu+p
8skZyyeZqdbt9fGnrlg+ycmJ828NPeeG5ZMoVacutXNzx/JJHnyJU0k87o7t
J5nkI5N2K9QI208Ss22izOMyY2w/SZv9Iz7YGZth+0le/Kh22BFCsP0kP4MO
GZdvscD2k/hmLOr9+aoVtp9EqBryNF/dFttP0rY+yqxS2RHbT/IxJOBn9ixn
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1:eJxNnQm81dP3/u+559577rln/pzMM2WIZMiQWSkyDyVzoTKUIUlFFCpJJJIp
syiJVDSYk1mUOTOZGwwhZPg/b8/6vn7/16vdes6++zPvYa21937WJqecc+TZ
tTU1NXsWamrSkn/namoqkpc11NR8lqmp+S5VU/Oe5B/lmpoTlH9ovqZmhPK6
Kx2m9LTKHan8rORTSkcIN0q+rHSycCJ5msrto1RR+lPnOVH5h+k8W+iau+nc
2yU1NesIbyPcWngt4a2FtxUeTRmVb63y03Su3YV/r6+pubtgvJ3yf9c5DxXe
V/hWHfelcCvJq5Vqdc2Okj0ld1UqKo3Veaoq85rOM054TeE3ha8XXkN4ofBo
YZ2u5n3ht3X8cuGdJK9TfjPh15U/W79TOl8HyWuVr9uteUX5eyjvB+EVSoP1
tzr93p/n1D3vpLyWOvFUld9R+CeVf1B4B+Efhcc0+P2/JHy1sA6p+UD4UeF9
+T71/lYHCu+l8+wjfJDw3sKrVGYy30jyTV3vFl33TskvlN4UflmyXicfpjKn
qfxilbuSdyi5jv62QPhc4XeULhXeSnJd5b8u3Fd4feGFwv2ENxBeJHy+8HrC
bwifx/sTflm4D+9J+CXh3rxv4ReFzxReW/g14XOEO+r+BwmfqPuZofxmus+j
JT/T365V/i68G5XZT3hXlXlMv9sJ/6P3cJ7KfSW8reQGKtOJeqwyZwvvrfP0
lGyj1E5/31sf50nJkvKPlPxW57mZ9yb5jdJNvE/Jz5XGci3JH5XuEt5fcrhS
nfCruu4PwncKd5T8TWmS8CGSvyrdL3yw5AqlO4Q78D11veeFTxce1uB29rLO
06B7XY86I/k+7Szlb7ZE6YuUv9mvSr8oLVX6QMdeqPKbSX6kNFi4heTvSrdQ
/yU/VLpIuLnkn0oThNtLrla6TXg/yc10P68Iny28ofA86kN802eFe9EmhOcK
dxNeS/hx4e7CLYQ/ol4LPyu8pu6rq+Qn+n2J8reQ/FRpiPCWUZf6Cm8o+bbS
ucIbxHumjrWU/ELpMuGtJX9Wul54d+qw0tnC60l+rHSx8OaSbymdI7y+5HtK
/YQ3lnxf6XzhTSTfVTpPeCPJhUp9hNeRfEOpt/Dakifk/T6/klyk32cJryt5
QMH1dpbyOxVcn2cL1+o57xU+iO+stI3wUn3HKcLbC/8g/ILK3KB3cqPkFMkH
lDbX327l/Up+rDIb61xthT+SvIV2Jfyh8jfJu6/7WLKq1FL4bfpbldGfaxbo
v5HCOnXNIuErhPWv5g36B2X217VG0v8pfSP8ruR9KrC1ynyvMjc3uL4tFr5d
eBPhz4TvEm4uvES4qGMeEe6qvLLwDOFjhf+NtnCAZEr59wgfyMWF75boJFwS
ni58DPco/IDw4cKNvAvhI4Szwg8KH0kboi4Kf6Hr3iG8qfDnwpcLMya9KPyE
yhf0LIdL7pZy/1BW2k9pDaXvVO5qydEpt+3mKveh8i7SOW4QXlt5x0tuqrRY
+YOU3yqruqsLjG7UNxR+Rvgq4dbCzwlfI9ytWFMzU/hy5T2gtLEa7QjJbZXm
Kf9qldlB+CXh64V3FH5ZeJzwTsKvCo8X3k14kfCtwmcVff4O6oN3V/6bwhOU
f6XO3U1pC6X5yj9J8kHJNkqvqMwNKnOO8porbaZ0gtKmSi/ob3upzHuSd6rM
NJ5VKa00V887TPI6yZl65sP17A30papPezE+ql53YVyiv9Hv/irXIHyQ5PE6
9yZKz+u8E5XXhz5T6UP6IKUn4joPx7XaBO6q8xwn+ZDSntFf02/vWPD4hW6Q
oZ1xHaWvKaP7f0PXuVn331Z4ofAtwlsLPy08Svh5vbfvhcdIHqH8jYQblP+C
fi8VvlbyGf3eTngNyX1UZrHw3cKPKm0q3Cj5AO1C19xe8jCV2VD59crvItxK
uCrclW8s3Ez4eOE9hDcRXsB5hTeTXK1386fSPUoDlH5W/sFKz+pv20uuKbm3
jn1f+C7h7iqzldI7HJ91vRqq/PuE11b+hTyT0jTlD1b+0cpbV2mSfq+n/CmS
A5W/LnVReIDwlhqMNlPqonIbK/8R5V9MvvDjwlcIby48R3g470B4hvAQ4U2E
pwtfItxb3+EIxhu9l0nKX1/nGyp5jOQGSo+p3Bb6PVdyhMofq7wNlWbVWo9B
n9lc33eGvuthwvWSXXW+TinrYbfp93aSy6PPoZ9cIXy0ju0h/KyObRm6RH/6
/5TbO/34pvrbtvTVKjsu43bfWfIF5W9F/yDZXH9rzdghPE5pV/p85V0rvAvj
jvBI4Z2Fr5TckzEVvUvpAV1vH8nVup8WoZvdIdmga8xBJ9Hfm4SfFD5ZOC/8
tPCpwgn3IXyG8KN54/117MbKf0d4gPI3En5b+ALhecJr6drHZtyX0sceLfmP
0jThLugX+tss4eOF/1J6SPgoyZzynxI+pcH9M2N0T8ayjMcRxpOC8DPCPdAv
hB+jLQr/rfSwcGfGEOXPFj5B+Cel64R3k3xa972lcKLzTCh4vCrnrcP3jfH6
pRi7GXNfjTGXsfWVGGcZ3/fRMYdwTp3jxRijGbuHZGwrXCB5quQpSk1Kz8eY
y7g8QX+7Ef1Hci/Jf5X/i1JO+B/eidLjKneSZFHyhdANGK+xSbBN2uu6j6j8
eUonpmyPYINUJJ9U6s5zgVVuXeGnJDdSWpt6q3NsKCxTouYf2UAbC68jPFDy
ygaXeTv0c8bNT4V3yXhMb9Sx1yh/Y+FPQh9AV/+L8Uu4m3BJsq3uaeewQWbp
vFtwbzp2f6XO6DzKuyRle6En95ey/UI7eUbHnypZlfwo+p4faq2joq+2lfyF
MU94T66v43aKa/VQahd4gf7WP3SkH/R7WYybi5XeirF1mu7jKT3bPtKZn0Fv
x86TvFgpI3ww9bTB99wkeZV+/yU8WrK30t/CKeUfk3JfwO85Df5GeckjC/6m
u0jeU/C4s4fkURg7Kdef0yVPVkqUHlUanvK12+lvB8exz4UutxZji37/GWPN
PrqH9sInSXbT717UKT1L+zhfVqlXyr+xSY8tuD7uKzk/dEX0w+ML7ov2kzxO
KZ9yHRsl2VKpUemQjG2xWpW/tGC7uK/kgILLHCP5tuSTSpspzVa5LtRryakp
j8G8u09S1hupE6mKMf0V93ht3PcPoedcUON7uCrug2M/VhrHs6gunaa/P8K7
bXAf+Ivq4XX621il9+gHUz6+Mc4BPk7516dcjjJjA9NnoQejD/9Tdh7ldlC6
vOBrcc13U9bDqEuHK41Raq3UX2Uu1TvaUe9/nu6nl8qv2eD6uK1SvdLcBvsE
CvQHBbf9tpK3Fqxf7KHzT6GPEj66YF2jTegenQu2wWk7nPOaOC99yMXRj5wj
eajSVkoHxti0v/In0wb5BpLPNridNaO/VOpYU/Ofcs27uTLeT794Np6re8Hf
pEPBfdp2SmeqzIiC9dQekjtgZyrvzLCTtk95bJjP+xA+NeO6Sx3uIvxcxu/1
FMlzCm6/J0mez/Ol/msaNeem7Meoj/bdNtr1mXGtHbG/U74H2vKptCXGgrz7
AfofvtkVGWPKXxbvE/1taY2v9T31oWD9cJu832u7OLZnYO7hIP3tmBrf58Xx
3g+O63Hdf1VnemSs612Usd7eMWXd/bRog7THASn7TUqMMYHxn5yR8jHo+afr
GmcwFuTdJjiW3zxrh5Rtg5MLvh/ua3HkDajx96nGN7quYJ13bcnxBesp6zIm
6O/LhLOM2cLrpez32UZ/+63GOsYB0Y7Rl1qGfrIZ+gg+C+Gh+p7XFPz3NQv2
o+HPeaHe73WdeLed45vyvo+VPCrlfvJe6njKfQJ60eeSl6IvNHhsTTPeFTw2
bik5Wb/3Fv5T55/QYF1oGT4lnWOy0s/6PanBOv8fyj+oYN2He76i4Hd7huQm
Shsqf4He2866rlTqmo9ijFsR+QcXfL5RktMb7HOrQ+/T71U1tinm6Hy3xvfa
RPL3GtsAD6lcB+qDznmIyq2ssd64l87fRvhn5Y/NuI33ZKwpuD4eqOuOybid
ni/ZteB2fErB3wibt6nG4z3jPv0LbZS2SnsYkXF+J+whpWPRIzJ+9+fH9xgY
Y/1Luta9+ttFKfuU9oh6iS+P61wQ9WFnlV8tObPgPoK+4sqM68aFUT/Wi/Lc
GzrnwJT1zvMK1mUYa9CLGOMukTw4ZZvoaP1tcPRT9FHnZlxXz5G8PPox6veZ
BZffHZ0r8rFt6JNOjjbFe0Dvoh0eE3WMc46Jv5E/IjDvakzBtsDWOmfvgm2+
3fK+FseuX/B76xx90Sjd06CUn53rnxP3gH53arS1P/R+bpVsJ3lU0TbNt5Kb
65iPlX+x8rcU/lR4SIPfXe9oX9/R/0ru0OD7Ip869D06B32d5NdKI4RbSy6n
7fF9JJcpXS28k+RXSsOFt5X8ssH+z1aSS5Qup31LLlUaLdymwd/9zOiLOkQ/
f0a8D2xhxm/64J7RB9IP9Yq+qF3kFyOfPg4dY5/AfJft4v00RT9Kv0y/unNg
jh2a8fehbvCdz4q6sUXcA37PoSnXG/Kn6v7Opk7TR2V8X1Mkd0m5D6U9bhnn
oS/ul/E58KHeW3AdwnfKdzwk6hh9CD4s7AHkg9GfTA5MPn3V1OivugSmPXxV
b13mefxDyrsnZdtskn63kPyy3rYWNteH4f+k3xio33dl3GdPx3+Vsl2Ab/fF
ONdvOvbGgs9Jv317wX42zsO7mRjv56aC5XqSNzT4friv++j7VGYvyVd1ziEp
zxFcWPC77JR3Aj9Q8Duh7dHvoIeOTFkXpd2MiDb2RmDaEWXwvdDXTKRfqLFd
s134H/BD3BHPyLPOLfgZryr43MPj2GGB0Y/vbrANu1L3v1J4nPAeDdbt0PGY
L3lcx9+kstvmfT88I/rouQWf7+C8x2C+f2vG/Yz9OPhD0KnA9LknSXaLOsCY
hA7PGPlIxvno/+gLJ6Ssg6EjdInv/r96QJ9FXTg68qlTJ8U56dO5DnV1Wsb5
+J3Qy7pGH3Vzwcfy7cg7JvJ/rXc9Yq4I/eTOlMfxO1LGvIsJkrel/L5uy/je
mReifyOfcfneBp+H861I2e7C5qLvHxzXOiquyzvoU/B7ow+8OeX3zHdFX8Xn
xVg8OuygvhnXT56nlZ51o5TL4BMDMx4wBr+Gn0j94aaS89QnfoPfRnKB/v56
ynr4Y3nPm/zNvFnBuie65Yioc3zfV5ReVXq3xt/8jaiH5L0W+fTT2CH0rzNj
/Nqp4Da1KOX5Mtr1wmjj+LHBtN+XMrY5Xsk4gfHDME+BzUg9fhVfqu4/abQe
y7XxdWBHLIhnYX7j/Wjjj9IGJX/Cdi9YZx9WcB9AmVvi3Ivj/Pgd8T9y3+jP
nBO/7sLwgeALmaPjP03Zf/605Dsp28/YRthItP+v6+3rGK/y4xuMybshymBD
vZ6x7/075bcNO7u10sv4cyU3lOys/LWUbtTvx/V7K8mi5JP4LoXLkt/oW14q
ZfJs2T5LhO9T/hFF+wDvFe6nMk8otRQucQ7lPyh8Yfg2j9TvG3Xsi/q9q/LX
590qf2Ph1ZLz8EELryX5UtH+z38lXyz6fv+RfAm/qvAGkvP1exPhv4r2E+JX
HMT1hacKXyR8v/A6eq6LsvZj40scqfzvdcyjwt0llxXtFzxZcoXSFSo3QPc5
UnK28k9V3s7CTwhfiX87fLlnKL+jlOEXhfsKryzax3xO0X7OW4V7q/wGwrcJ
n9Vo/Z06gC2zvvInKL+P8n/WMfOFz5acmrXv/Gp8ukq3k68yv+lvrwlfgL6R
ch2i/qQr9me00j0/pHIZ3ol+PyhcL/y78CThf1V+ufD9wv8IL2U8Ev5b+Dvh
Dwr2LeNjnqrUIPwntl3abbmiNEP5RckVyn9EOC/8vfA04Ry6kHBPlf9K+Eul
6covSC7DFlT+19Ql5hL0XN9KHiK5q/JX1NpPva3wJ5Ippf7CrZU+FX4B/69k
QfKVqJMVyVm8U+E/sP/S9p9Tn+Yqfy3qT8b1iufK4j/X9bZTuXHMjej3Zspv
wiev1EI4LzlFqU74Nx37ht5JFV+03vlE5f+ld/WN8h9rdP4q4dnCa1CHhecL
NxfOST6oY59JecylPwbjC0NneTbl8Zj+YU70Idhrc1O22dB98P1hB0wJ/Qed
n/Hz0RhDmSOj/Ey+dcZzbavqfc7ZKetIzEGDp4d9/FLKutlRGddB/NDoD7NS
9vMwXoPRBxgfH0vZ37RG3CfnfChj/WWq5AzOnbLP6LGM7QPu57GCfUT0yfTR
YHTdA/LWNycV7K+gXwPjG3w6+jfG7Xkpj6ndMtZT8LkckbE/hnnv6QX78fAL
3V/wHE7bvG0hdIM5GefRRvDr4Vd6LmUfEf7AFyQfxrbO28YCM8dEGY69Put6
14G2XnTd/11yX7W1kvDr6M9FzyscLMV6U6VZwu/TjwpfJvm20pbCbwV+jT5T
spXyOigldar/ktsr/aj8HSQ/URv+WS9xQ33HD4W/Fj5M19xYf/tD131A5RLh
34RfFa4IF5k7Y45LOCf5Hr91bK3ufVMde7ny++taG+ucLyt/pupmo/Kryh+o
sq8rtRd+TTKvcj3RwZSeFt5G9zyMdqRj/tD51lTeKsk6yZkqf7jSOsJrK/VV
uX10nozwvpKbK11V63t7T+fJSLZR3q7cv/BB3K/yD4pnKaIrxP2AD6v1/Wyn
cj/E+3lP9/8Pcz66/631+zvl7yS5qOh3wrv5sOh3wrtZqPLDdb9Li7bBL9X3
HVKwrw//3vCC9Wb0jInYg4l16yekn+yWWMddVbYOio40Q2V2TaxvPav8nRP7
JZ8R3jfxGPyk8F2J59te1nWfEr5Y+AvhucIDsx5rP2MeUHIb3ee9yv+EuTrh
PRO357vwdbGWKOv5sx7CBeHN9ewHJJ6fywu/LpxXfgvhVxLPHeaE39T5f9c7
wfB7VfnfqMxfOk9Bv3vxjiXfUP4Q5X+psuvo9zDm6iTf1e964UbhvaqyW3Pq
N/RcByeeO/yJPlr5HZW/G5P5Okd/+nPGFpXZTfnn6h4G6Phj9A03wF+k8sOU
v5Hwl9R15e9R7/bxptJAzqnzXCB5KPPLfMO06/TgtO85RV3VeU9Cf9A9PqHy
aeWdLnmg8rsyZ4qzR+2mrPP/lPV7OF7566BH6LqdmRsVTqvMAcylCr/JPDfz
k5KfKO0nvKXkx0rtmTOUfE9pd8YXyTdCV1lbciHz5ZxfcpFSG+F1JZfrvqYo
7ZN2/WRONS+5Rcl1nrrPuLkezy15YMzhLi5Yfz5Yv6/hewonjHHUJaUm4Vew
i7Me497Ch8x8Kt9a8qm051GZi11LZW5Qfi/lv6VjT2UuNHEbo60t1u+P9Ld2
KrO55AF6h4ejv6nsmvrbOOGeyr9F+EfhYxm39ftI4R0l5yitKfy36usP+tu+
PEvRfRx93YaSwyXPUGqiPrFYSOlM3qnKDZa8S3K6js0r/xzJWn2Xqr7dL8K/
6/ynq8x+kr8wh6/0FvVYv1nodwB6kVIv4XaSZf09qzRIv19TuUT4PMm/9bdz
lNeJOWX6AuG7JVfp92nC7dEFiq7Dt0rWZV3mKM4pfLVwN+GS8Gjhk4SzWfeN
x9DehEcIHyfcJDycd9Xofv1ApQb6NZ33JP3tSL3/lfo9R+lIpXrlXaLyndG5
hIcId0HP0jsoKP1OW826Lz1R+RXqBborupDOuSe6MX4d5Y9Bj1X+ROE1dNwF
kkdIVpVG6m+ti77/KUWPA+jPGcmbVG4Zz5u1zk+drEU3LFovY60Cf0fHQr9a
rrRL2sd/kvYcXtvQ49Dn/run0NtZz/C+znUo+l2j6xFl+dvtut5xPIvk5+h6
SnugJ+r37mk/F+sRwLQf+vi90m7P/xZsb75RdH+0W9o2wwYln2MjyfWVflHe
ApX5S+csKf9c1r/o9ynKPzPrvu4i4Q9oX1nX0T6S+1XcJ22Obt/o8e3ARo9l
/YQ3Lfp+JymtrPWYfr5kx5LHwcFRxw+q+Ju2FN4R3UB4a+EDhC+nTkp2qrj+
bFu0rkCf+BF1Ku0+mbbznf7eJu2+AN0ZvRy95MO019y0TLuNHKZ0RKPHGOw6
7LSmkm276UWPm9S7nORcydlRD7P6fanK3KcyD6ata9B3ral0lNKoWq+nQOfB
Xjq80e/t1RifWOdxs34/Lflk9EENsabjfvpWya5p213oTuR9LfmF8q6Ka/VI
W+evDX2L5xsseS66lNLmSmN1vQ+oV0jqdfxtT76l8u/QfY3Jes3SjY22o7Cn
ftF5+sZ74vd5jL1KWytdl7Vu305yVdE2ykVF97m878k6z2Lhs7Fp1X5HpW3n
bK/0Z9FreEYUbcfSPvB7LKm1rZGu9Vh2iNKFtdZPeJcfS35e9DvLl9wfo4Mx
trWTXE17V2qma94teS52hvA9wn0b3T9jd58n/LVSd+E9sZ1p90pf6PfoeK/o
ju9l3X66Rx9O/d8bu17pZNoVfZfu50Dh/VUfv9DvY2nPkp8rHUObx5bPug3e
Rh8peVGMy7wj3tVKjQXP6jxrC1+G/Z62LfeZft8bduLXKtOeiSnhH4TP199P
UfpYv0+Nsujf+8a3vkfH7U/bpF9R+f5Ff1++c4fQ1aknjIlfxnUZT7+O79Ip
a739R/zPWX/fnzOub7ynz2t9/Va0u1rrFH9L9lFau+g+qp3eyWwd+69wT8bD
GIP2l7w16z7gxKz1BMb3VpLvNvp9biP5WfRt9Ec/xXjE+MXkFGux2qkO/Kzf
58Y4lY3xt4fwp4xN+j1Tda8qeZfyz2m0vYGOVFBqEfo2endGZa7jmdD1ha/n
vQrvqXK/1rov/ijG8R0kP1Q6Qnh7yWUx5jImLo3x8b+xVW25hH3AN9B5HlLq
oLRcfzuj1mN0g+5zf+HDuAf8I4wZJetL6BgtJF9vtJ7QXPIdpU70h+gnjT52
q0aPd/hPzmx0v07/Tl9/c9b+q2Mk3260/tYSPS3GH8aWO7IeH57PWlfsIfma
3lud7qMLY0/J+jLt7vRG69S3CJ8h3C/6O9onevp4ydOUn9Zz1yo9rr99UvR4
Sl/aT2WuUJlnJVMsqFZ6LPpU7EHG4M9Vz1amvO9gfsF+2a55JzDrMZ4oeN7n
x7z9G+iZG6GT6F6b0WdJfoWfVelLpXV1nRlpj2f099g79MXYOvSvl+nY7bJe
UzlWePus/VTXNdqvxXrLH3T/uwi/rvybGu37Yp3k8qJtNt4FNlRLXWsrpU3r
bFPybo5v9DWTuO5e2KfUb8mPitY1HsDHpryzo44uTts2rcS4UF9nHfXHeC6Z
Bv+tB2FdCHb+ssD4Z9/PeJ3PBxmvIV8W+R9EPmvgP8x4PpP9Dd+mvGaYedCv
4ve79b7Oj/EO5xW8H4Q1e/gdvk95zcROaa/PpE9/Ws+5gWSd5MsF9130YatU
9k+l35T+CMwarNcavNaP9dv4e/Eps+79i8D4frmHr+J5Oc/vcex79V7PvCTj
NfK/xjM+X/B83w+qG59mvI/jrYyfi2NZF831V8V5lsWxS+O+/oj7ZH0Yf39Z
J3iHeZOU94Dgz2Qd7o9F39fXcW8fZ/xe2HfC2sStuK6OfU54ecrnYZx/Im0f
K2uLWQt6qd7Pd0Wvq2RudL2ix7F3JG9Et1I6QKlT2jYmfex6qjeHCmckf0IP
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
GZuWh41zYZxzg/CVMHanwweFXnRT9F1fxLvinTHnxn5O6izHNY/7aSG5eZ3v
9bNGz5Pu3Oi+YZOoAwc3ev7rt6znRjkGPx62Bn7/vUt+puZxP/0bvf6ZNWHU
n2r4Bpl7Xa/O74S5vPXr3Oe3jD2e6Ce8n83i3jYL39L9MRZQHtt847g36mIp
6ifn5z3xHnlX34V+hZ6FD4p85i/ww6Fz0PbpB1Lhl8M++zv6oimB0Sceiu/B
t1gVmDFww2gbXHffRs8zrtS1di95Xo56VY0ytJ0jS37Ph4c/rBjzd9/HsZyD
9QvM+xzd6Pp2fdSxVNiMzMu/pfe1HfVYcpHStsJNkmtn/c559+g4W8b8ypv6
W2vamOQz9SqjtCpnv13LeOeXKa+/0hpKi1VuZ+WvK/mu0o68K8l3lHbgWSTf
VtpeuCz5vtJO1GfJo3R8hXWr+r1C11hL+ELJ9/S3Now3kkv1+3DlPyvZhTUN
yq/INv1Rf+uMP1HyB84lvKXkN0oH0R9JPq9j1tGxgyU/RVfgWMkVSkcKb9Hk
OtMy6s23+n0wdUXye6VDqWdch3lA7l/X7V5ymfWFP2ry/eQkP1bai3lW7pm1
NtRvye+UDuH8kl3xy7HHV78vYO2EZCud58Wc1zVcJnm20i+0TZXvob+N1O8l
idfcUJ41OLXK6yO8l8qkhHsL7ym8rvAtwqcLp4XPEt6b9y38uPAVwvcIPyX8
MnOLwi8Lj1N+O+FXhccL7yv8ivANwhfqHp4VflXlBwlP1N+OqOr7SM5V/giV
ObbeazF66vdq/T5FcifJX5VOEG4t2UfHXqNjlupZzix7HdF1OufpwucLjxUe
o78P5LqsRRK+iL5Ex5aEBwsfIryAugg/jeQ1Gi+uUP69Kn+uzjNM+C7maVXu
eOFtJf9SOlV4Z8lPlPamb5T8TelE4e0kG3Wu84T3Ez5b57lc+E70FP0+SXh7
yYuUP0/4FsnPeV/0dZJLlPajXUj2Yx+g8MM6drrSRN6D8t7Q+Vvpnm+RfFr5
M7k34dY5l+mnY89XueuFp+nv2yn/Pvor5TcXvlG4F/2o8E3CpwlvI3yH8NnC
WwvfLnyW8JM6/hHhfXS+k3XN1vBY6Pcildle+E7JzZTG0xfRlwrfJtyH+is8
S3iY8B7CjwpfFvVnivAg2rrwg8IX8l51vh2Vpun3rsp/SHKw8ncRnip8Ee1e
+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
v0TesR5+Kns957fh+4WDgP6FfTqsI2IvK2vkWC/HWkb2fLHeiTWCrA/8LMrg
m2Zt0SfhG/88ynMsz/RNvBOOXRLrFlijxDXwZU+Ie8DXzLqQ76J/uzrKs55g
dFx3n1jr8Gmc/+O4Lmvfnsg7XsbPOCfyjifynGQq7/gg8yWLefPqL5TM581v
/zr9UN480kt17NS8uZ2/F34wb67p74RLefOkLZKcovSE8Ldlx0lZUmMOS2Kg
wCUC78GWecfF+Exyi6jz+EOIOQIHY+uC462gb8G/SIyVL2rMVQn305c15sJ8
OG8e6WW61rS8uaaJCzEj7xgWK5Sfzjtmygt5cx+jn7wmmck7lsGrkrnwveDD
qc07rsrzeeska9Eu8o6p8LLwDzrnfXlzX38lfH/ePNVfC88Uni+8HFssb17u
b4S3zzvuyRf0B3nzacONfW/e3NdfqsxE4Ufpb4XvyJtn+4uy+TzpLzePtoa+
3yIxRyXvZ0DGdgQ6GPbOyBiv0Z1qy9YZrpQ8S3U+rbwXmtwXMU5ldb6HQk9A
Xxidd7yDRvashU6FbjUtdBFsokK9fZjbhL6C3oL+g58M2zXTZN8xuhP20/71
toWbQj/BV8n1rol7xpa8Ku+YCxld9/q84zjkCq5LtOsqnHl5xwFJ4NITfk64
InxXfHfe5615x/4oFtyH09+mhMfGO2e8GC48ka5J+cPyjpFRJ3xd3vEgmoTH
Cc+kqQiPyjs2RAP8IjHuMBZclncsiVr4RvKOMZEWvrbeNh3fYnq9bT90OXzx
vCt0PfwoneutI+Kfv0Dv6Uw1yrFl52HLM7eLrw7fJroufjd8cTsr9ai3D+Wx
nPWaSTrnrWXPReMb2UF/P6XeuuzekmfU+1viE8UGwZf3S8k2wciy/fH45fGV
3Fi2L2Vv9May/Uv4UobX+1zLwr96a5zrpJznlx9jTiDnc05u8lz5nvX2t5+h
/H+VP6/JPkzO9QB9bL11eurKtJzv/xbmE3LWLdEx4SB5U3gC80HCC4RvFr6r
bD8y939l6JzU+VvyjgVTKNj25x6xvWai0+vY+3XspWXbRUMlbyt7Ho02cnfe
8WXKBety9GMl4YvzjkdDgCN4kuEyvl7y9LBbsV/h4oZzG1sUrm/4MrFX4ZGH
c3F4xtzCcBHCGfts3ny5jF/s60FnIxYQXJfwZMIfe1zGdiWxQeBCh9+bGCPd
w98C7zmcq/CvwuMHFzS8rmdnzIUKByjO6bMy5j0kn3hFzcLWxu+D/wd7HO5x
ngsuZ3i/4R4bmDF3OrrlrIy5vm+SbJ5YJ8Sm3yy4srHJiR8FlzochLeHzokv
p2Vi3mzsefw403Vvb+pnM/39r7Jj8qyd2AaHe/rZGNM/UJk1Cub4XVFjuxLu
azi0iWc1qsF8WsSR+apkPyff9JiM7XXiGByo439E5ynbZ8Sx8HCfnHcMoO8k
T8k7BtD3eeul6IRLJc/Pm7vyT8kOeevn6E798o7780fe+hI6/JfoaHnHM/pa
cnDe8Yz+JS9vXtl/8tb50XvR89mjyr7UBr3XbnnHSPpGsnve8YO+lTwv79gH
v3Nc6KLomf3z5s9fLdknbz7YXyR75803u5I+L3QkxsTDda0/hLcvmOccDjJ4
WM/Km3v2V3S2vDlsf8475tYwxlDJHnnrt+jqFwiPF/5L8sK8Yzn9jc7VYM5q
uMHRq9GfV0n2ypu3drlkz7xjJy2TPDtv/tvfaFuJ45rAL9Jf/eDCJq8nfLzk
9Ut7ls3r+N9eW3TnxPvzN6iYU/Ez5S/K2OZinzX7rU9JvE9+s4rjssFZCndp
+8R7tnnnbYUnNji20c3K+zzO0z3xXv2N+C6J9/NvKHxi4v3w61cc54v3yXs9
M3FMlK2V3ztxjJNtKt7XzD5d7LczEsdEaan8wxLvb0/g40m8T74qfEji/fNl
4UMT75mvVBwv7Btd65aC9yCzr5l4dycn5i7ZWGWOT7yff13hExLv81+PPaaJ
eSW2Ej41MV9Ac+H9hK9qcDyvnsE7sIXyeyXmpNhSuENi7qEM7T4xp95YOC0S
c+FdVzT/JHNbzHEtUn46a/6ZN3murLkmnqk4Bhj1813l/9poHp6nK44BRl2d
XXEcLOrGUxXHD6Mezqk4bhb159mKY2tRV1+umHOZuvdaxRzK9M+vVsyPTLt7
ruL4XtTDeRXH/aK+za04/hZ1m/h08O0R22FIcIhdgp2r+1zdaB6hA/VsM5X/
MH1/Yi5p+tXnhf9sNMfRbB3zUcr8YLskrk9w5L5I+azjKP1Vcaw17ModEo8f
cM4/J/xAo3kIBxfM8XuR5J0Vx/lDr/674lhu2J7/VhzLDXt2vo49OWv+im3D
3h+kY1+pmHuaPmeNBvczn2T8zdkfzx7zEYm5Iy/UdYcn5o4cJHxVYv7Hy4Wv
TswLOZx9GInj6qFvNySO0YI9nkkchwY7fXRiXshhKv+Q7qOvrnWBZH3imDHY
43WJ475gg1+ZmI9yqMpfkZif8RLhNRPHpEGXXitxrBr0efzScPrB7cfY8WKN
eWfHJOZtHKljr03MHXml8LDEPJgDi+bogavnXsnLEvOP7FMxXyJ8g8QPGZmY
W3NI0ZyEcAm+ho6dmAtylPIvT8wXOYC96on3Wl8tfENiToFrhK9LzJ91lfD1
iTkrRxfN54nPHH7cdOKYOvgHsolj5+DzGRVcn5fC55O4/hFzpGti3pa1Kh7L
mAeBc/HoxBwuayq/mDh+IbbJsYm5Y9ZWfiFxHCBsjeMS88Kso/yDEnPFloQ7
BX9roeJYIC3DT35gYm7WovJvbDD3AnHbsMXg44U374jEfCjNKuZigJPhI/09
nzimIHZNLnHsH+yapsQxivCbNSaOXfSf3yxxHCD8OanEsYXwmWCwEzMS385Z
iWNEbatrdU7Mb7KGcJ/E8aJaCSeJ40Riny6veE6FNlVKHOsRe62SOL4jtmo5
cTxI7LVq4liS2LnNEseMxP7dJHHsBHwIL1XM5844+HzF/OzoA19VHKuJOf2F
FfNfY198U3FsM/w87Lth/wx7bn6rOEYR/sD3Ko5Xh+0zINoObej9iuP5YY88
gOOCNXeqG3cm5ra7SfhdFiFkbL+8U3EMRew7YpHATQpfKXxwq2PvETzb8DET
B+bXimMj4Yf8peL4Sfji4IhYEf0GvBB8z3a65h8Vx7zEb3Z1wTzEcCT+XnGc
TnxN9UVz8d3CPriK4ztiV9YVvUfsZsk2ieMc0D+wb4U9KexNWVlxTCZ8gOzn
+lz33UVlb0/MxzeedlQ0vw08N8QVOCj6vSmJeQYn6e+r9LtDrd/PBxXH9sM2
/Kji+H/o+Z9VHFcSXXR2Yp61x+CtqjiWEvMRn1cchxJd9InEnL9zit5vxV4o
9kd9XHEMQmzSFkXvT7xNsnnRnIcTJJ9JzF/8hPCTifl/5xbN5U6fT9//acUx
LLF5P6k4tiU27+qK44Din5yTmPtvlo59PDHX8GzhxRXHMsT2eavieAbY1L8V
zHl4I+NyxTE4sWcXVRyHCVv4w4rjHWLvfFlxLDTWt/xaMEci77xXzJ0xh/Z3
wfvU4ENaUnFMKda9EMOFGCfEliG+CXNwzMXB79GN/YGJY6MQy4OYHvMrjqmJ
fntHYo5F7nOs/nZ7yjycMyuOeYk+fHdi3kbqzwMVx4zEPz85MQ8gffukxByC
9whPrziOJjr5jIrja6JjT6s4HjB6+5SKY2Tiz3+44rit+L0fqVivJebmhMS8
4TcUHeMHLnlitk6uOCYl8wL3oCc1OA7m/Yn5DW9X+fsScxFSHx6tOFYodsdj
FccHxe6YVXHMUeyOFyuOA4Fu/0LFcSCwQe6vOPYkcxYPVhyLFx/apIrjUzKv
MTExZyL17e7or+F1uavi+MH46om5gP5/OT6oimNt4re/r+LYn/jtJ1Yc7xO/
/dSKYwDj132o4tjG+LK2Shy/Cpviu4pjnuF/Rg/5qsYxDTZNHOsF+4s4HfDk
w5d/S2Je5uuL1sHvSnn+hThK9wvfiW1UcUwyfM4HFM03Tj3/uuIYfvjAf644
vhq+8XsS83vS5xCzAF52YgvDqw8PPjYpsQnGp2zH/llxPF18+PAezwgdjxgN
rNvaA3284vhz+Hm2SRxDi3kTeInhPYYL+dbEHNbjdN0FFcf2wO/0RsUxYvEL
3RnPBd/siorn8tEzl1UcLw1/O/EXiCFxn+RPFcecw4e/tOKYcPjnt0wchwYf
KXGd8D/0k7xNaVLK3LYXJI4PupOOWzexH4F4WOcnjie6o/LXrtrPPoIyVa9N
GSlcV/Xazf7C+arX+14knKt6bfGFwltWvbdqQ51zi6r3XG1QNlcb3Gtw7LWs
en/Xxsrfuuq9B5sIb1X1np+NhL8omIsSTsrNq963tg66UNXrPgfqWk1Vrz8e
RP9d9drQAcL1Va+pvYCxvur1ykMr3isNX/FqbI/EnPVNyu+YmPs+W/H6WPyY
16IDVL1OeojyW1W992Mz9IGq1wRfovxq1WuaL0WPqnrN9GD66arXkQ+nn656
zmOYcLOq10NfJrxG1eukL2fMifXEFwtvU/U+pU3xk1ftn71C+S2q3o+3tvIP
KpoLDlvykKJ5AtFtvk28j+JYbKDE+weOoy4n3vNwDLp/4v0VxwsfjK5Qa/v0
sKJ5BeH1/yzxPo2j0CeL5knDPv088V6OzsJti97vDGfboUXzE6J3fZB4HfAh
9N+J91d0qXhPL/tV2e/esWieN/jyv0Zv0f10VZnmVe8nXEvPuF7Va6GuVP76
Va+vGiW8QdVrqq5i7K16H+OaKr9h1euuRtNHJt4HcrTwxlXvk6yqzKZV729c
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
           "]], Polygon3DBox[CompressedData["
1:eJxFnQf4jtX/x5/vePa6n69ZSkhG9mwPUhERSbRTURqKFg0ZRVKprCgNaWpI
xa+loaFUUtIeRKQQ0aD836/e57r+1+X4nvdzzn3u+7mf+z7nM9+n/sChfS4p
j8ViHdOxWKX+fhaPxfbU3z/LYrG1yVhsbDYWq6vPBqixeSYWO7gQi03SAUX1
f74qFivTZ+cJV1N7ueo3qv8+6n+58NHCnTTGXxrvRJV0Ihabmo/FHtDYc1U/
SMc/ofb5wpeodFX9I427oELXoOP/UX2Kyg8a/0p99rzqXXX+e4X3Vv1lHf+S
xvtBx96tYw8QfkD4WeEnhQ8Tnqm/XXXuGfrsHtWP1fH36Pi9dPxLau8mPFu4
rvArwp8l/d3/UPlR9QdUZqk+U+U+1Y9LxWKXqX9tXd/fOuZPlcuFawr/pfrp
kfqo/qW++7nVYrFt+qxKuK5KJx0bU/svqr+s+zRM7edpzCYae52azlV9pq7/
J9Vbq36wrme2+l+i+7lTx9yqekbXO0DnW62xTlZ7/VIs9pvuzR86zyrhrcVY
7Bv1fUHjX6rx/9R4x6r/J+rfU+21dPz5wr8InyZcU3iw8EbhU4V3qn834ZXC
JwjXVvsFwr8Kny68tzAPzBbhM4S36TxDdH2bdc7TVT9f1zFK13O9ysuq79Z4
h6l+j+p91H8VfdT/e/Xvrfrfau+q8T7VeL24//pssNo/VPszqrfR+UapPaHj
n1b7auE6jC/8KufX8Z3U/qGOP57vr2Nm6viaKteovlJlkOof8zyq/qnKecKL
hR9XvV7Bv+c2HX+2ju8u/IzwPhp/iPCPGn9v4cVqnyq8Qseco+Of0fEPqX68
+s9Xez31v1DtQ/X3M13fhSrPpn1/Zql/J5Uv+E30e3VU/RHV/1X/5fp7tvAD
Gm8275rGG6rxftP5zlT7bxrjX+E6vJx6pmboGVigegv1vUS/7z7qf6nat6r/
Weq/S9d7nPBnwr2F71e/h9R/IPdA9ZL6n632n9R+itoj4bOE1wkPEG4tfL1w
XOd9SniA/rYWPljfZ6bqrdR+nXCl6k+qvYXwlcJlwk8Iz9M5DtK5Xud51fUu
0fVs0/P9g57no9R+pM7zpMYqqX2D6uU6vreO/0r1vmo/vuj3ZbvwZ8Jnqf15
td+o8ZcLv6/xT9P4N6lPWvXmar+CCUztj4ffv7baj1X7b/zeOv+ean9a4x1d
5XeQd7Go8rPqrVWyqmd4Z1U/qmjM5yt5XpO+/q0q36u+X3h//lT7I2rPqH9v
fZ+HdP7nhF/X7zNbfR9U3wOF7yh6Lpyka7lIv1fT8Pv+o+MfU/vXwpGOv0zH
zxN+V/0G6PrP0zE3qf5w1r/3ufrsE9U7qv+NOj6j/vPV/wDhm4Szws8Kv6M+
/dX3fL6/7v/bwicL9xO+QfW0+vdX/x90/n7qPyXy3L5WfS/U9Y3S9V7KXCb8
A8+P8FjhO3XsxWrP6/jOut77db7+al+qz0/R+FcxX+uYi/T5x2q/QeVV1ZuE
+WKXzveo+r+hz8ZX+B3hXflAx5+h46fq+Bq8m/q9jijznH1oLhbbIdxBx6/Q
8ffz++l6kuq7U/hT4Trqs6/63q/15FG9W3sJNxR+QPgx4aywusUmC98rHNPf
kYyv8rTqN+t3GlHmz2jbU/0bqHqf6o/wrubdPlH9Omigf/R9Oujap+vapwtP
0ufXqv0alVtU/179m+p6X9L1HaP2jvrbSNe7n8r3qs9V+3j1vUt9D1f77xon
qfH2Cutnd32eUPvzKs+oXl/X00zX87Cu53Fdz9n67F21dVQZrPpqjbe/zvey
xj62yusA60GtsB410PHNdfwjOv4JHT9M9+9stf2qc32j/mOy/v15Znh2Snoe
DuPdUvsV+r03afyDNP67Gv849X8u+d80FLuCa1T9H/V/R/hCjb+H2u/SGE00
1l3MOeqY0Pn1LzZJ7bN0/n/Uzus6VniK8B3CjdX/TvU/W/0363wHq8NSna+7
xvufzjFA/cfpfC+yfquMVv10lWv57fR9hujYbTr2O+Y/jfemxmuhz1L67Czd
g1M03nu6J6tU/5+ud4naD1X7ItX7aIwrNP5bGu8V1e9Vnz/U/1b1f1v1E1Xq
Cx8gPEP1Y9RnlPper3Kr6jl9h1/V3hfZROc/Vtf/tsYbou9XW7iGvvzewrOE
H1bfATrmfR37nsobqhfUXkPtd6n9frVfwndU2zExP59vCS8Xfgx5TNd9Q9rz
4cm6nkdVv0L3qYG+S1OV2mk/o1frmJ0xP7uDVY7UsWmV/qq/p7ZPVF+h8i6y
me7Xkxr3bx3/Wsa/74tqe0nlBdUP0vW9rPpC1Y/Q2F/q7y/CG1U+V32kji/o
+Gkqm1Q/XZ/pT2yd2lfyziRdX6vyqeonFP0+8F58ofH20m/QQ7iezj1cz1sP
9UlybpX5qk9X2RrzPXhb9TtVUqq/GZ6HM1XeUP1U3mHV/9V476r/RbzLGn+H
rusg4Y/V/o7a79I9/lnne07nu1znO0335DO1LVPbkeqf0/fVx7E7dPxs9T1H
n3+o9g9Ulqg+UGVZmX/DN1U/Nem2O1Smql7U8TV1/BQd/4COPw75QW0t9VkD
1fNqr676nWq/T+1v67Mdap8hPEd4MfKf8HThB4Wrq/9e6j9TeK7wK/p+X3M9
OlenKj+P5dxrrkn111kveJ9UNqreQ+PVVVsHjbGf6v3UZ4Pqi/TZAtUn8HvG
/JvzPj+bdBsyL7Iv7x/3egnPhOrVdD111P9uXc9Dup7zWP+Y23Q/v9T1XCZ8
lvAvwl8LJ9Vfp43dqv73qP9yPaMv6NlF2djAWoEcLlwuvFH1kSq1hePMUcjW
+g55fZfmwgmN+bsGa6fnf7men9ka/wP1maP+f6usVX1fzc+D1L6DuVbt29W/
vfDHwvch70R+95Ma6xz90B/qmEd17C6Vn1Tvq+94JfOVvu8U1Xfosxo8nyo9
Upan2uh65ghfpjEOVJ8t6r+Pyrf6vGGQp/9Q34d1vg06/37CbwnPFN4i3Fz4
feF7hMcjg+q4KzTeMRrvNbX/qrG+0rid1d5f5z9M/Q/U9d2t+nq1NxReouPv
VvvD+j4j49Y5TlX9O/XZpL6bVb5Pe37fW+391d5M4/+hPo/ouz0c9Av0F9aK
rerfXWMepuu/XeNX6fNFar9c/Rrz/uqahqv+so5/VPgR1Q9Rewcds0PHblf5
TvXH1X5j3DrORO61xrtN45U03kL1P0T4VuGI56DKv/fDzJ86/mHV39XzsofO
tVJjzNTz8qY+m6C2L1W+Uf0oHT9V/WsxlyOf6+9favtTZTXH6/78yFqs560L
z6Ouc5fGW6NyqeqzWbNU/1Hl3qTn18aqTw3zy2u65imqT1O9I/K+xlyisVP6
Pn30/X7S+Pvq/G+qPkPtPws3En5beJZwpa6vi/C3wnOEd2u88zX+DRqvrXDL
on8ffqeHhMtz/4kdsfH6b4a+73CNd4DOf37oX6HxjtJ432i8B4Vv0e+5b9wy
2Yn6Pa9Xv7PpX+ZzlGk8Ncdu0njTkXdy1utvFJ4mfDtrblhrB6E/5P3+T0z4
fg+LLFv3Q69X+1kac5Dah2n8m1S/IOnrYw5hLqnQ+PoTm6Dj79bxu3V9vN7j
0PWFT9D49dW/iz5rq/p0tTcL+s5QneMXfXagvt87+n7d9P2OiKxbXae283X+
W9W/ofqP02d9uSbdt490ghEqi1SfqfYWap+i9nPU3kvn3FP4On3+FfYA/W0b
tw40TO3dkv4u2BywPVyp81+m+o2qt1f/R3T+a9X/V2R21Wfp+JZBPj1Xx3fQ
Z3PDWIN1fW2S1teHaowxSet16HfI7Deoz1L9flv1/U7TtT6g8e9GZ1H7g2q/
VO3tdMx63i0dPx5ZMut3uZ/6vKX6lUmv3fzGo1Rfq/s9krVE93e+vuvJuv5L
1TZWbe2qrC900LHPaoxRGv90nbeHzn+I7tcs1Y/HHiHcXnia6nP1fYaq/y70
WdV3q95A423TOZ7SORrrfG1Vn6f6PJ3vJD2/LdX3Y429j75/P+FWwiuE6wmf
LtxR+AvhRsJv6HpmaMzpKltUf0/nvFvnzgad52T1b63+n6h/ffQLXUNafYej
C7M+q72D2j9X+37C/YXbCH8q3EB4sHAX4TXCzYXPFz5a+EfhFsKDhI8SXi3c
TDij8RMa/1KNXwf7iNq38T4g+wrvEP5N+EzhonBW/ZPqf5nwXsI54ZTwMOZV
4XPU/0j1/07j78/7UrT8/LVwY+GzhQ8X/ka4ifBA4SOEvxVuKnyqcHvhVcIN
hf8Q3ip8lsaPhE8Rbif8mdr3FX5H9+x23bu/yq2DPaf2GegX6t9Z7c8L3y3c
SPgo4ReEZwo3Fu4iPCuy/QM7yADhBWqfrvaGwp2EFwnfgzwpfLTw/4TvFd5f
+BjhF4Vns5YIHyv8kvB92AaFu4KzliWfQqZU/S+1r+XdVH2g2r9kHLXdq7Jd
9TG6niNUfx47iNp/Vv+VPP/CZwpvFP5M+GThs4QXZr22XKBjPld9ftb2LmxG
2I6+Uf93hLtjJ1D/r4TfEu6Gniq8WniZ8AnIqsJfC78tfJzwqdWsv6CLnK7x
lqm+U+07ePdVr1L7lqLlx1ORS4R/L9r+hW2nIFw78vO3R3heWd/R/9Hp0e0v
KlreXa/2VmofLnyi8GbmAuE9dPwxwnXC+1M98vNVDO9HrcjPe63wvNSM/HzX
CM9HDeFOwqXwflSL/Lzlw/t5uc7XV3iLcHvhW/RO/ym8OOPn+RK198Q2ItxG
eG8df7xw/fA8NxE+A/tIaL+46PYNwq2Fp0a2N2B36Cg8SeP/FXQL3ueJwn8I
v5rx+3Rzyff3lYzfx6rI70s2zC/NhM9FXwjXe4XOd5Lw9cxzwncLX8v9ET5C
uL36T+L3yRjHhct0PReqvRbztfBwtXfBli2cEC5X+0XYjYTbRh6vh9oPFW4n
fJ3w8cKHCSeFK9T/YvXfQ3hX0d/nPOFqwmOKvt5xwocIp9U/rv5DhfcUrhRm
gR4iXFP4WfWfpv77Ch8p/E/Rv8cg4erCi/V3PPYulR9Vn6j2i9VekfX1DI4s
DyAXHC48uejvNzHgm4UvwraQ9fdhPUV2OFXHvIftJbK9DFtpS7W3jNz/MH3f
A4RbY38WPkL4IOFWkc9/OLKv8L9F/76DdXwN4cZqP124VXgeWO9Y68/Epqv6
a+r/MM8P6xyKFjZBZA9Vb9Za86+eh8ORhZBhhHcLH4FsgYwh/EvaukLtIC/+
o/YD1X4HMpba/xZujV1H+CrhXcIHCE8WHiW8U7iN8EThEcLr05b90fnR/bfg
l1C5U+2j1f6D6vurjBG+LGf7E7Lgtep/JN9d4zVV+2jkS7X/WfLazBp9Prqe
vt+5wq+hzwtvStt+dbGOPxaZLthT+wR71gVaz7to/b1A5WjVV+rYuirD8A/o
+HH67NYy66zorudiL1F9KTYR1X9OW7eqHmySNTTmeTr+dX38jI7fR3iY8EfC
rwrXEx4uvFx4sfCjGuOkmGX+x7gWlfOEW6BjI5uq9BBuKNyHc6scj24pfCK2
eJVThZsJD1C9lcZvji2UMTR+u7xlQWSM3vgG9NnxZZah9hbeqmuOKu1Twj58
iD7rq7ZG6tNX9e5F28KxiR/I2q7PTlN7c7Wfkrf9GF0Nn8zRqp+B/VBtnVS6
61z7Y+/R912hY17P+TPaDkTG4tqFjynzb3C+8CnCR5f5Hp8j3ELfZ7HGeEf4
WeGWws2QibkG9e2hc+6t8z/Cb6rf9g9kYLXnw/2rUv+BOv+r6v8ktgbhc4QX
I28Jl4TPFn4FmUt4ge7HWfotV2q8Q7Gxq5yGbUq4terv6HxP6nwH6H3qpffp
XeGnhA8UPoH5R+P11XhPa7zZGi8jfJLwM9g4hVPCJwo/hT4knBXuh2yJTVW4
oGs/WfhZbKrCb2v8eczHGr+nxn9d+BHhNsLdkfeEHxVui+0B/Vr4BeYT4ROF
PxJeyPwh3Fd4ufAi5hfhk4Q/FX5Z+CjhftX8/S/T922s8qTqK9X+CvM3dm21
vyn8mHA74eOZbyL7Z/DT9Bb+QO3Pq/1Q4T7CT2uMc9C/dP/uUr3EfCk8ER+E
fq+cvv8p+r4v6Ps+hG4m3BNbMj5E4brolMIfCr+CbQafj/Ay4ZewjQhfLPye
8P+w/QlfKvyB8MvcT+HThBdhk8VWJHw+dj7hBcKR8BnCLwo/hu1a13dVhWX4
j3V9e6OPqf0Ntc9Xey3mjIRtjs8LLy5aP2ml79utmm2Q2CKx0e6KbBPDNrZU
uJuex3JsSNgehW/X8RXYMLFdYTNn/lW9K7YobGLoemrvhS0aGxC6Jj4bbO/C
09E1hXtgO0enFi4Kny78P+FHsQUJnyq8EJu2cJnw0djChG/L2YaMLRkbXld0
a13zafo+LYO8NFTfr5fwRuG2+FPUfibPX8An8L4hDwf7U++S7VONgr0bHRFd
sWnc/oYLNd4pwusy1hdPwofN8XH7lyoztq3uod/gkbT1YvTjRmrPZK1TL4vb
Zoiufaeup6/wm2obog+PL1keqxbsY+iQ6JL746NUn+GR9eFpWevjPUq2p2JX
xX+8v/qfrP57xe2/2Yt1F/kOm5HwT7r+H4T7qJ5E/ylZ/jlN/f7U+QYLTxQ+
BduPcNeMfTUNdPy/3BMdd6nqdeKWqQap/83Iq2rbUWUd/r24fSjo9lcJr1D7
vWpPVbMN/121Y2rAto/N4cO4bZzYIn7RZ1PitklimzxP7RN0fH8dv537ITwe
+R7bHs+G8GW8/8I/Y1/J2pb5LD5wdAi136D23mrfylwpPAp5Xvg33t2S/Ved
hTfwewuP5v4Ib8OfKHy9cC/hLcLrNeatGnu+ymtZ+wfwHywP/g9sItiiasds
K8FGszxumz22G2weK+K2+WIL2aExHonbx4AP5Qy1j0QfUX0T777w1egj2D6E
zyxZvuyJ7wP/SmR7/J9Z26dPV/sI9BO1/4q/hnc9/l8YQaxu3s8Zz1s1fHCq
X63+n6j/bPVP6/gRwquEHxTOVHM8wbHq+4r6XiB8ITYh5DO172SuEL5N+Azh
v5lbhG9FHxL+S/jXrG39vVXi+uwNlX+Zj4UvUNvdGfvuDxF+SvgFfIKqd1Y5
Q3im8EfMx3H79y/S+JPRd/X5Lo1/T8a++oPVfkzWdiDsQe2wmQhPwkbK+ha3
//4SHf+48NX6/B/sYxn79g9Q+6NqnyW8vNI+afz/y/S+vMn4Wfvfr1f7fOH2
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
x6dkrV9cp/bb1P4rNiu1Xyt8q/Av2LhKjnkj9m2TyjeqP6T7/xzvs+rN8N/n
HZ9FnFbzKturLg/2ZezPxIARC/ZrmWNcsJF9gT04adsZNqna2HKTtlVhA6ol
3D9p29C3JdvXlgb7GPEdzCXEYBKLic0d2/8XCdvif0D/TvgcnOv7ku2/Hwf7
2TUqk1TfqM/ep6/wLcI/80yW7COYKLyBc5Zs4+Z9571fL9xZ7Wdg+xPeUPJv
fCa2voR/+zZ55z+QB9FU199K+E/mV+EmVb4n3Ju9krbVvxo5noi4ogbCY9U+
RXgb91DjDdd68rnWkyP0wt9AfI7wF/gihEdjOxR+Q7glsYHYF4TfFG4lfGWV
bXzYgv9J2Pb3ma4np/b5Wp9uwVan/q8LtyD2qsr5E9OJF1KZm7SNDlvxroRt
d+g3J8Ztk0J+b5KzLPWk2p8s2YaIrfnfhG2Lq4iB0/jP6nyTquzTwXa4I2Ff
Dz4fbIfbE/YFfa7+BfVfoP63qv/fur62kkWn6vpuE16h9qTan1L7ROGPhRPC
TwrfLLxcOC48T3hClX1E2Do3J+w7wieE7XFTwr4ifFDYev8QZpJE/+oWt40D
fQSbJrbhiqRtnY10TE1dz1W6nnP5/bK2r6DTfYCOp+t9Tedvrvbh2NrJ31D/
x4QvQf8U/p/aGwlfiu1d+EXhxti9sWcJLxZuJjwMW7Tws8L1hS/CFiu8QLiB
8MXC1xBfIdwv2CuPUfvjwnuqfoHan8zatoKMcpuu7+msbTX40B/J2J+ObeZb
dD5kNh3/oI6vruMH8X4LP0C+j/B5wneW7O//KtiT0Df6xK0Dn6L6nMi2ooOx
QaneQcffpeNT2OF1fGfhOcI1hAcLtxO+UzgpPFB4mP7myR9RWcYznLat/kTh
uWnb5LGlx5O21WNjxnZcPWnbMzZ2bN/Vkra998s732ay8CZd+zV5x/MSO/lr
yT4k5AHkgi0l+7BY31jnNrNe6Po+Jh9C575O4w0Sfo94GmIXsTfrfJeg26j/
VvU/Qfhi4beEfyt5DTsHWSbhte1cHf+ujm+r46/W8ecJLxVuJzwCW7jwcuGD
hK8VXqrr2cW7qOd5bJXnJ3yj6xP2beKDxNf5fcK+ySt0/Jc6vhOxgFX2ieJb
/SlhX+kyjfcv8Xwa70Z8F+q/gngh9b9e+AO171b7o2q/Sfh94X+YD4THCffR
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
PZCByJ/FB4lsNL9o3YA9b66IHItCbgN74rA3Du/LkHLrSOyP82rRe1XByXZV
ZBkaWfrUtHMd2E+UvUHZI+fqyLkPyMpwTr/A85C2LIKPg/134YjD3vNcpbmm
7w7rNzImvr/31eeacvt84etAJ0A3WJl27sJrab8r7BHJXpHouxdkvEcJ+jD7
XW0u955e7O31UeTcKnKs4POZJnxW3ByjcI1yfewN/K7Kp+nghy93vsLalO0/
xCOvCfYicmE2lTvmo37K+SM905bheD+/0/xzaMw5d+TefRvyCcmhI5du75y5
4NCR0JXIl/oiaR/j5pAvdn/SOiK64jtB/4Ij+O6QT7U0aZ8avrW3cuYShjMZ
7uS/cs6NJ+ed3Pe/c86NJ2ee3Hk2UyNfkxx4cuG/yJlvB05DuA2/JOcqZk5D
uA1XCbeImcMQLsPPcuYyhLMQ7sLdIV+TnHty71fm7HskjxUuw89zzqUlpxYu
w7dz5jqGAxku5Ddy5hKDUwwu6GU573cIhypcqjtzzs0nx59c//dz5laF8xHu
x13C02LO4SeX/9+QT0qOPrn6/4T8UNYTcvnJj4fbDn66Hch2OXNNw8ENFzf5
6OyFRE77FbpXH+bM9QbnG1ySb+bM1Q2nNdzWf+bMLQBnANwBH+XMBQhnINyB
7AnF3lDk8JPLvzxn7kA4A+EO/Dg8D3AKwi24Iuf8YPKE4Q7cHpnfCc4MuDOK
ecu3cCaQv5vPOz8ReRjuhh055zqSQ0cuXVztc2PmhIAb4tecc+fIkSNX7vec
c+fIySM3b2vOuXhtQr7utpxz9dqGfN7tOefmkXNH7h18IHBZ9eSZ17Wuyzm3
kRxGchkr8uZGgLMC7oqNOa+X5KiSq7o+59xEchrJbSSfFu6c0/XZ39jjcs5F
JIeRXMZfcs7tIyeR3MTyvLkw4ASBG+SnnHMjybEk17KQd34pHBZwWWzKOTeR
HEJyCRN5c1kgT5M/nMo7PxoOCvKPs3nni5KTTm56Wd76EpwacGvksIHFnJNP
bn46b/kNDgzyoaO882vJ0SWfNZN3fiscGHBhENMIdxA+bHzZJZU3Y85ZJj+1
hvCXMXOQkf9amTe3B5wTcE8k8+bKgJOD/Onqee9NAUcZ+bzkI8M9BL/IX7qf
1fLWt+DMI9+2Ku/8WvQx8lvh2IFrZ5A+2xk5bhJdgvjs7si7Oee6ktNLbi86
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
           "]], Polygon3DBox[CompressedData["
1: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
Zcb+El9LM7BxUZZxvcy86oNtwN7A/g+DV9Qb
           "]]},
         Annotation[#, "Charting`Private`Tag$13340#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0r1LllEYB+Db7EN9NXMwNEURN6HAnARFaGjRlmhKW15B0MFAIj/SykHU
TVD0DxAbHURdnCIhxFTK/DatucGW1vI6CO95rt/9nPs5nHN4a7Ivn/bmRMSU
8UpI+ZnHb/7LRNxhQWFENcv4gHVFEX85oK+Zi2z07r88IrfxkTojt8t9clbu
kV9YY5DdnEhrcI7j/MBZrnCB61zmLl/fjPjOfu6x3noD8r78Rc7einjIaePA
u212etfAQ/Wg3iMO8ZhveMJhnqZ98wff8ozveM73/MlR/uJH+/nGJX7iPJc5
wwWOcTbtl+NccfaDtFe5lI/TnZjrVnfJJcYT9XP1pNwit6bzsYm1vM+7rGKN
9S7SPegtZg8rjdMbEbfVx9QSh/RJnLuDP+Yz6e7lCrlAXpXX5HtGvnpXfx6/
0lTs0JFji36x6XGdG8zlZ15jh+bynKv/ziUHN0jT
       "]], Line3DBox[CompressedData["
1:eJwl0s1LVGEUB+Azzug4grloY0slUMoWQdQuWjgtrIVILURamC1aFVS0r2Wr
DBf2NTPVvv6CRG1RiB+VjpbDYAoiIRED0YdN5nNx8eM55973vNz73ttx+frA
tVREjEkxHfFXc4vVhoiZ1ogWlnmI6+zmN57iH55l9kDERWbaIvJmr6i3eE46
3bupP8q7PMFRnmGJ5/mKQ5xgjYfNTcqc/ikvyXhzxLz+IRf4iO/5mB/4hB+T
9VxkNRexaq5bpmTJtQqPyLQUrCu7VuQyS1zhM37ic37mC65y1H495t5IRV/g
sNz2vLP6q3zNQb5kH4s8zfvsdTatmYg76py63+wN9Sb7pMO6Ef1BXmAj8/zl
jE9ym11cYzun3N9MntNsjvd4XHazEc36OrPcYRN/s5E/meEPprnkvd6Z20je
nQ18yy/JmbBmXUr9nZF8e/73j2xzl1/5j1us84H9jqX3/6U9CN9X7Q==
       "]], Line3DBox[CompressedData["
1:eJwl0jtPk2EYBuC3SAu0BhpTDSE4OCsqIJ5+AUiERAfdTBwkYcDJMhjCQJsw
KcHuWiosLG1Rm5hAwLMtRDeYYCEkDLA4qujVMNy57jz58p7ynXv4+M5YJITw
XF5GQzjfGMIE2+SV3G0L4abZG/2BPqBn9FH9vj7OEWaZZo5ZFphjiQWusMwa
17jFn9zjDivJEN5b91B/qxf1QXktf82meUsKshYP4cjsA//xI4P5J0b4mQ38
whP8ykZ+Y5TfGWOVTayxmets4Qbj3E+EMMMhWZCEPJPbMl9/I+f8Y/9lPaIf
6E/1X+60re/yBze5yipL9e85xyJfMM8MZ/mEU3zENO/xnbUr1u3Xl/RF/bTM
yQ2zSaYkL2ed/bpZJ6+xg1fZzj6e4RWm2MtT7GGS3WzlZZ7kJcZ5kc3sYowX
+NvblO03HD3+b/4Db69KlQ==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{3070, 3358, 1666, 3069, 4500, 3266, 3071, 4501, 3267, 3072, 
       4502, 3268, 3073, 4503, 3269, 3074, 4504, 3270, 3075, 4505, 3271, 3076,
        4282, 4578, 3077, 3359, 4506, 3272, 3448, 3360, 3520, 4674, 3523, 
       3273, 3518, 3517, 3528, 4676, 3274, 3078, 4507, 3275, 3079, 4508, 3276,
        3080, 1847, 3277, 3361}], 
      Line3DBox[{3082, 4283, 4579, 3081, 1679, 3083, 4509, 3278, 3084, 4510, 
       3279, 3085, 4511, 3280, 3086, 4512, 3281, 3087, 4513, 3282, 3088, 3484,
        3485, 4284, 4667, 3089, 3511, 3512, 4285, 4673, 3090, 3519, 4514, 
       3283, 3527, 3526, 4515, 3284, 3091, 4516, 3285, 3092, 4517, 3286, 3093,
        4518, 3287, 3094}], 
      Line3DBox[{3096, 3362, 3402, 4286, 4642, 3095, 4287, 4580, 3097, 1694, 
       3098, 4519, 3288, 3099, 4520, 3289, 3100, 4521, 3290, 3101, 4668, 3486,
        3291, 3487, 3365, 3404, 3466, 4644, 4353, 3465, 3464, 3469, 4288, 
       4662, 3102, 3472, 3473, 4289, 4664, 3103, 3476, 3477, 4665, 3292, 3104,
        1999, 3513, 3293, 3105, 4522, 3294, 3106, 4523, 3295, 3107}], 
      Line3DBox[{3121, 3298, 4526, 3120, 3490, 3489, 4669, 3119, 3468, 3514, 
       3467, 4663, 3515, 3118, 3507, 1837, 3478, 3354, 3479, 3117, 4655, 3353,
        3474, 3352, 3475, 3116, 4654, 3351, 3470, 3350, 3471, 3115, 4656, 
       3367, 3405, 3366, 3114, 3376, 3375, 4648, 3113, 3297, 4525, 3112, 3296,
        4524, 3111, 1707, 3110, 4581, 4290, 3109, 4646, 3372, 3371, 3108, 
       4643, 3364, 3403, 3363, 3370}], 
      Line3DBox[{3135, 3392, 3391, 4652, 3134, 3389, 3491, 3388, 4651, 3492, 
       3133, 3357, 3482, 4666, 4343, 3488, 3483, 3132, 3429, 3438, 4342, 4657,
        3436, 3356, 3434, 3131, 3449, 1838, 3480, 3355, 3481, 3435, 3130, 
       4352, 4661, 3382, 3508, 3381, 3510, 3495, 3129, 4671, 3380, 3409, 3379,
        3128, 3378, 3408, 3377, 4649, 3127, 3299, 4527, 3126, 1717, 3125, 
       4583, 4292, 3124, 4582, 4291, 3123, 4647, 3374, 3407, 3373, 3122, 4645,
        3369, 3406, 3368, 3437, 3385}], Line3DBox[CompressedData["
1:eJwVzrkuhGEYBeCjoSHBHWi1JIREGMbYRjHWipiCzpBYEjv3QqwTV6CzXIjC
Xis9iifnvPOd/JmOaq2y3pBkmnJzstqSnLHGIrvU2aG7PZmy2dBP2eSCAc7/
0/uyrLHEpO2KPKHKAl022/KOLSZsDuUxR/y0JfPyhluuGbfZkwfs820zJ6+4
ZMx7sSmZ1fspub9sXlqTUf2Ve3dRPjQmI/LT/ex9WP/Qn/SC/q4/6kP6r3xz
z/hmH4N+6/T/e/UKPRT4A07JK28=
       "]], 
      Line3DBox[{106, 304, 1559, 107, 1560, 108, 1561, 109, 1562, 110, 1563, 
       111, 1564, 112, 1565, 113, 1566, 114, 1567, 115, 1568, 116, 1569, 117, 
       2010, 492, 118, 1994, 467, 119, 1953, 411, 120}], 
      Line3DBox[{3163, 3432, 3463, 3433, 3397, 3424, 3443, 4658, 4351, 3162, 
       3427, 3462, 3428, 3421, 4355, 4653, 3506, 3505, 3161, 3459, 3461, 3460,
        3420, 4672, 3504, 3503, 3160, 4347, 4599, 3419, 3396, 3159, 3524, 
       4675, 4358, 3522, 3521, 3158, 4598, 4302, 3157, 4597, 4301, 3156, 1737,
        3155, 4596, 4300, 3154, 4595, 4299, 3153, 4594, 4298, 3152, 4593, 
       4297, 3151, 4346, 4592, 3418, 3395, 3150, 4345, 4591, 3417, 3393, 
       3442}], Line3DBox[{3165, 3398, 4529, 3301, 3164, 4530, 3302, 3166, 
       4531, 3303, 3167, 4532, 3304, 3168, 4533, 3305, 3169, 4534, 3306, 3170,
        4535, 3307, 3171, 1749, 3172, 4536, 3308, 3173, 4537, 3309, 3174, 
       4538, 3310, 3175, 4357, 4539, 3311, 3525, 4356, 4540, 3312, 3516, 4354,
        4541, 3313, 3509}], 
      Line3DBox[{3177, 4303, 4600, 3176, 4542, 3314, 3178, 4543, 3315, 3179, 
       4544, 3316, 3180, 4545, 3317, 3181, 4546, 3318, 3182, 4547, 3319, 3183,
        4304, 4601, 3184, 1761, 3185, 4548, 3320, 3186, 4549, 3321, 3187, 
       4550, 3322, 3188, 4551, 3323, 3189, 4552, 3324, 3190}], 
      Line3DBox[{3192, 4305, 4602, 3191, 4306, 4603, 3193, 4553, 3325, 3194, 
       4554, 3326, 3195, 4555, 3327, 3196, 4556, 3328, 3197, 4557, 3329, 3198,
        4307, 4604, 3199, 4308, 4605, 3200, 1776, 3201, 4558, 3330, 3202, 
       4559, 3331, 3203, 4560, 3332, 3204, 4561, 3333, 3205}], 
      Line3DBox[{3207, 4309, 4606, 3206, 4310, 4607, 3208, 4311, 4608, 3209, 
       4562, 3334, 3210, 4563, 3335, 3211, 4564, 3336, 3212, 4565, 3337, 3213,
        4312, 4609, 3214, 4313, 4610, 3215, 4314, 4611, 3216, 1791, 3217, 
       4566, 3338, 3218, 4567, 3339, 3219, 4568, 3340, 3220}], 
      Line3DBox[{3222, 4315, 4612, 3221, 4316, 4613, 3223, 4317, 4614, 3224, 
       4318, 4615, 3225, 4569, 3341, 3226, 4570, 3342, 3227, 4571, 3343, 3228,
        4319, 4616, 3229, 4320, 4617, 3230, 4321, 4618, 3231, 4322, 4619, 
       3232, 1806, 3233, 4572, 3344, 3234, 4573, 3345, 3235}], 
      Line3DBox[{3237, 4323, 4620, 3236, 4324, 4621, 3238, 4325, 4622, 3239, 
       4326, 4623, 3240, 4327, 4624, 3241, 4574, 3346, 3242, 4575, 3347, 3243,
        4328, 4625, 3244, 4329, 4626, 3245, 4330, 4627, 3246, 4331, 4628, 
       3247, 4332, 4629, 3248, 1821, 3249, 4576, 3348, 3250}], 
      Line3DBox[{3252, 4333, 4630, 3251, 4334, 4631, 3253, 3399, 4632, 4348, 
       3254, 4349, 4633, 3400, 3255, 4350, 4634, 3401, 3256, 4335, 4635, 3257,
        4577, 3349, 3258, 4336, 4636, 3259, 4337, 4637, 3260, 4338, 4638, 
       3261, 4339, 4639, 3262, 4340, 4640, 3263, 4341, 4641, 3264, 1834, 
       3265}], Line3DBox[{3530, 3774, 2212, 3529, 4739, 3703, 3531, 4740, 
       3704, 3532, 4741, 3705, 3533, 4742, 3706, 3534, 4417, 4802, 3707, 3831,
        2373, 3708, 3832, 3775, 2217, 3833, 3776, 4803, 3709, 3535, 4743, 
       3710, 3536, 4744, 3711, 3537, 4745, 3712, 3538, 4746, 3713, 3539, 2376,
        3714, 3777}], 
      Line3DBox[{3541, 4359, 4677, 3540, 2224, 3542, 4747, 3715, 3543, 4748, 
       3716, 3544, 4749, 3717, 3545, 2378, 3718, 3834, 4750, 3778, 3719, 3835,
        3779, 4360, 4809, 3836, 3780, 2229, 3546, 4751, 3720, 3547, 4752, 
       3721, 3548, 4753, 3722, 3549, 4754, 3723, 3550, 4755, 3724, 3551}], 
      Line3DBox[{3553, 4361, 4678, 3552, 4362, 4679, 3554, 2237, 3555, 4756, 
       3725, 3556, 4757, 3726, 3557, 4758, 3781, 3727, 3837, 4759, 3782, 3728,
        3838, 3783, 4363, 4810, 3839, 3784, 4364, 4680, 3558, 2242, 3559, 
       4760, 3729, 3560, 4761, 3730, 3561, 4762, 3731, 3562, 4763, 3732, 
       3563}], Line3DBox[{3565, 4365, 4681, 3564, 4366, 4682, 3566, 4367, 
       4683, 3567, 2250, 3568, 4764, 3733, 3569, 4765, 750, 824, 2457, 751, 
       825, 752, 2458, 826, 753, 4684, 3570, 4368, 4685, 3571, 2255, 3572, 
       4766, 3734, 3573, 4767, 3735, 3574, 4768, 3736, 3575}], 
      Line3DBox[{3577, 4369, 4686, 3576, 4370, 4687, 3578, 4371, 4688, 3579, 
       4372, 4689, 3580, 2263, 3581, 4769, 3785, 3786, 3582, 2534, 3787, 3901,
        3788, 3885, 3870, 3871, 3869, 3789, 3868, 3790, 4690, 3583, 3791, 
       3792, 4691, 3584, 3906, 2543, 3585, 4373, 4692, 3586, 2268, 3587, 4770,
        3737, 3588, 4771, 3738, 3589}], 
      Line3DBox[{3591, 3894, 3895, 4693, 3590, 3919, 2563, 3592, 4374, 4694, 
       3593, 4375, 4695, 3594, 4423, 4818, 3879, 3595, 971, 3858, 3793, 3596, 
       4811, 1020, 1021, 939, 940, 938, 3872, 3795, 4696, 3597, 3796, 3859, 
       974, 3598, 1036, 3907, 4821, 4424, 3599, 4376, 4697, 3600, 4377, 4698, 
       3601, 2280, 3602, 4772, 3886, 3887, 3603}], 
      Line3DBox[{612, 941, 2112, 613, 1054, 2113, 614, 2114, 615, 2115, 616, 
       2116, 617, 2465, 838, 618, 2504, 914, 839, 944, 619, 917, 840, 945, 
       2117, 620, 841, 2118, 621, 2119, 622, 2120, 623, 2121, 624, 2122, 625, 
       2511, 947, 626}], 
      Line3DBox[{3617, 3889, 3890, 3888, 2410, 3616, 4705, 4384, 3615, 4704, 
       4383, 3614, 4703, 4382, 3613, 4702, 4381, 3612, 4419, 4812, 3843, 3797,
        3611, 2491, 3861, 3842, 3856, 3855, 3610, 3853, 3854, 3841, 3860, 
       2489, 3609, 3794, 3840, 4804, 4418, 3608, 4701, 4380, 3607, 4700, 4379,
        3606, 4699, 4378, 3605, 4426, 4825, 3920, 3922, 3921, 3604, 2559, 
       3915, 3896, 3898, 3897, 3844}], 
      Line3DBox[{3618, 3799, 3892, 3911, 2292, 3910, 3909, 3917, 4822, 3739, 
       3619, 4773, 3740, 3620, 4774, 3741, 3621, 4775, 3742, 3622, 4420, 4813,
        3845, 3743, 3800, 2493, 3862, 3846, 3864, 3744, 3881, 3865, 3866, 
       3847, 3867, 2297, 3802, 3798, 3848, 4805, 3745, 3623, 3904, 3905, 4820,
        3746, 3624, 4776, 3747, 3625, 4777, 3748, 3626, 4427, 4824, 3749, 
       3914, 2416, 3900, 3902, 3750, 3849}], 
      Line3DBox[{3627, 3891, 4385, 4823, 3913, 3912, 2303, 3628, 4778, 3751, 
       3629, 4779, 3752, 3630, 4425, 4819, 3753, 3880, 980, 3863, 3754, 3804, 
       4780, 3801, 3873, 983, 985, 984, 3874, 4386, 4806, 3805, 3803, 3857, 
       966, 3878, 3877, 4817, 3755, 3631, 4781, 3756, 3632, 4782, 3757, 3633, 
       4783, 3758, 3634, 4784, 3899, 3759, 3908}], 
      Line3DBox[{3636, 4387, 4706, 3635, 4388, 4707, 3637, 2313, 3638, 4785, 
       3760, 3639, 4786, 3761, 3640, 4787, 3806, 3762, 3850, 4788, 3807, 3875,
        3882, 3893, 3883, 3851, 3884, 3808, 3876, 4389, 4814, 3852, 3809, 
       4390, 4708, 3641, 2318, 3642, 4789, 3763, 3643, 4790, 3764, 3644, 4791,
        3765, 3645, 4792, 3766, 3646}], 
      Line3DBox[{3648, 4391, 4709, 3647, 4392, 4710, 3649, 4393, 4711, 3650, 
       2326, 3651, 4793, 3767, 3652, 4794, 791, 852, 2470, 792, 853, 1064, 
       793, 2471, 854, 794, 4712, 3653, 4394, 4713, 3654, 2331, 3655, 4795, 
       3768, 3656, 4796, 3769, 3657, 4797, 3770, 3658}], 
      Line3DBox[{3660, 4395, 4714, 3659, 4396, 4715, 3661, 4397, 4716, 3662, 
       4398, 4717, 3663, 2339, 3664, 4798, 3810, 3811, 3665, 4815, 3812, 3903,
        3813, 3916, 3666, 3814, 3918, 3815, 4718, 3667, 3816, 3817, 4719, 
       3668, 4399, 4720, 3669, 4400, 4721, 3670, 2344, 3671, 4799, 3771, 3672,
        4800, 3772, 3673}], 
      Line3DBox[{3675, 4401, 4722, 3674, 4402, 4723, 3676, 4403, 4724, 3677, 
       4404, 4725, 3678, 4405, 4726, 3679, 2435, 3818, 3680, 4816, 3819, 3820,
        3681, 3821, 3822, 4727, 3682, 3823, 2440, 3683, 4406, 4728, 3684, 
       4407, 4729, 3685, 4408, 4730, 3686, 2357, 3687, 4801, 3773, 3688}], 
      Line3DBox[{3702, 3830, 2447, 3701, 4738, 4416, 3700, 4737, 4415, 3699, 
       4736, 4414, 3698, 4735, 4413, 3697, 4422, 4808, 3829, 3696, 2445, 3828,
        3695, 3827, 2444, 3694, 3826, 4807, 4421, 3693, 4734, 4412, 3692, 
       4733, 4411, 3691, 4732, 4410, 3690, 4731, 4409, 3689, 2441, 3824, 
       3825}], Line3DBox[{3923, 4258, 4259, 4239, 4271, 2766, 4238, 4186, 
       4240, 4963, 4112, 3924, 4280, 4281, 4981, 4113, 3925, 4895, 4114, 3926,
        4896, 4115, 3927, 4897, 4116, 3928, 4898, 4117, 3929, 2773, 3930, 
       4899, 4118, 3931, 4900, 4119, 3932, 4901, 4120, 3933, 4902, 4121, 3934,
        4493, 4970, 4242, 4122, 4241, 3055, 4272, 4243, 4264, 4123, 4275}], 
      Line3DBox[{3935, 1473, 4265, 4428, 4964, 4189, 4187, 4262, 1449, 4274, 
       4273, 4979, 4124, 3936, 4903, 4125, 3937, 4904, 4126, 3938, 4905, 4127,
        3939, 4906, 4128, 3940, 4429, 4826, 3941, 2785, 3942, 4907, 4129, 
       3943, 4908, 4130, 3944, 4909, 4131, 3945, 2936, 4256, 4132, 4190, 4910,
        4188, 4133, 4278}], 
      Line3DBox[{3946, 4191, 4430, 4971, 4244, 4192, 4431, 4827, 3947, 2791, 
       3948, 4911, 4134, 3949, 4912, 4135, 3950, 4913, 4136, 3951, 4914, 4137,
        3952, 4432, 4828, 3953, 4433, 4829, 3954, 2798, 3955, 4915, 4138, 
       3956, 4916, 4139, 3957, 4917, 4193, 4140, 4245, 4918, 4194, 4141, 
       3958}], Line3DBox[{3959, 1309, 3015, 1368, 1310, 4830, 3960, 4434, 
       4831, 3961, 2804, 3962, 4919, 4142, 3963, 4920, 4143, 3964, 4921, 4144,
        3965, 4435, 4832, 3966, 4436, 4833, 3967, 4437, 4834, 3968, 2811, 
       3969, 4922, 4145, 3970, 4923, 1311, 1369, 3016, 1312, 3971}], 
      Line3DBox[{3973, 4195, 4196, 4835, 3972, 4197, 4198, 4836, 3974, 4438, 
       4837, 3975, 4439, 4838, 3976, 2817, 3977, 4924, 4146, 3978, 4925, 4147,
        3979, 4440, 4839, 3980, 4441, 4840, 3981, 4442, 4841, 3982, 4443, 
       4842, 3983, 2824, 3984, 4926, 4199, 4200, 3985, 4972, 4201, 4202, 
       3986}], Line3DBox[{3988, 4203, 4204, 4843, 3987, 4205, 2959, 3989, 
       4444, 4844, 3990, 4445, 4845, 3991, 4446, 4846, 3992, 2830, 3993, 4927,
        4148, 3994, 4447, 4847, 3995, 4448, 4848, 3996, 4449, 4849, 3997, 
       4450, 4850, 3998, 4451, 4851, 3999, 2960, 4206, 4000, 4973, 4207, 4208,
        4001}], 
      Line3DBox[{1172, 2659, 1173, 2660, 1174, 2661, 1175, 2662, 1176, 2663, 
       1177, 2664, 1178, 2665, 1179, 2666, 1180, 2667, 1181, 2668, 1182, 2669,
        1183, 2670, 1184, 2671, 1185, 2672, 1186}], 
      Line3DBox[{4003, 4209, 2964, 4002, 4210, 4965, 4494, 4004, 4452, 4852, 
       4005, 4453, 4853, 4006, 4454, 4854, 4007, 4455, 4855, 4008, 2843, 4009,
        4456, 4856, 4010, 4457, 4857, 4011, 4458, 4858, 4012, 4459, 4859, 
       4013, 4460, 4860, 4014, 4495, 4966, 4211, 4015, 2968, 4212, 4016}], 
      Line3DBox[{4017, 4213, 2849, 4246, 4214, 4967, 4149, 4018, 4928, 4150, 
       4019, 4929, 4151, 4020, 4930, 4152, 4021, 4931, 4153, 4022, 4932, 4154,
        4023, 2856, 4024, 4933, 4155, 4025, 4934, 4156, 4026, 4935, 4157, 
       4027, 4936, 4158, 4028, 4496, 4968, 4159, 4247, 2975, 4160, 4029}], 
      Line3DBox[{4030, 4215, 4461, 4974, 4248, 4216, 2862, 4031, 4937, 4161, 
       4032, 4938, 4162, 4033, 4939, 4163, 4034, 4940, 4164, 4035, 4941, 4165,
        4036, 4462, 4861, 4037, 2869, 4038, 4942, 4166, 4039, 4943, 4167, 
       4040, 4944, 4168, 4041, 2979, 4169, 4249, 4945, 4217, 4170, 4042}], 
      Line3DBox[{4043, 4218, 4463, 4975, 4250, 4219, 4464, 4862, 4044, 2875, 
       4045, 4946, 4171, 4046, 4947, 4172, 4047, 4948, 4173, 4048, 4949, 4174,
        4049, 4465, 4863, 4050, 4466, 4864, 4051, 2882, 4052, 4950, 4175, 
       4053, 4951, 4176, 4054, 4952, 4220, 4177, 4251, 4953, 4221, 4178, 
       4055}], Line3DBox[{4056, 1337, 3029, 1382, 1338, 4865, 4057, 4467, 
       4866, 4058, 2888, 4059, 4954, 4179, 4060, 4955, 4180, 4061, 4956, 4181,
        4062, 4468, 4867, 4063, 4469, 4868, 4064, 4470, 4869, 4065, 2895, 
       4066, 4957, 4182, 4067, 4958, 1339, 1383, 3030, 1340, 4068}], 
      Line3DBox[{4070, 4222, 4223, 4870, 4069, 4224, 4225, 4871, 4071, 4471, 
       4872, 4072, 4472, 4873, 4073, 2901, 4074, 4959, 4183, 4075, 4960, 4184,
        4076, 4473, 4874, 4077, 4474, 4875, 4078, 4475, 4876, 4079, 4476, 
       4877, 4080, 2908, 4081, 4961, 4226, 4227, 4082, 4976, 4228, 4229, 
       4083}], Line3DBox[{4097, 4236, 4263, 4235, 4978, 4096, 4234, 4266, 
       1455, 4095, 4276, 4980, 4499, 4094, 4885, 4483, 4093, 4884, 4482, 4092,
        4883, 4481, 4091, 4882, 4480, 4090, 4185, 4962, 4089, 2914, 4088, 
       4881, 4479, 4087, 4880, 4478, 4086, 4879, 4477, 4085, 3001, 4257, 4232,
        4084, 4878, 4231, 4230, 4279}], 
      Line3DBox[{4111, 4260, 4261, 4255, 4270, 3047, 4110, 4237, 4254, 4969, 
       4498, 4109, 4894, 4492, 4108, 4893, 4491, 4107, 4892, 4490, 4106, 4891,
        4489, 4105, 4890, 4488, 4104, 2926, 4103, 4889, 4487, 4102, 4888, 
       4486, 4101, 4887, 4485, 4100, 4886, 4484, 4099, 4497, 4977, 4253, 4233,
        4098, 3043, 4267, 4252, 4269, 4268, 4277}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1479, 1667, 4500, 1480, 1679, 1503, 4580, 1693, 1517, 1852, 
       4646, 1705, 1530, 1853, 4647, 1714, 1540, 4584, 1860, 1722, 1549, 4592,
        1871, 1732, 1560, 1743, 4530, 1571, 1754, 4542, 1585, 4603, 1768, 
       1599, 4607, 1782, 1613, 4613, 1796, 1627, 4621, 1810, 1641, 4631, 1824,
        1655}], 
      Line3DBox[{1481, 1668, 4501, 1482, 1680, 4509, 1504, 1694, 1518, 4581, 
       1706, 1531, 4582, 1715, 1541, 4585, 1723, 1550, 4593, 1733, 1561, 1744,
        4531, 1572, 1755, 4543, 1586, 1769, 4553, 1600, 4608, 1783, 1614, 
       4614, 1797, 1628, 4622, 1811, 1642, 4632, 1879, 1985, 1825, 1656}], 
      Line3DBox[{1483, 1669, 4502, 1484, 1681, 4510, 1505, 1695, 4519, 1519, 
       1707, 1532, 4583, 1716, 1542, 4586, 1724, 1551, 4594, 1734, 1562, 1745,
        4532, 1573, 1756, 4544, 1587, 1770, 4554, 1601, 1784, 4562, 1615, 
       4615, 1798, 1629, 4623, 1812, 1643, 4633, 1880, 1986, 1881, 1987, 
       1890}], Line3DBox[{1485, 1670, 4503, 1486, 1682, 4511, 1506, 1696, 
       4520, 1520, 1708, 4524, 1533, 1717, 1543, 4587, 1725, 1552, 4595, 1735,
        1563, 1746, 4533, 1574, 1757, 4545, 1588, 1771, 4555, 1602, 1785, 
       4563, 1616, 1799, 4569, 1630, 4624, 1813, 1644, 4634, 1882, 1941, 1883,
        1988, 1891}], 
      Line3DBox[{1487, 1671, 4504, 1488, 1683, 4512, 1507, 1697, 4521, 1521, 
       1709, 4525, 1534, 1718, 4527, 1544, 1726, 1553, 4596, 1736, 1564, 1747,
        4534, 1575, 1758, 4546, 1589, 1772, 4556, 1603, 1786, 4564, 1617, 
       1800, 4570, 1631, 1814, 4574, 1645, 4635, 1826, 1657}], 
      Line3DBox[{1489, 1672, 4505, 1490, 1684, 4513, 1508, 1960, 4668, 1961, 
       1522, 1854, 4648, 1855, 1886, 1856, 4649, 1857, 1545, 1727, 4528, 1554,
        1737, 1565, 1748, 4535, 1576, 1759, 4547, 1590, 1773, 4557, 1604, 
       1787, 4565, 1618, 1801, 4571, 1632, 1815, 4575, 1646, 1827, 4577, 
       1658}], Line3DBox[{8, 3076, 23, 3088, 38, 427, 3487, 53, 3114, 68, 
       3128, 83, 3142, 98, 3156, 113, 3171, 128, 3183, 143, 3198, 158, 3213, 
       173, 3228, 188, 3243, 203, 3258, 218}], 
      Line3DBox[{1491, 4578, 1673, 1492, 1959, 4667, 1685, 1509, 1989, 1990, 
       1943, 4644, 1944, 1698, 1523, 1850, 4656, 1911, 1710, 1535, 1858, 4671,
        1975, 1719, 1546, 4588, 1728, 1555, 4597, 1738, 1566, 1749, 1577, 
       4601, 1760, 1591, 4604, 1774, 1605, 4609, 1788, 1619, 4616, 1802, 1633,
        4625, 1816, 1647, 4636, 1828, 1659}], 
      Line3DBox[{1496, 1676, 4507, 1497, 1689, 4516, 1513, 1998, 1999, 2000, 
       2001, 1945, 4663, 1948, 1946, 1957, 1958, 4666, 1840, 1962, 1841, 1922,
        1914, 1887, 1921, 4659, 1923, 1864, 1963, 1865, 1926, 1888, 1982, 
       4672, 1996, 1873, 1981, 1874, 2010, 2008, 2009, 4539, 1581, 1764, 4550,
        1595, 1778, 4559, 1609, 1792, 4566, 1623, 1806, 1637, 4629, 1820, 
       1651, 4640, 1832, 1663}], 
      Line3DBox[{1498, 1677, 4508, 1499, 1690, 4517, 1514, 1702, 4522, 1527, 
       1964, 4669, 1965, 1966, 1967, 1866, 4651, 1909, 1867, 1968, 1917, 1868,
        1969, 1894, 4670, 1939, 1842, 1898, 1843, 1927, 1895, 1889, 4653, 
       1983, 1984, 1875, 1940, 1876, 1994, 1992, 2018, 1993, 4540, 1582, 1765,
        4551, 1596, 1779, 4560, 1610, 1793, 4567, 1624, 1807, 4572, 1638, 
       1821, 1652, 4641, 1833, 1664}], 
      Line3DBox[{1500, 1846, 1847, 1501, 1691, 4518, 1515, 1703, 4523, 1528, 
       1712, 4526, 1538, 1869, 4652, 1938, 1978, 1977, 1979, 1924, 4660, 1925,
        1910, 1919, 1918, 1920, 4658, 1896, 1900, 1897, 1878, 1971, 1970, 
       1953, 1951, 2002, 1952, 4541, 1583, 1766, 4552, 1597, 1780, 4561, 1611,
        1794, 4568, 1625, 1808, 4573, 1639, 1822, 4576, 1653, 1834, 1665}], 
      Line3DBox[{1654, 1823, 4630, 1640, 1809, 4620, 1626, 1795, 4612, 1612, 
       1781, 4606, 1598, 1767, 4602, 1584, 1753, 4600, 1570, 4529, 1742, 1877,
        1559, 1731, 1870, 4591, 1548, 1721, 4650, 1859, 1539, 1713, 4645, 
       1851, 1529, 1704, 4643, 1849, 1516, 1692, 4642, 1848, 1502, 1678, 4579,
        1478, 1666, 1844, 1884}], 
      Line3DBox[{1660, 1829, 4637, 1648, 1817, 4626, 1634, 1803, 4617, 1620, 
       1789, 4610, 1606, 1775, 4605, 1592, 1761, 1578, 4536, 1750, 1567, 1739,
        4598, 1556, 1729, 1976, 1861, 1547, 1720, 1912, 4661, 1930, 1929, 
       1536, 1711, 1902, 1901, 4654, 1835, 1524, 1699, 4662, 1942, 1510, 1686,
        4673, 1997, 1493, 4506, 1674, 1928, 1973, 1972, 1974}], 
      Line3DBox[{1661, 1830, 4638, 1649, 1818, 4627, 1635, 1804, 4618, 1621, 
       1790, 4611, 1607, 1776, 1593, 4548, 1762, 1579, 4537, 1751, 1568, 1740,
        2016, 2007, 2017, 4675, 1557, 2014, 2013, 1933, 1862, 1995, 4589, 
       1934, 1935, 1908, 1907, 1906, 1838, 1956, 1931, 1932, 1905, 1904, 1903,
        4655, 1836, 1525, 1700, 4664, 1954, 1511, 4514, 1687, 2020, 2006, 
       2021, 1494, 2012, 4674, 2011, 2004, 1845, 2005, 1885}], 
      Line3DBox[{1662, 1831, 4639, 1650, 1819, 4628, 1636, 1805, 4619, 1622, 
       1791, 1608, 4558, 1777, 1594, 4549, 1763, 1580, 4538, 1752, 1569, 1741,
        1980, 1872, 4599, 1558, 1730, 1916, 1863, 4590, 1936, 1937, 1893, 
       1892, 1915, 1839, 4657, 1913, 1899, 1537, 1950, 1949, 1947, 1837, 1991,
        1526, 4665, 1701, 1955, 1512, 4515, 1688, 2019, 1495, 4676, 1675, 
       2003, 2015}], 
      Line3DBox[{2023, 2213, 4739, 2024, 2224, 2049, 4679, 2236, 2063, 4682, 
       2248, 2077, 4687, 2260, 2090, 2563, 2272, 2102, 4825, 2544, 2282, 2113,
        2547, 2293, 4822, 2124, 2550, 2303, 2135, 4707, 2312, 2147, 4710, 
       2324, 2160, 4715, 2336, 2173, 4723, 2348, 2187, 4731, 2360, 2201}], 
      Line3DBox[{2025, 2214, 4740, 2026, 2225, 4747, 2050, 2237, 2064, 4683, 
       2249, 2078, 4688, 2261, 2091, 4694, 2273, 2103, 4699, 2283, 2114, 2294,
        4773, 2125, 2304, 4778, 2136, 2313, 2148, 4711, 2325, 2161, 4716, 
       2337, 2174, 4724, 2349, 2188, 4732, 2361, 2202}], 
      Line3DBox[{2027, 2215, 4741, 2028, 2226, 4748, 2051, 2238, 4756, 2065, 
       2250, 2079, 4689, 2262, 2092, 4695, 2274, 2104, 4700, 2284, 2115, 2295,
        4774, 2126, 2305, 4779, 2137, 2314, 4785, 2149, 2326, 2162, 4717, 
       2338, 2175, 4725, 2350, 2189, 4733, 2362, 2203}], 
      Line3DBox[{2029, 2216, 4742, 2030, 2227, 4749, 2052, 2239, 4757, 2066, 
       2251, 4764, 2080, 2263, 2093, 4818, 2517, 2518, 2105, 4701, 2285, 2116,
        2296, 4775, 2127, 2522, 2523, 4819, 2138, 2315, 4786, 2150, 2327, 
       4793, 2163, 2339, 2176, 4726, 2351, 2190, 4734, 2363, 2204}], 
      Line3DBox[{2031, 2371, 2372, 4802, 2032, 2377, 2378, 2053, 2383, 4758, 
       2384, 2067, 2389, 4765, 2390, 2081, 2395, 4769, 2396, 2486, 971, 2519, 
       2400, 2462, 4804, 2401, 2402, 2465, 2406, 2407, 4813, 2466, 2413, 2524,
        980, 2497, 2419, 4787, 2420, 2151, 2424, 4794, 2425, 2164, 2429, 4798,
        2430, 2177, 2435, 2436, 2191, 4807, 2442, 2443, 2205}], 
      Line3DBox[CompressedData["
1:eJwVz71KgmEcxuF/S+UanYAH45RLLrW4BG6iNLS0FIJNEUFIRESDESJRS9AH
9AFWqNHXATRamjXkEXi9w8UPbp73eXnSS+VcaSIisvxPRZymIs7YIcPINqc1
tmac08npiHndTdhyOmtb0D0WeaHHF/vkeeWbZ9/09YAnHjnkimsKXHJBmzvu
KXLLDXU6dFnmxJ0lfWfAD0ec21f0gyG/HLPKH2u8OdPQdSreUU3usTV1g23b
ZvIPHmjxyRgtWjWr
       "]], 
      Line3DBox[{514, 815, 3832, 529, 819, 3835, 544, 822, 3838, 559, 825, 
       990, 574, 935, 3871, 828, 993, 589, 940, 832, 994, 604, 3610, 943, 769,
        976, 619, 946, 778, 981, 3881, 634, 949, 785, 985, 649, 954, 850, 
       3851, 1003, 664, 959, 853, 679, 3666, 856, 694, 3681, 859, 709, 3695, 
       863, 724}], 
      Line3DBox[{2036, 2374, 2218, 4803, 2037, 2382, 2229, 2056, 2388, 4680, 
       2241, 2070, 2394, 4684, 2253, 2083, 2399, 4691, 2265, 2095, 974, 2521, 
       2276, 2107, 4812, 2404, 2287, 2118, 2409, 2298, 4805, 2129, 1012, 2515,
        966, 2140, 2423, 4708, 2317, 2153, 2428, 4712, 2329, 2166, 2434, 4719,
        2341, 2180, 2440, 2353, 2194, 4808, 2446, 2365, 2207}], 
      Line3DBox[{2038, 2219, 4743, 2039, 2230, 4751, 2057, 2242, 2071, 4685, 
       2254, 2084, 2543, 2266, 2096, 4821, 2520, 2277, 2108, 4702, 2288, 2119,
        2542, 2299, 4820, 2130, 2514, 2307, 4817, 2141, 2318, 2154, 4713, 
       2330, 2167, 4720, 2342, 2181, 4728, 2354, 2195, 4735, 2366, 2208}], 
      Line3DBox[{2040, 2220, 4744, 2041, 2231, 4752, 2058, 2243, 4760, 2072, 
       2255, 2085, 4692, 2267, 2097, 4697, 2278, 2109, 4703, 2289, 2120, 2300,
        4776, 2131, 2308, 4781, 2142, 2319, 4789, 2155, 2331, 2168, 4721, 
       2343, 2182, 4729, 2355, 2196, 4736, 2367, 2209}], 
      Line3DBox[{2042, 2221, 4745, 2043, 2232, 4753, 2059, 2244, 4761, 2073, 
       2256, 4766, 2086, 2268, 2098, 4698, 2279, 2110, 4704, 2290, 2121, 2301,
        4777, 2132, 2309, 4782, 2143, 2320, 4790, 2156, 2332, 4795, 2169, 
       2344, 2183, 4730, 2356, 2197, 4737, 2368, 2210}], 
      Line3DBox[{2044, 2222, 4746, 2045, 2233, 4754, 2060, 2245, 4762, 2074, 
       2257, 4767, 2087, 2269, 4770, 2099, 2280, 2111, 4705, 2291, 2122, 2554,
        2555, 4824, 2133, 2310, 4783, 2144, 2321, 4791, 2157, 2333, 4796, 
       2170, 2345, 4799, 2184, 2357, 2198, 4738, 2369, 2211}], 
      Line3DBox[{2046, 2375, 2376, 2047, 2234, 4755, 2061, 2246, 4763, 2075, 
       2258, 4768, 2088, 2270, 4771, 2100, 2526, 4772, 2527, 2528, 2410, 2411,
        2511, 2557, 2558, 2556, 2416, 2532, 2530, 4784, 2531, 2145, 2322, 
       4792, 2158, 2334, 4797, 2171, 2346, 4800, 2185, 2358, 4801, 2199, 2447,
        2448, 2449}], 
      Line3DBox[{2200, 2359, 2441, 2186, 2347, 4722, 2172, 2335, 4714, 2159, 
       2323, 4709, 2146, 2311, 4706, 2134, 2302, 4823, 2551, 2553, 2552, 2123,
        2292, 2549, 2548, 2562, 2561, 2112, 2281, 2546, 2545, 2560, 2559, 
       2101, 2271, 4693, 2529, 2089, 2259, 4686, 2076, 2247, 4681, 2062, 2235,
        4678, 2048, 2223, 4677, 2022, 2212, 2370, 2450}], 
      Line3DBox[{2206, 2364, 2483, 2477, 2445, 2193, 2352, 2475, 4727, 2439, 
       2179, 2340, 2473, 4718, 2433, 2165, 2328, 2564, 2471, 2427, 2152, 2316,
        4814, 2469, 2422, 2139, 2306, 4806, 2418, 2508, 2507, 2128, 2297, 
       2498, 2415, 2482, 2481, 2117, 2286, 2480, 2408, 2492, 2491, 2106, 2275,
        2503, 2464, 4696, 2403, 2094, 2264, 2460, 4690, 2398, 2082, 2252, 
       2458, 2393, 2069, 2240, 4810, 2456, 2387, 2055, 2228, 4809, 2454, 2381,
        2035, 2217, 2452, 2485, 2484, 2516}], 
      Line3DBox[{2566, 2932, 2767, 4963, 2567, 1472, 3063, 1449, 2591, 2941, 
       4827, 2790, 2604, 2947, 4830, 2802, 2618, 2953, 4836, 2814, 2632, 2959,
        2826, 2646, 4965, 2965, 2838, 2660, 2971, 2850, 4967, 2674, 2977, 
       2862, 2688, 2983, 4862, 2874, 2702, 2989, 4865, 2886, 2716, 2995, 4871,
        2898, 2730, 3001, 2910, 2742, 4977, 3002, 2921, 2754}], 
      Line3DBox[{2568, 3068, 2768, 4981, 2569, 3062, 2779, 4979, 2592, 2791, 
       2605, 4831, 2803, 2619, 4837, 2815, 2633, 4844, 2827, 2647, 4852, 2839,
        2661, 2851, 4928, 2675, 2863, 4937, 2689, 2875, 2703, 4866, 2887, 
       2717, 4872, 2899, 2731, 4879, 2911, 2743, 4886, 2922, 2755}], 
      Line3DBox[{2570, 2769, 4895, 2571, 2780, 4903, 2593, 2792, 4911, 2606, 
       2804, 2620, 4838, 2816, 2634, 4845, 2828, 2648, 4853, 2840, 2662, 2852,
        4929, 2676, 2864, 4938, 2690, 2876, 4946, 2704, 2888, 2718, 4873, 
       2900, 2732, 4880, 2912, 2744, 4887, 2923, 2756}], 
      Line3DBox[{2572, 2770, 4896, 2573, 2781, 4904, 2594, 2793, 4912, 2607, 
       2805, 4919, 2621, 2817, 2635, 4846, 2829, 2649, 4854, 2841, 2663, 2853,
        4930, 2677, 2865, 4939, 2691, 2877, 4947, 2705, 2889, 4954, 2719, 
       2901, 2733, 4881, 2913, 2745, 4888, 2924, 2757}], 
      Line3DBox[{2574, 2771, 4897, 2575, 2782, 4905, 2595, 2794, 4913, 2608, 
       2806, 4920, 2622, 2818, 4924, 2636, 2830, 2650, 4855, 2842, 2664, 2854,
        4931, 2678, 2866, 4940, 2692, 2878, 4948, 2706, 2890, 4955, 2720, 
       2902, 4959, 2734, 2914, 2746, 4889, 2925, 2758}], 
      Line3DBox[{2576, 2772, 4898, 2577, 2783, 4906, 2596, 2795, 4914, 2609, 
       2807, 4921, 2623, 2819, 4925, 2637, 2831, 4927, 2651, 2843, 2665, 2855,
        4932, 2679, 2867, 4941, 2693, 2879, 4949, 2707, 2891, 4956, 2721, 
       2903, 4960, 2735, 2915, 4962, 2747, 2926, 2759}], 
      Line3DBox[{1074, 3929, 1089, 3940, 1104, 3952, 1119, 3965, 1134, 3979, 
       1149, 3994, 1164, 4009, 1179, 4023, 1194, 4036, 1209, 4049, 1224, 4062,
        1239, 4076, 1254, 4090, 1269, 4104, 1284}], 
      Line3DBox[{2578, 2773, 2579, 4826, 2784, 2597, 4828, 2796, 2610, 4832, 
       2808, 2624, 4839, 2820, 2638, 4847, 2832, 2652, 4856, 2844, 2666, 2856,
        2680, 4861, 2868, 2694, 4863, 2880, 2708, 4867, 2892, 2722, 4874, 
       2904, 2736, 4882, 2916, 2748, 4890, 2927, 2760}], 
      Line3DBox[{2580, 2774, 4899, 2581, 2785, 2598, 4829, 2797, 2611, 4833, 
       2809, 2625, 4840, 2821, 2639, 4848, 2833, 2653, 4857, 2845, 2667, 2857,
        4933, 2681, 2869, 2695, 4864, 2881, 2709, 4868, 2893, 2723, 4875, 
       2905, 2737, 4883, 2917, 2749, 4891, 2928, 2761}], 
      Line3DBox[{2582, 2775, 4900, 2583, 2786, 4907, 2599, 2798, 2612, 4834, 
       2810, 2626, 4841, 2822, 2640, 4849, 2834, 2654, 4858, 2846, 2668, 2858,
        4934, 2682, 2870, 4942, 2696, 2882, 2710, 4869, 2894, 2724, 4876, 
       2906, 2738, 4884, 2918, 2750, 4892, 2929, 2762}], 
      Line3DBox[{2584, 2776, 4901, 2585, 2787, 4908, 2600, 2799, 4915, 2613, 
       2811, 2627, 4842, 2823, 2641, 4850, 2835, 2655, 4859, 2847, 2669, 2859,
        4935, 2683, 2871, 4943, 2697, 2883, 4950, 2711, 2895, 2725, 4877, 
       2907, 2739, 4885, 2919, 2751, 4893, 2930, 2763}], 
      Line3DBox[{2586, 2777, 4902, 2587, 2788, 4909, 2601, 2800, 4916, 2614, 
       2812, 4922, 2628, 2824, 2642, 4851, 2836, 2656, 4860, 2848, 2670, 2860,
        4936, 2684, 2872, 4944, 2698, 2884, 4951, 2712, 2896, 4957, 2726, 
       2908, 2740, 4980, 3064, 3065, 2752, 4894, 2931, 2764}], 
      Line3DBox[{2588, 2933, 2934, 4970, 3011, 2935, 2936, 3037, 2942, 4917, 
       2943, 2615, 2948, 4923, 2949, 2629, 2954, 4926, 2955, 2643, 2960, 2961,
        2657, 4966, 2966, 2967, 2671, 2972, 2973, 4968, 2685, 2978, 2979, 
       2699, 2984, 4952, 2985, 2713, 2990, 4958, 2991, 2727, 2996, 4961, 2997,
        3042, 1455, 3066, 3003, 3035, 4969, 3005, 3006, 2765}], 
      Line3DBox[{2589, 3038, 3039, 3010, 3056, 3055, 3012, 3057, 3058, 2939, 
       4910, 2937, 2602, 2944, 3014, 4918, 2945, 2616, 2950, 3016, 2951, 2630,
        2956, 4972, 3018, 2957, 2644, 2962, 4973, 3020, 2963, 2658, 2968, 
       3022, 2969, 2672, 2974, 3024, 2975, 2686, 2980, 3026, 4945, 2981, 2700,
        2986, 3028, 4953, 2987, 2714, 2992, 3030, 2993, 2728, 2998, 4976, 
       3032, 2999, 3041, 3004, 4978, 3034, 3061, 3060, 3036, 3047, 3048, 3008,
        3046, 3045, 3049}], 
      Line3DBox[{2753, 2920, 3040, 3007, 3044, 3043, 2741, 2909, 3059, 3033, 
       4878, 3000, 2729, 2897, 3031, 4870, 2994, 2715, 2885, 3029, 2988, 2701,
        2873, 4975, 3027, 2982, 2687, 2861, 4974, 3025, 2976, 2673, 2849, 
       3023, 2970, 2659, 2837, 3021, 2964, 2645, 2825, 3019, 4843, 2958, 2631,
        2813, 3017, 4835, 2952, 2617, 2801, 3015, 2946, 2603, 2789, 4971, 
       3013, 2940, 2590, 2778, 4964, 2938, 3054, 3053, 2565, 2766, 3052, 3009,
        3051, 3050, 3067}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
9MsJF7agL4lHBfH3Kjw3kMO/Y+CCfi+FT/SrW7wK5/OvuNCfuI42ywbg3/eQ
p/oU5XshqYE6Pfx7/faP/vb/2x79bS/yCD3Gv6NxQVoy/t7M/Hgr/L3aBhI4
frSzN0gUx192elMJjn/S81AW74MJ8Dj4fErcaAzVm0Yv3HYq/j9zfrQalOpj
6OHVllCX89WAZW9so9gjqq3UX3H7Wp6Ib7j9eZNBPJ/hbtMpPJ9RYTPN0nNK
PgtP+9Pi96JxoYeLci/Q9q1Gdnj+SyQp0eH34sGnZzOUe4GopXvU8fP+QcYy
/F78fEU4jft5s+nqf+7XX/ca/Y97jf7HvUb/416jP/f6r7qE/tQTpsP6vHKU
ukSj/OA1pf6gwn1jGy5R6s/vc/T3+V916R8/c1k1n/C6au/e30CphyixlnoX
Xg9FdPdsoWKqhu7H53ZQ6ifSYm/gx+vn5ls15Xhd7Tx+dxd+3qFuKYif//aD
/vaTf+FsM96nztu/sKDUeXRyrunZv/Qp9KfOqwgnS+B9ikmR5wClXyAL+ZQw
vF8Y0gTn4H3qg3vgEqXvINMP1TV43/l9jv4+j5a30sH7V4CCDN6/kCytNSPe
j1TPs9zG+5GFJA8P7j+65WMA7t9O7lMk3r/61k3x/oUqqVkYcPs559T/j68v
j8ey296XodFQaI4yVEqTCpEsNCEahJRkSErSRKlQQmaZ53lIilCEEjtTiFDm
eZ55nihjg9+znpP3dPy+57z/9Gm963Pttda99rr3vj/X1VOB7yk/y3t3MH6u
zveGGH+iqYz9RaEBImwSRhg7W8m21dPMS8Qj4PgSqhPNDjHmL9/Q7OAcqjoP
7ecPxbUL5VaB8MniGK75tH2ZzfNW9VPCP/0ccvrjmT1UKrC2UlwsdJJm/Mls
/z/4ZDb+5uZbm97lVkOJ2rWxVtr9mMvkzM99a/59budJzDC6NESFcPs1RVVS
LyHyfeBBmj9pvLh8GP0Zeswm0f/Etua0Hz9qIckgVi9LZwiWLAGO8wkv/8Hx
kTFQ6++lwkuJC6WWu5NBSKOmiuZPxLapnEX/7W+vLkL/PV+XB2qNNAJX3q49
b68Mwgu/vDxZi5R/cIR0QtNHm6ngMBmqyzmROuNPZvuLUY8kdta2wYfKgxoa
tHNiJkPC9ky5f88rdxHTrz35VNjlcTGJ+VrWjD+Z7e/28+oyPto8CWnksqDN
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
dy5Np/Pz9X7stEP+Z/8N/h/I/7Q6emIX8j8Dr8bnI/+Tp3giCvmf9QN9VPS3
E1CxRP/ajW4syKeNW9dPxw8c7KPjr0t9bIn4dqtlzmM863yvh2I8Vg0eahhP
nfKjdRj/nA25+Rg/+76oXxh/h5haKuabL/bkNub7Wa3tF+Z7qSAvEevD6mig
ifXpUb7g8jeftqzOiF7P5Fag6x3OV9mP2bhfzwo9xUXnfyZvTjFB/qd6DHMK
8j8hu88Q+Z+6mY82I/8zf7zUDfmfVSzzbJH/efbSuW/I/+TvDBVH/udUUcY8
5H8KGcjlI/+Tj09PA/mfrk9V5yN/dcnDswPI/zzX9uAq8j91pGXTkf95snV7
GfI/az6+jUD+Z5LlW1vkfy44v/c48j+PDD6n603WGf7MRP7nrmuOdsj/HDl7
+Bn6vw6TPIf+dSIZF9E/TfTjZcR3DYssQvzvA34lf/FpyWw+7RZG3+0Yv3VF
JjfGv2KMKw/jZ9TTt8F8j5pMe2C+x+U3f8d8d/AXxWF9pD9wXMH6XB81lML6
JJ15ymHrriPt/C/9Don4o9+xsNhqsOGOYpZQaS6d/7mgw7UY+Z9dq178QP6n
w2PD18j/vBpY5YL8z+obV+SQ/7mP0ZjOL9114hUg/zOx3zcX+Z9dUkvCkP/5
7PvDvP/F/1xlaHIZ+Z8/1tvwI/9zahtjJfI/L42rIz+W5I8K3EH+p/ERN0fk
f6aLBm1C/qfS1DkF5H/Kuc+l8z8v3/+KejQy+Mb2AvoXhDxyQ//3O/ddQnz9
dymbEf/SpdN1iL/+9tpEjEf4vQYL8mlZN2RbYTxu0UP0+FcnBodi/KEvOAsx
flG+eCnM92KbdzXma2F5Thbzva8+vTKMVp9bXJcTsD6OUlcf/82ndcqso9dz
O69gLtazqZnh1vp3Z7Pcyul6QPJw2puuBzzZZOaE/M8vFgnyyP/cwpnfjfzP
TVEv6XrAu2ccUA9I9hne4kL+p4olQwXyPzNOb5tE/qfVweOPkP/Zkh8+gvzP
l9KvHiL/84V+OV0P2CCQMULXA86J2oL8T5eJY27I/zQ8v4nO/7SNYJpC/ueN
/Zfp/M/v/CmoryQPpm2EkP+pHPqYE/mfh1rYkE9LFlq00Pm0FYwBO9D/Sdty
1FeSzk3tqK8kOz/xeCP+ugpVOh91B3MSnY/6STfoMMZjVzP+GeMfd1Sewvj9
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
2UtybPsSWnhDwe7EdgpDdy2MNXS9VTAdIoHuns9bNKNgkQ5cpeq1wZIQksRe
10+E2G2Vc/VDYfwIn2RrcwcsCtvMJM7ZR8o2sgf7vfaHXpOv43Mlu4B17y6X
QWoPuZpya3v2Th94wNKufnC6C046HbgRtbeHsB3ZPE+BwwsmedofGl7phsVL
GS2Cv3QT6W/7Wq82eYDw4Lb2RaHdMG7seMw2ops80l9QXnnRA1obFuSuqeqA
C75zZBJX95GeYRbVOQLuEGI271yDXgcox6ybEDLtI85J3vX8CzzA3LL27A7f
dli0VCmueGE/mQrpKC9M8ISm9KVbImXbYEWH2JfnX/vJ1iIN77lGPpC8OrZb
uCMP7i/THih1oRJ75vNnC65FwplvcuzDT2pAV2+H9oN02r3M10FyYVMInNvM
SMkRbYEdXMsF9gwNkBK/rKa9Nv6w/PFvZZXsNjipzJuhFNJPbiY8ibVv8gbv
uJOp+361Q7+gc9mS933En+OYUfJtT4B56kkv4zqgqdRvPZtUH1m7zjt6csQd
xNNOzmud6gCH+iUHEn71Ep6jIgJPV7lD2p5jEQNv2+CLUYdNQGQ/6bBS222q
6gpdzdtjtY+2gcTN34I+ff1k0KPzqH+3K8g6/i40cWiFafeEJaX6A+SzXU2D
4EU3sGw6dC09uBny4zO+V9DurSlTKldcWDzgsBuVd25VPXDdPPQ4edEQ2bjr
EOXSCi9wXLc84wKlEsxOaTSY7qWQ9UGipE/UF8rU+njZqB/g2cTd5sA7VMJX
c/+p4utAKLkvOL+UP4j88tf3Npygknnxd5m8NCOgrcBB7+eyj2DyLsTM/jjt
PH/mweFzASGwkHCl3yypBpcTcub/j643D6f6i/7FkylDUtJEoaJBZaiMaRlS
iSSZKlGEkiEUzVGUyDyFyJgx85Bxm8k8z/N0TOccUSSp33u7fb73Pt3f/Xc9
+1l77bX3Xuv12u/Xec66UTK6paz2xaj4HWRnzZnvKOmFHfzflK19Z5AslfGC
HbMfePVMrpjsH4Qt15+utQuZRkHZa3zYTLzhz4XQfWFHhsBe4o1GzMoUavD7
edsxyBNSvzIZvk4fgkUVnjsmMVPoyYlR2iOj7uBGt7GTmXkQeI+o3KtJnkas
OaLJoyOuUPO1KSHXegA6frHsnO2bRp4PZTM+fXSFR0IanZEC/WDw02SKU3IG
mehHMb7c9RYYzw5+0+TsBdaxsK/yBK+5vwYx7tdxg7eVE25bGLvgHHmTfIA1
GQnHnfLjsfIAoXNXBjuCWoE5sex3wDkKEnvgnzyn7AWGNAl9iXdqoVKi3WtF
hIp0Q0xIHQ4+cIl9t9uT05UodQ1j2jdrKlrHs3GDcnkYeDFm5F9vjgMh7evT
7HNUZLxf8OCe+RBY7/DUalqoDm4qqZa68lORS02Az7moQMh4OLlm46F2CHdd
9ElbS0HhYVNtxb1+0KTJR2ajdIPE7fNMFHoyWnmo8SztmzckGRg+pq3tg5mV
7ZK5ajNo4jlVYEuXJ1Tur7HpNRgAVq3QN8eGp5FUflWseqk7+LpV3tot0wcM
+9omFG1n0Ku1Zh+/pbtCApJhkZzoBfKBHrWfrjPIwVb8pmyDC+w48P5mwkwP
dL9QiL5UPYMK1spwTL11gRT3zBySfDfsPiBJqT1MRuKGnbZqJBd4YaNl+LGh
A57HcTzZkU5G8o/qrvoT+7XvxfGrpOut0G42TPdZg4KsRS5n6nm6wRX9Q1c3
X2og4m9uH6CnIuFHSFqAxhNSIq2sC9e0ImOPWpMf1yko7352+q/KMDBOMUiz
+pKNVEyvorxOgh9dHK6ilfoAKfTPOm535MCSA9fOoy1UFJDou+7P3WCIfHuG
//KhBtBxeLmem5GK6kScg03dAsA9X3nn7tg2YNJ5b0HPRUEDDTuWKATOpGtU
5LB52AWtdtI1BZfJKIRpz1aFSi9wmDV59DS3B5gXan13tM+g3YOv6N8Oe8Bp
ie+VwoXdkDQYaR61kYxuiIrfmih7C0FpT3Mbi7vhEun+9Dg7GVmGNNeaiblC
bIHN4yTubgDm00UmYmSUoEqvkH7BBcjX87Pm2jpBacP6X2pPycjaXHKT3u83
ICjWoKc92g439r8OuTBE+Olxqfwp6QL5b8Qtao+0grbhs10y1yhoPa/aQZm1
rvACUdnnXBvBjKt9PHaCgi4rs7pm676F9e1NLzbf7kE1+wvvaY3NIPeqvmEB
+3BoUkeaz9LqkJPC/fl+LirKvrSt0mEqDIq8mbTX0XxAmoaunH5EfTgYySZk
FxwK7zoXssf0i+E8Lau6SSoV3eoeqU12DoK5jgypRZlG+PGmQvDzVwq6qTnS
u5LjD6Yvdd+bibTB0cNzuhLCFPQ6XXKUL8IHTgVksE9CJ7g7B6yfCSajVL1N
9zTPeIFzK+3DJ5adkGK2f+6qNxl5SUjz5eh7gMQN2j/U9k7YuaNuO/UJGa3f
EKS5efktPMv/GEV17QRB1VGJ7Ldk5PKpZ5Rb1xVOpkX7aUZ2gIHCqZJ1+WRE
im3ccMDABb5xSfNd52uHvghtpe/0FLRvi+lF8x9vYFfjLsfwXy1gP85R62tE
QTue3bZ6wuECIy9OfjHkaYIgjwr0sZWC6J5H9k0muYDqNTr/IxJD6GZ05HvG
uSkUYHJviv5AJLjTzc5WMnUiza8JY4vhZNStGGTvLh0JM3KLGhTuCuRjsshZ
/pyKZsaKIoy6wyFfAIX8jm2EfV/LE+6OEPz9Ok/wuXl/GMszUGstIOp5wXjH
yVMU5Hfao56BwO2D7tLFdAfbYbJcY20aLVGX5jTpivd6g0BfkLcuQwd8ebxd
+UY3Gb3rkFFWVfWEr1a0I3VcHbCH9VX+rXYyorHa+G3tLzf4nTjsLujRDilb
U72ufyUjttN2yu1H3kKWa0O1ilUbFInv0q3gp6CnrZa/hdhcof1DhKp3WQv8
cBRLyragoMeTW5g77V2gziH81crzJmg/lqm5tZKCcvUOz3ywc4Gh4xIc7jMT
UHza0W2RcRT4K8mCOmORMKd6q4Q3cRg6HDc/lZ2fhIL0HgUbyY/AsV6aUVyl
EWYzKbx9BC+Ovbp41UT7I/xkiNqpcJMKime/khXHKuH8rJWT4Z4EEA8vZl0W
m4EiZmbN5uo+8JiaGJqITodTpfZJmzZUQdmK2/AvTSo8KmbYeeFWOny+Mnyf
OaQXBmpe94iZz4ALc/+urJZcMJ/ZeUp4rA4NlPHyeUyQYZqu21/5QBPw9lzU
nTXrgLqpSK5nR8iIJU6yTxhVgn33i3vZKtMgtZDLqftpEMZZmuzsygl+N3dC
ul3yE5o2X9Y1JfhTt3hBDE+WF6Qvbxt5xtuJ9GYMSJ0RZKh0P3gkItQF3C1O
GOx060THNvO0Gr8lw4+V0vFvr98CdQL99k+mgAdbcEcKezOIhot8PGbyHkYv
vPvqUk2F6+buqu678mHqx4v3OTYfgCQffWBSawZKRBq9h6L6YJ7KH0RnEA6m
+8x4+r9QQUjkaMQ75ny0bVbCfsolHAbGEN/7ZSpcTGkViHLwhuzPQWqRc8EQ
l674c0idCr/bpEIjp76g7Xdf3ba+HgK8ecPOe/2p8FLJWV9cogxWwuU+6bsF
w1lah7hLXVQQZaav1F/MRs+1s2u2HQ8CRBW0NnpMhbeTpHr/7Ark/PvXiv+1
QNhlsbD7chIZ5rhfL4gOdqDzS5V9czwBIPst90MMwQf3zz+9PfUuGGleWHH7
nB0GnY1zrr45ZJgXvzX3y6cD/ZIMSaKRjQRrr55IW/IM8CiMWWmp9CD3rIKg
CZVQ4LM69fM+dQZW2jMk+OV70MrOC7rqDR9gZHyNvYHKDLyJa3GWrOpD7yTO
x3VfjITTF1IV1hO8o6vkQGIqwTvG8q3OqxO8o0xaTeunMBn4ZqreyUl3odmu
9yHXnPKhU12UQRsmQWltFke67QiiW1lZIwVZIGs3F7xS0YIEk4qm9I0okPTo
+RkpuViYKxfaybqtBQV95D5z1JICZqXrA9g9MmB/gTKdqUgzOvA1UviEGQW8
j554mZiBoLvQMe7y8ADKOrCpkCZ3GprsLUadEsOA3ssjL398AjaliMAk2yg6
mWEzlnkkCobX5bo5EfanIpuuOnGMorWjpN/gHAqhWxbMMI9QMz20FvOI6xKD
s4MEj2jL02yEX0Mw/KUwRdByCi1LhtQ9PR4NtZv2U4+UD8JFkv0JW6lp1HxY
YFNuSQRwPywf0Y1rA9ni/aNxDBSU3b/uuBZPGgQ7Rmp/KmmB/gn2cRJRJ1se
HovytYuFOw7vnsxND8Gc0+10kcdTKLPiOfvpJWK/zvItNWlUIJqxS2LnblGR
35hazV3ZDEixHAzJsShGbzju+nIkU5FtobJlO3s46Dx7HfnCwxNObf4+yLlM
RTf3MzFr6H4A5YGnZx4S9uaCDcPYLpKq/AjbfaQDX38PLYPKlIKn/N5UVE3T
W5vcEgSKGR0m3ELFIM5dtfdTGhU9ucjg46r5HliEm/sjtk7DkBto76IdgoUq
/cqK4HfwSmAwR/d1Jlr7pJd9ZIgKLpePkarSPUG075hlfRIVXnve3RecXIzI
E0VK4aWBQD8ZM6j9cQZIh41HjFq7QSpV/FX8mVLYOyL8gKQ1ClpZTzdnR04g
vbq91z58SISNr+S3vhBuB38f2T3DbWR0etOlbczSucB6ln1o76ZEZNA+NtpG
oaLPTrqcv/3DwVhV5qdebjY8ekBXvkjgnGI1TUaTX6Fwc/e3i7+Iukc1fuhQ
R9Q9K3gsNUnUvaVsuQJvLyr0/RC8VfujBMVUS+l/LUqFfdIcHvuI+vZQ7Fmo
J1HfKijr/5wi6tvHjsnw70R9Gw6lNj4l6lv1weRaPqK+cXR3fo7aNowGq+7l
2TNOIc+ri3rulsVg4ql6xcy1BWmPUh+1q1FQ2fY19Z8CP4PCB7JikWw3bHH/
WJ22Mohc1j41OpNLAsl3uuLx8YOw/17RQ6z3qDj9Vvv75yRY+bS09hJdF2J6
BZ+3nCSj9vRmy1dC+XDbZ1ugtec0qNKE904cHYSTv1BLZVEU3LDbQTYfI0NP
XeWSRUI72PtJf8DvPFfubvvcwTIK1OErP4KJe2BDlhRiE4yBqbnIWi2+cfj9
nVdUnZ0ETvoRNJGXY8GoIK3GnGMKDnNGVE0/HIZqJRXRg4fiQSzIxriolwoF
1xrli4PSoRLNf+PIjgem213+HbNU0FizISMkOhxVJBvtLIyOA7eab/aj56jg
cTOcUXlbNdqj1V53sSUGJOtrBDmSmpG+gjBjpCsF6MIVLs3PJkHA7hOnlian
0fvGwMlS3X4QfD7zbZtKIcQuFaYdyqHA7i8Ol36XNIG3k1vCdt9wcMx2TVUi
6nbaEOlZ4WgeenHSiVnAMhKUuOweHX85DvHyz1dqwsfBmuZQuUBXKtjuXq5Z
zzgB/nrwgydqFKrIatOMB0ugyMEkAPdHWUuW043EOZGYqWPF5+R+9Ms2/N4y
kvn4Bn5vsTQfe3GRqHvtGztJuF6NfTjMh+vVSyfHvk1EvdL51fPIl5GMzKW0
g9YWdqI/fQmU23LlIPVmLuPTRQpiuD33wyqgGe6EXhVI4CsGha+jvA//kNBL
k/OW2v6jqOrFyM4f6aWgnqgdo72LCnsYnbcrfKyAPzGLa77eKYXl3+2jDI1D
UHaAc8FbdQoauyiGzmGFcCFzYkruCNF3FifNN+6pRJoRtb1aO4shxG83j+7C
GFrr6DM1f5AEzeKbx7NzUgk8EGm2jmcKTcYvKloKD8Pxmy7Tcpq58NxnpLYw
ZwwMHmYmct8moQW7x8NyFckgMm74a444/44fFvfg/s7o49vHT5x/er4Gl5ih
LOjmZDiV3kcFSYPOiufhPuBK6VB99o0KVmZ/1jz/GQ7nfqoUvVSLArotaprY
rt1eH2ND2H0PQCi2BzzdObv7PhlQ6NVn8mWdQEKj8oGKCaA0azy+u2MaJJ5F
ySzrD8CS9R943x0PPh1nbI4aTcP5Tm8W/+eDqHqUK4b/ZASs5RBWmGkjgwK9
UcfwcjuiTChuTTwbDcbODoNb/CmQQ28r+COwGR26tytS9ulH+L1uWAfXAZGE
X8wdRB2QP3369SxRB4bEgp2wvWu+WKWZsBdsmpxetYeRNN/tHUKXm4+RpVam
IKEw2XFiKArsFoz5cd1IdKrRw3XDj5F38jRRNzJNNi4JprdClgwHOVSKgv70
X/nmwZ0I1pwam271lkAfvfNG/0gquly/t+G8UzDsoLIdjWfqBa2aRkbGohlo
V2SQ2WYcCs00ET9jh8aB/Xq0nsDlcUiqsX9ybfwDFNE9CZLZOQG7mc+mt68d
g1eg38GpGgaik+36qn55aG7p/cT9GiokOd8UzvYIBw4Pd0gIjUJjBRtMlOao
sE6e8nKDXDTw7GiMwnjSN22CBeNJ+4qvmRhPPlb3C5bvz0QlVN2yh8S9d4iw
TX7TGwHspFIjCWK8O9vuuV5ivMssvfAtYvx8/u8/sUQdU5f/JDlI1DFn70wG
rFvbeuD6ZrmZFEgu97ZbHqMiCV21b775H8Ht6/ys4ccSEE9f2vQjiooazuk3
sUuHgn6wj9Z7jxCYcBmMp8xRUXx0+YtvHbHwOeoLOvWrFnxPGURH7aNCk3uY
p1BZCNy8JB4erXgPAkhWq+/5sdtiPLL9g2FDt8srx2AKzGZk081cbYZ85rKi
2xoJECEZILPLNhh0bn+K7CLw5wXtpPzbpfFgUHZ9fkwkE0ZTzN9otFHBnn3y
RKFVEizcrd3peqADuP06KeeaydAnvu84kALgCZ/DV/4v08C9jf6DavoAbOzZ
ZGwkGQzXvxvn35unwI94r/b6/Y1gqm3aovslGJKrzkCRVDM0BrU0q72lwBnu
mQ0JBC46WXgmf2hwCnxXlmuntwwh0d3PSboxn0H8PW3IFvNWVPibweGxGgVs
57PEuPWCAe6lcLsfa0FKDVZDTA4UKKlkVRARioCw7GbbAL8W9FQnLvbEXQqU
sh70V9eKgtKfZhcx7lpnI/ID4y6mnY/CJAjc9fXqiZu4jklyNkviOqa9zslg
I1HHflDKSjHuOhaxgwHjrovvn3clE7hLSqbt23YTN3RFqc+nk9gXehoBPX22
RLj90lovuykbCb1/KT5YRUVSVftpLGJSYVzjUT1PdBLs37xuF5VK9NuBJ1b+
5d7QdMnAho+w2zjd5cb23jQXF2ynpGioMlmFg5AQy8mlJSrM2lVWxDJ5g/L7
es57BN6umZ+yOTX9BUUyOyv00H8AI/bsfsVH01DlwhYpen0Q0XY6CX7vfw/H
xFv5bV+NIDvJgnUi5ybhvPHyA0nfRNjKcs9gy+QQSlAP/77waAo2n9gm4Bj3
EdK3V5MVno2ijPZctdrnEyBP992oVi4ZaF+lSGJ8mDU1cAjjQxv72d0YH0bm
2d4RlBuCzrLZy1PTU2jkmcVyblwkkCuZbYRejgBc/iZy7cIk2njixk+a3fGg
oH0q4SqBDy9Nim6OJ/ChtIxLzGUCHypw7n2OcWN1fNQ8xo3CknEXtAn7oCaD
UVlUKWp3NKkTDKIiDe8bMUJG4VAuWfv1KYHrbM84DmFcd2y/wwmM6xoa1JR2
E7ioKk6WhHHR2VzJuRUCF6l7xpAHXfJA2uLiuYlaKjI5NxFiwBAKLQ6Z63+Z
jwC1OVL7y61JCNyQO0QNCoF9No2MmoVjILg8dkT8PgkS9sysdTv0AUbfbC62
dMuBz+sz87Eul0/PbE3x5nCg/fZdv/hQG8w7+O7kPEJBARcXTin4hsGCL/fI
WbVWeMF67IapJgUdqZkK1J0Ngt8RY48+fG6FE3p/DDJkKWiXTKOLN28kbCA5
O+swkeHsDYtex8puVB2nL84vGQVkO92PUsHDoHtzO6/L70lUqHD/4n2hGOC/
83BeVqcaNM6LxtupUmGDPOOxA4cC4K6Qygm7yCqk66x2LZHgwTYWICLIFwDv
xOPkSW/KUcDtx2feOVMBQqZOFvoGgqwrrWdraAnq0Ag9/CiaCpfiKk49lw2B
R7qiZxYGipB6bNjOTxlU4Pe9aCyz5wNc3BfTb8VWCMKVzLHaJVQ0mZDb3tEc
Dmceqxji79cbpTLi8Pfrqpfm4vj7NYfJ/GfDW7HouLTU21vfqcA9dOfafQ5v
iKu6xbfNOx3NKVcOjI5TQc16nW3aGi+4Fhp/M/FZNGR5cTpML1CBN0Hgzo8a
P7hT/7Dq2odxkB0IFeUKHUeN9xZSnHcEgYDpjSlRjz5gzPqw65feDAo95PQj
KSMQ+MOu3c4374VnF1Xtl2NnEM/+i2drKgNgf4nXGo7NA1BwoHY/fJ9Gx1Ru
nJDdHApW53K4br6KREXrt77LIPil0eJNK6Yn3vDGMDLGXOwtsvJ/M1m4QoX+
rJc0OlY+MBi+NoXyfgqM/dRsg/KH0FJ9boni0XDYHscSPntgEj7QsYRYFY4g
3oeCLvnaH8CzstDgz6NKVGq+K3rdPSowLOjx/lx2Bw1SbBWVeRxchQySDgiR
kMTxkjOVK+8gQY6krFRNAkN9poSdBmPonG/Jxy3q76HQ2SVXMKYVEjfw2gqd
pqDzmuJLtOdDILR8c8E+5Vx0cEXkGv4OPn0g/BD+Du7qobz048YnSD1Px/+K
wKcdjos5xnb+sKZV3nlB1AlYjx+NmybW9di13WHuqS+kemgHvpCaBsFyUqN5
xSC4L9DxPnoTDpPJ068bnKfAJVzhU3zXEPx+bUm6KxIBmrf8r+QWTMFZvTtn
e94MQbXcntFKzQhwY/KWD/WdhA2cozAkNAIOWdckpdwjITzm7j3vhkmgPc4r
uH1wGMqz8rm88iJBRrnV4imFBHJxdMNKR8eAa4xP7k1wNCRZN7IUiUzAJdUv
DQLjo/DQQvOMQFc0jHwuOaO9bwy2aLRGX14gATddYPNhs1jYT//ozB/rMRDL
/FVzNY0ENT0Hy4fLYyHdjamOy38QRHZXcNtfmIaTIw931rQlwDp+3/iB4UEY
fZulUMIzDZv2Li7tvpoIw0breThEWoC1g1ZZ1I4CNNlVX9esT4b1r8d6V561
wCvbL69ZTSnAFXcEJdX8jx39a58Uoakg5kVVOxn58LzRXxr48Lyvwz6kEvMi
RXcdwPPK6xl/x/O6timpEOtCImJd4Xhd39Rd6vG6rvWfVSXWhRz7usrxulwS
igrxuuabRe4ReUOfrX714Lwp0P2Swnn7IXyfjcgb8hUqqMV52zrEfwrn7e++
oH/3Zd32OzbEvqBjlx0P4X0hMYrsxPsy7/oJ7zs6EP5hdd//KNet7nuYjrgO
se8ohoFeBe/704pxEt73Y8nFQaqs0+j+h6mBJPYhcLg02PLuZjiIpTG/I84V
el9K04LP1fWb4rvxuWJ+ezwkrnoaHB+MsNlGD8Av7edRGuPhsG9E71qfzjRc
NrZ7bukzCPeGPRUuFUVAW0JlcsrTKWC1U34/SxqCW02jmx3loiAz1q6n6+cE
BNexNJydHwGL4rBsF6+P4Lr5aN19Ai9K+lW7q3WOg2fv0UvNHXHwQJblTFjz
EKj8NjNqfTEFQVtrau1XPoFrtq/YyfFW2KrYxRkmSIH+MzeTQtlT/7Ojf+1/
/aD/y8//mhf9O++WDWcGiDjRTR+VahwnG6t8Go5zkrQznVgXYvl+IwCvq+KM
1ga8LvumDbpEHtAlmxAHnIcdPH8UcR7o+x6GEnlDscP3mXHeJg/+Dsd5+8N8
gT4nYQYep0kVv9PoBR+5T79U7CII3kO2n1eZgTj+0uLO8j64mvlox7JJJGiH
vZ9L8ZkGxbffu+YOD0KN/4OiF1ujQS7nKwP9qSlAAyl7JsSHQSmzIPgrioGD
20xLy4ZIYJRlR/GRGoOHi+JXgxIToE2+tynSYQR8L9+a9z07CXQnHz8ZepQC
U81dRq3vOuDrwaU36dFkGN2RJM14KR1cExOVCDsqXnbxwHYv2wuA7YvFpm2E
HyT6OmkW+3lolPEI+/n5ubGWmBcxCC6M4Hkvtzmdx/M63s5mI+JEUVIe23Cc
9n1SbjjONR+ifxDrQoe9ChrwuvKvCKTjdR0TiHEi8oAaNk8m4zzwkDrYcB76
q64yEHlDCSs0BThvbR0zSzhvMUY2zEZFZIha6dOpteqAvHhXP8cDkRB1v0Ti
/BMytD2laREp6ITlvU01NySi4HBTp63ftxlgN57d0rKjB76Tnt4y3PcR+luy
zfK/T0O2nKZZwGI/cHyn0Xt7IQ48r2b0sKybInj9GUrmy2HgE5vXm1FIgkdF
MYXV28eBjv1KXBo9CQTEe5sPNKVBrHyTRa1DL/LhP0h5bD8Dd5g4xrOVsyEj
5mknMR5dflzvicc/MKgtxOM/5J0YIfwjrWe1I9i/xFDjeez/2UUxSyIetMx3
xxDH05f0WQvHI/3Y5yERPxouN2LB8Y8usunj+N/O2+P1ImdvsVa83sGyulq8
XkPOICYiP+hHKt81nJ9zC4yBOD/OQ11XbdspcK76QTfvZCOk5bHNRfRGggJT
TMb6VAqo3FHnG5xuAjVVz8MurNHQzrwsPH2T4CmKZcfd6lsgf4ImxEYhBti3
egmwNZIh7EqB1fG1HaC6sVFpH0MCaGnftegKmAFhUuN2sOiFgKNBpWJpKdC+
z4YiZDmMZqfqy7iGJiFeroFP1agQtm87SLeNwE85X2zk3tkNAwvb6RtRKZnw
SH6kQTdvBj30jtyeNNgDvT/2tHPop0BMiTieF814vbDB82ZeH1XG886e4xQl
4kRbtfcK4Ti9aKT8cJyT169nEutCfR523Hhdd9727sPrYt5upkvkAUWim+04
DwtPTpFxHs6uiOnQx1NBIEmSVqSqGK5f2zLvoxsFOS++S+3+QAWnrLO+R/tL
YON5t7GpoGgQ26kkOfmKCif7F0utN5fD++/rdS7siYWzKkfvX9emgtvyNcPu
9irIOLrRWMMqEQbchrMHpilAPyay9kBSA4yLB1y4vCcNuNNSZj4bTCI5W0Ua
Su4w7BsoXXptXQ4tjxUnzCfIaP5BqU39UBu8T5R3vc+WA/LLppmEH9REruPH
frbY/TTEfhIV5e8R86INF6n38LwmC0ce4XkTPJhxnOjXFf0vOM7tAif1cJwc
Fm65xqFUdDFWIv3ibAnYpAXsiE+OhvK7e5RvEjzHv/WgBiOjQeEez/V1Hzyi
4PgRmScuBA6jWtbHSmopFqaL5Y5s7IwG6oM8p4iF//n/wTXCP18eCn4YC5n1
Kk4dBJ/fJYsGaY7eKqT7uXPTd5pPkF2vkL40SYXvlXvs9tXZFarKssfcLUkD
D0etoBbt//kd95pXLrNtb+q+wNxR+ni5FipqszogV7rbpJCX5+7zE59zoSn6
KvaDdjeTTbAfR9+Z99jPe0YbPC9a3GZchedVZqSf+EbMe0uyE8f5P/4nni4y
4DifJv4qfvyDiqon1m/xiz1VyN/mdMuPHA2me7i08HlY72QCxHlAvu45X/F5
uGL0/AQ+Dzxt86bEeUDU877j+DwUV3tJ4fPAXywYTeQZvbXcehnnuWTNzYf4
PLznfMJG7AvqvrvdFO+LsdirInweTFwcHu1PakDcZ5Y18D6eTC7Nx+ch6T1Z
kTgPiMaTpQKfhwPnLan4PFiVS6gQ5wGlHXb3xOfBh29Sw/InBUloeT743VmP
mNoYl87HpcKhn9YP8HnoN13Pi+f1Oyr+DM8rLnMJx4k6ZHzicZzMYWf0cZxa
lXU5+DzIMMhVEucBydzlWj0PDql7ruG6YbhxQxNxX5BeKGm1bmz7o47vF0wY
ZeH7hd5V/FmtG6f2Fx/BdeN1oa0CcR/RtqTjwav3MfzgztW6URsWQdxfVDMS
JYvvLyfDpeu4bqTsH1En6gYKIyfn4brR+2f4B64bcWm1+UTdQN5SO+Rw3Xg1
ybsB140UrXoRom6gAwNzZrhuHOa9g/2gHycdV/14Cj9Y9fP0fBM3rhuLtMZR
eF7BoznyeN7rt3qEcN1IaGg/geOkVpj74DjztVizcN146NKzFa8rlU5lP17X
2slMnAeUx7Bci/MQrr+TgvNQPlW+AfejLQ/rZYh6iySjVt7hetsg8EQK96Pf
W8qqifqMJG5SV+tzk6I/rudwo/worufo5JkMU1zPnSRYrHE/4hdnukzUf/RO
fsYA1/9YRb4+3I+UnpyeIfoFohfYqo/7RbVQTCbuR13ntqcR/QWRDoRX4/4y
9q3XCPejSwfNZ4l+hNhrlUZxP2Ld+rQB9yPJLLdAPF5d0ysLj/8cHTeK+9ET
kZoh7P9A07fVfrQ768093I/MtvKo4Xj0fkVcxfH0UtWe4H4kwR/3p5mI/6C2
4g0cf1aUFF4vShNcqsHr3UU3U4fX6xg0w4b7kfHhTfI4PzXUh+9xfoZq367F
uOiYomkt0d/Rjh0jP3F/fx5NfYJxEZfjQiOBB1DzQv5WjAfOazNQMC6aiq4Z
IvADktaYzcf4oeG4Mh3GRVSS0z4CbyDzb36B/z+4CP0/cBH6DxeVHLhw9lB2
B3rCfCMo+QMZzTHP23Jd+L/wD/p/4B/0H/7hHGdnxfinVf4mN44njpvDFcez
ornhG8Y/LfE+HTj+Y9tCk3H8oz5xDhj/SNtwI7ze4P07WPF6i10CaTH+MfQU
qcL50U/Z/QPnJ2QifBWfPxY3Xk/gTPQgrHQVn3sy/DDA+NzaU8yWwKXInffx
GYxL65b2pGB8HkgpCSZwLJKt7V/F50s3tnVhfC55laGZwL3I2Cg9E+Penk27
ajA+P/aqw5PAySgqlVsN4+TlyfMKGJ9fa/pmQuBqdHUX2xeMq69ZVwDG57wX
hTcTOBwtirFlYRz+147+tf/1g/7183de9O+8V6pIvRif0/CdqcNxMqZopOA4
R44/WsXnfmZd/nhd4fJqq/h86lvsDYzP74ToPsB5ELs2qYTzECg5vorPw8J/
rMN5M7KRj8B5422VDcX8uiFruorgQSiBUXQP5kGkUC5dzKPbx7edJvgUktLl
GcN86rqLlDXmy0qi+48QvAwZ1M9vx7zsPVcPE+bF5Vc3NBP8Dg1dLVTE/I5k
0aWI+e/y+Qd1BE9EYe7FJZgnlj/7FY157rH6oNME30ShjT+/Yr7J23SwHfPZ
tWKTzgRvRZvNaDMwb/1rR//aFX4yfsK81a/hhDz208xsSsZ+uM7GqmB+qmyr
WYnnNdTTzsfzkrqes2IeyihDi/k7cqh3l8dxViwfs8J885HWWyG8LkeeW6vv
AKIe+ZcxrzzmkaaE80AZHJ7AeYhZmH+P+SNk0tfgvD2/f5Mf502Ucj+Y4Jvw
ZEN9P8E3Uean8mbMN3ebK7/F7xVFTEUfCd6Knik+msK8Ne1pxGn8LjHReF+K
4L9I6vadE5j//jwmbo3fH76PH+kneDS62SF9CvNoN3M3ZfzO0NdkG0HwcbSi
trUD83Hu0N5G/J7wqcRsB8Hr0VgB917M65WcYoU5RFrQgy7ps6J2FCS0dWYe
vxtclG/9gt8BThd+2oXHq0ZZ78fjxVw2q2G+v5T+OBT77/iwrgX7T873tcO8
/k6yQCeO580C50kcz9/40b/xH1Jaj9eL9Jm4Y/B6nzN1rq53TEPG0PbYNKxI
up8+3TgI6svdex2ehUP9Y3Xl8ZQpsD2XFGYYMgRmeef8H56PAN3l0ebDuZMQ
KWjPdWZlGB76NL54kxgJXz6oXy9gnwCHD068MqxjoFfDmnu1MBoetOyTypMf
gxuiYytjfSQYT0ptyvaNhZRJVWNJxxakrOi47vptCnjr7Bbgi0yGmQe3XqrP
DiJRaXrl1K3T4G8/cPs6SyLUz4yFNWiPIa1Wr690NSRg5LvP7RMSCy+fVOUW
bJhAJiusd2+vH4My+j01LlnRkPOU31I6fhIJHBxI6d80ArtrzkyZhUQCY5jG
1ga/KXTqC0lftmIIXt+xp+uTjADN/YyeyjnTsOiWdV5heAA+7zaNvdkTDvsC
TguQjk7DWCdtEblhEIz7M/Jux0YAiY/G8RlMwUufTO4W+WF4WRK1o4czCtJv
s8k7B06Ac81FO4E7o2C6xnFboPxHULahjdlZNQZFbEfKkg1J0K7MW1ukEAe0
rGzN3t2taFMN8G45QoG8a+FbpPpTICWFKc08fwjtffPawMx7CnxOHdeM0ibw
ajA3w02GcbShy2HXz/0kGJ2TbTmpGwefOs2ETfwmUGxn8gvJu6OQnrVu/vDB
j7AvRulj34YpVOjAWVXwahhO5TlbtkxEwhPS59izo1PIRVQv4JbqEOzgWLvx
i0UEfAg0+1OlMo1qd7584hM7CDmuAWV/fMNBfERTSsVrBpxpDVjLCnshYvId
TYJxBIR+u0aW2jwDTwzuuHEGETxx8AfvJQWiP+ZXBJaKTkPw4wwPSSJva/30
ElxaokCap+TEvdhJUKD/tE9w4wiUbvuk3iwXA7xu4vVJ1HHwuMkXaiM7Djx+
ltUjmfFw9LBgwrBdB/qjuueK6Ccy3N1BG5c8nwYMIYXTtfIjyEP03YPlh5PQ
8GCFx6snGRzCD/d4q5PQKZ07Nzw6x0Bs0IXWoj0elqeAYTBkEkGs8LIPzwgE
NVqx62yJga9vbngwj00hKfcyjZ5zQ2DfkGpt4BIFXf6Rnpf9p1HS2aKynYcG
YXji2BaYiAAV2b67ZaRplH36i7LIyQEIztW1SfkRDmI6odKHwsngsr20S5Ct
E1IfrFkc4oyEC93hN20lyLCG0sE9vtgFphaL60NZo4Cp/fWVbc9mwHxTTt0O
mj74vjn9sU0rgfOHgg+bC0+DEjpWVFk3CAE71W3Kk2OhZuOxmV3FE6DW0XAq
QHQUnhUfSI1eSAQlqRMiNzf0opPh3C6ToTNgkvdmy4moLNA7UyucGjeGqu2u
8Gy1JsGO9kbxo+RUqK1bTxaSnkQtui4xfIEjIP5YhauZ7RMcz6q7MLBjGo1f
NLFumR0E7saQ+UeWsfAqTWjo6rYZtC+w/TabUz+81DUZVrxP4PAUh6ivQQQe
mLE+us2vF8wjdF9nBEWCRXjiOo/GGTSj/GXpXEEPmEeSpd3cI0CLJNAulkOB
+1r35U1ymiB/UzlJsToS/C6P7TW8S4Gj8rFt2t4tYGp5rHZxOAqGL9zsz50l
w+yvh8Yit9ohWOCpivXcR5A9/VriEj0Z5E2OTduXdkPjSnrca4N4+M3FLf79
4DT8qa5xNa4eBP53I27Ds8kgfvK9PwvtMGJoHI8OE50CAzX6X093FYCI3sm9
6usmUX/ZxvL80hHQMJ3KyyjJgD8OKyE5ZdPI8s6xsjseA+DSw4zeBSbDdZkX
bmIjM6j9etOWUq0eoD6XeeCwKR581o7FfH5BRlJq019v+XeCpx/nguTbjzB8
YnGpup6M+vXy7nfv6YDm05TGQxZRBJ5+t3SeREb2bCZXN8e2w6v5K592yEcC
fcKOdQ/8qUBiHvX42V4KNY8n2cTUouDj+zuPFKyo4JuzLEV7uBKO9KqnX3tC
9PENrptCxKjwk9/hWb9nDeTY9tEvTceAuslJp12lFLA45pWw9UwTPIkeXaJZ
ToCv2h9AK2kC1R+tmSkpGAEav+tfDNaXgdRZcTZHAj8LuL27c9S7GyQC911g
4P0MtJJNGuNiFDR93qWiOqIV7Kd75MWOp4KYZdPBg6EU9OJql8uGs81QyTFr
0ZmSANNdosP8fRTkYPez2T+qEZ4r/7bWDoyBz6wbnS4vUND1+8LddaMNkHfB
h39eMhpo7cmwl+DvZVrMFgZLXvDws1TmA+LeVXmQLm2ap4KuTs/vsqwIILOU
FDkQ92Im3DX0AcHTLwk7pNTSfwLfrftF+q1ioXHXNqnpFipM1GYJ3ZXOgowG
D2bxmURo5jQX/R5KhYsGeoPxysXg3W3ZezosDWSmz3clCFORWJjWox6THLhs
c2k9Z9QXcD0lN+AZS0Vy34xPbxbLBZlU8bZQl1x4f8+toiSDijL4lOSMJQpg
A/f4gI5HGlB9RllnSqjo6VQC+XZSHmhVdwcF1ybCi4OpsxcqqIhTNNjJoSoP
2vQXZl5cjIUgibKhilIqor08xllOUwC0QfQK9lXRUPSHFHkmnwq8uy030Ekh
ZHK6tYpqGAU6QxWf2cqp4Ci7sVgpIR/9Es6aUs+Ihm00qV8J/yCzwfkE4R8t
Woat+qc2DLER8YCxrpEOEQ+q8z0Yg+NxT/pVTMQP1wLD7E0kCtCW0HO9OH7u
ayPyWxqnkPx+90My3oMoUzhzLf3mCuDQfFCcUk1Bf3amFR081IgESabfp8Zy
QOiKtp+hOxVZNx5B9CdLkZXFea4va9LgnomBGJF/9NvLyNlKOgsdjB9YFiPy
L/EwCu8XcmSwx/uFXALy2PF+UamXdTQXKeDJ3DS6ZaQBtb120L05GQkZufpx
8j8okPtTKKOlsgHtvs9wIn9fNPB5xg8Q5wpUjiaOEecKbdfntMPn6lbWwj7i
HMJh5SuhxDlEe9436uFz+DsiStN96whiXSeZJa87idYa6C0sCRaBTVzobc40
Mgob0OEvIvrJzf75iANfU6CxxfQ1cV8QKkTBxH1B4RfOMK4l7stA1e7NxP1C
vfv0bxD3C7kc+cOM71cRk5nSIxsq2lP0VkhnuQLl5Nxn1PYl7mO/52/iXkOU
5z454l6jhf2vVu81l8/Hn0QdANpdR6yJOoCe1/k04zrwacQe1w1gWX43T9QN
tGXTCq0UUTf0uZPfEnUGDr6R3kHUGVQds/YprjPmVnkzwR+mYeRiiUAuI4Gv
yyjslyeS4Urdrxfle/rQg1tXpDU1ZtCzcCGvU+Kf4XvGOzr/kyQ0wG/imNMz
hv40OD4wtE4n+naWJFEnEZyPfk3USfSdXt4J10kdvc1HibqKWloX1jqUdiOy
y6twXFdZmop6iTqM+qOuWBJ1GMElJkVch52NUgWIuo28Up2qibqNPF84f8F1
u18srpOo80hPmEuEqPOoz1hsDNf5U+yjtERfgBdnY9YrF/Sg2Zd5J3BfSM1J
+kD0Efj4Mu400UeQupGbJ+4j48fmu4m+Ayya+fZE30F/BEwncN/JsohRJvoU
vCTPPiD6FMrgjKN/TPSpsL4RCtHXYHsqTzTR19Dia5O9uK8d+vGy8/ipTnT4
4EsveqJOB9NOPDqVmQ5GLAIh3hdGkWa3Hi1X5ATSvZ93NI+aAnzcPotEn0X8
gyziRJ9FLEyB3rjPkq8rihB9GZ10v5BL9GVEK7nJAvdlQWWmG0QfRwZsFzOI
Po5ueatb4D6e67YD9320zkCGh+j7aOmAIyvu+xoVw7IETkD2T7IQgRNQf/3I
b4wTPHq3YVwBNvfsVQlcgfZ7CNpiXPFYXs+fwCGww2kpl8AhqGh5bhWHOOsY
OhK4hejDzUYEbkF9FoWPMW6JmKVZQ+AckE1xpvXlGUEHio9txjhncciumcBF
4LiSbErgInQwgcSEcdGMoHa5mmAbcr4go/57FwW1ZptRmNVTwdZXYFzw2jDi
bX9+d2H3FOoWcFAadk2CSy7STQROQ+x2zMEETkOldBYVGKf1BTXKE7gOGT0K
5CFwHVpvfUQB47qt5o/eEzgQSVddcyVwIHrx5VUUxoG7Xu+lErgRsZoyvSZw
I5rKOM+BcWP/7EsJAmciYb54DgJnIpPEH7/iCZxZI5LI8EVlGrrfhd8lcCk6
r7K7HOPSSH6BeALHAsv6A34EjkV7ckrYMI7VshKLJXAv8FnfKCdwLxoxsbLA
uPdPjsM+AidDwLiBG4GTERdn4BLGyS2SLjQEroaqY927CVyN1Mp7VnF1nL38
FfbYFkRlP1R2xJCCXJt8HnTQpUAD+fOF09JD6JPNDtVE0hQqKo3jWBecCMJU
31gC56O0u6iEwPmI6bxROcb5su/2yhK8AJUHhT8keAHKl13cgnlBIG0c5hGI
VFfLRfAI1BwztAnzCGAVFSR4B7q7l+4zwTtQjkZAGeYd6n1eXgRPQWcMb5wl
eApqu/A7CvOUQrcIdsMNBP75ZX6smmUIiVn/yHxrHA6t227sJPgOyPl3ahF8
B21e9mbEfEeuls2a4EegLP0tkeBHaNeXy6v8aO8noUyCT8HEZjNbgk8hDcF7
TZhP7b3xKpzgXzDD8meW4F/IykOMB/OvLTOmNgePtSBtrryUZFsKEu7eLt2y
KRl+GJ7QqCB4+EHv69cKRKbRRTnX2tz6BLD081Yk+CA65lQ6T/BBdHiAtQrz
wd/pUTcJ/ojcuvy5CP6IwFTqM+aP4UbNmG+isqhAzDeR3NzrVb7Ze+O5EsFP
kbKORSTBT5Fu3WAg5qdXzdet5sFtg+FxIg+g1OKzmodYo2vaRDxgeuH2VSIe
MBa914bjOXRB5yHBN8HmsNJFzDfTF3TvYr75l5/Cv/z0mQ2fDl5X78DsFeyn
ZWm+FfsJ7/y+gZgXNVjZr84rszdldd6rR58bEPwaMboWncH8+qEErwDm16JB
G9WI8wPdZm3nifMD2zIFefD5+cv74F/eVzliYUScQ+BPu1ZCnEOIC3u8eg5V
vXu7CP4IsUcndmH+eHzPGCfmj+GhHtfwuU0/GFGKx/dKHniIx5t3ZWjgc7us
PngOz3tUj5Mbz9uZpzlJ3Hcoi5exIO47nHcRUMX3fTJzN4ngWSDgxfYE86wR
qVd7Mc9iVzyZRdQNcN7OpEnUDcj2v9+P68aNq8dKCb4GtBmmmpivXdxBjsZ8
7e949O/4v/Oif+dlXc/gQ9Rn8FwTy0LUZ1hPc1cS1+ftNnG7CF4Dh+bnhTCv
Sfv0+xTmNTGh4lsc1ncCkxN/6s+3ZLinwzNrV5MOOyRq6Ql+BH5nP/pifpR7
8QoP5kdzRnrf7Nd3ok1+v7Lx+MymxG94/D99Af7rCwZH3BmJfgp245sciH4K
JaMfnXA/7csv5Cd4BJgMHynFPGJr689czCPWFGx9TPAOOFf39DPmHcaBv9me
Ebxjo75IBO7XapcGRIl+Dbxtl9Nxvya9OM6G+zUt38ZH2D8yyLLH/pkeW9ET
+BxU3tt6Ynz+LOiSCcbnbnyC+QROgxEO+QkCp4Glg+sKxmlf/5zuJ3AswWtF
bDGOjbz3cRbj2Ba7uPMYFwWcScsncBFkHUubwrjI68oh7Aelv7g1if1sik75
iv3ssyu69sSNwOiSHo8pmm0wfsV2YPF0FViWe3Zh/9mOd8Y5xXJRgXD6DPbP
zG2HcSPoJ7sijBuflCrSTBN+PhlFWxJ+UOJsrDD288HxhAv2s5HZtRvj7fXU
sCzsx8D8VBP2U6z/S/VAPhWlPjHxZZJDcF9d1ZX7VhScrVi22v+DiiJJFaa7
Kr1gb3yczKB7FMgUXFPDcVqpPKgi/KMFufo27J//x+/ll0TeRoSVcom8oWvd
f67ivP3Fh/AvPpxPkDfAcW6n836K/fTe8bXHfhxqj6vgeNLKNikxyyE09d3x
DY5ninrPElzHwPv7hncp0iRUcPci77OZYqBlS3Ym7Che8IUDtvdyTbNhe+ry
MBc+J2ff1jcQ5wTxQkAaPid3rn9d8SPO1cXpW64Yp/2+eP8p3vfKGtlNxDmB
YxvW6mBcZ/9BLh6fkyfCsh6Yzwa0XU4gzhWScwwaw3yWPsRgB+azuRapTdj/
lbZX6dj/dgnydnxf5D7qHSPuC0p79FIO35d/7hf67379c4/Qf/fI9tmW3fid
4ci+727EPUIqSWUs+B4ZsrIfwu8MQwfL92D//JGax7D/f+oG+q9u/MUV8C+u
+D2kWY3rhoUN6RJRN1CovEwKrht/8Qn8i0+a0lXS8LvQHbYwHTy+UP5S+v/P
uxD6712o7NTFRFxXJZ4YGhN1FflGZSrjuuqTxKmM67Cr24aLuI+H7yjaguth
ljzvKK6rvhxsO4m6imiLKbtwXW0r5zPAdVj/HQnXYaQtMW6H66px/sVe/I5H
k2CE6zByWY7nweP/zov+nZft0VkT/O4aErRGlugL6ErLg324L9RmTd3F/Ugz
LUSL6Efo/jrtG7gfCWg9uIT7VyZN12o/7X3IUof7Tn/FNUPcp+KkVnCfQtF1
a1f71F87+tfuOvjzEX5f3V50WQ37v+7ddQX7d9JxMcZ96uO0qByO5yV74X4c
D92SB+6nSFbfdRVXCJZuzsJ9rT2udFXHJfaAhHVcSOTZ6KqOy2veZvW9PU+s
Cb+3A93L4tX39p8/3b4Yn2iBkdylNPH7FNj1TChMUSb5Pzv61779xNm2/j2t
YPV1W+s+VQpYtXtUR+qmwCGOqWHCjqaLO5qwvVtM5wu2PyRFvv0l0A4Dm6Bu
kUqGo4lxMv50aRBRHhhJ2FF9N/0XbB+h7pLGdr83fjZyVV1AVzL5NkyQDMwc
wNFOnwmsbPW3CTvqfcTmge2nnKs3Y7tfuHNlzvpBsDr559XZJ9OQ33bFPP5S
LvDJJo4SdvSgTdwW2ween72G7fvKa7NxfZA2LVUn6gBsylJUxXWgOCCZYj5B
huXuy5ewjmJQnd8Yfzffk5NT+9lgEsY41A5g3cWwa8g+Z+ty+DrM0ITrydaw
4yewn2vXB05gP109ZViHAKXFW1Z1CEcM9E5jHQLt7a7v2H/ovgZB/F1+uOXu
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
XlsuPkwcQw4YKqaNAHv3nV15P3NBbuPSFahrhTgnoM5msiID9SMKh+wuZY+A
xtU1H92vDhP1pz41yyI/wsr5m4d06d/J6ReW9+9Thknej7ct2XH50NlzaWqq
nQaCTlOfyztryGqTMHL5WQ5IjZ2Vmmbo9gmuz4oZOs/9v08NGXrPStMSrckR
Er3FeseUwDC0vCrR3/A0BahZ5iOoP+ej/Jlk6N7BqmtRP+LEPb9hJhOsZN90
GXXQwVDjMltomjd8mvBadaSQBonbG9/uOVoP61duDG+a/gCP76bYHGHUa54q
KmeifQdZR1bxlYpEg4G+lgXqE2mqgPopwRe5JQx93i3HCvUrp7fsQv1Llegw
6msGuWyX/6BCeu0fbf0NLaSbQ8NNjS0F9p6+ehn1V6Gl2y8z9IWD1mOqDD24
t/Mu6md2jtTi3+81sBTHvz9V1jqN+1xx9ZTyQcZ+3qsvb67O2M89EwdOYP7J
3D9rzH/QRMFVzP8eoeZ9uA+51W8m4j5s2TI8iftzcePi+u6QXrh12pTTPGeC
CE/5vXBx/gzXN67MLV8zAEc2+31eoztOMkMbEwx/J0FDsm8Qp0g/SL17um1u
apxMjIZH8rz+BCFqvWeUWL+SLzaFBgqedLKY9jLn+Ip8KIkaVzhVQiPUByfa
xJ/UkQMHPUIijLOAuunY0nc5Q6DIcXS9me4o1MgPC45UhINMpon541sjsJf2
8sSNqmEQN/txlPo4HIwMbeiltmMwbvMxTvLsIKzZryLm/jcMXH8JFcVa5hO2
T9eeVGfQgeMo72rJY5Hwca1XejxDbxTVuIN6fw7nmARDP+fyOcWkYhCmqu8Z
OG0bg9zAjpwLfeEQDV6p2CeL7p9Ygn2yfeZZTuyTb8eLWyBf4XBe9pnTpUYw
tB2dQL5iTsZMYkdxKyhn6f5z+0yFQu+Hlfqx4XDnYdHg2vEm4O+bW59/mAZT
V1jbK5+GA3elhRj223ksLPnYbyct9iZgX53hsWULchocvR9+IKchfr5vFDkN
u7TbQUk2KaA8KP11FaO/tcmy6RziCIUaY4GWIaMQ+JodK6c8Twej7Iwb5Yoh
MKe3sluG0Z+XxyWwdTP63E2pr6yxP98gRRURs+0BmC4LQ96j0aRKAHmPqA2+
m+7H0SFHusu/1rEAblV/WfXlSzx0PQmw1R1m9OWOT1sTfzP6vfM+Y+tMY6Hi
MZsfl0Me6PEtbh37QAfBvZo84VdSQet3d7hlUAewsVxMObtIgZtPPp1180uD
Lot/d9+eGwKzH3rvDmaNgoGbPom9GwQplZIWrgUD0H+y1eTD2BhsfRB+Xssq
CFr04ieso6gQ+qiwUH11GzyG++LTd4LhIpX/GD8/BcKXHY0edO0BZ5ulO8Qk
QqFWIvwW79FGaItxfvPrNg2OOUnP3didBimCp6clhFpJTpjHB8sGKjzWsTt0
sywYEit/O0kydJ83/h6oG3sU028w9KyNa7JlZ9sIT0lja6wJ/t+LCpI+k3Eg
ycazIS62ltwtPc/m8YMGK+2iAh7f+wAiWoeHNzH6tJDhuSOKjD6N1zl5CPu0
h+Yf7LB/4zVL68L+rZmvTh71de2vfVXz6CDWaib0//D15uFcdl3YsEIkIkNK
Ut2pNKmModqijJEMRVLIUIQKoSRDRWYiMpS5yDxLbEMRMs9knsefCpniu9b1
Pr3H893fc3x/3uvYrb3W+u299lrrPC932GmMWYy0b/9piUC7PCYN8/om0YOi
3KdeNp34rXm6iUplJMqn22EOcg3OfD2QJ6UORYM8jCFA86npFDpV+e3ukbk2
LK0YmXbgSQJql666A3Lery2bQR5TUqXCR8hf3jqkB/J+jROyILeWmZyF9SWh
N+kgf4oaex4pJ/Ln+86JG9eJ/Cn/h6Ud8qR+ShUj5E/JnJ4TkCfvr5nlxUcM
IhW9UYrSnVFsJeC4dic3DoVWd+kecxlAiIvrrM5Foo7Qmu6l+icBvTi0Z6rp
dAc61LDpWjf7FD5we8I7qSwD7esevJA71YwqYk4xaVCmcFm9HsPi0WzEXHGw
KWYhDlHpS4wD7+jGd5kB4B0xGTZU5/ZRkIfyy9m42Qz8UNzT6q5dFEo0HmZw
4cvBkzyec0HtFBxVtmM241kkMntJF/zzKwXNlB30sL38Ca9tfCzorxSJ8ppV
MstFO9FWbcmF7b8mUbut6bksjlDk+GYoTJivFe3X2Tk3Wz+FmBzid7BkhSDH
uH1OdI8rcKHJyIC9FgV9+b0w86guGE1vzP/+nsgnw4IX70E+0fBPX4Z8srA7
YOU1YX+zxMGfYH92rHMy2M/PKLVut185uiBVJRh4l4Ll/vngYsETjuQjdkuL
BGRjttCp0x+7Cf/O07oVuPmj9fcdRBZfpuPvwgPUdGMUVFZcvN001x/5/Krw
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
OkB7rq0a6bt9aBsZikZnNHdrQv1/vnv0FFH/o3s8rj1Q/++5zm4nT/Q72eUK
pmnFhcjwmNZW/l0xSCX2C9kHdUhrfyb6IGQ1k0/2QRuUYujvEPKce6l9+GMh
4pWQp2Fni0EmSZrQXyB15w/20F9cPi48APpL/lmwIfSjbFeHDEI/ZtFS2An6
F0XeK4P9jIemvhH24wqR4Tawf2LTqyug59nxmvNgp7YxGgI9GhvvgV/oars2
I/gl8G7+O/hFZdRrC/r1P9vagP2fXnaR+sN3NYH9aK5zsgjsH+/9bA32x795
CvYj9vrDY2C/4GF/erD/TuxcBMRthFPol3RbNaZqMmgH/QNcR0A//uOu8g7s
z5v9wgH6WZ7XciuXNKIgunCGwVPT6N0yD5N5ZT7y6b1HB/G58+jn8aKPhXhf
mys16E9vbyoOlqhC5ewaqb+OUHAt/e2k3P0ZKIJuc0hJ1TRmcty+W8+7Dm/R
ot2ep5CFHmy98YHtH6KPa6TXqeL5hql3Rp3fY56Otn7kmnpnMo4rjy1oq/7o
Q8vW2QpPiffo5clLeaICU7hWUVClraUdLSwxSQfJpaEPK5k8CrsoOLzZOeb8
9WqcbMq9OzokGkUYSkL/i9Qz9jlA/+u/vuQG9L+X+XM2AF7ZfJYhJOkyxmMM
vesBrxReUJxNL6CgqtaYe/uGCrF1bcGsumAMejO97PyciYJMyw5t2/S4Bg8s
WzdJGcagtDrVUS52CmpaYqM1Y6/BPGwaD+3YY1BN5hTox5Kqpl6gv/dd7PI3
Qv+zhl3zoN8mWH6Rd6gQDbwcnQP9ApsK7EakEtGtovbjAZ0UzH0rQvLniwz0
5qC90vkcCgplVpL8fKQIx/WqPrI4FItklg1HiThjepPTyRDnr7kMiRDnEI1z
T8FOmQQxasJO9H7xcjPY6dR05ALoqSmyuU3oQQ6clg9BD6Un3LjkIwX1OiPh
x34YmW5sW7aPi0Ft+oHl4rkU5HL5k5oNaxHaJpGzbnopBoUM/vy8Fq1WOKtv
txXue+Sjux5w3+PtTEjccFfvezPADSWPKL0G3HBlO/tWwA1r3BsNATeM6V/T
AdxwuG2axE8P7k08DLhhivueUcANpYatvgBu6Ojby1Y/UoQ7lvcqAm6YXuF1
DvDTR9HOxfD33n3YfeQBP539tZfnLPH+rjI1VxU9J87hP1uuGxHvr0TWtDSs
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
ZIyFlCRJK/B5BybdO09xVyjX2n82AXBWOPy3nxUdfnCKb/5p/A5uei0urmpK
Arkj0w2csxTfz/bEKXGkwFiLzfGW46lgN2mjj300R0ohsI8mZ3awEvtoHgnG
hZY36dCz4mpGK88bkiq6Pf3vQhq4bvr+1v83HTYlHJ4jnulE8R2rkYduIjxM
6DtzToIOY1nPabpXGsimnTvvZN1MgqQ7+lIfqN/dVOGmOZiQCqTO6stJkXug
xTfy2oqNDuXVk6MlW5qIIct67pjncaD1bEJzjf406Ov8t+xtbheRFZM6UO2c
AZrszzXaNVuJoPKOT3NXaKCkZnvpVnw+nHY+/HY5GSASXSbCpTsn4dpE5/gX
rwww7FmWUzLdDtf3Lr+N93BtFdhybm5jKbxfvk/fNWwSXiu32Y+rDoBDofmr
txWZ0OrTc6yTawjWbdDYnUj5QFau/HcehWxgU1YMVCynwZlf2qcWq1og35er
QDQqDZ72vt6L904O6GnP4L2TDSaPpvHeSb2hKvEckUFSeeDOwevLJkjy2n1d
oecroWAzTUFbiQ4vvx1P4ZJ+S8xduA6ai1eCRUIsy0WFMVIYpKDW824IVrgM
JXnLlsKqUbUcxZ9Unaln0C/2M50oNSbli01nwBbnQ3oCdZ9BWdGOfVnUBKzT
8pBx4k+DmpZrq/b0lRC/M64Vnj10eFXgb+Hfkw77nr9xPcb0AWRfnn6L52SO
Jq3sxXMyW6KtHn06ngTW6ct24v16McKd6ni/HruxhzIfXy1wtojy/zOjw0BD
IRf2kW+x5mqu2z8Aslp23YfuTkKzkf6Ojiv3YHOEfth1CRq05Cy9sdmnHSp+
61XONt2DkcFT1WtbWonQUt4j287QILqjXOJ5XwrcOpGqJzfcQKpWLHPDezYv
5L3ei/ectnWmd7Jm0YGuaP7H7HoVWUz3UZb5mgKnVwur4/1rHlx/juP9awlR
pWrMUnlg8yfl8FqWVmjw+iV6PJAG4rKbvfB8kcJiz2a3rUHkk7zKON7zFaIW
8hnv+XKRVr6Mfdu21F4v7NseiE1lX4l925fsLAl7qsgbp+oGvJ+r+LPXRryf
672EyJOo7EmQdXnp0M43AKOh7Fe+N6XBkoz8tptWU5DhID3PHN0LP0Vmf2vr
pIN3ee1JnplJGLUTWMbN3g+ZzWLrtyplQNpKW4kfHF/I56GDInOZ46Dz0som
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
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{496.50845142274653`, 178.},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->
   NCache[{{Rational[-1, 2] Pi, Rational[1, 2] Pi}, {
     Rational[-1, 2] Pi, Rational[1, 2] Pi}, {-125.92186819441169`, 
     83.50539434967496}}, {{-1.5707963267948966`, 
    1.5707963267948966`}, {-1.5707963267948966`, 
    1.5707963267948966`}, {-125.92186819441169`, 83.50539434967496}}],
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.1819132636341662, -3.375887514187798, -0.14244667797067467`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.765115232147987*^9, {3.765115271619046*^9, 3.7651153256914253`*^9}, {
   3.765115846131563*^9, 3.7651158979905634`*^9}, 3.7651159946415634`*^9, 
   3.7651160317195635`*^9},
 ExpressionUUID -> "c1bcea8c-33d9-4d3c-825d-8900712e2763"]
}, Open  ]],

Cell[TextData[StyleBox["Direction of \[CapitalDelta]k", "Section"]], "Text",
 CellChangeTimes->{{3.7651173272195635`*^9, 3.7651173286275635`*^9}, {
  3.765871694518372*^9, 3.76587169942347*^9}},
 ExpressionUUID -> "8ae52d0f-5b01-47fb-ba36-6d2f4609285a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[CapitalDelta]k", " ", "=", " ", 
  RowBox[{"k", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], "+", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], 
      RowBox[{"(", 
       RowBox[{"1", "-", "r"}], ")"}]}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"dirdelk", " ", "=", " ", 
  RowBox[{
  "ToSphericalCoordinates", "[", "\[CapitalDelta]k", "]"}]}]}], "Input",
 CellChangeTimes->{{3.7658717268554244`*^9, 3.7658718184287767`*^9}, {
  3.765871850656553*^9, 3.765871854155732*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "7.373765176833219`*^6", ",", "7.373765176833219`*^6"}],
   "}"}]], "Output",
 CellChangeTimes->{3.7658719156734576`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.0428078718831982`*^7", ",", "0.7853981633974483`", ",", 
   "1.5707963267948966`"}], "}"}]], "Output",
 CellChangeTimes->{3.7658719156734576`*^9}]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  RowBox[{"Direction", " ", "of", " ", "Beff", " "}], "Section"]], "Input",
 CellChangeTimes->{{3.7651175897995634`*^9, 3.7651175998925633`*^9}},
 ExpressionUUID -> "5051ac9e-08f3-464a-b942-af4f7556eee6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", "2.3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListContourPlot", "[", " ", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"udsmintest", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"x", ",", "y", ",", "zf"}], "}"}], ",", " ", 
               RowBox[{
                RowBox[{"UDsim", "[", 
                 RowBox[{"x", ",", "y", ",", "zf", ",", "a", ",", "b"}], 
                 "]"}], "/", "Er"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{
                RowBox[{"-", "1"}], 
                RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
               RowBox[{"1", "*", " ", "1", 
                RowBox[{"\[Lambda]", "/", "2"}]}], ",", " ", 
               RowBox[{"\[Lambda]", "/", "10"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", 
               RowBox[{
                RowBox[{"-", "1"}], 
                RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
               RowBox[{"1", 
                RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
               RowBox[{"\[Lambda]", "/", "13"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"zf", ",", 
               RowBox[{
                RowBox[{"-", " ", "1"}], 
                RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
               RowBox[{"1", 
                RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
               RowBox[{"\[Lambda]", "/", "10"}]}], "}"}]}], "]"}], ",", "2"}],
           "]"}]}], ";", "\n", 
        RowBox[{"res", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Pick", "[", 
              RowBox[{"#1", ",", "#2", ",", 
               RowBox[{"Min", "[", "#2", "]"}]}], "]"}], "&"}], "@@", 
            RowBox[{"Transpose", "[", "udsmintest", "]"}]}], ")"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"mi", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "\[Rule]", " ", 
              RowBox[{"res", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
             RowBox[{"y", " ", "\[Rule]", " ", 
              RowBox[{"res", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
             RowBox[{"zf", " ", "\[Rule]", " ", 
              RowBox[{"res", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "}"}]}], ";", " ", 
        RowBox[{"{", 
         RowBox[{"a", ",", "b", " ", ",", " ", 
          RowBox[{
           RowBox[{"ToSphericalCoordinates", "[", 
            RowBox[{"ecrosss", "[", 
             RowBox[{
              RowBox[{"x", " ", "/.", " ", 
               RowBox[{"mi", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", 
              RowBox[{"y", "/.", " ", 
               RowBox[{"mi", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", 
              RowBox[{"zf", "/.", " ", 
               RowBox[{"mi", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b"}], "]"}],
             "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", " ", 
         RowBox[{
          RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
         RowBox[{"Pi", "/", "2"}], ",", " ", 
         RowBox[{"Pi", "/", "13"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", " ", 
         RowBox[{
          RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
         RowBox[{"Pi", "/", "2"}], ",", " ", 
         RowBox[{"Pi", "/", "10"}]}], "}"}]}], "]"}], ",", "1"}], "]"}], ",", 
   " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"BarLegend", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"Pi", "/", "2"}]}], "}"}]}], "}"}], ",", "None", ",", " ", 
      RowBox[{
      "LegendLabel", "\[Rule]", " ", 
       "\"\<\!\(\*SubscriptBox[\(\[Theta]\), SubscriptBox[\(B\), \
\(eff\)]]\)\>\""}]}], "]"}]}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Alpha]\>\"", ",", "\"\<\[Beta]\>\""}], "}"}]}], ",", 
   RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", " ", 
   RowBox[{"FrameStyle", " ", "\[Rule]", " ", "Black"}], ",", 
   RowBox[{"InterpolationOrder", "\[Rule]", "2"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", " ", 
    RowBox[{"ColorData", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<BlueGreenYellow\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", 
         RowBox[{"Pi", "/", "2"}]}], "}"}]}], "}"}], "]"}]}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", " ", 
     RowBox[{"All", ",", " ", "All", ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"Pi", "/", "2"}]}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"Contours", " ", "\[Rule]", "30"}], ",", " ", 
   RowBox[{"InterpolationOrder", "\[Rule]", "5"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7651176674925632`*^9, 3.7651176711865635`*^9}, {
   3.765117848091563*^9, 3.7651178779775634`*^9}, {3.765118518121372*^9, 
   3.7651185926072664`*^9}, {3.7651186803101788`*^9, 
   3.7651186823883867`*^9}, {3.7651187730654535`*^9, 3.76511878432858*^9}, {
   3.7651189138395295`*^9, 3.7651189252146673`*^9}, {3.7651189701931643`*^9, 
   3.7651189956187067`*^9}, {3.765119029380082*^9, 3.7651190308822327`*^9}, {
   3.765119065077652*^9, 3.765119066964841*^9}, {3.765119139544098*^9, 
   3.7651191585529985`*^9}, {3.765119201502293*^9, 3.7651192140285454`*^9}, {
   3.76511928088023*^9, 3.765119300430185*^9}, 3.7651193431704583`*^9, {
   3.7651193750116425`*^9, 3.7651193751696577`*^9}, {3.76511942699584*^9, 
   3.76511942819596*^9}, {3.7651195422523646`*^9, 3.7651195510812473`*^9}, {
   3.7651196209272313`*^9, 3.7651196223483734`*^9}, {3.765119672208359*^9, 
   3.7651196927034082`*^9}, 3.7651197271368513`*^9, {3.7651197936054974`*^9, 
   3.765119806341771*^9}, {3.7651198986690025`*^9, 3.765120080448179*^9}, {
   3.7651201328204155`*^9, 3.7651201569958324`*^9}, {3.765120217655898*^9, 
   3.7651202180699396`*^9}, {3.765120268091941*^9, 3.765120269866119*^9}, {
   3.765120306603792*^9, 3.765120310953227*^9}, {3.7651203552936606`*^9, 
   3.7651203564447756`*^9}, {3.765120390911222*^9, 3.765120395149646*^9}, {
   3.765120446736804*^9, 3.7651204481599464`*^9}, {3.7651204920523353`*^9, 
   3.765120505875717*^9}, {3.765120553830512*^9, 3.7651205956066895`*^9}, 
   3.765120642938422*^9, {3.765120681981326*^9, 3.7651207735014772`*^9}, {
   3.7651208049766245`*^9, 3.7651208051026373`*^9}, {3.7651208371218386`*^9, 
   3.7651208373608627`*^9}, {3.765120893972523*^9, 3.765120925572683*^9}, {
   3.7651209711122365`*^9, 3.765121003605485*^9}, {3.7651210376908937`*^9, 
   3.765121037816906*^9}},
 ExpressionUUID -> "d37ef17f-7820-4f71-8067-44959053d118"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1: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
ifnG9CRB3wOu7yHX94Dre8j1PeD6HnJ9D7i+h1zfA67vIdf3gOt7yPU94Poe
cn0PuL6HXN8Dru8h1/eA63vI9U/a77j+Scz1T3Gd6Z/iOtM/ibn+Sbya6Z2w
m+mdMIHps9CJ6bPoyfRZOMX0WeT6LHB9VvRTMf1U0ItFfxrTg6ER04NhLNOb
a/mhTjN9GO4y/RlSmf5M9+d6M32e683wienx1B9xPRy4Hk5+oHg2nyXm81li
Pp8Fru+Qv0XB9H3YxPR9HMD0fUhj+j7OZfpRLf9WJpsn42w2n6D9j88XgM8X
pM+L3g/n2LxBmH8An38gn38An3/Q7+PzDuJdbN5BHM3mHcSN2LwDB+utTLGe
IfrLtCGZRXjvE/H9yTPU9sYVxO6fYhuk7q0kNnru37T/VjnxtxNzDdwsRf9X
Apsf1fKbubH5D8XTjs1/0NW2x8O5f5VD8pGgjKxJMszscM2h7gM5HNdEjd24
9hMWs3kX5S+fdxHvZfMu4kVs3kU8iM27iPn8jvoHPr+DhWx+h3x+B0/Y/A75
/A66sfkd8vkdtGTzO+TzO0hl8zvk8zsIYPM75PM74PM7+vu1bN4mzCepfvj8
Efj88ec587/5Zi1/3hY2jwQ+7wQ+76T7r2DzTfq8GZtvCvNkqh87No8FezaP
JX8a9+eI/jXmzwE+b6J6CWTzaDBi82jk82hoxubRyOfR8JnNo5HPo4HPo5HP
o4HPozGPzbtq+Q25n4yY+8mIuZ8Mjdh8nuqPz+eJ+XyemM/jgc/jpd8H7Rfv
bSEjIUlJv2/m5iWrYTX5KyA1ZK/meg35KSDy/fRmVl0qcUnA8Juvdashe+Gl
W8MTlLhd7/b+JdtU8Pa9cVu/Vko8ta2bs7ZQCY9Gn9upmanA8MLTQw7NUELI
3XZFM49X4avpuoZmqAA/yxNTwhLlWPRoV/n9ngrwPtcyQre1HHV6KJ9PPV0F
VZ07DY6/LvovKwcNd8wxLSQO1HPPaHekiHhWXoTT9BoZcePIqkKvVSXED32s
1j5NLCXe4LRa/mXEJ2IT2yuu1qHlWDNy6fvhGhXV/4EvHTqMmixyqzvxS8cG
KIn913qHTlAriHuYjdLY24sckfl5xNSL4n7ixPwgtfygFsz/QfHoM/8HsZr5
P4jjmP9DzCfm/yDexPwfGMX8JmDA/CbYhflXaP/g/hXiJ8wvQ/sJ98uAB/PL
IPfLwGnml0Hul4HVzC+D3C8DQcwvQ/F0ZX4Ywf9D+wP3/xBz/w9xW+bvgX3M
3wM7mf+oll/2JPP7APcjAfcjIfcjAfcjIfcjAfcjUXymzF9E9wtm/iKYyvxZ
tL9wPxVwPxXtG9zPKfqMmZ+TuCXzc8IO5g+h/x/K/CHEBcz/BYnM/4UrmP8L
4pj/C4uZ/wueMP8X9mD+FNpfuD+lll84i/knifsx/yQ2Yv422j/Smb+N+Cbz
txHrVPznZ4PzzM8GW5nfrpZ/uIL523A889/Beea/wyDmv4OzzH+HjZn/Dk4z
/x2uYv476Mn8dxRvCPPT4RPmD6R6usH8hbX8yi2ZHxBzmN8QfJjfEDcwvyEs
Y35Duv8L5i8kPsL8hdia+RupPqKYX5LqYy3zSxJzvyRwvyRyvyRwvyTdn/sj
YR7zc1K+c78o5Tf3i9byW5szPydxFvNzwk3mJ4Uy5ifFS8xPCt+YnxRPMz8p
+DI/KcXD/aN0P+4fhdvMr0v5b8v8usTRzD8LNcw/C4bMX0j5bMH8iJSPycwv
DBFf/vMLwzTmF4Zs5hcG7jcW+0nmN67l905m/l6aszgxfy9xKvP3EvsyfzBG
Mr8z+DO/M2Qx/zTljw/zT9fykw9kfmS63yLmZ0YP5vem75/7vWv5z1cwPzV0
YH5z+j6537yWP70V82sTb2B+beJDzA9OvIf5wYH7l+n/uX+ZmPuXif8H58L+
EA==
     "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
        EdgeForm[], 
        RGBColor[
        0.09175863945811742, 0.40343340792278304`, 0.531667393688251], 
        GraphicsGroupBox[{
          PolygonBox[{{162, 1, 188}, {831, 154, 904}}]}]}, {
        EdgeForm[], 
        RGBColor[
        0.09316545418486215, 0.42586022410623303`, 0.5355744083133347], 
        GraphicsGroupBox[{
          PolygonBox[{{163, 162, 188, 189}, {832, 831, 904, 905}}]}]}, {
        EdgeForm[], 
        RGBColor[
        0.09515479802702408, 0.45757346098503593`, 0.5410992264275377], 
        GraphicsGroupBox[{
          
          PolygonBox[{{843, 145, 849}, {221, 10, 217}, {584, 101, 638}, {417, 
           54, 280}, {575, 101, 584}, {623, 101, 628}, {280, 54, 463}, {217, 
           10, 184}, {396, 54, 417}, {628, 101, 575}, {633, 101, 623}, {638, 
           101, 633}, {881, 144, 836}, {454, 54, 402}, {463, 54, 454}, {849, 
           145, 886}, {402, 54, 396}, {232, 11, 228}}], 
          
          PolygonBox[{{836, 144, 145, 843}, {228, 11, 10, 221}, {833, 832, 
           905, 906}, {164, 163, 189, 190}}]}]}, {
        EdgeForm[], 
        RGBColor[0.097144141869186, 0.4892866978638388, 0.5466240445417407], 
        GraphicsGroupBox[{
          
          PolygonBox[{{761, 143, 880}, {333, 65, 508}, {499, 65, 465}, {474, 
           65, 333}, {570, 90, 527}, {165, 2, 155}, {537, 90, 576}, {566, 90, 
           570}, {275, 22, 181}, {527, 90, 537}, {764, 133, 841}, {508, 65, 
           499}, {902, 153, 898}, {839, 133, 764}, {191, 12, 234}, {285, 22, 
           275}}], 
          
          PolygonBox[{{850, 849, 886, 887}, {837, 836, 843, 844}, {229, 228, 
           221, 222}, {455, 454, 402, 403}, {418, 417, 280, 281}, {624, 623, 
           628, 629}, {634, 633, 623, 624}, {397, 396, 417, 418}, {222, 221, 
           217, 218}, {403, 402, 396, 397}, {844, 843, 849, 850}, {906, 143, 
           153, 833}, {898, 153, 143, 761}, {218, 217, 184, 185}, {155, 2, 12,
            191}, {585, 584, 638, 639}, {639, 638, 633, 634}, {190, 12, 2, 
           164}}], 
          
          PolygonBox[{{841, 133, 881, 836, 837}, {181, 22, 232, 228, 229}, {
           629, 628, 575, 90, 566}, {281, 280, 463, 65, 474}, {576, 90, 575, 
           584, 585}, {465, 65, 463, 454, 455}}]}]}, {
        EdgeForm[], 
        RGBColor[
        0.10584277178713358`, 0.5142651627472825, 0.5461063447552805], 
        GraphicsGroupBox[{
          
          PolygonBox[{{235, 23, 288}, {709, 132, 834}, {879, 132, 709}, {187, 
           23, 235}}], 
          PolygonBox[CompressedData["
1:eJwt0L8ug1EYx/HjPXZNWN4mJBLXQFKLDopGDe0duAB/hiIMFRKmWtiYCHdQ
CQsbK2Ob6MQN1EIq8f3l/IZPcvKc59850+ub9Y0shDCDUbyOhPCCc1zgj8sh
VmII1ZhiumvjDDe4Ro4ipjCJcUyYzh1634dU03aNaq+IXeIJz1hmxlJMMzV7
G1toYgd35Ny6RrXaSbstooI+sQ900RNmdFHDmnfMHdNdz7kPeMQ7sTf/gf7i
i9ine/b9ho5juptjp1mUMK+dqRligG/NZadV1NGIaYeac5RbpmZB/4uq39h0
T/Wu+G3qoV4HxPb9J/qbAsaQo5ilGZq1i72Ydio5p+AZmtXCYZZ2HPjNevsx
NUf44e7XPXPvWHZNyztol1NyT1yj2n+PzUyz
           "]], 
          
          PolygonBox[{{762, 761, 880, 132, 879}, {192, 191, 234, 23, 
           187}}]}]}, {
        EdgeForm[], 
        RGBColor[0.1171365491517635, 0.5366386222470951, 0.5432514030142654], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJwtkC9rglEYxe/7XhbcmG31BXFFse07GBwDMQhWsQl78waysLG4YFqYYN0X
mMHi0rCKXTCIn8Eg+x3uCYfz3Oee59+pDcveYx5CuAUR5FkIBVyFe6BGfA/X
+ZwQN+EMPBOvKTyBD+JXcjv4BhzE1u/538AVsPBb+SN8geZds2J6K685V1nq
cwkv4WuwAnferQW3XduJSSf9XjdYc3Zfabrwn/v8gq330V7fvnsO+gRTeBDT
ndqnEdNs1X7Zl8K7NKzRrS3nNf9gH37cSz2f4HFMXo1i8lTezrxrYe/lqbzN
0Tx4f936Bj6JX+DSfeT9PyCSLOA=
           "]], 
          PolygonBox[CompressedData["
1:eJwt0L8OAUEQx/F1p5XQ3jXuKUhOg46ExCNoJYTiFCSIQkdDolBIXLyJfy0l
b0BJSXwnO8Un2Zvd/e3NBM1Oo+0YYzwkMeRjgC56WCWMWWKOBTLU0vDgO7Ym
ezvEeOCOGurYkukihRM2upbaHj5nPL0jd0tkFlFBVd/wtFbSmuyNMcGUoDk5
a8xcWxtrD9LLj8wv3vjoP9W0Jns97TVC37Fn5OwVN+Sp5RCigAu1s85EZvPi
3SeyrIOEPRPqjDKaGWmGZMU6K+nZ1zeuminZI9f2Ij21WB+5c5DeWZfxB6jn
NCw=
           "]], 
          
          PolygonBox[{{766, 765, 842, 134, 773}, {848, 134, 845, 851, 852}, {
           193, 13, 187, 235, 236}, {852, 851, 888, 146, 854}, {277, 276, 182,
            21, 267}, {868, 142, 879, 709, 710}, {226, 21, 223, 219, 220}, {
           220, 219, 186, 9, 212}, {770, 122, 840, 765, 766}, {157, 33, 286, 
           276, 277}}]}]}, {
        EdgeForm[], 
        RGBColor[0.1284303265163934, 0.5590120817469078, 0.5403964612732503], 
        GraphicsGroupBox[{
          
          PolygonBox[{{621, 121, 763}, {864, 147, 893}, {723, 113, 727}, {321,
            42, 329}, {233, 34, 290}, {852, 135, 848}, {212, 20, 220}, {329, 
           42, 371}, {361, 42, 324}, {207, 8, 205}, {220, 20, 226}, {720, 113,
            664}, {679, 113, 723}, {205, 8, 180}, {664, 113, 679}, {721, 113, 
           720}, {727, 113, 721}, {861, 147, 864}, {854, 135, 852}, {290, 34, 
           340}, {371, 42, 361}, {830, 121, 621}}], 
          PolygonBox[CompressedData["
1:eJwt0r8vBFEQwPH3dvcUiB8Xd81eIkJ1qCgQCj+6u8TFnyCuIpQU5BBqGjri
Sv4LCuuupaQ5DQnlKXd9JzPFJ7e3772ZNzM7trm3sRs458qI0OZPC0HoXIgB
79wo70cQ8HzL7w0KPBfxhle00EaGFF384QPvWEcN38T+wjixJ0KNIbH60I9V
1lZQQRU77NnGFuroQU7uhUHMcmYGU5i2O8hdrnDttQapJSVWhjWvtUpNC3ZG
zoaIvOaU3Cc4xRIWMYw85jFn72StZrWlVvs5uc7QwHGoOSV3zu5eZU/Faw+l
ly9I8IgnHLB333JIriJnCujw/IkSZ2PrqfS2br15Zi3BkM1Lalz2GlNi/+DX
6Z0a1lPpbWS1p6xlTmcisyljUvLa7CVmr9eeSG8OcWR36thMZbYlxDZDmeUD
5+5xh6bTmchsLnBp30jXviH5lpq2N7He5K33scX+Byq9TTU=
           "]], 
          PolygonBox[CompressedData["
1:eJwtkMsKAWEYhv8xKaEhYWNKY+ewY2VhY8lCiqJsXIApGxRrS8otKJfgDsih
FC7ATopbwPM1/+Lp/Y7vf3D6bnPgU0rFwA8bQ6kCukZTYMOP/As+4jj6ANtU
ao5m0QQk4UZ+hS0E4AJLdhaG5ye+T9hz4A6q7EzIK6bnKd537SFeZ2Zc1KB/
ID5CGJ8QBCFNL4rOqE9hqOdl76RjqY1gDBF8LGjou8sbutCRe8CKWg9t6X5b
92SmrM+z0CKUIE89Z3p/IPOyJ++Tdzbp16AOH/I3OMQZ9AV/e78obg==
           "]]}]}, {
        EdgeForm[], 
        RGBColor[
        0.13972410388102333`, 0.5813855412467204, 0.5375415195322352], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJwtkD9LQlEYh8/1Cm4tLg0XRHALt1Ai8BM0BYEINlSGg6ijEIXi0hI0BM1O
grj0FRLKNGhwcBLcxCE3IVzy+XHe4eF5z7nvn3Pf9FXjvB5zzmUghGMOdTzG
F1w8Eh/hIY5DH1a6g+fAuQXkiSP8TU2T+B6XrbaEv/ABTOHP+mtOZLX9wOcp
XzPHlt+DJSThH1rU3KgPrpH3RNzGKeqzqsVVzi/ED/jWci7xB07ACLI2qxj6
s+7fYGazNLPAty7+jPm+6j/Av/gQ3qFDziu+C32e8ivE1/YGveXHeqr3xPaj
PZ0Ffofa5c5y5rC1/htYW6yZJ/bv2sGpvS2H90zeNyI=
           "]], 
          PolygonBox[CompressedData["
1:eJwt0r8vQ1EYxvHjnqsWv1rJreF2kJBYmFjaVOLXpgn+AIOEpCIMbBbRGK3K
QkzEn2FCJ1zRnYVdjfV9ct7hk7bnvPf0Oe97xzb31/ci59wkYlzjCkmPc0UM
e+eGkKKEPuRsTXstap5xjiaWsYQyKljDKrpw/NEDH6MYxCMGWO/X/yCvZ6lZ
xApquMMt3pChhNRqVDvNM1OI0YsNMp1xbgMVvh+h6cLatg8ZlKWDP7QsizL9
4sZ+qxf3aFP/gRe8KovtqeYJh5xxgDp2MIsZy6Rs78isR+pVTAaPrpruQ4aO
1ai2yFqCT/a/MIcqChiJwkwS65l6pxrVfuMHl7iwnql3Wz70Qvff9WEmZcuo
rM6y5Gy2mfVad27bmTp7nL0JHzIUbAaaRd5mN48FHFv/1fNTe2dSu5PuVrPZ
nqARhZ7V7Z3Ru/MPTJdDCg==
           "]], 
          PolygonBox[CompressedData["
1:eJwtkD1PAkEQQIdbLvwALOgMitWFVkPhJUJlYoGEwsaED1uFBFoarrEhoSCA
DfwJfgMFiXw1VCS0NtZECnyT3eLl3c7szsxNutYofXgicgE+dGMiAX7ELWjD
CIbQdzm9k4eHmL2nsQL+xSn4gSvO13BrRCLOIX6nkTbbwgbW0CT3jW/IZyCA
T2JZvMNJWOkdWMKBmnd4j4vwrHPy/o1YDt9DCD7xOJxdjT/XR/stsKF+HF5c
v1dcgaqxM+qsJ52X3NGzvXWGGSRgDhHxLnRc3Z5n0W/9tzF8ebam1u7AgFzd
2H3p3p7wBE/F7kv3VoYs50v8D2GxLyM=
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.1510178812456532, 0.6037590007465329, 0.53468657779122], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJwtkTFLQmEUhr97v0wa7lCLY4Vhu1A0NeRcUC6KkzpKCdYQ9Qv6AbU6CYGI
4G8INxuCaIuiXUEIG3tezhlenvc793z3nPfe3Vb34ioNIZRQRH8cbqGK50kI
J/gveMPDJ/wdbKMHfBMWeLaD76MivgjnaBXM71NbwC30jsq89xQOqE/gOhqj
X5+7hK/e/+F7qH4YbYZmVbSXz92EHXpq+E/8JX2P+B4s+55H8JlnFfxPYmfV
G/Cb8xk+Sy2P6rVoH+MerEWboVkZXPpuyrTteZX7mPt1/HVqmVXfS+y+3jOj
PvW7yncQLZdyV7UTfphYn/rf4Atq4zfgCObU4/m1j75B5l7/Ie+ztPs/i4sw
ng==
           "]], 
          PolygonBox[CompressedData["
1:eJwt0cErhEEYx/GZl11Jiqjdy245cFBWKVL7nvC6vQ5OXCiK8haldeJk97pu
LHuXV5K/w+57tOKiZF04s+Li+zTP4dPOOzPPzG+eHdnYW971jDHj6MZglzED
yCGPfhaXmF9Fn+fmZC2DLNLWmBR+Wf/DG+N542peGY+xZxQTKOCO+TRSuEWL
Mx/whGdYCYMOtT+I+bzCPRoIWFtAKLkwyZ6CZpAseeZyukf2ZjVrm/E7btgz
a1zGmPE2a1tYwzo+2fPhucySPWFPEzWco4xjlHBgXY3UFuFjmNohzSBZrhHr
G+WtM9RMa2bJ/oiW3pHomXL2DiLUqbnQM+SsCsqo4sRzmWqaSbL1MrfJ21YQ
ea6HHb1D7lpEgCJ8686o6h1y14t1tSGm+E74beIL38b1PNQMFe1pW3smvbu0
rnYOPXzv05NTxmcoMT7CofZcet/Q/1bukLsifXugWX3NKj2T3v0DZ8JPoA==

           "]], 
          PolygonBox[CompressedData["
1:eJwtz81uQVEQwPG59wZJu6G6F2m3LARpQiz6BiWE2NWmFnTbIBJLD8ArEGx4
BY103UTwEhYSH2HjPzln8cucmXvPmZno53e+6YrIE3zIeiIZpPFDniI+oM05
QAwihFdH5IVahFhECSkeSuIPNb79Em/EKza2xwEnHLEX88ZZ3+bfd+IH7whn
B4+okOaIYTyjRe8htZ7OhA4Orpn1YvvrHDts8e+a2XWHqd1xhhHGqFP/QhcD
8gZxbWddYal7IE49hjL65AnP7Ky7T/BGreCYf/XOHH4sULV3araX9rwDPoAp
vA==
           "]]}]}, {
        EdgeForm[], 
        RGBColor[
        0.16231165861028313`, 0.6261324602463455, 0.5318316360502049], 
        GraphicsGroupBox[{
          
          PolygonBox[{{753, 109, 705}, {342, 46, 292}, {246, 25, 204}, {828, 
           130, 863}, {708, 109, 565}, {168, 15, 171}, {202, 15, 168}, {297, 
           46, 346}, {339, 46, 342}, {346, 46, 343}, {248, 25, 249}, {705, 
           109, 702}, {871, 140, 892}, {823, 130, 812}, {821, 130, 828}, {247,
            25, 246}, {892, 140, 890}, {565, 109, 754}, {866, 140, 855}, {208,
            15, 209}}], 
          PolygonBox[CompressedData["
1:eJwt089LVFEYxvFz74RjYyZJQm6UNrVrxAFNmJbZzsBNi4TAjdRMCvnjD0jd
iW0bWyeOpQ3Nv5CbsEWLuZGLxMo2CYVtFF30fTjP4gOXc99z7/ue9z3XJ2fG
p9MQQhkXMJIL4TYeYgJ7vPyKAs8dyCchtOGM2HOkvEtwwtqp6TnDF1RRwSju
ocGed9jCNnbRiy58xDoxr5Hnm+0YxV2M4T4uoxMduIQlYhcxjwXcJMcbuIVi
LuaoXI/xL8QclEsZdzBLzDPMYR7TeOo1vfvLnj9oIQtxj/YOYRjLygGreIEa
ay+dk3LbYc8HvEcTr4hZQx2bafyGvlXEQBL/0fIe7d10bAsZfuEQv3GEbnK8
gj705+IZjTkn5fbZZ6szPsF3/nGQxDPUWT5hz2PXrNofYIW45xjmeZ/Ybxgk
toRHufhOMVM8V1mrpDFGsYpRrHqoXn7Crs+k5pnIvKZ3RfdqECXXoFquodf0
fOjaf7Lnh2tQLf2s9XlGNCsLnoWKZ6/ps9fMNTwDx+6peltgz0XXUHUPV90j
9eot33iDDdSTOJN5z7xmv+TcdWd0dzL3SndmzzOqWb2KnjTeoYJ7pt4duZea
Wc1uj2NVk2qr+9+qWbVP+G6qZ+rdgGdHd1J38z+tqXPi
           "]], 
          
          PolygonBox[{{249, 25, 247, 295, 296}, {885, 884, 890, 140, 866}, {
           702, 109, 708, 521, 522}, {296, 295, 292, 46, 297}, {343, 46, 339, 
           427, 428}, {174, 173, 171, 15, 208}, {758, 757, 754, 109, 753}, {
           812, 130, 821, 757, 758}}]}]}, {
        EdgeForm[], 
        RGBColor[0.173605435974913, 0.648505919746158, 0.5289766943091897], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJwtkT1LQ0EQRfc9EUQkaCEBO8XCmICIhaSIlWAjCjavESGvkiAJJIi1rf4P
QYghYmOjnb02loofqG0QQuw8l73F5dzdmZ2Z3Z3PW3vNNISwjMbEJIRFWIYf
cAa9oZzgOTxWErE5Af5y+AT/DWusS/gtuOQ6f+jBdZ7RwPlDeON9xSdZ5/Ae
TqBt/AU1emgT/wWv2W/jb+Gd8xtwDWX41yTGlPMCD72/An+I7eKL+LLrj8OS
59S8XVTFZ3CVe57iF+C6fQZHId79CR15Bs3+7jk/Yer6ukeNM2f4HTiVxhkK
aXxHvWcHXrqv+jecvw97cBr1tXbOFaz7nQ+SKPkN2PRZ1Zh1L/Uc+s0ruovz
9VePrq8+/6m/Nf4=
           "]], 
          PolygonBox[CompressedData["
1:eJwtks8rRFEUx+97T1EjDVZmM0OKmJqZRmmsxUZGNrN/K2mMhZpZK8+CBVvG
WiFS/o4RKy8WIsmCorFAlM/pnMWne9759T333DcYri7WfOdcFjpgLXBum3ML
atjXnClIwhV0ec51wi/2HxxQ3IRjOIEnYtP4S3CEXYC81UjtLjk7ViO1o2iM
QA7yMAFFKMEU3FNToVcIVfJ7oOxU45HYPuzBBkRw6qm2xM+wG1CHKqzAN/5h
u9OXU82caYr2Jv0jm1Fmjax33XpdQss0RTtDTRoGIAULMp/1kF4/ogk3EMMs
vhnLkdzYYi3r7Xk6m8w4hn1uu++FC5gP9G3kjcrYy77uRna0hF3Bt27xMNAc
scVXkLv6mjsH49gZSNtMMtsd3EKC3G54tveUnb9gD1n/BrTJ6+e7z3Ygu3jD
9+rrm8rbHnqqJZpFX/8Z+Xfa8Amx3U/u7Dz1SewdPpzOkDAN0XqwXSStNhvo
LDLTJPY/0XZPkg==
           "]], 
          
          PolygonBox[{{347, 346, 343, 57, 348}, {299, 36, 297, 346, 347}, {
           683, 682, 726, 114, 689}, {517, 76, 514, 505, 506}, {736, 114, 726,
            730, 731}, {794, 793, 742, 114, 736}, {706, 705, 702, 98, 701}, {
           734, 114, 742, 748, 749}, {826, 825, 860, 138, 829}, {535, 79, 533,
            543, 544}, {365, 364, 327, 41, 353}, {241, 240, 214, 17, 227}, {
           318, 41, 311, 304, 305}, {743, 119, 753, 705, 706}}]}]}, {
        EdgeForm[], 
        RGBColor[
        0.19409865261082485`, 0.6655432674979778, 0.5219897243085369], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJwtkT1PAkEQhnfvGjoSWrVQD2OwUBMLIDGhoxO8FhuxOY3RjhL4Q3x0Vobk
fgChvMbCWFCeF0ioSHgmM8Wb552Zm92ZvdP+Z/wROOciFKLCO9eCOYwo9PCP
cEbcxM/hF/Ez/hVOLT/x2iO9K3iBTvBVr7HkFzCx3je4tHzm9SzJv8Ct0949
qlGrQg976Bp/BSvoGF+Gf059gbo2czvQucXHsG7nNGAGj9Av+qb2DtNA75N7
S3yzIx6J51Fu0BB/CRPbV97jzvJSP7e75M3+A81v4X2o5zRhB43xD/DWvORS
m2ENczTA/8An21f23lj+TH6S1/lljwM6ATFn
           "]], 
          PolygonBox[CompressedData["
1:eJwtkj0vg1EYhs/pi2hSkSAhStJKuiCqYqAJ/oHB7CPtJEJtmOiClZX6BWpg
UYP4IT4biY8BERIJi+vOeYYr7/0+z3k+z0kXV2dKMefcEDTAq3fuBToxdkEJ
vQIFKMIGrJtNvjnIEpeHRfQCzMMkTEETORrhF/0Hg+gBs8l34kOscsxajYLl
UC71oF5SkIZnbE/Wo3r9JK4HeuFbcGaT7xb8qJb1l4F+9A5s2wyapc6ZB7iG
G5iOnCtb/AR6F9sO7ME+VOEYTuEMkpzpjkKOutnkq8EF9OFbcyFnDp2GlMUo
dokzBXzLcGk1VKsCR3AVCz6dOUcf0vOBzaBZOsjRbjmVuwUSZpOvTlzSdvQI
cZtPPX1on5Zf/1/o21jQsql2xofdKr4NPe7DLrVT3X2rDz7ViKO9+fXvfLAl
bf9j9ib0NnIw4sPOtfuE9T6Mztob0VtpjsJdlK33e2x38AbvkDe/7nw0Cjur
2B1V7Q5qFqPYf6v0UHA=
           "]], 
          
          PolygonBox[{{306, 305, 264, 29, 294}, {611, 97, 616, 559, 560}, {
           447, 64, 462, 410, 411}, {545, 544, 583, 91, 547}, {507, 506, 472, 
           64, 497}, {594, 91, 592, 646, 647}, {750, 749, 808, 126, 752}, {
           432, 58, 430, 486, 487}}]}]}, {
        EdgeForm[], 
        RGBColor[0.2164544038950493, 0.6815002566839302, 0.5141661766019572], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJwtkk8rhFEUxu+9UzKLSclCWV0aM0marMhiVkpjIwsZjYgFpVhgJ1/GF7BQ
/qQozdYnIFlJmKHULGz8ns5ZPO/vufd93nvuuffNWwfL+ymEMIUKqMjjGPbD
S17s4e/gLTrE38MeOsL/wo7Pv8AdtIlfhZNoBV+DnzGEOv4DTjBu4ZvwnfE8
/g1+oSX8KPMVzyjbdL+RTPJrmidfVS04iCr4Mmy4X4DTnqlHq6Fa57CIxvED
8ArN4a/hjM/r/Zn3op4ufP830XqQbyvr66tOzfvdhiOc3Qk+w28/H51T27/V
etkzQ/CH8SL+L5rk+8iPJTuTnOwOdBfP8CnZt6/JJK+a2fPD8NT7Un+72h9+
PZrkZ2HJ96D1qsnqFuCD3+9jsv0po2w32b+hf+QfgL88jQ==
           "]], 
          PolygonBox[CompressedData["
1:eJwtkTtLA0EUhWdWETvBylbwkUIhpWJjI4g2EkHSucRCJZAUKsTG0rU1rY/G
NhLRIqiFAXvzC/wBCqKFYOt3mFN87Jl77sx97GStWWlkIYQpGIbdGEKZ7xKc
oCcwN9Ar8MH5Ei7gFAqYx9/CW4cSepXYLHoGltHTPpcUQ/fhxW/orbGYcpUz
jr6LqZbqd11DtVpwDIvuT3cW0J/OV49fMdWUV/YsI1nqTT3Ooa/hCjpwC204
d0zeA9zDIzzBjufLYR89gCN0HZ7lU6MG25BDExqOydOd3Pm9LM3Qco5yq/ZV
Q7vchAoUcAa/cIh3AD/ofpa0Yq9Z6qHu/m7Qb85XjwO/UXjGtmfueEbNWo3p
32j/a+h3v6f739pDTP9CO9auuz5rv3vo0aGUq5p/5P8DxNNDhA==
           "]], 
          
          PolygonBox[{{352, 351, 319, 40, 345}, {602, 92, 593, 594, 595}, {
           496, 495, 464, 63, 492}, {442, 63, 464, 447, 448}, {515, 75, 497, 
           495, 496}, {698, 697, 735, 115, 700}, {549, 548, 593, 92, 551}, {
           546, 80, 547, 548, 549}}]}]}, {
        EdgeForm[], 
        RGBColor[
        0.23881015517927373`, 0.6974572458698827, 0.5063426288953775], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxFkDkOwjAQRR2HM9CD2BqKhDZBVGHpiIIEBTGiYSngBlyGU7AUSPRwjwgk
xAn4o/kSxdMf27P8cWW5T3fWGFMDPsjABIzAx1P1kXAFa8RnaB86BikoWdWG
1TqpdyACidHcudHanOeE9TnvN6DN+im0h7kB4gH0ifMW8QN6ZHyxisTyvmK+
1EWcEYMZzh3oAtq0OrMOfXvqoZD9QChzueuQO9yt+rpBW/QmHkP2lr4B95S7
Az2Il4L9T9Auc2P+S8a9X97/j3P+gaM/8Vnlfo5vZavevvQbsecP12IqhQ==

           "]], 
          PolygonBox[CompressedData["
1:eJwtkjszg0EUhneX36CniEthBq0oXdKJmJFkgiEzLoVoo6BEKy1S0CYzRsy4
FTFGq/cDUrkUfoHndU7xzPfuu2fP2T3nG9yo5fdSCCED/fAbQ1jgOwM99BCb
i+hZ+GbdZt2CW+jAp8fn4At9jbeNrkAVfY83jZ6AQ/Qp3gmcQQNW8CbZm4Ii
uoC35DH/sXjHUIcDaOJd+h10l75ktZdhBL1PTA02oQrreGtQgnKyHHWPUewP
zHE2r/ezf8H63Guq9iheIdgbB9BH0e6q/tyg36Jp7asXL9D1HMr1AdlgNVRr
PFlvVtWTZEirhmr1PJ/O6GzDe6U3N/0NJe+RelX0fLr/GDqTTMtTrSdyPPqd
dLd3vF32duAV/RBttpqRZrWlfgWLuULPR5udZpSLVkP59U8Mo+/wOl5DtbrJ
cusfeNZ8k81GOZX7D7MmR/Y=
           "]], 
          
          PolygonBox[{{692, 691, 698, 104, 676}, {433, 62, 453, 436, 437}, {
           612, 93, 601, 607, 608}, {356, 355, 352, 51, 383}}]}]}, {
        EdgeForm[], 
        RGBColor[
        0.26116590646349813`, 0.7134142350558351, 0.49851908118879784`], 
        GraphicsGroupBox[{
          
          PolygonBox[{{494, 72, 473}, {473, 72, 485}, {534, 83, 553}, {558, 
           83, 550}, {516, 72, 494}, {553, 83, 561}, {485, 72, 498}, {561, 83,
            558}}], 
          PolygonBox[CompressedData["
1:eJwt0K0SglAQhuEjwzXYLV6LWTFpUAeqP1WCRLBCVQlaZXSEgkUvySvw3eEL
T2DP2eXbM1htxmvPOdeHjzkfMwSYYtdzbosQEWLsVbOzmjsvXHHDl9oHJ5xR
UrvgjgpHZMhRSK47pWbYrBARnsx42H/QKINlOSDBkjsLZbbsic6sx3p/GLHX
xHbUToEyWJZGs1u8ldmyp8gw9Lpem+F7XS3VG8TqabWz7V5pV3uTWjuEymhZ
/10fMP4=
           "]]}]}, {
        EdgeForm[], 
        RGBColor[
        0.28352165774772253`, 0.7293712242417876, 0.4906955334822181], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJwt0D0OgkAQxfF14xG8gFcykQoLSZZSI60WUoKttH4U2Eokro02ejH/E17x
a4ZhHo9ptp6tvHNugjE+I+fe+OKHjod3PBGRYI4aBz/s2O4JZ2TMlkixwA0t
AnI/7NhuhRpXZhdldHonVUaiDMs6okHPOw9EvFBgg4AcO2w1K7QT1cm6Nbpl
mZZdMtvrZq8bQbNS31jppt2O+hetuuXqZp2t+x+SVi7d
           "]]}]}, {
        EdgeForm[], 
        RGBColor[
        0.30587740903194705`, 0.7453282134277401, 0.48287198577563845`], 
        GraphicsGroupBox[{
          
          PolygonBox[{{678, 103, 694}, {694, 103, 688}, {435, 52, 385}, {614, 
           103, 678}, {358, 52, 370}, {610, 103, 614}, {439, 52, 435}, {385, 
           52, 358}}], 
          
          PolygonBox[{{416, 415, 394, 395}, {606, 605, 598, 599}, {446, 445, 
           451, 452}, {395, 394, 380, 381}, {599, 598, 651, 652}, {452, 451, 
           415, 416}, {662, 661, 673, 674}, {652, 651, 661, 662}}], 
          
          PolygonBox[{{381, 380, 370, 52, 401}, {663, 103, 610, 605, 606}, {
           674, 673, 688, 103, 663}, {401, 52, 439, 445, 446}}]}]}, {
        EdgeForm[], 
        RGBColor[
        0.32562511915346093`, 0.7594236465379969, 0.4759611398699411], 
        GraphicsGroupBox[{
          
          PolygonBox[{{599, 102, 606}, {452, 53, 446}, {446, 53, 401}, {401, 
           53, 381}, {674, 102, 662}, {381, 53, 395}, {663, 102, 674}, {662, 
           102, 652}, {606, 102, 663}, {416, 53, 452}, {652, 102, 599}, {395, 
           53, 416}}]}]}}, {{}, 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{401, 381, 395, 416, 452, 446, 401}], 
          LineBox[{652, 599, 606, 663, 674, 662, 652}]}, "1.026`"], 
        Annotation[#, 1.026, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{385, 358, 370, 380, 394, 415, 451, 445, 439, 435, 385}], 
          LineBox[{651, 598, 605, 610, 614, 678, 694, 688, 673, 661, 651}]}, 
         "0.988`"], Annotation[#, 0.988, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{384, 357, 369, 379, 393, 414, 450, 444, 438, 434, 384}], 
          LineBox[{650, 597, 604, 609, 613, 677, 693, 687, 672, 660, 650}]}, 
         "0.95`"], Annotation[#, 0.95, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{383, 356, 368, 378, 392, 413, 449, 443, 437, 433, 383}], 
          LineBox[{494, 473, 485, 498, 534, 553, 561, 558, 550, 516, 494}], 
          LineBox[{649, 596, 603, 608, 612, 676, 692, 686, 671, 659, 649}]}, 
         "0.9119999999999999`"], 
        Annotation[#, 0.9119999999999999, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{359, 320, 328, 330, 344, 345, 352, 355, 367, 377, 391, 412,
            448, 442, 436, 453, 491, 492, 496, 515, 552, 557, 600, 615, 675, 
           699, 719, 718, 707, 704, 700, 698, 691, 685, 670, 658, 648, 595, 
           602, 607, 601, 554, 551, 549, 546, 493, 490, 441, 440, 382, 359}]},
          "0.874`"], Annotation[#, 0.874, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{312, 265, 271, 274, 293, 294, 306, 319, 351, 354, 366, 376,
            390, 411, 447, 464, 495, 497, 507, 518, 556, 560, 611, 617, 695, 
           703, 733, 751, 777, 776, 759, 756, 752, 750, 735, 697, 690, 684, 
           669, 657, 647, 594, 593, 548, 547, 545, 536, 489, 487, 432, 431, 
           360, 349, 313, 312}], 
          LineBox[{781, 732, 737, 795, 801, 788, 781}]}, "0.836`"], 
        Annotation[#, 0.836, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{256, 216, 225, 227, 241, 244, 253, 264, 305, 318, 350, 353,
            365, 375, 389, 410, 462, 472, 506, 517, 555, 559, 616, 618, 701, 
           706, 743, 755, 802, 817, 847, 846, 829, 826, 820, 816, 808, 749, 
           734, 696, 689, 683, 668, 656, 646, 592, 583, 544, 535, 488, 486, 
           430, 429, 348, 347, 299, 298, 257, 256}], 
          LineBox[{780, 731, 736, 794, 800, 787, 780}]}, 
         "0.7979999999999999`"], 
        Annotation[#, 0.7979999999999999, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{208, 174, 176, 179, 197, 214, 240, 243, 252, 263, 304, 311,
            317, 327, 364, 374, 388, 409, 461, 471, 505, 514, 520, 422, 563, 
           479, 620, 522, 702, 705, 753, 758, 812, 823, 855, 866, 885, 883, 
           878, 874, 860, 825, 819, 815, 807, 748, 742, 793, 799, 786, 779, 
           730, 726, 682, 667, 655, 645, 591, 582, 543, 533, 524, 526, 482, 
           484, 425, 428, 343, 346, 297, 296, 249, 248, 209, 208}]}, "0.76`"],
         Annotation[#, 0.76, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwt0LFLQlEUB+D7CpSKhqChSQjCtoIHhYOrjQUJLQ2BS0RUELWEm87O0R68
eIjg3+AUb32CSxDS1BAIZtDSJzR8nB+Xcw6Xs9m4Ob6OQghHvJKQ0qVHnwE5
X0z4pWBol32qHHDJPS0eyRjyQ7QQQpFnOVbf5v3qEgP2mDCd50U7OeOcJg/c
ccsVF5xSIWaHMp/mP9iQS6yxzMhbzgtPdGhzSI0S66ywyrv/jUlIqXPCFtvM
3OCb7P9ufzaYKUQ=
           "]]}, "0.722`"], Annotation[#, 0.722, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{172, 167, 201, 203, 245, 238, 291, 287, 341, 426}], 
          
          LineBox[{177, 195, 198, 206, 215, 250, 261, 302, 309, 315, 325, 362,
            372, 386, 407, 459, 469, 503, 512, 337, 480}], 
          
          LineBox[{627, 574, 531, 541, 580, 589, 643, 653, 665, 680, 724, 728,
            722, 717, 772, 768, 775, 784, 797, 791, 740, 746, 805, 813, 856, 
           865, 867, 872, 894}], 
          LineBox[{712, 564, 760, 622, 822, 827, 862, 870, 891, 897}], 
          LineBox[{273, 269, 279, 159, 323, 322, 273}]}, 
         "0.6839999999999999`"], 
        Annotation[#, 0.6839999999999999, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{170, 161, 200, 194, 237, 233, 290, 340}], 
          
          LineBox[{180, 205, 207, 211, 224, 255, 260, 301, 308, 314, 324, 361,
            371, 329, 321, 272, 268, 278, 158, 332, 231, 400, 406, 458, 468, 
           502, 511, 336, 477, 284, 423}], 
          
          LineBox[{715, 632, 569, 573, 530, 540, 579, 588, 642, 637, 716, 714,
            771, 767, 774, 783, 796, 790, 739, 745, 804, 811, 853, 858, 861, 
           864, 893}], 
          LineBox[{763, 621, 830, 711, 869, 876, 896, 901}], 
          LineBox[{720, 664, 679, 723, 727, 721, 720}]}, "0.646`"], 
        Annotation[#, 0.646, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{183, 210, 212, 220, 226, 266, 267, 277, 157, 331, 338}], 
          LineBox[{769, 713, 770, 766, 773, 782, 848, 852, 854, 857, 889}], 
          LineBox[{169, 160, 199, 193, 236, 289}], 
          LineBox[{835, 710, 868, 875, 895, 900}], 
          LineBox[{259, 254, 258, 270, 307, 300, 259}], 
          LineBox[{399, 405, 457, 467, 501, 510, 335, 476, 283, 420, 399}], 
          LineBox[{529, 572, 568, 631, 626, 636, 641, 587, 578, 539, 529}], 
          LineBox[{738, 789, 809, 810, 803, 744, 738}]}, "0.608`"], 
        Annotation[#, 0.608, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{166, 156, 192, 187, 235, 288}], 
          LineBox[{286, 276, 182, 230, 223, 219, 186}], 
          LineBox[{834, 709, 879, 762, 899, 903}], 
          LineBox[{840, 765, 842, 838, 845, 851, 888}], 
          LineBox[{398, 404, 456, 466, 500, 509, 334, 475, 282, 419, 398}], 
          LineBox[{528, 571, 567, 630, 625, 635, 640, 586, 577, 538, 528}]}, 
         "0.57`"], Annotation[#, 0.57, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{234, 191, 155, 165}], 
          LineBox[{880, 761, 898, 902}], 
          LineBox[{185, 218, 222, 229, 181, 275, 285}], 
          LineBox[{839, 764, 841, 837, 844, 850, 887}], 
          LineBox[{397, 403, 455, 465, 499, 508, 333, 474, 281, 418, 397}], 
          LineBox[{570, 527, 537, 576, 585, 639, 634, 624, 629, 566, 570}]}, 
         "0.532`"], Annotation[#, 0.532, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{164, 190}], 
          LineBox[{184, 217, 221, 228, 232}], 
          LineBox[{833, 906}], 
          LineBox[{881, 836, 843, 849, 886}], 
          LineBox[{402, 396, 417, 280, 463, 454, 402}], 
          LineBox[{628, 575, 584, 638, 633, 623, 628}]}, "0.494`"], 
        Annotation[#, 0.494, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{163, 189}], 
          LineBox[{832, 905}]}, "0.45599999999999996`"], 
        Annotation[#, 0.45599999999999996`, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{188, 162}], 
          LineBox[{904, 831}]}, "0.418`"], 
        Annotation[#, 0.418, 
         "Tooltip"]& ], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {{
        FormBox["\"\[Beta]\"", TraditionalForm], None}, {
        FormBox["\"\[Alpha]\"", TraditionalForm], None}}, FrameStyle -> 
     GrayLevel[0], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "GridLinesInFront" -> True}, 
     PlotRange -> {{-1.5707963267948966`, 
      1.5707963267948966`}, {-1.5707963267948966`, 1.5707963267948966`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), SubscriptBox[\\(B\\), \
\\(eff\\)]]\\)\"", {FontFamily -> "Arial"}, Background -> Automatic, 
                StripOnInput -> False]}, {
               GraphicsBox[{{}, {}, 
                 RasterBox[CompressedData["
1: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
4/zp2Yn/AW9Ed4w=
                  "], {{
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}}], {Antialiasing -> False, 
                  AbsoluteThickness[0.1], 
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]], 
                  LineBox[
                   NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                    7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                    112.5}, {7.5, -112.5}}]]}, {
                  CapForm[None], {}}, {Antialiasing -> False, 
                  StyleBox[
                   LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{
                    7.5, -40.84394904458598}, 
                    Offset[{4., 0}, {7.5, -40.84394904458598}]}, {{7.5, 
                    30.812101910828023`}, 
                    Offset[{4., 0}, {7.5, 30.812101910828023`}]}, {{7.5, 
                    102.46815286624204`}, 
                    Offset[{4., 0}, {7.5, 102.46815286624204`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -98.1687898089172}, 
                    Offset[{2.5, 0.}, {7.5, -98.1687898089172}]}, {{
                    7.5, -83.8375796178344}, 
                    Offset[{2.5, 0.}, {7.5, -83.8375796178344}]}, {{
                    7.5, -69.50636942675159}, 
                    Offset[{2.5, 0.}, {7.5, -69.50636942675159}]}, {{
                    7.5, -55.17515923566879}, 
                    Offset[{2.5, 0.}, {7.5, -55.17515923566879}]}, {{
                    7.5, -26.512738853503183`}, 
                    Offset[{2.5, 0.}, {7.5, -26.512738853503183`}]}, {{
                    7.5, -12.181528662420382`}, 
                    Offset[{2.5, 0.}, {7.5, -12.181528662420382`}]}, {{7.5, 
                    2.1496815286624202`}, 
                    Offset[{2.5, 0.}, {7.5, 2.1496815286624202`}]}, {{7.5, 
                    16.480891719745223`}, 
                    Offset[{2.5, 0.}, {7.5, 16.480891719745223`}]}, {{7.5, 
                    45.143312101910844`}, 
                    Offset[{2.5, 0.}, {7.5, 45.143312101910844`}]}, {{7.5, 
                    59.474522292993626`}, 
                    Offset[{2.5, 0.}, {7.5, 59.474522292993626`}]}, {{7.5, 
                    73.80573248407643}, 
                    Offset[{2.5, 0.}, {7.5, 73.80573248407643}]}, {{7.5, 
                    88.13694267515923}, 
                    Offset[{2.5, 0.}, {7.5, 88.13694267515923}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.5\"", 0.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -40.84394904458598}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 30.812101910828023`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.5\"", 1.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 102.46815286624204`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                Scaled[0.02], PlotRange -> All, Frame -> True, 
                FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                Opacity[0], FrameTicksStyle -> Opacity[0], 
                ImageSize -> {Automatic, 225}, BaseStyle -> {}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.122103, 0.00901808, 0.39826], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.081402, 0.006012053333333333, 
                    0.26550666666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.122103, 0.00901808, 0.39826]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.122103, 0.00901808, 0.39826]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.122103, 0.00901808, 0.39826], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2617993877991494`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.0839935, 0.279645, 0.510102], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.055995666666666666`, 0.18642999999999998`, 
                    0.34006800000000004`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.0839935, 0.279645, 0.510102]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.0839935, 0.279645, 0.510102]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.0839935, 0.279645, 0.510102], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5235987755982988`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.097699, 0.498132, 0.548165], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.06513266666666667, 0.33208800000000005`, 
                    0.36544333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.097699, 0.498132, 0.548165]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.097699, 0.498132, 0.548165]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.097699, 0.498132, 0.548165], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7853981633974483`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.175507, 0.652273, 0.528496], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.11700466666666667`, 0.43484866666666666`, 
                    0.3523306666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.175507, 0.652273, 0.528496]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.175507, 0.652273, 0.528496]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.175507, 0.652273, 0.528496], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.0471975511965976`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.329526, 0.762208, 0.474596], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.219684, 0.5081386666666667, 
                    0.31639733333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.329526, 0.762208, 0.474596]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.329526, 0.762208, 0.474596]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.329526, 0.762208, 0.474596], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.308996938995747`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571909, 0.839991, 0.408102], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3812726666666667, 0.5599940000000001, 
                    0.27206800000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571909, 0.839991, 0.408102]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571909, 0.839991, 0.408102]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571909, 0.839991, 0.408102], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.5707963267948966`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.914809, 0.897673, 0.350652], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6098726666666667, 0.5984486666666667, 
                    0.23376800000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.914809, 0.897673, 0.350652]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.914809, 0.897673, 0.350652]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.914809, 0.897673, 0.350652], Editable -> False,
                     Selectable -> False]}], "}"}]}], "}"}], ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0", ",", 
                   FractionBox["\[Pi]", "2"]}], "}"}]}], "}"}], ",", "None", 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           
           RowBox[{"LegendLabel", "\[Rule]", 
             "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), SubscriptBox[\\(B\\), \
\\(eff\\)]]\\)\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7651192347586184`*^9, 3.765119324812623*^9, 3.765119363875529*^9, 
   3.765119449258066*^9, 3.7651195718143206`*^9, 3.7651196490150394`*^9, 
   3.7651197135874968`*^9, 3.765119748135951*^9, {3.76511992474761*^9, 
   3.765120090551189*^9}, {3.765120144882622*^9, 3.7651201745075836`*^9}, 
   3.765120280550187*^9, 3.7651203210702386`*^9, 3.765120366726804*^9, 
   3.765120405247656*^9, 3.765120458447975*^9, 3.7651205167188015`*^9, {
   3.765120589841113*^9, 3.765120606462775*^9}, 3.7651206532664547`*^9, {
   3.7651207045995874`*^9, 3.765120783882515*^9}, 3.7651208151836452`*^9, 
   3.765120847656892*^9, 3.7651209358877144`*^9, 
   3.7651210236984944`*^9},ExpressionUUID->"def44b71-e2e2-41a2-a47c-\
b04df939c196"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToSphericalCoordinates", "[", 
  RowBox[{"{", 
   RowBox[{"0", ",", 
    RowBox[{"-", "1"}], ",", "0"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7651176396495633`*^9, 3.7651176468825636`*^9}, {
  3.7651177693395634`*^9, 
  3.7651178120415635`*^9}},ExpressionUUID->"7a4ab72f-fe0b-4722-b067-\
3a5eed1d15c2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   FractionBox["\[Pi]", "2"], ",", 
   RowBox[{"-", 
    FractionBox["\[Pi]", "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7651176471085634`*^9, {3.7651177763335633`*^9, 
   3.765117812494563*^9}},ExpressionUUID->"ece87367-fa91-498f-bb43-\
5ce76f3d531e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ToSphericalCoordinates", "[", 
   RowBox[{"ecrosss", "[", 
    RowBox[{
     RowBox[{"x", " ", "/.", " ", 
      RowBox[{"mi", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{"y", "/.", " ", 
      RowBox[{"mi", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{"zf", "/.", " ", 
      RowBox[{"mi", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b"}], "]"}], "]"}], 
  "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7651176840975637`*^9, 3.7651176890875635`*^9}, {
  3.7651178379605637`*^9, 
  3.765117840407563*^9}},ExpressionUUID->"4ad7edec-a092-413a-9e91-\
5ef6aa09bb04"],

Cell[BoxData["1.3493324140150624`"], "Output",
 CellChangeTimes->{{3.7651176779895635`*^9, 3.7651176895495634`*^9}, 
   3.765117840711563*^9},ExpressionUUID->"a6297804-3604-4b9c-b976-\
4c835d34e336"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"r", "=", "0.1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"ListContourPlot", "[", " ", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"udsmintest", " ", "=", " ", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "zf"}], "}"}], ",", " ", 
                    RowBox[{
                    RowBox[{"UDsim", "[", 
                    RowBox[{"x", ",", "y", ",", "zf", ",", "a", ",", "b"}], 
                    "]"}], "/", "Er"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"1", "*", " ", "1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", " ", 
                    RowBox[{"\[Lambda]", "/", "10"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"y", ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"\[Lambda]", "/", "13"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"zf", ",", 
                    RowBox[{
                    RowBox[{"-", " ", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"\[Lambda]", "/", "10"}]}], "}"}]}], "]"}], ",", 
                 "2"}], "]"}]}], ";", "\n", 
              RowBox[{"res", " ", "=", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Pick", "[", 
                    RowBox[{"#1", ",", "#2", ",", 
                    RowBox[{"Min", "[", "#2", "]"}]}], "]"}], "&"}], "@@", 
                  RowBox[{"Transpose", "[", "udsmintest", "]"}]}], ")"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"mi", " ", "=", " ", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"x", "\[Rule]", " ", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
                   RowBox[{"y", " ", "\[Rule]", " ", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
                   RowBox[{"zf", " ", "\[Rule]", " ", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "}"}]}], ";",
               " ", 
              RowBox[{"{", 
               RowBox[{"a", ",", "b", " ", ",", " ", 
                RowBox[{
                 RowBox[{"ToSphericalCoordinates", "[", 
                  RowBox[{"ecrosss", "[", 
                   RowBox[{
                    RowBox[{"x", " ", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{"y", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{"zf", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b"}], 
                   "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"a", ",", " ", 
               RowBox[{
                RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
               RowBox[{"Pi", "/", "2"}], ",", " ", 
               RowBox[{"Pi", "/", "10"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"b", ",", " ", 
               RowBox[{
                RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
               RowBox[{"Pi", "/", "2"}], ",", " ", 
               RowBox[{"Pi", "/", "10"}]}], "}"}]}], "]"}], ",", "1"}], "]"}],
          ",", " ", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"BarLegend", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Automatic", ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"1.2", 
                 RowBox[{"Pi", "/", "2"}]}]}], "}"}]}], "}"}], ",", "None", 
            ",", " ", 
            RowBox[{
            "LegendLabel", "\[Rule]", " ", 
             "\"\<\!\(\*SubscriptBox[\(\[Theta]\), SubscriptBox[\(B\), \
\(eff\)]]\)\>\""}]}], "]"}]}], ",", " ", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<\[Alpha]\>\"", ",", "\"\<\[Beta]\>\""}], "}"}]}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", " ", 
         RowBox[{"FrameStyle", " ", "\[Rule]", " ", "Black"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "2"}], ",", 
         RowBox[{"ColorFunction", "\[Rule]", " ", 
          RowBox[{"ColorData", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<BlueGreenYellow\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", 
               RowBox[{"1.2", 
                RowBox[{"Pi", "/", "2"}]}]}], "}"}]}], "}"}], "]"}]}], ",", 
         " ", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", " ", 
           RowBox[{"All", ",", " ", "All", ",", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"1.2", 
               RowBox[{"Pi", "/", "2"}]}]}], "}"}]}], "}"}]}], ",", " ", 
         RowBox[{"Contours", " ", "\[Rule]", "30"}], ",", " ", 
         RowBox[{"InterpolationOrder", "\[Rule]", "5"}]}], "]"}]}], 
      "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"r", "=", "0.4"}], ";", "\[IndentingNewLine]", 
       RowBox[{"ListContourPlot", "[", " ", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"udsmintest", " ", "=", " ", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "zf"}], "}"}], ",", " ", 
                    RowBox[{
                    RowBox[{"UDsim", "[", 
                    RowBox[{"x", ",", "y", ",", "zf", ",", "a", ",", "b"}], 
                    "]"}], "/", "Er"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"1", "*", " ", "1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", " ", 
                    RowBox[{"\[Lambda]", "/", "10"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"y", ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"\[Lambda]", "/", "13"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"zf", ",", 
                    RowBox[{
                    RowBox[{"-", " ", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"\[Lambda]", "/", "10"}]}], "}"}]}], "]"}], ",", 
                 "2"}], "]"}]}], ";", "\n", 
              RowBox[{"res", " ", "=", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Pick", "[", 
                    RowBox[{"#1", ",", "#2", ",", 
                    RowBox[{"Min", "[", "#2", "]"}]}], "]"}], "&"}], "@@", 
                  RowBox[{"Transpose", "[", "udsmintest", "]"}]}], ")"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"mi", " ", "=", " ", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"x", "\[Rule]", " ", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
                   RowBox[{"y", " ", "\[Rule]", " ", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
                   RowBox[{"zf", " ", "\[Rule]", " ", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "}"}]}], ";",
               " ", 
              RowBox[{"{", 
               RowBox[{"a", ",", "b", " ", ",", " ", 
                RowBox[{
                 RowBox[{"ToSphericalCoordinates", "[", 
                  RowBox[{"ecrosss", "[", 
                   RowBox[{
                    RowBox[{"x", " ", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{"y", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{"zf", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b"}], 
                   "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"a", ",", " ", 
               RowBox[{
                RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
               RowBox[{"Pi", "/", "2"}], ",", " ", 
               RowBox[{"Pi", "/", "10"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"b", ",", " ", 
               RowBox[{
                RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
               RowBox[{"Pi", "/", "2"}], ",", " ", 
               RowBox[{"Pi", "/", "10"}]}], "}"}]}], "]"}], ",", "1"}], "]"}],
          ",", " ", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"BarLegend", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Automatic", ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"1.2", 
                 RowBox[{"Pi", "/", "2"}]}]}], "}"}]}], "}"}], ",", "None", 
            ",", " ", 
            RowBox[{
            "LegendLabel", "\[Rule]", " ", 
             "\"\<\!\(\*SubscriptBox[\(\[Theta]\), SubscriptBox[\(B\), \
\(eff\)]]\)\>\""}]}], "]"}]}], ",", " ", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<\[Alpha]\>\"", ",", "\"\<\[Beta]\>\""}], "}"}]}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", " ", 
         RowBox[{"FrameStyle", " ", "\[Rule]", " ", "Black"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "2"}], ",", 
         RowBox[{"ColorFunction", "\[Rule]", " ", 
          RowBox[{"ColorData", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<BlueGreenYellow\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", 
               RowBox[{"1.2", 
                RowBox[{"Pi", "/", "2"}]}]}], "}"}]}], "}"}], "]"}]}], ",", 
         " ", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", " ", 
           RowBox[{"All", ",", " ", "All", ",", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"1.2", 
               RowBox[{"Pi", "/", "2"}]}]}], "}"}]}], "}"}]}], ",", " ", 
         RowBox[{"Contours", " ", "\[Rule]", "30"}], ",", " ", 
         RowBox[{"InterpolationOrder", "\[Rule]", "5"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"r", "=", "0.8"}], ";", "\[IndentingNewLine]", 
       RowBox[{"ListContourPlot", "[", " ", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"udsmintest", " ", "=", " ", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "zf"}], "}"}], ",", " ", 
                    RowBox[{
                    RowBox[{"UDsim", "[", 
                    RowBox[{"x", ",", "y", ",", "zf", ",", "a", ",", "b"}], 
                    "]"}], "/", "Er"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"1", "*", " ", "1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", " ", 
                    RowBox[{"\[Lambda]", "/", "10"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"y", ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"\[Lambda]", "/", "13"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"zf", ",", 
                    RowBox[{
                    RowBox[{"-", " ", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"\[Lambda]", "/", "10"}]}], "}"}]}], "]"}], ",", 
                 "2"}], "]"}]}], ";", "\n", 
              RowBox[{"res", " ", "=", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Pick", "[", 
                    RowBox[{"#1", ",", "#2", ",", 
                    RowBox[{"Min", "[", "#2", "]"}]}], "]"}], "&"}], "@@", 
                  RowBox[{"Transpose", "[", "udsmintest", "]"}]}], ")"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"mi", " ", "=", " ", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"x", "\[Rule]", " ", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
                   RowBox[{"y", " ", "\[Rule]", " ", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
                   RowBox[{"zf", " ", "\[Rule]", " ", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "}"}]}], ";",
               " ", 
              RowBox[{"{", 
               RowBox[{"a", ",", "b", " ", ",", " ", 
                RowBox[{
                 RowBox[{"ToSphericalCoordinates", "[", 
                  RowBox[{"ecrosss", "[", 
                   RowBox[{
                    RowBox[{"x", " ", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{"y", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{"zf", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b"}], 
                   "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"a", ",", " ", 
               RowBox[{
                RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
               RowBox[{"Pi", "/", "2"}], ",", " ", 
               RowBox[{"Pi", "/", "10"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"b", ",", " ", 
               RowBox[{
                RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
               RowBox[{"Pi", "/", "2"}], ",", " ", 
               RowBox[{"Pi", "/", "10"}]}], "}"}]}], "]"}], ",", "1"}], "]"}],
          ",", " ", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"BarLegend", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Automatic", ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"1.2", 
                 RowBox[{"Pi", "/", "2"}]}]}], "}"}]}], "}"}], ",", "None", 
            ",", " ", 
            RowBox[{
            "LegendLabel", "\[Rule]", " ", 
             "\"\<\!\(\*SubscriptBox[\(\[Theta]\), SubscriptBox[\(B\), \
\(eff\)]]\)\>\""}]}], "]"}]}], ",", " ", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<\[Alpha]\>\"", ",", "\"\<\[Beta]\>\""}], "}"}]}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", " ", 
         RowBox[{"FrameStyle", " ", "\[Rule]", " ", "Black"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "2"}], ",", 
         RowBox[{"ColorFunction", "\[Rule]", " ", 
          RowBox[{"ColorData", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<BlueGreenYellow\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", 
               RowBox[{"1.2", 
                RowBox[{"Pi", "/", "2"}]}]}], "}"}]}], "}"}], "]"}]}], ",", 
         " ", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", " ", 
           RowBox[{"All", ",", " ", "All", ",", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"1.2", 
               RowBox[{"Pi", "/", "2"}]}]}], "}"}]}], "}"}]}], ",", " ", 
         RowBox[{"Contours", " ", "\[Rule]", "30"}], ",", " ", 
         RowBox[{"InterpolationOrder", "\[Rule]", "5"}]}], "]"}]}], 
      "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"r", "=", "1.2"}], ";", "\[IndentingNewLine]", 
       RowBox[{"ListContourPlot", "[", " ", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"udsmintest", " ", "=", " ", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "zf"}], "}"}], ",", " ", 
                    RowBox[{
                    RowBox[{"UDsim", "[", 
                    RowBox[{"x", ",", "y", ",", "zf", ",", "a", ",", "b"}], 
                    "]"}], "/", "Er"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"1", "*", " ", "1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", " ", 
                    RowBox[{"\[Lambda]", "/", "10"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"y", ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"\[Lambda]", "/", "10"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"zf", ",", 
                    RowBox[{
                    RowBox[{"-", " ", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"\[Lambda]", "/", "10"}]}], "}"}]}], "]"}], ",", 
                 "2"}], "]"}]}], ";", "\n", 
              RowBox[{"res", " ", "=", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Pick", "[", 
                    RowBox[{"#1", ",", "#2", ",", 
                    RowBox[{"Min", "[", "#2", "]"}]}], "]"}], "&"}], "@@", 
                  RowBox[{"Transpose", "[", "udsmintest", "]"}]}], ")"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"mi", " ", "=", " ", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"x", "\[Rule]", " ", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
                   RowBox[{"y", " ", "\[Rule]", " ", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
                   RowBox[{"zf", " ", "\[Rule]", " ", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "}"}]}], ";",
               " ", 
              RowBox[{"{", 
               RowBox[{"a", ",", "b", " ", ",", " ", 
                RowBox[{
                 RowBox[{"ToSphericalCoordinates", "[", 
                  RowBox[{"ecrosss", "[", 
                   RowBox[{
                    RowBox[{"x", " ", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{"y", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{"zf", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b"}], 
                   "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"a", ",", " ", 
               RowBox[{
                RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
               RowBox[{"Pi", "/", "2"}], ",", " ", 
               RowBox[{"Pi", "/", "10"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"b", ",", " ", 
               RowBox[{
                RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
               RowBox[{"Pi", "/", "2"}], ",", " ", 
               RowBox[{"Pi", "/", "10"}]}], "}"}]}], "]"}], ",", "1"}], "]"}],
          ",", " ", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"BarLegend", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Automatic", ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"1.2", 
                 RowBox[{"Pi", "/", "2"}]}]}], "}"}]}], "}"}], ",", "None", 
            ",", " ", 
            RowBox[{
            "LegendLabel", "\[Rule]", " ", 
             "\"\<\!\(\*SubscriptBox[\(\[Theta]\), SubscriptBox[\(B\), \
\(eff\)]]\)\>\""}]}], "]"}]}], ",", " ", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<\[Alpha]\>\"", ",", "\"\<\[Beta]\>\""}], "}"}]}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", " ", 
         RowBox[{"FrameStyle", " ", "\[Rule]", " ", "Black"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "2"}], ",", 
         RowBox[{"ColorFunction", "\[Rule]", " ", 
          RowBox[{"ColorData", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<BlueGreenYellow\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", 
               RowBox[{"1.2", 
                RowBox[{"Pi", "/", "2"}]}]}], "}"}]}], "}"}], "]"}]}], ",", 
         " ", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", " ", 
           RowBox[{"All", ",", " ", "All", ",", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"1.2", 
               RowBox[{"Pi", "/", "2"}]}]}], "}"}]}], "}"}]}], ",", " ", 
         RowBox[{"Contours", " ", "\[Rule]", "30"}], ",", " ", 
         RowBox[{"InterpolationOrder", "\[Rule]", "5"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7651179470855637`*^9, 3.7651179998945637`*^9}, {
   3.7651180361314526`*^9, 3.765118074252695*^9}, 3.7651181993026953`*^9, {
   3.7651184957879066`*^9, 3.765118513739496*^9}, {3.7651193832764683`*^9, 
   3.7651194194540863`*^9}, {3.7651210210842333`*^9, 
   3.7651210744845724`*^9}, {3.7651211758167048`*^9, 3.765121214282551*^9}, {
   3.7651213446735888`*^9, 
   3.7651213651166325`*^9}},ExpressionUUID->"4d2b0269-a9e0-45ed-8f29-\
0bc7723d378f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[
        GraphicsComplexBox[CompressedData["
1:eJyFVX9MVWUYvpYjyixWLkCKxbrNH4QNVBpr8P4RkSlMpmipwFoTDdRZSqLZ
WmMWRT8EUlsIOprStCg2GxViH0wLV0JlhwUKiXCUX2r3wr2HS1L0g/e8Zzzn
Mu529+653/m+7znP+z7PjXh+64qsWxwOR9O/3/9qSFRi2s2IEYW101W249Ew
j+DU7IHoxrk3YF0HrAl28AfWCfYTnA/rHgJehLxMjNXkO/F3HbAm2OQL6wT7
Cc6HdQ/yI9QNeZkYq8l3ItYEm3xhnWA/wbmw7kF+5L+vqBvy0iepmuCJ+uqg
rw766qCvDvrqwFezzSH2GXX0z9OqE/lqwFcDvhrw1YCv8CP0Bc4d9hV1Q16O
ST4mX9gv2OQL9yM/kz+hj9EnOIf++2zpiDz9V9GXQF8CfQnm15Yz6GP0if85
tPqMOvrnaVWYX+Ar/AhzD3MFfYu+wLnDvqJuyAvOh3UP8pPfMacxBzFn/PvY
8gnOof8+6zZecD/ywzrZ/8hUOTiVj6eaw6l0lJqbEX9lNg3b/n9Lb/7Y0Dlz
UPDg7CjP9mZlzc3b9ecHXJZPh2ekDCUeHxbcPnZ7SV+AV97bvEcr3vh46yWv
Srr7ePK7S+to9bbI94Ke8an03Zt617zRRa/tjVx45JxXfFDb7Ii/ZvgElzYf
W99T7VVpn9WsOJzUQ/qHEW+t+sSnehIqP9q98DqN/rZ3Z8yYYZvrdW13JkxP
bRD8ftaGjILyS3SlMvNIyAxDVeV89X3ydDdlb3fUPLjWK3Oy9v49txXP8dnm
7pHsZN8T0b2CP31517m8JYOCA65Hbc4KGaHA1b+enDfH6nsR6DqrNbF0wV1u
9V3s4KzqMkXnf6/YkHKfW3Irzrf4p/5tLjVt5wPd8a1Xqbbqh8LYOpe8X3Bm
ScO1II9aXhp3+OvgEcqrG9iTPDYk991wfZEbu6lf9DtTNLMg7nSf4krOsTWV
rZH9Np87l80PrVjfQftCGo+llfep/LOFMTta3PTUkkVdG9/sFz0ONYbXn6A+
Re0ZB1+qMizfNb1SXdtu0DvN6YkFgR2KK/G5wufFv9Yt3lzUrubmjbY0reql
3P2jxU87O4RP+JedtwavvKjyjia9mtHlom8+T0ndcuiC3M9YdOfniZ9XfJ74
je8jvk8xf2L+Vh6P81f8vnI+60GshzxfVhnwy0P1VxXrKfftGu+3+I37Rdwv
9dzlgLMVoW4533ngdElCi4u4Ku63nMfzQDwP6rF7vl2W84dBXBX335aXca+f
DO0It/CfufuiL8cY6tmHfz71ZLoh97MfiP0gz/O8K/aX8GE/EvtRsR+J/ajY
zzIX7GfBbbHTPr4330tnAhc462vaVPrfrjvmDfnohQ+M7sJT3apwS05YfJG5
XzPzgzg/hF/meL6YfrPlL+eTYM4nK4/H80xwUNj/eafMczE/87mv/wBnK4eh

         "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {
            EdgeForm[], 
            RGBColor[
            0.4950117390863008, 0.8153139407769924, 0.42919756556027244`], 
            GraphicsGroupBox[{
              PolygonBox[{{184, 100, 199}, {151, 22, 150}, {128, 12, 145}, {
               143, 22, 144}, {198, 110, 176}, {150, 22, 143}, {110, 120, 
               121}, {205, 120, 204}, {183, 100, 177}, {177, 100, 184}, {123, 
               2, 122}, {12, 2, 1}}], 
              PolygonBox[{{204, 120, 110, 198}, {122, 2, 12, 128}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.5404334486861518, 0.829890197518617, 0.41673682714985383`], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwNw0tv0gAAAGAisBu0hCwrBbZJactB+uLZFvrgDS0mlJYSR0vbHXhnl8ES
T5plicboWY0efCR60JPGk1mMMWYHf5T7ku+ud6Z5d3w+38vb/tsLe/448gRK
IXtgBDpIIenYXhAkyiyExAgyDQYBfyiciMRhIPY0ehmCwlAsDAQD/nAgDAQy
STyBJxEifbx/1Kjf//Lga1fo/N38i2MJjMbXF5s4jFY7AgqnMYqmUPIwmUGy
BImmExiOpLJpOJY8jILxCIZSL/af0RQv5KpMNceW68XSPZqvtPhmk+fyOQFn
Mmy90e5UeYqrlWRBzOM0Q2TLLEfmMgzBkrv1im1wYiEfR7G3x29AAL6KPr+M
XoUOIBCOx4Bwv6bKRakgFUtFudJqF0Sp0eQ+FD5W2lW6wlT4FlOpPgo9XO8u
OIpUZeX10av2QOtJotRTRKErKbIyUg192m4NRq6pGKOpY3R74rv8e2e6nAxO
dKOnDSaG0tMmVq+rm+qoM+y2tc717Ke9mJrjvt4dWnN72NG+n3xzV+vlyvFO
xyvX+TW7/tz8tDhfbpfnP85uNGtoTWar5Xa7W/2Z/67J6nK6mOr2yHE90z31
NkNbH5ueu/Y23tqazZ2RYQ+tvmr+B9zufuw=
               "]], 
              
              PolygonBox[{{170, 89, 90, 172}, {169, 70, 69, 168}, {162, 52, 
               53, 163}, {155, 40, 51, 160}, {181, 92, 91, 180}, {144, 11, 21,
                143}, {150, 32, 33, 151}, {146, 28, 29, 147}, {153, 31, 30, 
               152}, {188, 103, 92, 181}, {177, 90, 89, 183}, {175, 91, 81, 
               174}, {139, 21, 11, 126}, {173, 90, 91, 175}, {143, 21, 32, 
               150}, {149, 31, 21, 142}, {136, 17, 28, 146}, {124, 6, 17, 
               129}, {204, 109, 119, 205}, {145, 23, 13, 128}, {159, 44, 33, 
               158}, {148, 30, 31, 149}, {179, 91, 90, 178}, {176, 99, 109, 
               198}, {147, 29, 19, 137}, {156, 32, 31, 154}, {158, 33, 32, 
               157}, {160, 51, 52, 161}, {165, 54, 44, 159}, {164, 53, 54, 
               165}, {141, 19, 30, 148}, {152, 30, 40, 155}, {166, 68, 78, 
               171}, {167, 69, 68, 166}, {203, 116, 105, 197}, {171, 78, 89, 
               170}, {197, 105, 104, 196}, {122, 13, 3, 123}, {174, 81, 70, 
               169}, {194, 104, 103, 192}}], 
              
              PolygonBox[{{185, 184, 199, 111, 182}, {178, 90, 177, 184, 
               185}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.5928695135615069, 0.8435169385921693, 0.40459024291598555`], 
            GraphicsGroupBox[{
              
              PolygonBox[{{148, 20, 141}, {161, 41, 160}, {196, 115, 197}, {
               197, 115, 203}, {135, 20, 138}, {137, 18, 147}, {157, 43, 
               158}, {165, 43, 164}, {159, 43, 165}, {171, 79, 166}, {189, 
               102, 187}, {181, 102, 188}, {146, 18, 136}, {158, 43, 159}, {
               149, 20, 148}, {152, 41, 153}, {147, 18, 146}, {174, 80, 
               175}, {154, 42, 156}, {178, 101, 179}, {155, 41, 152}, {175, 
               80, 173}, {142, 20, 149}, {185, 101, 178}, {169, 80, 174}, {
               160, 41, 155}, {182, 101, 185}, {166, 79, 167}, {129, 7, 
               124}, {180, 102, 181}, {170, 79, 171}, {172, 79, 170}, {168, 
               80, 169}, {163, 42, 162}}], 
              
              PolygonBox[{{136, 18, 7, 129}, {164, 43, 42, 163}, {140, 139, 
               126, 127}, {132, 131, 133, 134}, {195, 194, 192, 193}, {167, 
               79, 80, 168}, {179, 101, 102, 180}, {125, 7, 18, 130}, {193, 
               192, 190, 191}, {173, 80, 79, 172}, {162, 42, 41, 161}, {153, 
               41, 42, 154}, {156, 42, 43, 157}, {187, 102, 101, 186}}], 
              
              PolygonBox[{{130, 18, 137, 131, 132}, {186, 101, 182, 200, 
               201}, {202, 115, 196, 194, 195}, {138, 20, 142, 139, 140}, {
               134, 133, 141, 20, 135}, {191, 190, 188, 102, 189}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.6484723964686638, 0.8528703521000451, 0.39527444932305417`], 
            GraphicsGroupBox[{
              
              PolygonBox[{{127, 10, 140}, {140, 10, 138}, {135, 9, 134}, {130,
                8, 125}, {201, 112, 186}, {186, 112, 187}, {189, 113, 191}, {
               193, 114, 195}, {195, 114, 202}, {132, 8, 130}}], 
              
              PolygonBox[{{191, 113, 114, 193}, {187, 112, 113, 189}, {138, 
               10, 9, 135}, {134, 9, 8, 132}}]}]}}, {{}, 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{125, 130, 132, 134, 135, 138, 140, 127}], 
              LineBox[{202, 195, 193, 191, 189, 187, 186, 201}]}, 
             "1.6199999999999999`"], 
            Annotation[#, 1.6199999999999999`, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{124, 129, 136, 146, 147, 137, 131, 133, 141, 148, 149, 
               142, 139, 126}], 
              
              LineBox[{200, 182, 185, 178, 179, 180, 181, 188, 190, 192, 194, 
               196, 197, 203}], 
              
              LineBox[{159, 158, 157, 156, 154, 153, 152, 155, 160, 161, 162, 
               163, 164, 165, 159}], 
              
              LineBox[{171, 166, 167, 168, 169, 174, 175, 173, 172, 170, 
               171}]}, "1.56`"], Annotation[#, 1.56, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{123, 122, 128, 145}], 
              LineBox[{144, 143, 150, 151}], 
              LineBox[{176, 198, 204, 205}], 
              LineBox[{183, 177, 184, 199}]}, "1.5`"], 
            Annotation[#, 1.5, 
             "Tooltip"]& ], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}], {
        DisplayFunction -> Identity, AspectRatio -> 1, 
         AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, 
         Frame -> True, FrameLabel -> {{
            FormBox["\"\[Beta]\"", TraditionalForm], None}, {
            FormBox["\"\[Alpha]\"", TraditionalForm], None}}, FrameStyle -> 
         GrayLevel[0], 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "GridLinesInFront" -> True}, 
         PlotRange -> {{-1.5707963267948966`, 
          1.5707963267948966`}, {-1.5707963267948966`, 1.5707963267948966`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   StyleBox[
                   "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), SubscriptBox[\\(B\
\\), \\(eff\\)]]\\)\"", {FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False]}, {
                   GraphicsBox[{{}, {}, 
                    RasterBox[CompressedData["
1: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
EP4HhqN6gg==
                    "], {{
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}}], {Antialiasing -> False, 
                    AbsoluteThickness[0.1], 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]], 
                    LineBox[
                    NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                    7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                    112.5}, {7.5, -112.5}}]]}, {
                    CapForm[None], {}}, {Antialiasing -> False, 
                    StyleBox[
                    LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{
                    7.5, -52.659574468085104`}, 
                    Offset[{4., 0}, {7.5, -52.659574468085104`}]}, {{7.5, 
                    7.180851063829787}, 
                    Offset[{4., 0}, {7.5, 7.180851063829787}]}, {{7.5, 
                    67.02127659574468}, 
                    Offset[{4., 0}, {7.5, 67.02127659574468}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -100.53191489361701`}, 
                    Offset[{2.5, 0.}, {7.5, -100.53191489361701`}]}, {{
                    7.5, -88.56382978723404}, 
                    Offset[{2.5, 0.}, {7.5, -88.56382978723404}]}, {{
                    7.5, -76.59574468085106}, 
                    Offset[{2.5, 0.}, {7.5, -76.59574468085106}]}, {{
                    7.5, -64.62765957446808}, 
                    Offset[{2.5, 0.}, {7.5, -64.62765957446808}]}, {{
                    7.5, -40.691489361702125`}, 
                    Offset[{2.5, 0.}, {7.5, -40.691489361702125`}]}, {{
                    7.5, -28.72340425531915}, 
                    Offset[{2.5, 0.}, {7.5, -28.72340425531915}]}, {{
                    7.5, -16.75531914893617}, 
                    Offset[{2.5, 0.}, {7.5, -16.75531914893617}]}, {{
                    7.5, -4.787234042553191}, 
                    Offset[{2.5, 0.}, {7.5, -4.787234042553191}]}, {{7.5, 
                    19.14893617021278}, 
                    Offset[{2.5, 0.}, {7.5, 19.14893617021278}]}, {{7.5, 
                    31.117021276595743`}, 
                    Offset[{2.5, 0.}, {7.5, 31.117021276595743`}]}, {{7.5, 
                    43.08510638297872}, 
                    Offset[{2.5, 0.}, {7.5, 43.08510638297872}]}, {{7.5, 
                    55.0531914893617}, 
                    Offset[{2.5, 0.}, {7.5, 55.0531914893617}]}, {{7.5, 
                    78.98936170212765}, 
                    Offset[{2.5, 0.}, {7.5, 78.98936170212765}]}, {{7.5, 
                    90.95744680851064}, 
                    Offset[{2.5, 0.}, {7.5, 90.95744680851064}]}, {{7.5, 
                    102.92553191489361`}, 
                    Offset[{2.5, 0.}, {7.5, 102.92553191489361`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.5\"", 0.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -52.659574468085104`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 7.180851063829787}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.5\"", 1.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 67.02127659574468}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                    Scaled[0.02], PlotRange -> All, Frame -> True, 
                    FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                    Opacity[0], FrameTicksStyle -> Opacity[0], 
                    ImageSize -> {Automatic, 225}, BaseStyle -> {}]}}, 
                 GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ),
           InterpretationFunction :> (RowBox[{"BarLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.122103, 0.00901808, 0.39826], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.081402, 0.006012053333333333, 
                    0.26550666666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.122103, 0.00901808, 0.39826]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.122103, 0.00901808, 0.39826]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.122103, 0.00901808, 0.39826], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3141592653589793`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.0839935, 0.279645, 0.510102], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.055995666666666666`, 0.18642999999999998`, 
                    0.34006800000000004`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.0839935, 0.279645, 0.510102]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.0839935, 0.279645, 0.510102]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.0839935, 0.279645, 0.510102], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6283185307179586`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.097699, 0.498132, 0.548165], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.06513266666666667, 0.33208800000000005`, 
                    0.36544333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.097699, 0.498132, 0.548165]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.097699, 0.498132, 0.548165]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.097699, 0.498132, 0.548165], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9424777960769379`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.175507, 0.652273, 0.528496], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.11700466666666667`, 0.43484866666666666`, 
                    0.3523306666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.175507, 0.652273, 0.528496]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.175507, 0.652273, 0.528496]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.175507, 0.652273, 0.528496], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.2566370614359172`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.329526, 0.762208, 0.474596], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.219684, 0.5081386666666667, 
                    0.31639733333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.329526, 0.762208, 0.474596]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.329526, 0.762208, 0.474596]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.329526, 0.762208, 0.474596], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.5707963267948966`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571909, 0.839991, 0.408102], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3812726666666667, 0.5599940000000001, 
                    0.27206800000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571909, 0.839991, 0.408102]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571909, 0.839991, 0.408102]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.571909, 0.839991, 0.408102], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.8849555921538759`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.914809, 0.897673, 0.350652], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6098726666666667, 0.5984486666666667, 
                    0.23376800000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.914809, 0.897673, 0.350652]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.914809, 0.897673, 0.350652]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.914809, 0.897673, 0.350652], Editable -> False,
                     Selectable -> False]}], "}"}]}], "}"}], ",", "#1"}], 
                    "]"}], "&"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1.8849555921538759`"}], "}"}]}], "}"}],
                ",", "None", ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               
               RowBox[{
                "LegendLabel", "\[Rule]", 
                 "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \
SubscriptBox[\\(B\\), \\(eff\\)]]\\)\""}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
               RowBox[{"ScalingFunctions", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
               RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
               RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], 
             "]"}]& )], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[
        GraphicsComplexBox[CompressedData["
1:eJyFmHlYjmkXwMO0WIpEY4SyL4liRJn5DiFUk7UkhWxpxpYZS+OrsYwRg7Fl
Z6KoJpI1MtyFiCijRfuit1VpedcUvvk85znP5Y5L/5zr1/2+z3uec5+954KV
0xe31NLSSm2hpfV/2cVi/MzGng2Ml4W1x9cONVEQT/V5afVgwCvuXMZxGrEW
/nHnwH0fuOdz5wrg9AJeL5F5Ker74f9lHKcRi/py58B9H7jnc+cKXj/g7cbr
JTIvRX0/5DRiUV/uHLjvA/dc7lzB6wcfv1febrxesk/INOIP7Svj7Cvj7Cvj
7Cvj7Cvj9E1r5of8PfN2/LiekvxQ3zRO3zRO3zRO3zROX9IP+Ljg/Y6/V95u
vF5an/gT9eW+Tyzqy/0+r5+oP/BxzMcJ74cfv2fJjryeH5dkX+DsC5x9gfPf
ZnmGj2M+Tj7uh9I983b8uJ6S5PyX05f0Az7v8XmFj1s+Lni/4++VtxuvF/d8
7lzB60f/5/M0nwf5PPPxOJbihPfDj9+zrJle3O/z+vHyU3Xkc3nwc3H8OT/8
nB1JNnXuahtULNUxUe94o/KYXrs0xC5Fx/QXKaXzqK7bm/Q0r9hJ22VWkx9I
ebq91cZZx3yVbNOqjCuzVhSxx2vly8NaqinPdQq9s74oRM1G7+ly/URRDD3v
aPedvyny15DdVOq8fwwORRJ3s16z3dQmltj0+pu0OTPuEg9MH1PSf8dDYtv6
LUp5XArxmW3FLQsbn4GBe9vtYVnqZv3CySNRbnaVUlzkv3PpU6bUEGfOXr3z
3HSJn13erfC9oCZ+rB/pMbKdxPe9H9xrWqoijosvHnwnQUkca6IVtK2XxFfW
dHvj9IsCPmd38Z7Ee2sfce7ms0gFy9RWn1ra6TQYeSaNytuoZP3ulvbKdb8G
xoaVV8tcVCy6hc/r+PR4+CpBb3j9IDW7f2puceeAROjm1z+66Z2avRg787FP
vxQws7C30E3XsHe1odlzy55B8l1l8jNPKe/q6/rvHpZP90l+rYjY+5d9x1JW
fPrP10ZPa6n+ncw6dTXW5V/99kev9tBOh4LKE3k2Pmq2fNnU7eciCiGmq7lG
niDlyXe7w6ZE71YST2zVJ2zZLBXxH+uC3w4wUxM/f9nNtaRcYrP5R86fuqgh
btst3qzf3wpmPbHkUTfPEnB2ujbYw0/J/g5LeRH4vBT2/jdy1D5rFRunF/ta
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
         "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {
            EdgeForm[], 
            RGBColor[
            0.29699881735119854`, 0.7389908915621061, 0.4859791095174647], 
            GraphicsGroupBox[{
              PolygonBox[{{123, 1, 147}, {383, 121, 466}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.31646697542973745`, 0.7528867872526648, 0.47916609475673233`], 
            GraphicsGroupBox[{
              PolygonBox[{{384, 383, 466, 467}, {124, 123, 147, 148}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.355266476343226, 0.7704683626137359, 0.4675345013224258], 
            GraphicsGroupBox[{
              
              PolygonBox[{{391, 100, 443}, {360, 100, 391}, {465, 120, 464}, {
               125, 2, 122}, {203, 22, 205}, {390, 100, 360}, {442, 110, 
               358}, {227, 22, 203}, {229, 22, 227}, {149, 12, 206}}], 
              PolygonBox[{{467, 110, 120, 384}, {148, 12, 2, 124}, {122, 2, 
               12, 149}, {464, 120, 110, 442}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.4015582194289573, 0.7853238213399562, 0.45483508277928286`], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtkLsOAUEYRmddC6GlpXFbWmqXSihUtEQjuzQuicS1E7WWygvoiJIIDaUn
4DWcyf7Fyflmvn92djfa6td7LqVUDNxwM5Qa4jt+4gBsYA0+WIJBF8VfWMm+
7h/sD/AJF6FANnEacuQE/uAIvCCp53AWB3FYugV4YS7vpLsQ7MR7+EFGr/VZ
yJNTeAYt8tRwzup5jzw3LN/ZoaviktwbkbkM6xqu4CX0yRd8BIt8wGVokrvY
Vs5dlrgNDThL9zacPd3ZMjeWvJXvmkCcORP75Z6RzJ3kf17xH48GJgI=
               "]], 
              PolygonBox[CompressedData["
1:eJwtkL1OQkEQRmf5s4IWQweNIl5arQErA4UVtBBUEsFGIDHhIpW8gK1WvAAl
tUQTCUJnD4k+hmcyW5x8J3vn7sxstnl/1YuISAZicOlEamQDLvA9uYMvWEHo
61LwCn+QgwB+4YZ/6mQV2vgBnOJZcPgGuvgQtviYjPs79e4iZ2WxGQL8kUxC
FEbwDYe+p/Y+puZMrMcR/gkD/A7m+DW0xHou8BE0xWbUWTtwC88whZmzf7Um
xN/8rtrzB945eyD7sMQrznYtQRmfkAm/05PO5eybzljAU87e6lz3wtdk2u/4
Ah/O7tYddJcTZ7X6Jnn8HytcKco=
               "]], 
              
              PolygonBox[{{230, 33, 229, 227, 228}, {362, 89, 390, 360, 
               361}, {204, 203, 205, 11, 202}, {392, 391, 443, 111, 
               385}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.44784996251468884`, 0.8001792800661764, 0.44213566423613987`], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJxNlEtrk1EQhr/RtdYLXSRtvNA0jbcmrY3Q2qQp2jZt3NgkDWgvXpCaFuzC
tVV/gyC4sSAoLgRBV+5cWBQR3PoDRF0I7ly48h3nAbt4mDNnzpnzzpzzfUev
bczf2pUkyabYLbIiLVJiXEyLGcZn8SfFGVEVJaz7s2JOTIjzYkqMiVF8Hw+R
x/OdsyS54DEL388pixFxWlRggrlVrWvL3rGYKzE/yBkFctTIU2JvFVtBo2so
osNjdWrKiX5iVWqpM19k35K4KZZFXmTEgNhH33rQ7rFhccBCY7eFXyY+TA/c
n7Toa9lCU5Feze3QPsZ8AR3j5KiQz/OkLGrOWPg14tPU6vcxamFHZB/LdnH3
Jyx6cFK2SZ8aYl4sUvcVsSBaYgW/BXX0+rhJ/KJyXZJty/6RPSJ+E2+xfoA6
8uhtJP/f0SxrG8Tm6UE/fSgwzqLL9VxFS4s5173KnfUl8Vay3F+D+CC5fH6U
Xhc4v8LZU/TQY/5mJznnEG8gj74l8s7g19DhutrEF9F0W325LLth0a/mDl3L
+N/R/YPzFji/jXU/x5vwXi6T87qFP0R/17iTjjhmUedx2VMW3+agRf9WWPvI
QuMD2T0WPdprEVun1/7W09xBD9a1bLHXc3xJ4l+yJV5Z7P1gsa+LWK/YT44X
Fnf1zGKdr39vsSZHjdvoeCf7RPageJ7E++oWh+lfh3p62ffvW7X4V+UtzssR
X+eOvK4b/Gf8f9PhDa/JblqseWrxvXdR/0P0v6QHad5SHzbF/bn/OYm9PezJ
8Ia8hm30v0G71+C9+Mj8J+r0tW/Fa8beg6/U/038ogc/xT3Ou5/Ed+6a74q/
NiZydg==
               "]], 
              PolygonBox[CompressedData["
1:eJwtkitIRFEQhu+IoMU3GxZ0fZX1wRpcBYNhddXgpi2CiuCq+AI3WCw+k5vt
mjQJgpsEBYNiETQYtJgEEQSDYPb7mRM+5r9n5s6d+c9tLxTzGxVRFPVCpaJF
UYaYg1H0C7EFmqAMD5ytE9fgHv1MbA41qj3lbD7ymkv0FsyiZ2ATvQ1Tkdfs
oHeJdVAPe3Bn3nsVrtBF83en1RP9ROyEOLzCbZgtAW9wEnLqeQxZ8130zSX0
QuinmRbR78RWiGkf7cHZAHEQOtAlOIR9OIAUZMkNQRd6BCbQ45BB/xKT0K8Z
eB42z43pHfUJuzZACS6Clofy8ivsoh7q1W3+rRTUoB/DrG3wAdWcVYFBBdSa
18qjTzjjeYW4LG/CDtrlGm4gab6r7rxHd2PutTyaQ6fNZ9fOfeY7abc0NKLL
5nelb5yb30EieCpvY+a18jSOPjKfRf7r3/gLu6j+J9yJcnkooL9DLhG80Zly
8lze52BSM8pn+AePKEPe
               "]], 
              
              PolygonBox[{{131, 130, 137, 17, 150}, {458, 457, 441, 105, 
               435}, {258, 257, 230, 32, 250}, {326, 325, 362, 90, 337}, {185,
                21, 202, 139, 140}, {363, 90, 361, 392, 393}, {290, 54, 295, 
               263, 264}, {303, 68, 301, 331, 332}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.4941417056004203, 0.8150347387923967, 0.4294362456929969], 
            GraphicsGroupBox[{
              
              PolygonBox[{{354, 81, 356}, {322, 81, 354}, {321, 81, 322}, {
               356, 81, 355}}], 
              PolygonBox[CompressedData["
1:eJwt0jEvQ1EYxvF71aBTRUNSCYn6ADowkDDWUoMuOpFYNSphqFUthIlodCGV
oEmFpF1ISA01sGhSAwMzqZAQTVj839xn+CUn57zn3vc55/TNpuLzLY7jRNCK
sus4JRRxgnWsYQUZXFBzjg1s4gXPqOIGNdyjjgf0sqcHYfTDjza0wIcyNSXk
cYACjlHBNY6oOcQe9sXGu8hhAjFEMY4n9jyqJ+vtjrlbZSorU1HftG+fUXOq
nmvKUFVGy5rFjmqsNqd/b2Hb9XrOq+eCMteVybL5lPWX8R/ijCcxhYR6jmrO
1sYwimGMiI0HMYQlLCKFBXzyzQ808O54NVY7gAiSmNMd2l2+UfOKL3xrT0Nz
tpbRXV/iyvXuoKIztbMNMteBTnS5XibL9oOm452JnU0ay+oxpR6Smksrg2Vp
aq9lsCwR9R7T3SZ0VtOYwar1qDvJKoNlCbDWrp6stxC69ebCenN+1QSUIaia
kN6ovdV/F7FnXw==
               "]], 
              
              PolygonBox[{{351, 350, 355, 81, 347}, {347, 81, 321, 317, 
               318}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.5404334486861518, 0.829890197518617, 0.41673682714985383`], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwt0r8vg1EUxvH3xaJThZCQVIQ/QCUMlehYiw61EE005vqVMLBi0TARUkuF
RDWpkPRdSAhDDSyVMNSgMyEkhITB96TP8FnOPfeec8+9HRPTsakax3F6UIcW
13Ga0Yo2fBB7xyvekCK2iiUs44fYt3Is9w+/itlaEzmNOtPO3sQGFrCIM3JO
sYZ1xImNYQBh9KEX3Qhqj+2dwzx2kUEaO261R+v1GS92J2K1brUn6+0Exyjh
zqnuSasn682Heu2xvQ/k3KMAD1e4RBmPqmG1PvGFCp5QxLVqlHSGnbWs2Z3j
wq3mFDUDm0VYdw+hX0Kagc0iR86herBegprNEKKaic1mBrPoQqfu5FPM1pKY
1BvbWwfQjiPkcYCsYgGdYWftU3NPPeQ0g7LuXNEMbBZ+chswiAhiGMYtblCA
h21yt/Qm9jae1vLqxdPsrabVzqq3jN5+FCMYR0I1YorZ2orNXDWsVlSziqi3
hPban4trJkn98ZTu4Ncftr/8D/O+atM=
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.5928695135615069, 0.8435169385921693, 0.40459024291598555`], 
            GraphicsGroupBox[{
              
              PolygonBox[{{273, 41, 245}, {276, 41, 273}, {245, 41, 235}, {
               235, 41, 238}}], 
              PolygonBox[CompressedData["
1:eJwt0rEvQ1EUx/H7pF3qDyCpBAmbhYFBkxpZKlGLhkTtrZAw6KoWwlSpsJBK
ikSjyetCQnSogaUSHRj0T2DShMT35P2GT/Jy8s49555zB1dW57JdzrkRhHCH
W+zjAOco4RJXOPOcO8UxTpDHNu7xgE1sYA3r+CPnFz/oYILYOEYxhg9i7/hE
G8PEhhBBN3aI5VHEEcLEQl5wpp0d43tSZ9rZHdX6wjequEETr6jwzzXKuMAM
ppHEPAbQrx6slz3s6o559Wy9JzDrBTOx2Tyi7oKZ2GwKOEQvehBFn3ISqmm1
W+S8wUfNEPPVY0U5UfVkvS1hEXFMSVwziGnmNvsMsl5w56ZqtDTDomZSVU1f
O7Zd58jZ0g5tly94Vk817SSiHYR1x4JycqqZ0cxsdnXNxnZsu04TW9Yd7C5t
7b6BJ2noDdpbTPHPgnLS2lFSsZR2WNabtLf5D6+aXaM=
               "]], 
              
              PolygonBox[{{242, 241, 238, 41, 255}, {255, 41, 276, 279, 
               280}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.65835858954496, 0.8545333891050814, 0.39361810113923024`], 
            GraphicsGroupBox[{
              
              PolygonBox[{{211, 18, 178}, {353, 80, 346}, {280, 42, 255}, {
               284, 42, 280}, {320, 80, 349}, {316, 80, 320}, {396, 101, 
               366}, {156, 18, 160}, {255, 42, 242}, {182, 18, 215}, {215, 18,
                211}, {400, 101, 397}, {349, 80, 353}, {242, 42, 249}, {389, 
               101, 396}, {366, 101, 370}}], 
              PolygonBox[CompressedData["
1:eJwt0D0OQUEUhuG5goYFKN2CBVCwBRoibMAC6CioKancEJorJFwJFQ0VBQUr
oGAfxHsyp3iSyTc53/y49WalETLGJBDGEgsE2CDtGJNCDHFcyM544oUsWQYl
lJFHTrOsZrJXQNGxnYF2SNcJRwww1E7pfuNj7IzMVlFzbCZ7V9xwINtji51j
s6t2SrdHNkIHXayxgo+5vkneFkFUyfrL7M/Yzq3OyOwDdz1Tzp5hqmd42ulr
JnsukvqH8pd9OnsYY2LsneRuLbTxB/8bNOc=
               "]], 
              
              PolygonBox[{{341, 340, 346, 80, 342}, {254, 253, 249, 42, 
               256}, {342, 80, 316, 311, 312}, {397, 101, 389, 448, 449}, {
               160, 18, 182, 165, 166}, {154, 153, 178, 18, 156}, {256, 42, 
               284, 288, 289}, {375, 374, 370, 101, 400}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.7238476655284132, 0.8655498396179935, 0.382645959362475], 
            GraphicsGroupBox[{
              
              PolygonBox[{{380, 102, 407}, {408, 102, 401}, {289, 43, 256}, {
               226, 20, 221}, {342, 79, 341}, {254, 43, 262}, {268, 43, 
               294}, {294, 43, 289}, {307, 79, 312}, {174, 20, 183}, {221, 20,
                196}, {201, 20, 226}, {341, 79, 330}, {400, 102, 375}, {312, 
               79, 342}, {330, 79, 336}, {262, 43, 268}, {375, 102, 380}, {
               256, 43, 254}, {336, 79, 307}}], 
              
              PolygonBox[{{190, 189, 144, 145}, {398, 397, 449, 450}, {420, 
               419, 413, 414}, {157, 156, 160, 161}, {155, 154, 156, 157}, {
               433, 432, 426, 427}, {167, 166, 172, 173}, {440, 439, 432, 
               433}, {463, 462, 439, 440}, {161, 160, 166, 167}, {427, 426, 
               419, 420}, {136, 135, 154, 155}}], 
              
              PolygonBox[{{414, 413, 407, 102, 408}, {183, 20, 201, 189, 
               190}, {401, 102, 400, 397, 398}, {173, 172, 196, 20, 
               174}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.7893367415118663, 0.8765662901309055, 0.3716738175857197], 
            GraphicsGroupBox[{
              
              PolygonBox[{{157, 7, 155}, {174, 9, 173}, {167, 8, 161}, {408, 
               113, 414}, {155, 7, 136}, {433, 115, 440}, {440, 115, 463}, {
               420, 114, 427}}], 
              
              PolygonBox[{{173, 9, 8, 167}, {399, 398, 450, 451}, {414, 113, 
               114, 420}, {427, 114, 115, 433}, {161, 8, 7, 157}, {402, 401, 
               398, 399}, {184, 183, 190, 191}, {191, 190, 145, 146}}], 
              
              PolygonBox[{{138, 9, 174, 183, 184}, {454, 113, 408, 401, 
               402}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.8622485628831436, 0.8888313810621916, 0.3594580574872074], 
            GraphicsGroupBox[{
              
              PolygonBox[{{451, 112, 399}, {191, 10, 184}, {402, 112, 454}, {
               184, 10, 138}, {399, 112, 402}, {146, 10, 191}}]}]}}, {{}, 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{138, 184, 191, 146}], 
              LineBox[{454, 402, 399, 451}]}, "1.7999999999999998`"], 
            Annotation[#, 1.7999999999999998`, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{136, 155, 157, 161, 167, 173, 174, 183, 190, 145}], 
              LineBox[{463, 440, 433, 427, 420, 414, 408, 401, 398, 450}]}, 
             "1.74`"], Annotation[#, 1.74, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{135, 154, 156, 160, 166, 172, 196, 221, 226, 201, 189, 
               144}], 
              
              LineBox[{449, 397, 400, 375, 380, 407, 413, 419, 426, 432, 439, 
               462}], 
              LineBox[{262, 268, 294, 289, 256, 254, 262}], 
              LineBox[{336, 307, 312, 342, 341, 330, 336}]}, "1.68`"], 
            Annotation[#, 1.68, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{134, 153, 178, 211, 215, 182, 165, 171, 195, 220, 225, 
               200, 188, 143}], 
              
              LineBox[{448, 389, 396, 366, 370, 374, 379, 406, 412, 418, 425, 
               431, 438, 461}], 
              
              LineBox[{261, 267, 293, 288, 284, 280, 255, 242, 249, 253, 
               261}], 
              
              LineBox[{335, 306, 311, 316, 320, 349, 353, 346, 340, 329, 
               335}]}, "1.6199999999999999`"], 
            Annotation[#, 1.6199999999999999`, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{133, 152, 177, 210, 214, 181, 164, 170, 194, 219, 224, 
               199, 187, 142}], 
              
              LineBox[{447, 388, 395, 365, 369, 373, 378, 405, 411, 417, 424, 
               430, 437, 460}], 
              
              LineBox[{260, 266, 292, 287, 283, 279, 276, 273, 245, 235, 238, 
               241, 248, 252, 260}], 
              
              LineBox[{334, 305, 310, 315, 319, 348, 352, 345, 339, 328, 
               334}]}, "1.56`"], Annotation[#, 1.56, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{132, 151, 176, 209, 213, 180, 163, 169, 193, 218, 223, 
               198, 186, 141}], 
              
              LineBox[{446, 387, 394, 364, 368, 372, 377, 404, 410, 416, 423, 
               429, 436, 459}], 
              
              LineBox[{259, 265, 291, 286, 282, 278, 275, 272, 244, 234, 237, 
               240, 247, 251, 259}], 
              
              LineBox[{333, 304, 309, 314, 318, 347, 351, 344, 338, 327, 
               333}]}, "1.5`"], Annotation[#, 1.5, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{131, 150, 175, 208, 212, 179, 162, 168, 192, 217, 222, 
               197, 185, 140}], 
              
              LineBox[{445, 386, 393, 363, 367, 371, 376, 403, 409, 415, 422, 
               428, 435, 458}], 
              
              LineBox[{258, 264, 290, 285, 281, 277, 274, 271, 243, 233, 236, 
               239, 246, 250, 258}], 
              
              LineBox[{332, 303, 308, 313, 317, 321, 322, 354, 356, 355, 350, 
               343, 337, 326, 332}]}, "1.44`"], 
            Annotation[#, 1.44, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{139, 202, 204, 228, 230, 257, 263, 295, 296, 299, 300, 
               323, 324, 357, 359, 381, 382, 421, 434, 456, 455, 453, 452, 
               441, 457}], 
              
              LineBox[{444, 385, 392, 361, 362, 325, 331, 301, 302, 297, 298, 
               269, 270, 231, 232, 207, 216, 159, 158, 126, 127, 128, 129, 
               137, 130}]}, "1.38`"], Annotation[#, 1.38, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{125, 122, 149, 206}], 
              LineBox[{205, 203, 227, 229}], 
              LineBox[{358, 442, 464, 465}], 
              LineBox[{390, 360, 391, 443}]}, "1.3199999999999998`"], 
            Annotation[#, 1.3199999999999998`, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{124, 148}], 
              LineBox[{384, 467}]}, "1.26`"], 
            Annotation[#, 1.26, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{147, 123}], 
              LineBox[{466, 383}]}, "1.2`"], 
            Annotation[#, 1.2, 
             "Tooltip"]& ], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}}], {
        DisplayFunction -> Identity, AspectRatio -> 1, 
         AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, 
         Frame -> True, FrameLabel -> {{
            FormBox["\"\[Beta]\"", TraditionalForm], None}, {
            FormBox["\"\[Alpha]\"", TraditionalForm], None}}, FrameStyle -> 
         GrayLevel[0], 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "GridLinesInFront" -> True}, 
         PlotRange -> {{-1.5707963267948966`, 
          1.5707963267948966`}, {-1.5707963267948966`, 1.5707963267948966`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   StyleBox[
                   "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), SubscriptBox[\\(B\
\\), \\(eff\\)]]\\)\"", {FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False]}, {
                   GraphicsBox[{{}, {}, 
                    RasterBox[CompressedData["
1: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
EP4HhqN6gg==
                    "], {{
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}}], {Antialiasing -> False, 
                    AbsoluteThickness[0.1], 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]], 
                    LineBox[
                    NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                    7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                    112.5}, {7.5, -112.5}}]]}, {
                    CapForm[None], {}}, {Antialiasing -> False, 
                    StyleBox[
                    LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{
                    7.5, -52.659574468085104`}, 
                    Offset[{4., 0}, {7.5, -52.659574468085104`}]}, {{7.5, 
                    7.180851063829787}, 
                    Offset[{4., 0}, {7.5, 7.180851063829787}]}, {{7.5, 
                    67.02127659574468}, 
                    Offset[{4., 0}, {7.5, 67.02127659574468}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -100.53191489361701`}, 
                    Offset[{2.5, 0.}, {7.5, -100.53191489361701`}]}, {{
                    7.5, -88.56382978723404}, 
                    Offset[{2.5, 0.}, {7.5, -88.56382978723404}]}, {{
                    7.5, -76.59574468085106}, 
                    Offset[{2.5, 0.}, {7.5, -76.59574468085106}]}, {{
                    7.5, -64.62765957446808}, 
                    Offset[{2.5, 0.}, {7.5, -64.62765957446808}]}, {{
                    7.5, -40.691489361702125`}, 
                    Offset[{2.5, 0.}, {7.5, -40.691489361702125`}]}, {{
                    7.5, -28.72340425531915}, 
                    Offset[{2.5, 0.}, {7.5, -28.72340425531915}]}, {{
                    7.5, -16.75531914893617}, 
                    Offset[{2.5, 0.}, {7.5, -16.75531914893617}]}, {{
                    7.5, -4.787234042553191}, 
                    Offset[{2.5, 0.}, {7.5, -4.787234042553191}]}, {{7.5, 
                    19.14893617021278}, 
                    Offset[{2.5, 0.}, {7.5, 19.14893617021278}]}, {{7.5, 
                    31.117021276595743`}, 
                    Offset[{2.5, 0.}, {7.5, 31.117021276595743`}]}, {{7.5, 
                    43.08510638297872}, 
                    Offset[{2.5, 0.}, {7.5, 43.08510638297872}]}, {{7.5, 
                    55.0531914893617}, 
                    Offset[{2.5, 0.}, {7.5, 55.0531914893617}]}, {{7.5, 
                    78.98936170212765}, 
                    Offset[{2.5, 0.}, {7.5, 78.98936170212765}]}, {{7.5, 
                    90.95744680851064}, 
                    Offset[{2.5, 0.}, {7.5, 90.95744680851064}]}, {{7.5, 
                    102.92553191489361`}, 
                    Offset[{2.5, 0.}, {7.5, 102.92553191489361`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.5\"", 0.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -52.659574468085104`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 7.180851063829787}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.5\"", 1.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 67.02127659574468}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                    Scaled[0.02], PlotRange -> All, Frame -> True, 
                    FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                    Opacity[0], FrameTicksStyle -> Opacity[0], 
                    ImageSize -> {Automatic, 225}, BaseStyle -> {}]}}, 
                 GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ),
           InterpretationFunction :> (RowBox[{"BarLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.122103, 0.00901808, 0.39826], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.081402, 0.006012053333333333, 
                    0.26550666666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.122103, 0.00901808, 0.39826]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.122103, 0.00901808, 0.39826]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.122103, 0.00901808, 0.39826], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3141592653589793`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.0839935, 0.279645, 0.510102], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.055995666666666666`, 0.18642999999999998`, 
                    0.34006800000000004`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.0839935, 0.279645, 0.510102]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.0839935, 0.279645, 0.510102]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.0839935, 0.279645, 0.510102], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6283185307179586`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.097699, 0.498132, 0.548165], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.06513266666666667, 0.33208800000000005`, 
                    0.36544333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.097699, 0.498132, 0.548165]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.097699, 0.498132, 0.548165]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.097699, 0.498132, 0.548165], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9424777960769379`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.175507, 0.652273, 0.528496], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.11700466666666667`, 0.43484866666666666`, 
                    0.3523306666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.175507, 0.652273, 0.528496]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.175507, 0.652273, 0.528496]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.175507, 0.652273, 0.528496], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.2566370614359172`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.329526, 0.762208, 0.474596], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.219684, 0.5081386666666667, 
                    0.31639733333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.329526, 0.762208, 0.474596]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.329526, 0.762208, 0.474596]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.329526, 0.762208, 0.474596], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.5707963267948966`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571909, 0.839991, 0.408102], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3812726666666667, 0.5599940000000001, 
                    0.27206800000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571909, 0.839991, 0.408102]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571909, 0.839991, 0.408102]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.571909, 0.839991, 0.408102], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.8849555921538759`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.914809, 0.897673, 0.350652], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6098726666666667, 0.5984486666666667, 
                    0.23376800000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.914809, 0.897673, 0.350652]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.914809, 0.897673, 0.350652]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.914809, 0.897673, 0.350652], Editable -> False,
                     Selectable -> False]}], "}"}]}], "}"}], ",", "#1"}], 
                    "]"}], "&"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1.8849555921538759`"}], "}"}]}], "}"}],
                ",", "None", ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               
               RowBox[{
                "LegendLabel", "\[Rule]", 
                 "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \
SubscriptBox[\\(B\\), \\(eff\\)]]\\)\""}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
               RowBox[{"ScalingFunctions", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
               RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
               RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], 
             "]"}]& )], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[
        GraphicsComplexBox[CompressedData["
1:eJyVmnlcT1v3xwvFExlyzbO4mYkQ17VCkbEyRddYQuYyRKbMbnpCRKZMXa64
Kpm6aClU1FVpEhp9m8dvfSdFPT2vvc86v3tyX8/r5w/r9e6cztln7bX2+uy1
62W/cbZjIy0traj6//5rOw42n1vT6wtKbVbFxW1DuyiIrZ2KjaP6lUmuyySc
RKzF/0meC9LnCiy1wvv+/nOZhJOIhfdJroPk90HyfMl1hXR8IP1u6bgEllph
vH/nJGJhvJLrIPl9kDxXcl0hHR98f16kfpOOS/YPNon47/6VSfwrk/hXJvGv
TOJfmWS8SQ3iSDrPUj9+f5yi/ft4kyTjTZKMN0ky3iTJeGl8II1radxJ51Xq
N+m4tP7hnzBeye8TC+OVvF86PmH8IPGvJO6lcSedV6nfpOOi6xJL/gWJf0Hi
X5DEr2S8Msl4ZQ3y5PtxKM6z1I/fH6doJfErGS+Nj+6TrA8N1hlpHn8/T8Q4
lM7z9/0ojlNqJeuDxL8KiX8VEv8qGqwz389jMU+kcfj9eZY1GJfk/dLxSe0/
5eH/iqP/5YcG78k0+mVZe6NE4tcVSSv2ZCqgUTvtaeFZGjx64sTMKe0TQZl7
LrN6oYbywr/QoXpRaw1qnD5FVKqzof31yKCNr4XrMmjZq2bqLR8N/mSzsJth
61KwG/tszPXjapr3lM5ePh81KvTLyHvUqlIOof4ePwZaacjP6O82I2GUmuYr
md0Pl9j9uJA9j+ZPn70PxrL3IR8Pzae/o3HEsBca0Cx3nX1+8WeUhSqjkzM1
NL/8e+Ew+17y/xvmD+J05i9MWmq2cHqOktbvP41f5nbepmqgH8JfLFXiFw3x
Mvu25rE+KuI6rSjv98aiThjo4ueZ7VWB6/a8M+rwVaxjwvXnnqaHXL/m4SPn
5CiDVCWOKB+YtPp6Fupa6zSOAzXVhe7KVt4lxWr03zvJsGRZCEY/Kn/btKOm
gV7RtY+YN+GLhuZ/THLW9fv+Iq+1rJMbWYvs96Sb2YUaNXHCkHFeLW+K3Pia
3ad9s0Ue1W7HAOU3FfHqo2e3r74l8oWaB5Ef54r8dkPSD1ZaImvlVNpH3FYS
j5jXJnikrRL+v34V5kmYt+rjAS6Nn8gb6DHpz4sfXFo24VYexj84OGZHK3kD
XWQw82ng9rfHKU4XVeOq1fI7xC83RducUz8mHuzyfjQ8CSfW3I6NDK6OFO/P
fT6vz9hY4lfH7VxinsYT376TFHpwUSJx0LK1ygdtxLpR88PCe4M/5RBPeT15
4283som9d5sM6uacRfyng/m7/q4ZxFaxPWZ0avGJWGZS86rZ1TTiXZdSQDMy
ldhA915o/pskuHjUe2LY8/IGuqbwfkTUuT7i+FJblqUbL8gVv3d1J8XrY3nE
9yLM9ewxn/hq1009qysLiI9vuzDK+8ci4j3xkTMG2BUTrx1QHy//LiG2O9ht
h114KfgOaf3Mt3UF9v7XiDy7AfE0vqrqQ/4XUqrofm3P17XbzUVu3U1/4fx7
lcTd71qHjOgp8iA4rd/GS048Nj51VVlNBbHl8i4RMU4iB8qemc4OLCeO1bUo
bXGsDC66TFpl86iC8nOj0SBXfKZCbun+L5ebTun8h7guPrE8Vqu/QAldJ/uW
2X+g+AdhHZHqeWGdyuBxLTxnzby9A8uty/Fm+Phze/dfg/XndSbcXVyBsxbV
ugecvg99PaaXyAzkGG27eGS7AoT0HSfPdomW49X+GQq89ApOO6VOnL27Epfc
1LfaOiUGpi/sVnZ0eBUe8/ab67M9HhpNdTiH+VW4xuah9qaZiWDyaFe+73qK
FzCMCZj0xKmC+M7Ys20DusqJRwYc+OwbJ3JYp00hR/ZXEk/5ddGBbSOriBM0
lnMcC0QWvl/IY1Njxx5dNVV43HlwdLPkzzBk4L4FTl/L8MKW6BebI5Khq3Nj
i281wu/LQKGpPpKoVUEsPM+j/al/DQz5gOddn0W8u1dI63VI3Mj1dePLcZJt
fvAq41zwm3G379W5FRjbs+WJgAt54BAcfjriX3KcV2SyoVSnAPq1T24sC5Nj
RsgvM4ZtKoQStwIXnS2VuHr3/gGbPxRBUGZN9o/9q7Bi8q1mD81LYKt5KxvL
jCrc0To+T3O3FDbt8f/YblY51dceX68e3DKxgrhpqHOXjHSRy7dOuDdlB61n
kDq8zdTgHyqJsTwrs3OQyDfuBG07OL2K2MvJXb8sT+TJbz4veDyuHLmFvabr
wy33Nty/XWzqs1evQx6MeTc8LaOoEp1bfngYIFeDt6z1+AuN5fim5+Muq/RU
kFiabhFoWoa9R5xxNzRUgPal/hfDLssb7Fcn1skTDiWIOqD5TPNAlwEKmMDr
YhCvk4943ZTuF1dK6qwwj8K8Cs8dFDag+b1zJTT/GRdMVK28i4hP7hifvd6j
gHiSrWVszP48YpXJ7Ef9d4q6Xfewj9HeiyXILfTd6T/YU1OE3MLETSEjzs0t
RG5hqWPEmBtB+cgt7LJLgJAWecgt+FplWTxfLUNuYeQUi7O/vC6h+TFI11dU
zi0mLnVJsfbIKiSObnb5j17rCoiv+63SC1XnEe8xGbbK+kBuA13/YWveC735
KcQx2/HUlQsfiJ/u9HUYlZ1BPB8fd1p5Kps4zuw3beOHn6Fd7uU0r6cl+GKI
67S2jlXw3uKS3fRpxdg3U+khv10J52+c/9j0fSEePr4lJq5eLy5q6rvopWNB
faWoan53jBy6r/ZJd6/KQ8sK5xme7vXrbbT3kp/35aLNhOxOyV7l8Nz4qLJf
m1KKx47VEZV5imLijRHfyv3fFxFHepiW2j8tJO42Z3NRzysFxFu63M3POJBP
HPu5QHZxFa2nYHjHMMduei6x25YlmR2HNuwPtHme49PLRvRnwaQ7hc6ecuJo
o1XN5lRUQcqcpR+/xZXiL71rfz+j1EDXOquZP6eVYK2ravkoNw3YB5jhrpxi
vPpXWeeUWjUEzDM2flpchBaG+YlbD6ihQqv39RpFIRZsz/Rs10wNo+4YtPup
tgCPvU21eOCpgt22jY+4NS3AIX3ia+e2UcHLRgpNaOt8TNgR/Ujho4Tmd2Vr
vnTKw61xzzed7qyE2QuTP5ka5mLHvqH9TS4rwLdJ5Kztg+rn2y04J/G/+er4
9en5vYUN+jUFs+N0BieJuhwHzvHMniXymSapBmdeq4nXp9udm2YusvnDjB51
YSriLsftb4SMEblyVd6g1feVxK/N1oR0HSry5U5lYxJuif7fVun8/FAfBfR0
Zzq5PdfNgo5pItHVvlznCDpC0BVNEgJy32xLFiwkaE3T+1OehtyC37DCIbfW
ZSC3MHLYy/6xm7ORW+gS3fbppODPyC1ksLyi9eItyyviMJZXxLYsr4h5XhGX
P7WcfrdJCuanVGaVtcoFO4ujQ1bdTcNuF7xnx8jyIPKvqDY9F6TjnKXDX94M
LYBOtw+4lbhn4a+G70Ye9CoCq42GJdHzchDznW8ucyiBJiHBTZ1HpdJ6cOvQ
bb0L12i9hFkLftN/1TKD2M3H6qjrsyzi2D2xv3puziFeY9Bszl8rUrBddc+e
Z2aWw+TSupN1he8xfPPbyx0sK6B3tDreeONH3L7Gc+iKwgqovVbeaoUiHYcu
n4ZBHnIoDdtsFDMuC/Nsm1l9G1gJC++UT16xNxsvzorMmPpXJUSdW7vyW3gO
zrE4uOHMhioYeST/0JkmMtQbN7E2p5UC8iNiGw3xF/f533xv7W7SJpW4/cbD
mg+704iHWjhsDi76SGzZxazsiG0GcdB2L5Oh9lnETz5/dT7vm00cPWttoE5c
DnFSaFrJJp2GfYcieXJP3RMV0Cluo3+f85m44fc2ESXVKrre9cTsgSt+0sDX
20c9vp2Ig6W6ZUZW+uI+74Vk33eG68zVx3qvKzaNgHa6brr7fpELjJxBcr/w
fOTPB8nzhfEBHx/pLj4+5P4l3cr9S8z9SzyE+VfcxzD/ivse5l9RBzP/Ekcx
/xInMv8SC+NTMf/iKhZ/8AOLP5zE4g94/GEPFn/A4w9rWPwBjz8sZvEHPP5w
AYs/4PGHkSz+gMcfmrD4Ax5/qM3yiXTMTZZPxDNZPhHvYPlEzPOJuJjlO+Sx
fEdblu/QleU7vmD5DrNZvmNHlu9wlOU7zmL5DmEs33EyW+/Ai613QvzBYbYe
wni2fsIPbP2EAKa3JH2oJNBm66lQz4DXM+zG6hnweoYOrJ4Br2fI6xnweoZy
Vs+A1zM0ZfUMeD3DPayeAa9n+IrVM3jH6hm2YPUMtrF6hnNYPYNOrJ7hOVbP
4BmrZ7SO8vpFzOsXMa9fxLx+EfP6RczrFzGvX8S8fhFfYfWLmNcv5PqG4pvr
G2Kub4i5viHm+oaY6xtxn8r0DTHXN8Q7mb6R5JcMuL4hzmf6hjiS6Rvk+g+4
/kOu/4DrP+T6D7j+Q67/gOs/5PoPuP5Drv+A6z96X6jV8PAHZ0UdPq1l7K7I
g6JO/xjraJrqLOr4dcfqqvKXiDq/duq5QM30EhzF9DXlG9fXxFxfE3N9Tcz1
NTHX18RXTpUsC/YsAG7RjO1HGvTF97H9Cliz/Q78zvY70I/t/xv0iZex/Q78
xPZfsJntv/AU239BDNt/Id9/Ad9/IddzDfr/fP9FzPdfuG/WlEsjtoh9jsA9
S8uP24t9kO7zu7TWbS72Tf49OHXYrhCRvzY5ZVP5i9hnWftplsvqJmJfJi1E
71TGHZE7f90KDqvLgVv8/ePWGo/FFcAtmocOs5XpyoFbzDpTfO/noPr3MYu7
ttxoeXZhJXCLHWcvX1PRqAq4xZChXSOn1r+PW/peP7afxQ1s/03z153tv4l1
2f6buIztv4lT2P6bOIztv4n5/puY77+JhTgQ5pn3H4D3H5D3H4D3H5D3H4D3
H5D3H4D3H5D3H4D3H5D3H4D3H5D3H4D3H5D3S0hX834JMe+3AO+3YF/Wb4Ff
Wb+F/CnEuaB7BJ3zlvWrhPkWdAsIukX4/TesvwOCbpGenyDrG1NeLGV9Y2Le
N6Y8e8j6ZZC+uFZumKERLEa/3XN/ho0GuMUQqNu29aUauMXLQXvH+I1WA7fo
0Uvra2SACrjFbd7uYeXdVMAt2jfW3tfxpBK4xZlb9k2a0EQJ3OKYXG3dNa4K
4BYbs35Ig/OtPZMdv8Qmiucofzy1tPabL/Kn4YNubkxTEze/1arWbJHIY3tU
zTXIVBE7+aTc/rxcZN/mfzZ6IKNzD4jad2nh4VUiq9TuQbZF4vla3w0rmvZf
r0BBNwg6QtANgi4Q7n/52DBs8XHqvwPvHxPz/jEx7x8T8/4xMe8fE/P+segv
1j8m5v1jYt4/Jk64Un67JPQzCnEmxImSnRvQdwj2gyRuhfsE3Sw9T4xn5xPQ
kfVzG5wH8vMaYn5eQ7yOndcQX2bnNcTv2HkNcRN2XkM8mp3XEDux8xrii+y8
hpif1xBrs/MaYhN2XoOCLhR04jcrpgOF+b/D69ZUXsd4X47Ws8c8DwV/J3A/
UT+Hv++RRHfyPniDvF8iyfuvPO+l56PLjjjmmPd2Jg7YujRr43M/4qCXBuZG
F+8Qz8ivnt685D7xhHUlykYeT8TzLk2Z1be24cTtnuT3+WL/kthzd9YXRXAU
sa5Z2tsKrRhi90bvrpdYvSXeae84bktcPCwKltvrT1agzvhlA1QbDoG31oLx
ox8p0Eq1XK1xvw6vrcI6Le+nRJ+ydsM7JwaB1uU+So9zSmyc41bwKPcRjC7z
iL9fX/edkzP95mnCYMPP8tsZO1W4acW1gB06L8Df0/ZIs1IVGmYkHYr2ioSP
H5/ZD1+ixg+2TZd36PgGDAb2Gb8oTo0nE8aMW3n1L7B08+h02EyD1/o+PGbn
Ew+Rc3NO320rrBNJkPJOffz2BnGfKL+2ZHNaIyX2Dr3ulBqaCtPmmSybN1mF
R/dXd42K+gRe0CzCobuoKw9PLN9scETkPRYpfcPL/48utnyWunGBqJs3TPf/
tXu4yCtnHfvpr/6i7l5i41K601vk+XMXXh5QI7KVrZlNmoOo46fYGTU+Gisy
LG75YNRIcR/wW8wya7P68Trd6DPAplf9Pm/0jTZO+xU4fHfgnWuF9eO5Vvzu
ZJ4Ca+aMHaoIzoVEfePTf05T4ssBr4It3PLAdMe2eZ/vKvHf2tYmZyfmwyXZ
k/Yt2qpw/vsPDwv0Cur3UdrvTVxV2CPQcczYxAJwfDL53OKPKiw4VPHk2IVC
ePOjp91hUGPwop3j0x2KYIh3QpfA62rcOUI3fMigYvD+1j49takGzfVOTnKv
3yc8d3LdG5cm/h3HOE2/5DqNkrjPM1cj61AFpmpfPdXMsRz0o37O9LipxGSP
M9p4pQK2TdE5GWQhrvs1Ll73Jl0R2d2vQ1JKtcg6b64oneaJdcND2b/Dt0CR
W/UKMT2hJ9ad0zPG2Rk6itxx+6udD1HkS9dnXZraWaxjveNSwz5tEflG9bKs
jXEi970SvnbECvHvQaZ7KY6Ejab1BDftMvKf2lw8d+PfD/z7kX8/8O9H7j/S
Y9x/xDwegMcD8ngAHg/I4wGqWTwgjwd4weIBR7N4AE8WD3iRxQPMY/GAWiwe
oDuLB1zB4gHyWTzgaxYPEMTiAQezeAA3Fg94ksUDTGLxgDzfSL/xfCPm+UbM
842Y5xsxzzdinm/EPN+Ieb4R83wj5vlG/IdeWG3hCAW0XdDrbKc9SWj0ML5J
zfV6f+qsC1w8PgWvLv+s1+IHJeSEPIy6WpuKXfRVrbsdVELMcu2s3LA09Hnc
rMMQhRJCWs3Q9N/7EVut6NINVqjg4rMzrTdAOv7aaoihdZIKDqzN7nevLgMb
PzHrv9xcDQ9bnOlZszQLd6+cM9TlvhoCHJ4M6maWjeo2K0ce6KOBS39mmULP
HHQvHdhjv4nY19N9fOq4+U2RPffX1Ol2VhIbzHTY9NpTZN8OMVnH6kTunjPc
ZpaL2Af0v3M+vHWuyANcGw1PtKX6ikET1lzzeSPyqBbvDBb8LP79C68f0IjV
D+T1A2aw+oG8fsApVj+Q1w/QYvUDef2A9ax+IK8fsJ7VD+T1A3qy+oG8fkAq
qx/I6wd4sfqBvH7AFVY/SE/EsHpM/JzVY+LHrB4TW7F6TDyR1WNiXo+JeT0m
PsbqMbEOq8fEe1g9JnZj9Rj/A1M3w0o=
         "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
            EdgeForm[], 
            RGBColor[
            0.16400953552031977`, 0.6294960275503497, 0.5314024315860943], 
            GraphicsGroupBox[{
              PolygonBox[{{513, 113, 577}, {136, 1, 158}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.17241661730495195`, 0.6461508187461777, 0.5292772144924545], 
            GraphicsGroupBox[{
              PolygonBox[{{514, 513, 577, 578}, {137, 136, 158, 159}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.19880512656539845`, 0.6689026336423888, 0.5203426616334674], 
            GraphicsGroupBox[{
              PolygonBox[{{515, 514, 578, 579}, {138, 137, 159, 160}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.2282205887814832, 0.6898986720449578, 0.5100485199142837], 
            GraphicsGroupBox[{
              
              PolygonBox[{{527, 96, 556}, {250, 18, 205}, {161, 8, 208}, {555,
                106, 464}, {576, 112, 574}, {253, 18, 250}, {466, 96, 527}, {
               205, 18, 207}, {526, 96, 466}, {139, 2, 134}}], 
              
              PolygonBox[{{160, 8, 2, 138}, {579, 106, 112, 515}, {134, 2, 8, 
               161}, {574, 112, 106, 555}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.25763605099756787`, 0.7108947104475267, 0.4997543781950999], 
            GraphicsGroupBox[{
              
              PolygonBox[{{555, 105, 574}, {517, 107, 557}, {469, 85, 410}, {
               204, 7, 146}, {301, 29, 254}, {161, 9, 134}, {312, 29, 301}, {
               141, 3, 135}, {516, 95, 408}, {209, 19, 257}, {553, 105, 
               551}, {410, 85, 470}, {163, 9, 162}, {575, 111, 573}}], 
              
              PolygonBox[{{135, 3, 9, 163}, {573, 111, 105, 553}, {551, 105, 
               95, 516}, {464, 95, 105, 555}, {134, 9, 3, 139}, {162, 9, 19, 
               209}, {208, 19, 9, 161}, {251, 250, 205, 206}, {574, 105, 111, 
               576}, {467, 466, 527, 528}}], 
              
              PolygonBox[{{470, 85, 526, 466, 467}, {254, 29, 253, 250, 
               251}, {206, 205, 207, 7, 204}, {528, 527, 556, 107, 517}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.28705151321365263`, 0.7318907488500959, 0.4894602364759161], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtkKFuAkEQhveWFoEhJMgzFVCoBQMEEK0BiW8FmBM9wMD1DZoaKEkTgm2p
RWMwaAIpb0DTd6CIhn6THfHlm9md3ftvr9q9VtcaY7IQgzkk4BPKbIS4gnMQ
yBzeecY0qGc4Q9+hfsM9+jr1E37RdR9PcBxewbCXR3c4hBx1CV8w90B9jb9x
EhYyZ91ZuWMNKYhY+9Ccz3DU9bWekbP31iF1gG/gUb5lXVbJJhl9rY9kGONL
GMEtfRH38a/eL9/50fslY8ReU94KH3Aa9rDR+S2cPfdff/hLZ95hQF/AXbzS
bJLx5Lk88q55ffOqdflkXfYD/a8lTOlreOi5PqkZ/wENizM1
               "]], 
              PolygonBox[CompressedData["
1:eJw1kKlOQ1EQhuec3FagSoKGYKAVrSmGrRVgQBI0ogoBtzUsb4Bhc2yO5XnI
BQKa54AC358ZxJf5z5zZZwfDrTKb2QwUME5mO9htqNB3cAvv8AFzBO+ax/yG
T3+v8Ab3+KdgAh7gJLRqn0EiZjpiKjjk3cN24QC9Di30Aqyh57P3Us8W+gbf
hnnOFfocW4v6pzBKntuHIXqSnAbUoA7XyXdTzYL3S8yimTJ/TzGvfJ+wQkwZ
/ZvoS2w9el6Y76zd1UO9qqivGZ+Tz1REzUdYjfupZj97T/XWzobuQBt+dN9A
+gu+YZGcPew+LKGPk++6CUfo5ex/5f/syW/bVE7yG+gWbejAH5rXMTY=
               "]], 
              
              PolygonBox[{{421, 74, 469, 410, 411}, {252, 251, 206, 17, 
               248}, {631, 17, 204, 146, 147}, {313, 40, 312, 301, 302}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.31646697542973745`, 0.7528867872526648, 0.47916609475673233`], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtkblLg0EQR2c3VkbBRkEixDQiloLgCYIidkIEbWLj2WjifbTWEm1ErGxU
sPIPsLKx8UIRLMUmKdMqRuMbZorHm2/Znf19s5nZQjYfRaQXEvATRHK4gseg
h3oNb8EQ9TZOQDt1HU7jLrHvThot4UF87Ps3cROkqOvxDgxT7+J9r/fwCnRT
5/EbTFG/4xMYpz7Fk2J11ntpz2+oQhvU4NrP3njGFmiGkWA5R/EDTFOX8LLf
O4fLvv6B73Ej3MKG79G9Je9Z9rs1QwWeguV6xJd+VnukfTaaQXxeMdicZsRm
HX39FQo+89Vg+TSP5jrHSTiARbHzevbO9+g/rfs8da5XvME89Vm0vEnPkAk2
q1SwXrpehIlomTV7g6/ruVqwnB3R3lXvHYj2r7qub/LpvS/g2d/pxeeR832H
3vcIvvy99N2EXguoFVeDZf4Ldl77/OL+aP/ch/8BOJZHPA==
               "]], 
              PolygonBox[CompressedData["
1:eJwtkrsvw1EUx++thkElSEhoBYtIh1YkhlYkEo+YK2FRg3gu9ab/AoNHtBVh
VImFwYCYkNiQmGyCYjQq4vE5uWf45Hzvued3zrnn/OqHJmMJjzGmCbxwB7VQ
AY/wYI3px/bBPfoHetFx+EMv8/ESBKAGEviauWuDefQ1xNA9kEEvWHcn5030
GtYHJbAOaXKkNKfk3rIuVmreojshqD0adCsxY8hRiKLf8Q0YV/MG/Yx9ggM4
hFM4gRy8wBQxLcbl7EC/YSuhDgo4F5GzEEIQBq91dxLfhfZDAO2HUuty5rSm
1I7ii0AIwjCn75cZzaKntX47zFg3Q5nlBzoPK/iLdUarcMTdCHYY9iVOa0sP
eZjAN+5xb5S3Sg7J9QlfkLSultScRP9al0tyGo97U1Dvu9Fn1u1e/oEr9B5k
YRt2oEr7kflXoxs87t+QnTSiz3W30v+xxkis7Ohb+uG8CBucU7oj2VUc3yCU
Q5nuQHaR0f9BZpi2LqdPd/YKWf13ZWa7ENF60mMQfYm9MK5mUmvEdWYyu3/D
nlSk
               "]], 
              
              PolygonBox[{{581, 580, 145, 13, 591}, {412, 411, 471, 86, 
               431}, {355, 50, 365, 313, 314}, {671, 100, 549, 660, 661}, {
               506, 505, 549, 100, 508}, {702, 701, 554, 101, 691}, {239, 27, 
               247, 194, 195}, {303, 302, 255, 28, 289}, {377, 64, 375, 421, 
               422}, {472, 86, 468, 529, 530}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.355266476343226, 0.7704683626137359, 0.4675345013224258], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJxNkj1SAkEQhbfBOwhki2QuCyT8LCQgLIn8GVgCmQfQ8ucGhsZ6FWIPoMfQ
0FwtyzfVn1UEr7p7pvt195uJL6/PrgpRFOVCUagJZeFI6AonQo/7ibAkHgsZ
92PONsJCWAsDaqbUrIjnwgU5OXl9uPM9P4M38M+oezbne5WtyiZCHRsLx8Kj
7oayD+YcDWa7VdyWvZGtsGMN3jVzh14j+pXQoEzOjLmXzBfyo4Lv/GteO2fm
wNGJfI5v3W1lKwVH8MuyT+wSduqSP0Kn0GMLlujaR5MJPRb4TXbMONtQc2eu
7b055xR9M7ia2BZ+i3jAu4/QY8hsbfjH7Bn0qaLRGz0+zd8j1KfCqTn3ypwj
gaeB9ikcdXgOiUucdeD6f+MOOTF5RXP/Q/gxf8cvc66UHrn5v5jw/gn/ZAfX
i/COv6Oux4wp/XvMV9+bOYbr3Fy7rXmPwH0g+wekKjup
               "]], 
              PolygonBox[CompressedData["
1:eJwt0jsoxWEYx/H/6xKxuJQ7dWQzHFIGLBQWchnkUhQWErkMjtHoLAZMxOTE
QrG4RCIGl8WChZLLxigk31/vM3w6v///vO/b8zz/N9Q/1j4aFwRBBRLQwEM9
WtCKNaxiEUsYxhD2WLuPT3zgFGdGeZo1EbS5ICjjuRwd5BM0k+swT/5GF7kT
X+RqVCGsfdjm/RZ6Oasvzu/R3lpEna9Jtc0hilnn/6vEBDkLJeQwGsnjzv9X
ql6d71G9rvMcQy65h99uBORMZCAJyXjWGuThJfA19dpMNJsPzmwL/Bk/5Dd+
Q8jGK4p5F0I+CvDqfO+ayZX1HLY1Wntie3NwiSne1agXLJIHMWAz0+wSna9N
Pav3qM2mEEVIcL531RSv+WILBzi0mlRbGtKNcgpSMeL8t1QNk+QVLNsZOivZ
ZhVGGWZ4F8E6Yrh2vnbN6IZ8a71ppg/YZM+G3TndvWMcYQe7ZsfWbNod011b
0DzwxJmPuMO9Uc6wbxmzWpat9nd9I9ujvbojuiu6s03kP+fvgu7or81IszrH
Bf4BeUtdRg==
               "]], 
              
              PolygonBox[{{496, 88, 486, 487, 488}, {387, 65, 386, 377, 
               378}, {167, 166, 203, 24, 211}, {218, 25, 227, 175, 176}, {347,
                49, 364, 355, 356}, {267, 266, 249, 26, 261}, {542, 541, 504, 
               88, 496}, {455, 454, 460, 77, 449}, {186, 185, 229, 26, 232}, {
               232, 26, 249, 239, 240}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.4015582194289573, 0.7853238213399562, 0.45483508277928286`], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwt0j0vg2EUxvG2QQgLGhY06gu0VmY1kNCBQZOK6ELCTEc2HWrQToSpwtIm
LF7iJRrdWdTC1m71DfyvPNfwS57nfjvnPuee3NhN70RCodA0ulDg5wgTiKEQ
5h8HOESUsWH0og9t9rTQwR/arGnhB7/4Q8djmov57I7n9vnewwl7Sz5DZ72h
jnvcOYZi5diziRnMhoMclEsCSQww1o9u9OAVLyjiGNesucI5LiLBWNF31F0/
ifGBJr6xzZqtSJCDcrnw3hLKOGPPKaqoYQiDzkG5pFgzhyUsR4KclXsCSVxy
ZsUxFTuvmqCiOddQtfxC0zEU6wGPpu93NPBMjCfc4BbjjI05J+V26znVQLWo
EbOKLN/rlvWddfc0e5axglUsYsFjaY9pbg2ZcFCzps/U2Q3n9uJeZLxWPcz5
jhXXULUsu7Z6g3qLh357qknePVVvRzDqGqqWcUxZ3Hce9xqtTWHeNVQt9Yaj
7ol6ox6oF/Neu+C71v0W9Ub1Vv8BS7pmtw==
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.44784996251468884`, 0.8001792800661764, 0.44213566423613987`], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwt0jEvg1EUxvG3jVQISxEWRfgC7VwzBhI1MJAgYSHsGNnagYFOFaY2tbQJ
SxE0pHZd1KKbbu0n8H/SZ/gl9z3vvefee+6Z2j5MHYSDIEigB/t87KHC+BGT
jCfQDgVBxzT+Qwsj/BtGH/rRYs0f2ug4R8Ux/avjCw38YJAcA4igFwViec+p
e47mllDGLXvc4ApZvOIF93jAGDlGMY8FbBHb9J10txli0xhHDEOI+gw6S9l7
aY3WPhN7Qg2foe4e2quIOySIxZ1Tua+RQ0m5rOQcynXMmiNcsseVa6RaveMD
Teb84hsN1yTiO+luKdYuh7s1Uq2qxN5wjgucaA/kVUvH9C+NDDawjh3smsZJ
zGJFe2AVazjDqXOeOLbqHMqV4Sxp94h6ZcG1X8SS90w7h3LNM2fOd9BdCj5r
zrXL+m2VM+OeUm/FVetwt0aqlWp47DcouifUGy33pmrY9JvVXKOqz7ToO674
zkm/YcI1V+3V0+rtmHsl6l75B6A7Z38=
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.4941417056004203, 0.8150347387923967, 0.4294362456929969], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwt0btOAlEQxvHdjQlGI41ipFFJ8AWgxlosJAELLTTRQhsvDyCU2kGBhVhp
tIJIg4k2XuIlGOy1cW2wgw5ewP/kfMUvwXN25nwzJrYP8weB53kpjGCfP/bw
wO9HrPuet4YNbCKHFRSwiilMYgJRfFPzhRC/nqux2h3s+q6n9e6hjwbqqrHa
W7SwRYbtwPUIdWZ3Ub0VwSiKfHOEM+5qmONsVpksW5a7JeRRCFzmgmay2frK
MsAQH2h7rqf1vuSbC7Rw67se1quu7EPVtlWb5psUkljw3Qxb2qntNs7ZjOXC
smS105x2ZLvKYFE9kprJZnulxwvucI9rXKGG88BltKxPeMYQA/RsVjRQ10w2
W4gfxKidRgVlzCMRuB7Wq4NP353Z3UC9KyjjGCfKnNEObBdNvr1RRss6jjGk
kNabMZ3Z3Ts1b6jiVP/jiHYW1ww2Sxd/0tUMoWqqylRRJstWREkzdPSGvXWv
XVrGpnZY0w5sFyXV1rW7f0SoaEc=
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.5404334486861518, 0.829890197518617, 0.41673682714985383`], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwt0r1OQkEQhuE9xkKj0cafYCOY4AUItdZioVEosNAEC23UGxBK6aDAQqgw
WGGkgUQblfgTjfbSiA12nA4uwHdyvuJJYM7O7szsRjKn2ycjzrkVjGKJPxEM
POeGKPK7oJh9O0AGx7DEFGuSSGMXk8QmEEMc16ihjAoSWMcOkiiSU8A58vig
hnec8S2Le9zhFg28seYVJVzgC5+K2beKzrKai9rD9rpkzzKOWHOIVaxhHGMI
YQHzrJ1TD9bLPrE95VjuDXvU8Y2OC3pOa42t7eLHC/awvab5PaUz7KwXYs/q
yXrLq/cscmixZ9MFM7ZZ+8T66OHPzkcdVVx5wQxtllaT1TZLbEZn2tlb2NQd
pdSz9R5D3Avu0O7ygdxHF5zRUw/WSxtPmrHNehlRLCLsBTmW24fvgjsp6U7t
bn19G2CIDWIJ1WS1/RLrqmfrPadZ1NVrQ3df01vqaPaWY7lx9RJVbWHVZjOw
WbTQVA9tvemBZuprhlWtaekNhFSj1TpU7fYm7W3+A2NLaQ8=
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.5928695135615069, 0.8435169385921693, 0.40459024291598555`], 
            GraphicsGroupBox[{
              
              PolygonBox[{{331, 37, 282}, {404, 76, 453}, {399, 76, 404}, {
               336, 37, 331}, {453, 76, 459}, {346, 38, 341}, {282, 37, 
               265}, {459, 76, 448}, {265, 37, 271}, {277, 38, 288}}], 
              PolygonBox[CompressedData["
1:eJwt0a1OA1EQhuGzBAlBNcVCgd5AV1MNhhBWQ6ACDHsFtBIcWIqCFLUbatqk
mCJAwBUU02KoK671vF/2E08ymfMzc+ZsnKaHl0shhC0sI45CqGEHVSSKyW/j
gHgtKmLlSsQXOMcu6mhw2Rl0aYobctdoooVVciuoIcYdbrGJCk7Yc+w7dfc+
uT0cIcED2j6jsy3fnSHHBGOUWVvHH/EMv5jig9w7BnhFFy/o4Nm5gXNd5zqu
qdq5az3iCV/M4RNXrDVVj3iGORbooxeKmWg2C6/pjM7+YOI92jt1r2O/JfUs
h6y9IUeGEb5D8cayZ6rZ1v0X+sPYParXHvpRcWbkmqqtntX7PXFbPbNn7plp
dolnn7m2ehj6jXprxX+nMzr7D2NZUrw=
               "]], 
              
              PolygonBox[{{295, 294, 288, 38, 298}, {437, 436, 448, 76, 
               440}, {440, 76, 399, 391, 392}, {298, 38, 346, 351, 352}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.65835858954496, 0.8545333891050814, 0.39361810113923024`], 
            GraphicsGroupBox[{
              
              PolygonBox[{{536, 97, 478}, {539, 97, 642}, {478, 97, 485}, {
               525, 97, 536}}], 
              PolygonBox[CompressedData["
1:eJwt0bFOwlAUxvHbxhchkmh01llmnUxkBqMDDsITgCNuuAoTBKc2skCsCw46
yBPoJC9QNpj9f7nf8Euae3vO+XpauW5f3qchhAr28IElSmywwxbfWCFHhh/8
4jAJ4QBHOMYEY8yxwClO/I7evWXYDdroYMfZFiU2Seyp3n9Yh9hDvd5Q4IKa
c1yhnsaZmt1AM4lnusuctcrzfhpnaFaOzBmVteMsS397jbMzZ1b2d+4KvGKG
EYYY4MkGnqFZX/h0jWqbztbCHV44m7qHevXQxTOzh9556Z1r9w/U9Jw5d4+W
Myrryv+m614Lnuch7li7Lry7Ph6t757qvfauVaPamb9VGZX1H99MTvo=
               "]], 
              
              PolygonBox[{{494, 493, 485, 97, 539}, {642, 97, 525, 565, 
               566}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.7238476655284132, 0.8655498396179935, 0.382645959362475], 
            GraphicsGroupBox[{
              
              PolygonBox[{{539, 98, 494}, {217, 14, 173}, {182, 14, 224}, {
               238, 16, 192}, {224, 14, 217}, {246, 16, 238}, {647, 98, 
               645}, {502, 98, 548}, {601, 14, 603}, {202, 16, 246}, {627, 16,
                629}, {494, 98, 502}}], 
              PolygonBox[CompressedData["
1:eJwt0L0SwUAUhuG14xZcgE4m6mxNTaOglhmKmPFzBYIqOlpJxVDFRCMjqbku
786e4pnZnP35zkk7XI2WWinVQhMxH1tcWKcwDaUCdOChCx9ThNghRo4nSrzx
QYUbrlIrpWb3EhwxJ2uGNTZ4ocAdD+0ybFaEBQ7U9ghg8MMXFWrt3kykJ9tb
LXuFvO3JLL7MMqQ2wBgTybTZKTL0OdOTf2BkxlxmsrNlcvaEs3Y9RnLH3v0D
qNsrzg==
               "]], 
              
              PolygonBox[{{629, 16, 202, 639, 640}, {658, 657, 548, 98, 
               647}, {603, 14, 182, 613, 614}, {625, 624, 192, 16, 627}, {599,
                598, 173, 14, 601}, {645, 98, 539, 642, 643}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.7893367415118663, 0.8765662901309055, 0.3716738175857197], 
            GraphicsGroupBox[{
              PolygonBox[{{439, 75, 420}, {420, 75, 430}, {300, 39, 297}, {
               430, 75, 385}, {311, 39, 322}, {442, 75, 439}, {354, 39, 
               300}, {363, 39, 354}, {394, 75, 442}, {322, 39, 363}, {297, 39,
                311}, {385, 75, 394}}], 
              
              PolygonBox[{{600, 599, 601, 602}, {646, 645, 643, 644}, {604, 
               603, 614, 615}, {648, 647, 645, 646}, {680, 679, 669, 670}, {
               644, 643, 567, 568}, {630, 629, 640, 641}, {700, 699, 689, 
               690}, {641, 640, 156, 157}, {711, 710, 699, 700}, {670, 669, 
               658, 659}, {628, 627, 629, 630}, {690, 689, 679, 680}, {626, 
               625, 627, 628}, {602, 601, 603, 604}, {659, 658, 647, 648}, {
               615, 614, 625, 626}, {590, 589, 599, 600}}]}]}, {
            EdgeForm[], 
            RGBColor[0.914809, 0.897673, 0.350652], 
            GraphicsGroupBox[{
              
              PolygonBox[{{648, 126, 127, 659}, {680, 129, 130, 690}, {646, 
               125, 126, 648}, {659, 127, 128, 670}, {602, 117, 116, 600}, {
               568, 132, 124, 644}, {628, 121, 120, 626}, {604, 118, 117, 
               602}, {630, 122, 121, 628}, {157, 115, 123, 641}, {700, 131, 
               133, 711}, {626, 120, 119, 615}, {644, 124, 125, 646}, {670, 
               128, 129, 680}, {641, 123, 122, 630}, {615, 119, 118, 604}, {
               690, 130, 131, 700}, {600, 116, 114, 590}}]}]}}, {{}, 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{590, 600, 602, 604, 615, 626, 628, 630, 641, 157}], 
              LineBox[{711, 700, 690, 680, 670, 659, 648, 646, 644, 568}]}, 
             "1.7999999999999998`"], 
            Annotation[#, 1.7999999999999998`, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{156, 640, 629, 627, 625, 614, 603, 601, 599, 589}], 
              LineBox[{567, 643, 645, 647, 658, 669, 679, 689, 699, 710}], 
              LineBox[{311, 322, 363, 354, 300, 297, 311}], 
              LineBox[{430, 385, 394, 442, 439, 420, 430}]}, "1.74`"], 
            Annotation[#, 1.74, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{155, 639, 202, 246, 238, 192, 624, 613, 182, 224, 217, 
               173, 598, 588}], 
              
              LineBox[{566, 642, 539, 494, 502, 548, 657, 668, 678, 688, 698, 
               709}], 
              LineBox[{310, 321, 362, 353, 299, 296, 310}], 
              LineBox[{429, 384, 393, 441, 438, 419, 429}]}, "1.68`"], 
            Annotation[#, 1.68, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{154, 638, 201, 245, 237, 191, 623, 612, 181, 223, 216, 
               172, 597, 587}], 
              
              LineBox[{565, 525, 536, 478, 485, 493, 501, 547, 656, 667, 677, 
               687, 697, 708}], 
              LineBox[{309, 320, 361, 352, 298, 295, 309}], 
              LineBox[{428, 383, 392, 440, 437, 418, 428}]}, 
             "1.6199999999999999`"], 
            Annotation[#, 1.6199999999999999`, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{153, 637, 200, 244, 236, 190, 622, 611, 180, 222, 215, 
               171, 596, 586}], 
              
              LineBox[{564, 524, 535, 477, 484, 492, 500, 546, 655, 666, 676, 
               686, 696, 707}], 
              
              LineBox[{308, 319, 360, 351, 346, 341, 336, 331, 282, 265, 271, 
               277, 288, 294, 308}], 
              
              LineBox[{427, 382, 391, 399, 404, 453, 459, 448, 436, 417, 
               427}]}, "1.56`"], Annotation[#, 1.56, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{152, 636, 199, 243, 235, 189, 621, 610, 179, 221, 214, 
               170, 595, 585}], 
              
              LineBox[{563, 523, 534, 476, 483, 491, 499, 545, 654, 665, 675, 
               685, 695, 706}], 
              
              LineBox[{307, 318, 359, 350, 345, 340, 335, 330, 281, 264, 270, 
               276, 287, 293, 307}], 
              
              LineBox[{426, 381, 390, 398, 403, 452, 458, 447, 435, 416, 
               426}]}, "1.5`"], Annotation[#, 1.5, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{151, 635, 198, 242, 234, 188, 620, 609, 178, 220, 213, 
               169, 594, 584}], 
              
              LineBox[{562, 522, 533, 475, 482, 490, 498, 544, 653, 664, 674, 
               684, 694, 705}], 
              
              LineBox[{306, 317, 358, 349, 344, 339, 334, 329, 280, 263, 269, 
               275, 286, 292, 306}], 
              
              LineBox[{425, 380, 389, 397, 402, 451, 457, 446, 434, 415, 
               425}]}, "1.44`"], Annotation[#, 1.44, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{150, 634, 197, 241, 233, 187, 619, 608, 177, 219, 212, 
               168, 593, 583}], 
              
              LineBox[{561, 521, 532, 474, 481, 489, 497, 543, 652, 663, 673, 
               683, 693, 704}], 
              
              LineBox[{305, 316, 357, 348, 343, 338, 333, 328, 279, 262, 268, 
               274, 285, 291, 305}], 
              
              LineBox[{424, 379, 388, 396, 401, 450, 456, 445, 433, 414, 
               424}]}, "1.38`"], Annotation[#, 1.38, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{149, 633, 196, 240, 232, 186, 618, 607, 176, 218, 211, 
               167, 592, 582}], 
              
              LineBox[{560, 520, 531, 473, 480, 488, 496, 542, 651, 662, 672, 
               682, 692, 703}], 
              
              LineBox[{304, 315, 356, 347, 342, 337, 332, 327, 278, 261, 267, 
               273, 284, 290, 304}], 
              
              LineBox[{423, 378, 387, 395, 400, 449, 455, 444, 432, 413, 
               423}]}, "1.3199999999999998`"], 
            Annotation[#, 1.3199999999999998`, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{148, 632, 195, 239, 249, 266, 272, 283, 289, 303, 314, 
               355, 364, 371, 372, 405, 406, 461, 462, 495, 507, 538, 537, 
               512, 510, 508, 506, 504, 541, 650, 661, 671, 681, 691, 702}], 
              
              LineBox[{559, 519, 530, 472, 479, 487, 486, 460, 454, 443, 431, 
               412, 422, 377, 386, 370, 369, 326, 325, 260, 259, 231, 230, 
               183, 193, 203, 166, 591, 581}], 
              LineBox[{606, 175, 227, 229, 185, 617, 606}]}, "1.26`"], 
            Annotation[#, 1.26, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{147, 631, 194, 247, 248, 252, 255, 302, 313, 365, 366, 
               373, 374, 407, 409, 463, 465, 509, 511, 550, 552, 572, 571, 
               570, 569, 554, 701}], 
              
              LineBox[{558, 518, 529, 468, 471, 411, 421, 375, 376, 367, 368, 
               323, 324, 256, 258, 210, 225, 165, 164, 140, 142, 143, 144, 
               145, 580}], 
              LineBox[{174, 605, 616, 184, 228, 226, 174}], 
              LineBox[{503, 540, 649, 660, 549, 505, 503}]}, "1.2`"], 
            Annotation[#, 1.2, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{141, 135, 163, 162, 209, 257}], 
              LineBox[{146, 204, 206, 251, 254, 301, 312}], 
              LineBox[{408, 516, 551, 553, 573, 575}], 
              LineBox[{469, 410, 470, 467, 528, 517, 557}]}, "1.14`"], 
            Annotation[#, 1.14, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{139, 134, 161, 208}], 
              LineBox[{207, 205, 250, 253}], 
              LineBox[{464, 555, 574, 576}], 
              LineBox[{526, 466, 527, 556}]}, "1.08`"], 
            Annotation[#, 1.08, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{138, 160}], 
              LineBox[{515, 579}]}, "1.02`"], 
            Annotation[#, 1.02, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{137, 159}], 
              LineBox[{514, 578}]}, "0.96`"], 
            Annotation[#, 0.96, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{158, 136}], 
              LineBox[{577, 513}]}, "0.8999999999999999`"], 
            Annotation[#, 0.8999999999999999, 
             "Tooltip"]& ], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}}], {
        DisplayFunction -> Identity, AspectRatio -> 1, 
         AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, 
         Frame -> True, FrameLabel -> {{
            FormBox["\"\[Beta]\"", TraditionalForm], None}, {
            FormBox["\"\[Alpha]\"", TraditionalForm], None}}, FrameStyle -> 
         GrayLevel[0], 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "GridLinesInFront" -> True}, 
         PlotRange -> {{-1.5707963267948966`, 
          1.5707963267948966`}, {-1.5707963267948966`, 1.5707963267948966`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   StyleBox[
                   "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), SubscriptBox[\\(B\
\\), \\(eff\\)]]\\)\"", {FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False]}, {
                   GraphicsBox[{{}, {}, 
                    RasterBox[CompressedData["
1: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
EP4HhqN6gg==
                    "], {{
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}}], {Antialiasing -> False, 
                    AbsoluteThickness[0.1], 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]], 
                    LineBox[
                    NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                    7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                    112.5}, {7.5, -112.5}}]]}, {
                    CapForm[None], {}}, {Antialiasing -> False, 
                    StyleBox[
                    LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{
                    7.5, -52.659574468085104`}, 
                    Offset[{4., 0}, {7.5, -52.659574468085104`}]}, {{7.5, 
                    7.180851063829787}, 
                    Offset[{4., 0}, {7.5, 7.180851063829787}]}, {{7.5, 
                    67.02127659574468}, 
                    Offset[{4., 0}, {7.5, 67.02127659574468}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -100.53191489361701`}, 
                    Offset[{2.5, 0.}, {7.5, -100.53191489361701`}]}, {{
                    7.5, -88.56382978723404}, 
                    Offset[{2.5, 0.}, {7.5, -88.56382978723404}]}, {{
                    7.5, -76.59574468085106}, 
                    Offset[{2.5, 0.}, {7.5, -76.59574468085106}]}, {{
                    7.5, -64.62765957446808}, 
                    Offset[{2.5, 0.}, {7.5, -64.62765957446808}]}, {{
                    7.5, -40.691489361702125`}, 
                    Offset[{2.5, 0.}, {7.5, -40.691489361702125`}]}, {{
                    7.5, -28.72340425531915}, 
                    Offset[{2.5, 0.}, {7.5, -28.72340425531915}]}, {{
                    7.5, -16.75531914893617}, 
                    Offset[{2.5, 0.}, {7.5, -16.75531914893617}]}, {{
                    7.5, -4.787234042553191}, 
                    Offset[{2.5, 0.}, {7.5, -4.787234042553191}]}, {{7.5, 
                    19.14893617021278}, 
                    Offset[{2.5, 0.}, {7.5, 19.14893617021278}]}, {{7.5, 
                    31.117021276595743`}, 
                    Offset[{2.5, 0.}, {7.5, 31.117021276595743`}]}, {{7.5, 
                    43.08510638297872}, 
                    Offset[{2.5, 0.}, {7.5, 43.08510638297872}]}, {{7.5, 
                    55.0531914893617}, 
                    Offset[{2.5, 0.}, {7.5, 55.0531914893617}]}, {{7.5, 
                    78.98936170212765}, 
                    Offset[{2.5, 0.}, {7.5, 78.98936170212765}]}, {{7.5, 
                    90.95744680851064}, 
                    Offset[{2.5, 0.}, {7.5, 90.95744680851064}]}, {{7.5, 
                    102.92553191489361`}, 
                    Offset[{2.5, 0.}, {7.5, 102.92553191489361`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.5\"", 0.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -52.659574468085104`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 7.180851063829787}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.5\"", 1.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 67.02127659574468}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                    Scaled[0.02], PlotRange -> All, Frame -> True, 
                    FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                    Opacity[0], FrameTicksStyle -> Opacity[0], 
                    ImageSize -> {Automatic, 225}, BaseStyle -> {}]}}, 
                 GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ),
           InterpretationFunction :> (RowBox[{"BarLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.122103, 0.00901808, 0.39826], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.081402, 0.006012053333333333, 
                    0.26550666666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.122103, 0.00901808, 0.39826]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.122103, 0.00901808, 0.39826]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.122103, 0.00901808, 0.39826], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3141592653589793`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.0839935, 0.279645, 0.510102], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.055995666666666666`, 0.18642999999999998`, 
                    0.34006800000000004`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.0839935, 0.279645, 0.510102]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.0839935, 0.279645, 0.510102]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.0839935, 0.279645, 0.510102], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6283185307179586`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.097699, 0.498132, 0.548165], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.06513266666666667, 0.33208800000000005`, 
                    0.36544333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.097699, 0.498132, 0.548165]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.097699, 0.498132, 0.548165]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.097699, 0.498132, 0.548165], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9424777960769379`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.175507, 0.652273, 0.528496], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.11700466666666667`, 0.43484866666666666`, 
                    0.3523306666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.175507, 0.652273, 0.528496]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.175507, 0.652273, 0.528496]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.175507, 0.652273, 0.528496], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.2566370614359172`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.329526, 0.762208, 0.474596], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.219684, 0.5081386666666667, 
                    0.31639733333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.329526, 0.762208, 0.474596]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.329526, 0.762208, 0.474596]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.329526, 0.762208, 0.474596], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.5707963267948966`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571909, 0.839991, 0.408102], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3812726666666667, 0.5599940000000001, 
                    0.27206800000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571909, 0.839991, 0.408102]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571909, 0.839991, 0.408102]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.571909, 0.839991, 0.408102], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.8849555921538759`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.914809, 0.897673, 0.350652], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6098726666666667, 0.5984486666666667, 
                    0.23376800000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.914809, 0.897673, 0.350652]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.914809, 0.897673, 0.350652]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.914809, 0.897673, 0.350652], Editable -> False,
                     Selectable -> False]}], "}"}]}], "}"}], ",", "#1"}], 
                    "]"}], "&"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1.8849555921538759`"}], "}"}]}], "}"}],
                ",", "None", ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               
               RowBox[{
                "LegendLabel", "\[Rule]", 
                 "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \
SubscriptBox[\\(B\\), \\(eff\\)]]\\)\""}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
               RowBox[{"ScalingFunctions", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
               RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
               RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], 
             "]"}]& )], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[
        GraphicsComplexBox[CompressedData["
1:eJyFmnlczfn3x+3GEo1lhBFiQhLC2J0sWbONZoahsVeWyYxt7NlHDEJNdtmy
JlLI0sFYhm+WFJGQuu3b7Xa3pujn57w/5/PoHY/xh/N4drufe3q/3+e8X+ec
23zKnO+mVyhXrtyuD//9v7VqN8C1qHkhyjZRu3dh+8Z65lEzsjrebZ0rva6R
OJa5nPgnvQ7S+0F6vvS6HiS/QPZLYdkq/pb+uUbiWGbFX+l1kN4P0vOl1/Wy
fyCvm+yXwrJV/C3NscyKv9LrIL0fpOdKr+tl/+DT+yqvm+yX5jM2lrn0+mqk
9dVI66uR1lcjra9G8je2zDmU91lex0/7qdrS/sZK/sZK/sZK/sZK/rJ/IMeF
fO7kfZXXTfar3Gf+Kf5K72dW/JU+X/ZP8R/kOJbjRD6Hn95ndR1lPz9teX1B
Wl+Q1hek81smz8hxLMfJp8+hus/yOn7aT9VK51fyl/0DOe/JeUWOWzku5HMn
76u8brJf0vOl1/Wyf/xzOU/LeVDOM5+OYzVO5HP46X3WlPFL+nzZP9l+7h75
rzz4X3H8X+fwv9aRbbN+W6suCDBz/np0yhBiDjEwOxzLwu25xjL38Q2PU86b
2puZa81+fOtSnoE5fMz4ul5rCpgP2XU6kuuqxf6RQ3wXHjKWuc/9psdEhndJ
x6CVKzum1CjEY4dOld8wLxZDx67o/1t9Nc+WbNsTphmt5lnl/V7heUfG/fsE
M5dHxE9102PEVbtUtzox8uvg2xvrrrAwlNEL2+nzed8ukv8g+c98NdLy2TwX
A/zXOijr+Ll1tgu6Z9/NScc//zMYHhV+VYjndBuntMmLgSp1gpduTdfj2ZaV
DpU7fQJ+bjrxVDcrNS9W3phVUTfFgNL5LfPclxnVAnbOyELb6GYhC9/reD/n
bOtsu2GfCbdELG80pM5b+GfpjE3Xyxtw1deP7s0Lj+PnnT0Qn+FV/xnavg92
tzmbz/tnPbrdOtivxwnnru0Y2TwFEn1bhwwfbuK8sG9N9zrLBpfVL4NXNquR
UPyG+aZ2sUV8qzioM6gg2Oq5GeOruzx2iS6A/yWOX7BxmAl3HAkLiByggzVL
bvUqjjTgsD5NJna4pIWe9dpV8nLUY5WzNYYP+DEX6p3XZ9w6w+sMaxf3BY8B
RpTiFftve7Znkm8O89WdX669EFTAvP3x436TT+ZC0eNl4bd2mFBYfr0ZfQ7z
RvocCKRzwXErx8EBEQeyPrMXcabsk5SPy+ybT+ayXypFZ7JVfv71FCeHKA8d
jo1JTvEMS4QHDTtO6+unxfnrNh4OahQPdi4999naK+dCA8sv/b5ti5WWuc/g
+yEF7qquGj94/fhNUVocaBVZtGJTGjz7ttjn9twC3s8q+bNjzGYNXtZGNXTv
nYyRZ+f/YhORyfG5bl+6/2u3AsVCdosOw4dYqHk7J+q10wSfAubcBZs7z6ms
sta6V+vVq/gcQ/7dzMb+7/KZdb/uqn18scr6hoMrXjFomQ03jcYHv6mcHTf0
6Y2XeerntTl+NS2mrD6dedyp66a62cwNc5d/fygiFQ6+8zz49Go25l62/aIh
BvG6n7KouHd/gHpvDl7/5dlJYXnMc0tqT9nmqWW+0bPBbJ1RZctF1gvHrMtn
/jnsm5VhdXXMwVr7jfUPqVxk39lvYYcC5qEzeu6PiywARxeXSTbVcji/vcux
n5RTRY9d7GJ7R1gUwoUqo6457i7A3H6m3e8DzTCn6bxGi9oV4LHxjcz9O5uh
dbe/fr92XYeT5vf+3ueuCd6Oioit4KrDhpsnhT78yQR7ZiR0HJyWjzFH19Su
l2sE19UlWzYvycc/I4Nmj1tlBIs9NtlPLPLROe7evf31jHD3vPMQq4NaLMnL
ttUcM8CqKM8gt85ajPjCcm2bngZYcL9B1YFb83Bu805vvR7qIb3I7cbj8A/x
0OOHPmGT9XCndPxAYOn44b/fO7TTpKSnZvVeTfl6t8dYlc82qBKbHW9iHjI0
z2Kum8pJy54PMr0xMi8NubFq2RSV6yWdvFI+xcB8up6fYb2Hys6Dlrevmame
n1eL3Wdsm62H++Ie2y/utS3inpPrnX7iXvxD5Fkl/ltoXk/9Z3gW1nxQNXzq
/Sg4Vzq+WDfIeVmJY8936yoOb52OedXm+M7skgAPbt8aMLVvDsd70l9JHp2X
ZTGbPMptqnwxg7lWd+szz/LTmFtW7xV9zD6VufvLcfpFHqqOjRR5oILICwfO
DG3Z40iOYiHSp2Hb0JHZKCy8npbe0a4oE4WFYrjY7VBQBgoLjRuvh0bfpaOw
0NPoOnD7u1QUFsZFtxhe/UQKCguLTuvGrHbVoLBgk+2w+vn5HM5X+ceLtv36
Rzbzjen/HPxifBazr43/uUAHzqfw85vJN7pVyGB22OsQ/fhpGnPx2KJEzxOp
zP+r/4+23PIU5l1P/MrtGlW2vuz8reX25c+eMXuOyEraXP4l8073O532279h
dsdR/eJOvWVeOSxy5sQbycyR9av5L52aDdZ/7b6VsjUHvf/es2/jh3hY0fxI
1MMd2djeJ7C5949meH06OPZiQBa+GXH06LwXJoBuFxMC92Sib72TbTzHm+DA
39c1Pgcy0Cn+TPCEV0YoGXE/e+7hdNQeON9x9EQjTIqP0Y8/loYHp18Kd35r
gOvTXxUPOJWKo9te695jqgGa5adWcghJwfL5N645pOhh1TJtzQbnNXjuwp2+
LTz0sKP0+Wf/u9U5m7HksZnZ9V1wi4kDVP4t/ZRb/0sm5s0xJwJa2at8IvJY
dI1AI/OdE0draOuqnOR32Dn2DwNzifdB70tFap3QeNaBiL1z9BAtdKNG6Ejl
HguWdOi/kg5V4jLEyW5QxpmnioUfDuaFJzWLR2HBXD68ZcL21ygsjOx47d7M
1W9RWDj0tukqjyvJKCyIc8LxJc4JszgnzOKcMItzwqzcW8o9ZmnX99Qit2e4
yCLP0rVXCtyrNmH5m0cv0HV58eI/DKmwImPhyIH9XmH7nGrJl8+kwx7NP74/
/JSINdwauOR6ZMLvrs8KfeomYVpUy/DmzbPB9VbylGtRyXirl6P19/E5MGpV
z70NT6t14q4dBsfop3HMSUdD7m0oiWdufWnGJKc2r5m7p2wrWnoiUY3H3Nw7
P/ZJYl5tGra9U0wy8+vpvV9VPhyLjw73nB46+8Pvp82bWXl3HG7VPGvrmJ4H
rz1Pmipti8fjdboXPj+nhQmZiWsrbXiFVc+vT9g5Jx9yw2tUWw2J6DEmFse2
08EZY9Cj8lfe4t2C5oetsnTg1bXfX6u+TcZWfnPWPz9eAC8aePye111Zb7XO
FOeBeemdvE1tJqt184zYxt98uzeP2T6/xcSDs7TMNuaIU62q5TM3LBlpDg5S
2bJK6oDOH/SwwlUtlm27/Fbl93XrvHbyLoAm9/xDt29Oxq67nHT2L80wfVmP
9812J+FLXR2r+ZPNcKb9myEhQW/R2yWl95U0ExiT1vj3Pp+ILYIuTq3gZYKl
9qNvBni/wbslPj5D9EaouWP3uLCdr3DWuAkhvkuMsKcwWfv43Eusfd7haVw5
I9hNarch5/4LPF+zfJH1h3iLuLOwaXVNHP7oHtPM3cIAQ9pdv2D77ikW4dGB
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

         "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
            EdgeForm[], 
            RGBColor[
            0.11414921530816496`, 0.5307205852073804, 0.5440065678992353], 
            GraphicsGroupBox[{
              PolygonBox[{{125, 1, 142}, {573, 121, 664}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.12783591718141288`, 0.5578345312469176, 0.5405467213648827], 
            GraphicsGroupBox[{
              PolygonBox[{{574, 573, 664, 665}, {126, 125, 142, 143}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.14269615055592594`, 0.587273293746671, 0.5367902190740732], 
            GraphicsGroupBox[{
              
              PolygonBox[{{173, 22, 175}, {644, 110, 513}, {216, 22, 173}, {
               621, 112, 651}, {647, 112, 601}, {127, 2, 122}, {144, 12, 
               176}, {601, 112, 621}, {589, 100, 646}, {141, 10, 167}, {167, 
               10, 163}, {163, 10, 139}, {587, 100, 516}, {516, 100, 589}, {
               228, 22, 216}, {662, 120, 659}}], 
              
              PolygonBox[{{659, 120, 110, 644}, {122, 2, 12, 144}, {143, 12, 
               2, 126}, {665, 110, 120, 574}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.15755638393043891`, 0.6167120562464243, 0.5330337167832638], 
            GraphicsGroupBox[{
              
              PolygonBox[{{622, 621, 651, 652}, {517, 516, 589, 590}, {123, 
               122, 144, 145}, {229, 228, 216, 217}, {164, 163, 139, 140}, {
               145, 144, 176, 177}, {645, 644, 513, 514}, {168, 167, 163, 
               164}, {128, 127, 122, 123}, {588, 587, 516, 517}, {217, 216, 
               173, 174}, {663, 662, 659, 660}, {660, 659, 644, 645}, {602, 
               601, 621, 622}}], 
              
              PolygonBox[{{174, 173, 175, 11, 172}, {172, 11, 141, 167, 
               168}, {576, 111, 647, 601, 602}, {590, 589, 646, 111, 
               576}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.17241661730495195`, 0.6461508187461777, 0.5292772144924545], 
            GraphicsGroupBox[{
              
              PolygonBox[{{661, 119, 657}, {151, 13, 146}, {159, 9, 158}, {
               193, 21, 192}, {642, 109, 638}, {158, 9, 138}, {172, 21, 
               174}, {626, 113, 631}, {645, 109, 660}, {528, 89, 466}, {575, 
               99, 463}, {192, 21, 170}, {631, 113, 653}, {130, 3, 124}, {466,
                89, 529}, {279, 33, 230}, {178, 23, 241}, {168, 21, 172}, {
               145, 13, 123}, {289, 33, 279}}], 
              
              PolygonBox[{{638, 109, 99, 575}, {660, 109, 119, 663}, {124, 3, 
               13, 151}, {603, 602, 622, 623}, {577, 576, 602, 603}, {591, 
               590, 576, 577}, {146, 13, 23, 178}, {123, 13, 3, 128}, {177, 
               23, 13, 145}, {514, 99, 109, 645}, {518, 517, 590, 591}, {657, 
               119, 109, 642}}], 
              
              PolygonBox[{{218, 217, 174, 21, 193}, {529, 89, 588, 517, 
               518}, {170, 21, 168, 164, 165}, {230, 33, 229, 217, 218}, {165,
                164, 140, 9, 159}, {623, 622, 652, 113, 626}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.19880512656539845`, 0.6689026336423888, 0.5203426616334674], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtkb1KQ0EUhPfeIFqlSZNGRAsLUYJFiIhgYR0LK8HuNjYhIiFgEZKgQbQR
TYyaUrSxVSFY+AQB8QF8AxsLHyDfsFN8zOzPmd2zu5gd7dXTEMIK5KDLoIFe
o7dJCBV8hr6gBfiAGuMd9Bm98x7tPaWmhr9B9xmv4pfQCboAnxCS6DU3gFm4
gG/mq+iD6mANX0fnyTrA/+LnXKuM/yTOl1h/R4vwBq/2fTiHGegpF/IwgqHP
Hbgf9TX2GcpU9r33t+DJ/arvS85r4q/Qdd9tGd2AQ3wTHbFvF/+DhjT2pf56
vs8Z/IXYo3otu1YZ25Dh22nMVb7eoGSvM/u+g+5y7FplbLl2E+34L07QL7+/
3q/l/9U/j937I0wBHc01cQ==
               "]], 
              PolygonBox[CompressedData["
1:eJwt0T0vBFEUxvE7YxmVBIVtbZTUEpEIalZUk1BNoxEru1kviRCrkyAkwiq8
JChWhy/AF5DQ0a8Wn8D/yTzFL/fsvXP23HPuYFaZX4lDCEMo4AufeMErttDj
swZOUPTeGbIohFHWYaTEt5gmnkWTeI+10/m76KBYyjqDQPzHUsIIfnCDfnTj
Ar8+V81HTJEziQUs4i3K/y/DBL/nUPY3+vYYy5yt4dQ5yq1gFUXyB9Dm/Bt9
7PWiCwmeXFt30F3r7C2xVrFJPBbntVP3tuF62hsn3va59hpxnqPcmmZLfBTn
d9P5ju+ku1VRw4G/V8114qZnrzs9Y9+z0swu8UEv71Heg3pRT22/qd72Hne4
wrVnrPxE8/EbFVzjHA9oOUe5iWdT9qwPUfd81cs/Xvk9bA==
               "]], 
              
              PolygonBox[{{290, 44, 289, 279, 280}, {194, 193, 192, 31, 
               206}, {476, 78, 528, 466, 467}, {627, 626, 631, 103, 625}, {
               189, 31, 192, 170, 171}, {160, 159, 158, 19, 169}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.2282205887814832, 0.6898986720449578, 0.5100485199142837], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtkL0OQUEQRmf3JlrNbehE6QEIKo+gUVNoJC5xC4lC5BZoKJGQqCSi9NN5
Bc8iJBqJOJud4uR8k9md/cm1onrXikgWAkgoYjzDI+iQY7zFadjBRHMCFXpN
XMQBNMhl/DAiNfIKn3AId+jTa+OB9bjcw0+chxd8NL/hAhnYwM/4+V8sepY7
s0BdIkfG73d7zzCHFEzhoHdwdxnru5b4qvNvcNQ1e+25NQvr61BnrPXt7g+q
+vYh/gPkQCUA
               "]], 
              PolygonBox[CompressedData["
1:eJwt0j0vBFEUxvE7E8muSkJjChImIdHQYL1U9gugQUJhld4aBLHBZ7AruysK
m/UJvC0lJaGgs+qVrBKl+D+5p/hlbmbOOfece6crsz69Fjrn+tCE1cC5FVRw
jiVkMIs5lFBEDR8YJXmGvEWMsx7CIFIYQURMO+p8/3Q+R7mveMMuMTvYQxZb
2LR3+raBZas/Fvoc5baybgt9jxXrSb1dEBcjwiW2Q5+rGvuhn0GzdCNGJ+86
0GD9hR98o593A0hjAvNYwCl1Wqz+FYatvs7gj7wqzxucoYxri1VPv5giftJq
pm0GzZJA0iQsRrEn5JSQxzGKVk89FNDMnkk4BIGPUewRcs7fQcrOVGcb2+y6
k8hmbtjMmj2PnN257r5ss6gH9VLDO+7xYLR+xgt62aPHzlRnG1hvjzyecIdb
O6Oq5ShXM2gW/SN120N7Ze3fOMAh/gElgFCf
               "]], 
              PolygonBox[CompressedData["
1:eJwt0L0OAUEUhuHZTWgl4gZEQoEgQdQuQaOhkdBgkeg0ZP3sKkRYP4VO5RII
V0CEO5EoNd7JTPHkmz2ze+bshGudkmUKIYLw4YE7bgjhihn8mGKMCXaGEEVy
S3rYwKFRn9qKdDFHknoCFgrsxck69QbrDBlFDF+eI/gI9b78zmO9hqPPd1Hl
3Qq6uofslUbKVP1kLWuqueX8J5xxwY+eZVKw/2L9NtSMctYFmmwNyI6e9Ui2
0DZUT9m7R+aQxwhDLPV/26a6G3lHNgI4CHWOPG+v7+xJ/gFUJyrJ
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.25763605099756787`, 0.7108947104475267, 0.4997543781950999], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJxNkbsuhFEUhf/zewGUM0gkOjFEXDIoRiFTkBCFyiAqJEwjCiIxRFxatwKN
F1AhkcnMCxiJyoO4DcL4dvYqFCvfOSfnnL322q3z+cmVOIqiIVSHtkMU9cJx
uAhn0AJ6YJ+BR/AL5Vj/wFE4hcbQB/tp+AlLaIR1Gf4Gv9NPoareVGADbEKN
6IT9MDwLXtNqz6Il0fZz/85SqBO1oQtUj3bRYOz3VuFjcF9PsFl1rF4aDeh9
QT7N753W17AmH0n+eVedW3sb/O0WPNefV+gGJdAl6ok9hy6YUZ7Z4Jna2s7M
h/WfVC9p+SnrrIQ2Yu/1EBZhi81BWVtWlmNT7Jl0wz7Vtfo5zc16yOiuvbnX
P0XlZbntoY7gPl7Qgbwda36WiWWTlf8J+KwsKzZv/VlFO7HPqgDXY/ewBje1
trPl4P3mg/dmPe7DdnkwLzXlkQo+P+v5O7jfhDI6Vf42h7fIZ/yqnpLq4Q+0
qUvt
               "]], 
              PolygonBox[CompressedData["
1:eJwtkz9I1GEYx3/vS0PnVNbiaRdRYBAoJCnWYlxNOtQNQdKVpEU5eA4iggSd
DhaNSkHmIujapERBDTV25aC0eM0FOtXdWZnn5+vzDB/eL8/7/p7/v1N3C7mR
mCTJRTgEZ0KSnIYmSMN7bM2QhndwkscZ2OJu25GuQBWuwQXe9cA0epGzEU7A
G1hVDPe3AmXYhI/wCVL4PgzXIRftG32bgbfQjS3PeQs60ffhHrTCWfiJ/Yf7
lO8n2IY5HyofdBs5tXu93egxbAOJvZlEL3huR+BVYjkolyxcgV/Y2ryGKswG
q1U1T6HnOI96zc+9JtX2FdZgxn3rzVN4HCyXq1BEl6DX+/cZvQs3ErPtoDs8
X9l01xVNy3YJPY/tJZThO7wO5lsxJoLNRL4vw7NgtoNewCh6x3utnlegH9tN
3wntRiHYW/XgHPp/sHnchrrvjHZHM9AsmqPd3YGWaDuU9v7V9J3m6TPULI/D
Md8B7cIGvtaD2XRXkh/fyQ/w23OV7Rs08DYFASK8CFZrH3wJNsOsx1TsIWyD
XmO/96zsMRV7GZa8p+ptzXPXDtXhfLTa1P8O38FW/0f0r6z57JWTcvsTbHfV
s7/oYrTdfACP0P+C5aqZ7qHHo93lfff3AYZyZ5o=
               "]], 
              
              PolygonBox[{{368, 57, 365, 421, 422}, {258, 257, 204, 30, 
               249}, {395, 65, 405, 355, 356}, {502, 501, 560, 92, 503}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.28705151321365263`, 0.7318907488500959, 0.4894602364759161], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJxNkUtOAmEQhKfhGLphIboiDDMbEMfdIOxgZi7AAeQK6hU8joleQNZeROUR
DFanPxIWle6/H1Xd/XeWq8VjK0mSvtAWusIV7w3+m3AtpMIA3+0N9SmxoUVf
zyJ/J2TUjnmn+B7LVZfLjixiE2qO6Lr+VCiEB2x2xnMLV8YsA+J9ckfxVrJ/
FtwLePYW/s6Cfybcoz+nLtNRGueU/YF/yy18tnd6Cmb03pL+CTo+56cF/1r2
g3utyZ12qvBd91J6texFK/qcuyZf8d5azHawyDXsMGbvklzDHi8Ws77KPlvU
PFloe9z/YGMx+6/sF//5jfYU7ZxbF2iV7Nrl5n77f/4jNKo=
               "]], 
              PolygonBox[CompressedData["
1:eJwt0j8sw0EUwPG7H4uaJCwqUUlLLYhaxIAEFQv9/VhIKpFi82dj829jM+qs
Y206tQY1acKASU0GEiZCJcL35d7wye/l7n7v3t29jqV1f80zxvShHr3WmATf
AUG8gyGdHyQ+xjDxFK6JK9bFc/gmvscdmknaggXieUQRQ8CYjzGMY5OxDZwi
hxRmsI8DjGIESUzqmMwd4ggFnCOPM9xSxw1CxI0oEsfQiZJxe8reaSzigjUl
zVHQnJI7g2WV0TPIWSqaqwsPKDI2Ydwd7RJvY0vPJGeLsEc73ojfUYPP2hS+
tOa8/iP/htGKF+ZflcSPqBp3JjmbhzrrxmTuEmV8aG1xfKLHureTO/hDN7XE
taaIvpG8VQNCCGOWdYGs599f62Kp+Yd42rrekB7Y0xqklprMY5X/V3QP2Sun
b3uCLJqsqy2hvfYkZ9Cekd4JaS3SI4G+UVpzSu5+z/Wa1NjmuZ5Ias9I7zxb
d7fyJlfac1G9U7nbst6V9Ij0SlZrq2ot/5aNWC4=
               "]], 
              
              PolygonBox[{{314, 52, 335, 320, 321}, {250, 249, 248, 40, 
               273}, {494, 493, 502, 81, 485}, {454, 70, 446, 447, 448}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.31646697542973745`, 0.7528867872526648, 0.47916609475673233`], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwt0b0vQ1EcxvFzr05qIWFhcAcNFh1q0UkTUmOrGwmRqE6ktprZ9D9g1lE3
NgY168DmWhhI2Fl8n9xn+CQn5+33luwd1Q/jEMI8criNQrjBNfo4QQdtHCOH
Efxy9w8pXvGAASY4G8cSithAFTXUkRBsFt+sf3CJC6R4QwWrfqO3Y8g7pmIX
MIdpzOiMv0axiQbO2DvFObqOWfOezpSzcleOyvWL9adrUC1T/DHpP/V3373o
uBdF11bCsmtQLe/4QBkrrqHiOyXvlX1Hdwd4jLKeqXdPGKLH3pV7ot684DnK
clJuXde2jybuceeZaXbr3FnDDnbjrEfqlWpUrdust9zDgmfadsyeZ5A6pmIv
8seCZ5b4T/19gFbsGpyDcmn5TG/0tulcFVOxh64179k2PDvlrNz/ASqfTHk=

               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.355266476343226, 0.7704683626137359, 0.4675345013224258], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwt0q9PQlEYxvEjgwQU3LRowABOCgYtmnSTYQRssolBsegmDbM0/Q8ka9SG
DYOQJWjzWjDgpl2D32c84bOdvffsvL9u9vCschoLISwjjp+ZEL4xxidGxF6Q
4pzGLDIoYhXrWMMGNn1Hd+NIoIVz3OLOd3R3C9s4xhH2UXdM38rYdY6icyjX
IhYwoaYvPHHuo4dH51CuG3SxR3M17KCEN2KvmOM8j2vOV65BteSRcw7lGpDj
2TPQLKrEKrhEBw+4RxsX1nbPLdfU8x3dLbmWAzRi0xlr1gMMUSC2giyWcIKm
YwXH9E070q4+ELkn9aae1FsSKUt6BprF0Lk0M80uoqd396heu55d5LcT3uUv
3/7CdCdlz0CzaLiXpmvVTiZ+U2/XvducZ6s39FbG/1LHs9QOtIt/kFRNGQ==

               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.4015582194289573, 0.7853238213399562, 0.45483508277928286`], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtkrEvQ2EUxb/X0Em7VMJCgkGTWhhYdKpEw4Z200SX0oGBTWc2/gOda9RN
Nx0w66CbZ2EgqZ3E7+Sd4Ze83O/ee+49983VT3aOUyGEPIzBWhTCKqxDEfKw
CDMwC1WSK7AJZdgjtgsXcAktOIdTOIMMOROuUW2X2J1zWq5R7RVcwzQ5U65R
7TOxJ3iAPrThBmJ4d41qG3CoXHZ4hBcYwCexD/dQr23Y8sya/Y+cX8jxPWkN
ad1DD2qwbw/kRUzumzWklSY2HiU91KvOzAdwBE0Y8vYaJTtpt6K9LcEGrMCy
PZf3C+TMw4jvH8jKQ2ukXVPyDtql7FtIU9qqGXln7d70LAVYSiU30W06cBsl
sYI1pT2wdxlry5OcZ9Ss37x92QN50bNXumnXN4m989A3adjDmjU7vmHb/5T+
LfVU73/u8k25
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.44784996251468884`, 0.8001792800661764, 0.44213566423613987`], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwt0bEvQ1EUx/HbF2HyLJWwaESHNmFhYGHSRMMkpRtJLaoJi241s9V/oDMj
m24MnpmBre3CQFI78f3l/YZPcvN67+k55zdbO9k+jkIIBYxgLBPCKH45/2HA
uY83vGMfeyigiCUsYhkrqOPQd3T3Ex9I8Iwu7nGLO9dU7SmamMYF53O0cema
qr2KNTRximvc4IA3NRyhgS2+baKCHfxg6B7UywJ35jGHfJTWVO11lDCJrGfS
bI94cM9d/6f++wod99j2zHXPmPiN3ibs8AkveA3pjJp1HHGUftNvMXcn8M35
Cz30recaqlX07meQ85vYmSm7MjU3vBPtRhkqy6xna3hX2oF20fEsynjgTJRN
C2eZtEf1uotqlH5rOYOmd1xxZsou790Ovfuce9VMmq3qWupRvZa8e2Wm7P4B
WHlOWQ==
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.4941417056004203, 0.8150347387923967, 0.4294362456929969], 
            GraphicsGroupBox[{
              
              PolygonBox[{{254, 41, 263}, {312, 41, 307}, {307, 41, 277}, {
               277, 41, 254}}], 
              PolygonBox[CompressedData["
1:eJwt0S1PgmEUxvH7cWawSgGdBNjkI2iCTafFDbDBkKI4TdAwS8NvgFkjNmwY
wCxBG1Ak6CZfwP+15wq/8JxzH84LO43bs5uNEMIuNnHMxxEu0MQ5qo4pl8Ue
/qIQ1njFCEO8OKbcN1ZI8XYbCSRxSuwEZVRwiAMUUYriNwn3VO93YlOM8WZj
91TvJRb4xBc6aOMJz6plpwk+MMMvfjDHAhnepKM4ptzKs6unetdRQw5591Av
7aTdSp5dO2m3K1y6RrVN37KFaxSw7xtmHWs5ptzMsyap3fIO2mWAxyieee6d
tFuP2D36ePBNy471PHPOO2b8GwPfbOmavmfW7Hfo+oYd/6dDx5T7B5jSSCU=

               "]], 
              
              PolygonBox[{{278, 41, 312, 318, 319}, {272, 271, 263, 41, 
               278}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.5404334486861518, 0.829890197518617, 0.41673682714985383`], 
            GraphicsGroupBox[{
              PolygonBox[{{620, 101, 612}, {288, 43, 298}, {475, 79, 484}, {
               612, 101, 586}, {527, 90, 538}, {558, 101, 620}, {202, 32, 
               227}, {214, 32, 202}, {586, 101, 600}, {490, 80, 499}, {43, 32,
                42}, {326, 42, 319}, {319, 42, 278}, {79, 90, 80}, {278, 42, 
               272}, {459, 80, 490}, {227, 32, 239}, {453, 80, 459}}], 
              
              PolygonBox[{{402, 401, 362, 363}, {600, 101, 90, 527}, {538, 90,
                79, 475}, {499, 80, 90, 549}, {375, 374, 428, 429}, {445, 79, 
               80, 453}, {333, 43, 42, 326}, {272, 42, 32, 214}, {363, 362, 
               352, 353}, {429, 428, 417, 418}, {239, 32, 43, 288}, {394, 393,
                401, 402}, {549, 90, 101, 558}, {438, 437, 382, 383}, {343, 
               342, 393, 394}, {383, 382, 374, 375}}], 
              
              PolygonBox[{{430, 79, 445, 437, 438}, {334, 43, 333, 342, 
               343}, {418, 417, 484, 79, 430}, {353, 352, 298, 43, 334}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.5928695135615069, 0.8435169385921693, 0.40459024291598555`], 
            GraphicsGroupBox[{
              
              PolygonBox[{{383, 68, 438}, {375, 68, 383}, {343, 54, 334}, {
               418, 68, 429}, {402, 54, 394}, {438, 68, 430}, {429, 68, 
               375}, {334, 54, 353}, {430, 68, 418}, {394, 54, 343}, {353, 54,
                363}, {363, 54, 402}}]}]}}, {{}, 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{353, 363, 402, 394, 343, 334, 353}], 
              LineBox[{429, 375, 383, 438, 430, 418, 429}]}, "1.56`"], 
            Annotation[#, 1.56, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{227, 239, 288, 298, 352, 362, 401, 393, 342, 333, 326, 
               319, 278, 272, 214, 202, 227}], 
              
              LineBox[{428, 374, 382, 437, 445, 453, 459, 490, 499, 549, 558, 
               620, 612, 586, 600, 527, 538, 475, 484, 417, 428}]}, "1.5`"], 
            Annotation[#, 1.5, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{226, 238, 287, 297, 351, 361, 400, 392, 341, 332, 325, 
               318, 312, 307, 277, 254, 263, 271, 213, 201, 226}], 
              
              LineBox[{427, 373, 381, 436, 444, 452, 458, 489, 498, 548, 557, 
               619, 611, 585, 599, 526, 537, 474, 483, 416, 427}]}, "1.44`"], 
            Annotation[#, 1.44, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{225, 237, 286, 296, 350, 360, 399, 391, 340, 331, 324, 
               317, 311, 306, 276, 253, 262, 270, 212, 200, 225}], 
              
              LineBox[{426, 372, 380, 435, 443, 451, 457, 488, 497, 547, 556, 
               618, 610, 584, 598, 525, 536, 473, 482, 415, 426}]}, "1.38`"], 
            Annotation[#, 1.38, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{224, 236, 285, 295, 349, 359, 398, 390, 339, 330, 323, 
               316, 310, 305, 275, 252, 261, 269, 211, 199, 224}], 
              
              LineBox[{425, 371, 379, 434, 442, 450, 456, 487, 496, 546, 555, 
               617, 609, 583, 597, 524, 535, 472, 481, 414, 425}]}, 
             "1.3199999999999998`"], 
            Annotation[#, 1.3199999999999998`, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{223, 235, 284, 294, 348, 358, 397, 389, 338, 329, 322, 
               315, 309, 304, 274, 251, 260, 268, 210, 198, 223}], 
              LineBox[{424, 370, 378, 433, 441, 449, 455, 486, 495, 545, 554, 
               616, 608, 582, 596, 523, 534, 471, 480, 413, 424}]}, "1.26`"], 
            Annotation[#, 1.26, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{222, 234, 283, 293, 347, 357, 396, 388, 337, 328, 321, 
               314, 308, 303, 273, 250, 259, 267, 209, 197, 222}], 
              
              LineBox[{423, 369, 377, 432, 440, 448, 454, 485, 494, 544, 553, 
               615, 607, 581, 595, 522, 533, 470, 479, 412, 423}]}, "1.2`"], 
            Annotation[#, 1.2, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{221, 233, 282, 292, 346, 356, 395, 387, 336, 327, 320, 
               335, 386, 403, 460, 461, 504, 508, 563, 562, 540, 539, 511, 
               509, 506, 505, 503, 502, 493, 543, 552, 614, 606, 580, 594, 
               521, 532, 469, 478, 411, 422, 368, 376, 431, 439, 447, 446, 
               385, 384, 313, 302, 255, 247, 187, 190, 191, 205, 215, 244, 
               245, 248, 249, 258, 266, 208, 196, 221}]}, "1.14`"], 
            Annotation[#, 1.14, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{156, 133, 135, 137, 148, 150, 155, 162, 184, 186, 188, 
               204, 257, 265, 207, 195, 220, 232, 281, 291, 345, 355, 405, 
               407, 462, 465, 507, 510, 567, 571, 628, 635, 650, 648, 643, 
               641, 637, 634, 630, 569, 566, 564, 560, 501, 492, 542, 551, 
               613, 605, 579, 593, 520, 531, 468, 477, 410, 421, 365, 367, 
               299, 301, 243, 246, 182, 181, 157, 156}]}, "1.08`"], 
            Annotation[#, 1.08, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{134, 132, 131, 129, 152, 153, 180, 179, 242, 240, 300, 
               366}], 
              
              LineBox[{136, 147, 149, 154, 161, 183, 185, 169, 160, 166, 171, 
               189, 203, 256, 264, 206, 194, 219, 231, 280, 290, 344, 354, 
               404, 406}], 
              
              LineBox[{408, 464, 512, 515, 570, 572, 632, 639, 655, 654, 649, 
               658}], 
              
              LineBox[{419, 364, 420, 409, 476, 467, 530, 519, 592, 578, 604, 
               624, 627, 625, 565, 568, 629, 633, 636, 640, 656}], 
              LineBox[{541, 491, 500, 559, 561, 550, 541}]}, "1.02`"], 
            Annotation[#, 1.02, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{130, 124, 151, 146, 178, 241}], 
              
              LineBox[{138, 158, 159, 165, 170, 192, 193, 218, 230, 279, 
               289}], 
              LineBox[{463, 575, 638, 642, 657, 661}], 
              
              LineBox[{528, 466, 529, 518, 591, 577, 603, 623, 626, 631, 
               653}]}, "0.96`"], Annotation[#, 0.96, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{128, 123, 145, 177}], 
              LineBox[{229, 217, 174, 172, 168, 164, 140}], 
              LineBox[{588, 517, 590, 576, 602, 622, 652}], 
              LineBox[{663, 660, 645, 514}]}, "0.8999999999999999`"], 
            Annotation[#, 0.8999999999999999, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{139, 163, 167, 141}], 
              LineBox[{175, 173, 216, 228}], 
              LineBox[{176, 144, 122, 127}], 
              LineBox[{513, 644, 659, 662}], 
              LineBox[{646, 589, 516, 587}], 
              LineBox[{647, 601, 621, 651}]}, "0.84`"], 
            Annotation[#, 0.84, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{126, 143}], 
              LineBox[{574, 665}]}, "0.78`"], 
            Annotation[#, 0.78, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{142, 125}], 
              LineBox[{664, 573}]}, "0.72`"], 
            Annotation[#, 0.72, 
             "Tooltip"]& ], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}}], {DisplayFunction -> Identity, AspectRatio -> 1, 
         AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, 
         Frame -> True, FrameLabel -> {{
            FormBox["\"\[Beta]\"", TraditionalForm], None}, {
            FormBox["\"\[Alpha]\"", TraditionalForm], None}}, FrameStyle -> 
         GrayLevel[0], 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "GridLinesInFront" -> True}, 
         PlotRange -> {{-1.5707963267948966`, 
          1.5707963267948966`}, {-1.5707963267948966`, 1.5707963267948966`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   StyleBox[
                   "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), SubscriptBox[\\(B\
\\), \\(eff\\)]]\\)\"", {FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False]}, {
                   GraphicsBox[{{}, {}, 
                    RasterBox[CompressedData["
1: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
EP4HhqN6gg==
                    "], {{
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}}], {Antialiasing -> False, 
                    AbsoluteThickness[0.1], 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]], 
                    LineBox[
                    NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                    7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                    112.5}, {7.5, -112.5}}]]}, {
                    CapForm[None], {}}, {Antialiasing -> False, 
                    StyleBox[
                    LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{
                    7.5, -52.659574468085104`}, 
                    Offset[{4., 0}, {7.5, -52.659574468085104`}]}, {{7.5, 
                    7.180851063829787}, 
                    Offset[{4., 0}, {7.5, 7.180851063829787}]}, {{7.5, 
                    67.02127659574468}, 
                    Offset[{4., 0}, {7.5, 67.02127659574468}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -100.53191489361701`}, 
                    Offset[{2.5, 0.}, {7.5, -100.53191489361701`}]}, {{
                    7.5, -88.56382978723404}, 
                    Offset[{2.5, 0.}, {7.5, -88.56382978723404}]}, {{
                    7.5, -76.59574468085106}, 
                    Offset[{2.5, 0.}, {7.5, -76.59574468085106}]}, {{
                    7.5, -64.62765957446808}, 
                    Offset[{2.5, 0.}, {7.5, -64.62765957446808}]}, {{
                    7.5, -40.691489361702125`}, 
                    Offset[{2.5, 0.}, {7.5, -40.691489361702125`}]}, {{
                    7.5, -28.72340425531915}, 
                    Offset[{2.5, 0.}, {7.5, -28.72340425531915}]}, {{
                    7.5, -16.75531914893617}, 
                    Offset[{2.5, 0.}, {7.5, -16.75531914893617}]}, {{
                    7.5, -4.787234042553191}, 
                    Offset[{2.5, 0.}, {7.5, -4.787234042553191}]}, {{7.5, 
                    19.14893617021278}, 
                    Offset[{2.5, 0.}, {7.5, 19.14893617021278}]}, {{7.5, 
                    31.117021276595743`}, 
                    Offset[{2.5, 0.}, {7.5, 31.117021276595743`}]}, {{7.5, 
                    43.08510638297872}, 
                    Offset[{2.5, 0.}, {7.5, 43.08510638297872}]}, {{7.5, 
                    55.0531914893617}, 
                    Offset[{2.5, 0.}, {7.5, 55.0531914893617}]}, {{7.5, 
                    78.98936170212765}, 
                    Offset[{2.5, 0.}, {7.5, 78.98936170212765}]}, {{7.5, 
                    90.95744680851064}, 
                    Offset[{2.5, 0.}, {7.5, 90.95744680851064}]}, {{7.5, 
                    102.92553191489361`}, 
                    Offset[{2.5, 0.}, {7.5, 102.92553191489361`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.5\"", 0.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -52.659574468085104`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 7.180851063829787}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.5\"", 1.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 67.02127659574468}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                    Scaled[0.02], PlotRange -> All, Frame -> True, 
                    FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                    Opacity[0], FrameTicksStyle -> Opacity[0], 
                    ImageSize -> {Automatic, 225}, BaseStyle -> {}]}}, 
                 GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ),
           InterpretationFunction :> (RowBox[{"BarLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.122103, 0.00901808, 0.39826], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.081402, 0.006012053333333333, 
                    0.26550666666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.122103, 0.00901808, 0.39826]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.122103, 0.00901808, 0.39826]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.122103, 0.00901808, 0.39826], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3141592653589793`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.0839935, 0.279645, 0.510102], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.055995666666666666`, 0.18642999999999998`, 
                    0.34006800000000004`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.0839935, 0.279645, 0.510102]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.0839935, 0.279645, 0.510102]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.0839935, 0.279645, 0.510102], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6283185307179586`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.097699, 0.498132, 0.548165], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.06513266666666667, 0.33208800000000005`, 
                    0.36544333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.097699, 0.498132, 0.548165]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.097699, 0.498132, 0.548165]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.097699, 0.498132, 0.548165], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9424777960769379`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.175507, 0.652273, 0.528496], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.11700466666666667`, 0.43484866666666666`, 
                    0.3523306666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.175507, 0.652273, 0.528496]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.175507, 0.652273, 0.528496]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.175507, 0.652273, 0.528496], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.2566370614359172`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.329526, 0.762208, 0.474596], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.219684, 0.5081386666666667, 
                    0.31639733333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.329526, 0.762208, 0.474596]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.329526, 0.762208, 0.474596]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.329526, 0.762208, 0.474596], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.5707963267948966`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571909, 0.839991, 0.408102], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3812726666666667, 0.5599940000000001, 
                    0.27206800000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571909, 0.839991, 0.408102]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571909, 0.839991, 0.408102]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.571909, 0.839991, 0.408102], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.8849555921538759`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.914809, 0.897673, 0.350652], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6098726666666667, 0.5984486666666667, 
                    0.23376800000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.914809, 0.897673, 0.350652]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.914809, 0.897673, 0.350652]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.914809, 0.897673, 0.350652], Editable -> False,
                     Selectable -> False]}], "}"}]}], "}"}], ",", "#1"}], 
                    "]"}], "&"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1.8849555921538759`"}], "}"}]}], "}"}],
                ",", "None", ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               
               RowBox[{
                "LegendLabel", "\[Rule]", 
                 "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \
SubscriptBox[\\(B\\), \\(eff\\)]]\\)\""}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
               RowBox[{"ScalingFunctions", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
               RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
               RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], 
             "]"}]& )], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.7651179902005634`*^9, 3.7651180231932793`*^9, 
  3.765118161584614*^9, 3.7651182833693085`*^9, 3.765121146593783*^9, 
  3.7651212856016817`*^9, 
  3.7651214249496155`*^9},ExpressionUUID->"b3fb0d4a-7ffe-43dd-accc-\
7c315b3bf285"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"r", "=", "0.1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"ListContourPlot", "[", " ", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"udsmintest", " ", "=", " ", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "zf"}], "}"}], ",", " ", 
                    RowBox[{
                    RowBox[{"UDsim", "[", 
                    RowBox[{"x", ",", "y", ",", "zf", ",", "a", ",", "b"}], 
                    "]"}], "/", "Er"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"1", "*", " ", "1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", " ", 
                    RowBox[{"\[Lambda]", "/", "10"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"y", ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"\[Lambda]", "/", "13"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"zf", ",", 
                    RowBox[{
                    RowBox[{"-", " ", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"\[Lambda]", "/", "10"}]}], "}"}]}], "]"}], ",", 
                 "2"}], "]"}]}], ";", "\n", 
              RowBox[{"res", " ", "=", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Pick", "[", 
                    RowBox[{"#1", ",", "#2", ",", 
                    RowBox[{"Min", "[", "#2", "]"}]}], "]"}], "&"}], "@@", 
                  RowBox[{"Transpose", "[", "udsmintest", "]"}]}], ")"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"mi", " ", "=", " ", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"x", "\[Rule]", " ", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
                   RowBox[{"y", " ", "\[Rule]", " ", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
                   RowBox[{"zf", " ", "\[Rule]", " ", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "}"}]}], ";",
               " ", 
              RowBox[{"{", 
               RowBox[{"a", ",", "b", " ", ",", " ", 
                RowBox[{
                 RowBox[{"ToSphericalCoordinates", "[", 
                  RowBox[{"ecrosss", "[", 
                   RowBox[{
                    RowBox[{"x", " ", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{"y", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{"zf", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b"}], 
                   "]"}], "]"}], "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"a", ",", " ", 
               RowBox[{
                RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
               RowBox[{"Pi", "/", "2"}], ",", " ", 
               RowBox[{"Pi", "/", "10"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"b", ",", " ", 
               RowBox[{
                RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
               RowBox[{"Pi", "/", "2"}], ",", " ", 
               RowBox[{"Pi", "/", "10"}]}], "}"}]}], "]"}], ",", "1"}], "]"}],
          ",", " ", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"BarLegend", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Automatic", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "}"}], ",", "None",
             ",", " ", 
            RowBox[{
            "LegendLabel", "\[Rule]", " ", 
             "\"\<\!\(\*SubscriptBox[\(\[Phi]\), SubscriptBox[\(B\), \
\(eff\)]]\)\>\""}]}], "]"}]}], ",", " ", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<\[Alpha]\>\"", ",", "\"\<\[Beta]\>\""}], "}"}]}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", " ", 
         RowBox[{"FrameStyle", " ", "\[Rule]", " ", "Black"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "2"}], ",", 
         RowBox[{"ColorFunction", "\[Rule]", " ", 
          RowBox[{"ColorData", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<BlueGreenYellow\>\"", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "}"}], "]"}]}], ",",
          " ", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", " ", 
           RowBox[{"All", ",", " ", "All", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "}"}]}], ",", " ", 
         RowBox[{"Contours", " ", "\[Rule]", "30"}], ",", " ", 
         RowBox[{"InterpolationOrder", "\[Rule]", "5"}]}], "]"}]}], 
      "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"r", "=", "0.4"}], ";", "\[IndentingNewLine]", 
       RowBox[{"ListContourPlot", "[", " ", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"udsmintest", " ", "=", " ", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "zf"}], "}"}], ",", " ", 
                    RowBox[{
                    RowBox[{"UDsim", "[", 
                    RowBox[{"x", ",", "y", ",", "zf", ",", "a", ",", "b"}], 
                    "]"}], "/", "Er"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"1", "*", " ", "1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", " ", 
                    RowBox[{"\[Lambda]", "/", "10"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"y", ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"\[Lambda]", "/", "13"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"zf", ",", 
                    RowBox[{
                    RowBox[{"-", " ", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"\[Lambda]", "/", "10"}]}], "}"}]}], "]"}], ",", 
                 "2"}], "]"}]}], ";", "\n", 
              RowBox[{"res", " ", "=", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Pick", "[", 
                    RowBox[{"#1", ",", "#2", ",", 
                    RowBox[{"Min", "[", "#2", "]"}]}], "]"}], "&"}], "@@", 
                  RowBox[{"Transpose", "[", "udsmintest", "]"}]}], ")"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"mi", " ", "=", " ", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"x", "\[Rule]", " ", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
                   RowBox[{"y", " ", "\[Rule]", " ", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
                   RowBox[{"zf", " ", "\[Rule]", " ", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "}"}]}], ";",
               " ", 
              RowBox[{"{", 
               RowBox[{"a", ",", "b", " ", ",", " ", 
                RowBox[{
                 RowBox[{"ToSphericalCoordinates", "[", 
                  RowBox[{"ecrosss", "[", 
                   RowBox[{
                    RowBox[{"x", " ", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{"y", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{"zf", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b"}], 
                   "]"}], "]"}], "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"a", ",", " ", 
               RowBox[{
                RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
               RowBox[{"Pi", "/", "2"}], ",", " ", 
               RowBox[{"Pi", "/", "10"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"b", ",", " ", 
               RowBox[{
                RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
               RowBox[{"Pi", "/", "2"}], ",", " ", 
               RowBox[{"Pi", "/", "10"}]}], "}"}]}], "]"}], ",", "1"}], "]"}],
          ",", " ", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"BarLegend", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Automatic", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "}"}], ",", "None",
             ",", " ", 
            RowBox[{
            "LegendLabel", "\[Rule]", " ", 
             "\"\<\!\(\*SubscriptBox[\(\[Phi]\), SubscriptBox[\(B\), \
\(eff\)]]\)\>\""}]}], "]"}]}], ",", " ", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<\[Alpha]\>\"", ",", "\"\<\[Beta]\>\""}], "}"}]}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", " ", 
         RowBox[{"FrameStyle", " ", "\[Rule]", " ", "Black"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "2"}], ",", 
         RowBox[{"ColorFunction", "\[Rule]", " ", 
          RowBox[{"ColorData", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<BlueGreenYellow\>\"", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "}"}], "]"}]}], ",",
          " ", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", " ", 
           RowBox[{"All", ",", " ", "All", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "}"}]}], ",", " ", 
         RowBox[{"Contours", " ", "\[Rule]", "30"}], ",", " ", 
         RowBox[{"InterpolationOrder", "\[Rule]", "5"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"r", "=", "0.8"}], ";", "\[IndentingNewLine]", 
       RowBox[{"ListContourPlot", "[", " ", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"udsmintest", " ", "=", " ", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "zf"}], "}"}], ",", " ", 
                    RowBox[{
                    RowBox[{"UDsim", "[", 
                    RowBox[{"x", ",", "y", ",", "zf", ",", "a", ",", "b"}], 
                    "]"}], "/", "Er"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"1", "*", " ", "1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", " ", 
                    RowBox[{"\[Lambda]", "/", "10"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"y", ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"\[Lambda]", "/", "13"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"zf", ",", 
                    RowBox[{
                    RowBox[{"-", " ", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"\[Lambda]", "/", "10"}]}], "}"}]}], "]"}], ",", 
                 "2"}], "]"}]}], ";", "\n", 
              RowBox[{"res", " ", "=", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Pick", "[", 
                    RowBox[{"#1", ",", "#2", ",", 
                    RowBox[{"Min", "[", "#2", "]"}]}], "]"}], "&"}], "@@", 
                  RowBox[{"Transpose", "[", "udsmintest", "]"}]}], ")"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"mi", " ", "=", " ", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"x", "\[Rule]", " ", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
                   RowBox[{"y", " ", "\[Rule]", " ", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
                   RowBox[{"zf", " ", "\[Rule]", " ", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "}"}]}], ";",
               " ", 
              RowBox[{"{", 
               RowBox[{"a", ",", "b", " ", ",", " ", 
                RowBox[{
                 RowBox[{"ToSphericalCoordinates", "[", 
                  RowBox[{"ecrosss", "[", 
                   RowBox[{
                    RowBox[{"x", " ", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{"y", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{"zf", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b"}], 
                   "]"}], "]"}], "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"a", ",", " ", 
               RowBox[{
                RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
               RowBox[{"Pi", "/", "2"}], ",", " ", 
               RowBox[{"Pi", "/", "10"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"b", ",", " ", 
               RowBox[{
                RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
               RowBox[{"Pi", "/", "2"}], ",", " ", 
               RowBox[{"Pi", "/", "10"}]}], "}"}]}], "]"}], ",", "1"}], "]"}],
          ",", " ", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"BarLegend", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Automatic", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "}"}], ",", "None",
             ",", " ", 
            RowBox[{
            "LegendLabel", "\[Rule]", " ", 
             "\"\<\!\(\*SubscriptBox[\(\[Phi]\), SubscriptBox[\(B\), \
\(eff\)]]\)\>\""}]}], "]"}]}], ",", " ", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<\[Alpha]\>\"", ",", "\"\<\[Beta]\>\""}], "}"}]}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", " ", 
         RowBox[{"FrameStyle", " ", "\[Rule]", " ", "Black"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "2"}], ",", 
         RowBox[{"ColorFunction", "\[Rule]", " ", 
          RowBox[{"ColorData", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<BlueGreenYellow\>\"", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "}"}], "]"}]}], ",",
          " ", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", " ", 
           RowBox[{"All", ",", " ", "All", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "}"}]}], ",", " ", 
         RowBox[{"Contours", " ", "\[Rule]", "30"}], ",", " ", 
         RowBox[{"InterpolationOrder", "\[Rule]", "5"}]}], "]"}]}], 
      "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"r", "=", "1.2"}], ";", "\[IndentingNewLine]", 
       RowBox[{"ListContourPlot", "[", " ", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"udsmintest", " ", "=", " ", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "zf"}], "}"}], ",", " ", 
                    RowBox[{
                    RowBox[{"UDsim", "[", 
                    RowBox[{"x", ",", "y", ",", "zf", ",", "a", ",", "b"}], 
                    "]"}], "/", "Er"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"1", "*", " ", "1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", " ", 
                    RowBox[{"\[Lambda]", "/", "10"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"y", ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"\[Lambda]", "/", "10"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"zf", ",", 
                    RowBox[{
                    RowBox[{"-", " ", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                    RowBox[{"\[Lambda]", "/", "10"}]}], "}"}]}], "]"}], ",", 
                 "2"}], "]"}]}], ";", "\n", 
              RowBox[{"res", " ", "=", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Pick", "[", 
                    RowBox[{"#1", ",", "#2", ",", 
                    RowBox[{"Min", "[", "#2", "]"}]}], "]"}], "&"}], "@@", 
                  RowBox[{"Transpose", "[", "udsmintest", "]"}]}], ")"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"mi", " ", "=", " ", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"x", "\[Rule]", " ", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
                   RowBox[{"y", " ", "\[Rule]", " ", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
                   RowBox[{"zf", " ", "\[Rule]", " ", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "}"}]}], ";",
               " ", 
              RowBox[{"{", 
               RowBox[{"a", ",", "b", " ", ",", " ", 
                RowBox[{
                 RowBox[{"ToSphericalCoordinates", "[", 
                  RowBox[{"ecrosss", "[", 
                   RowBox[{
                    RowBox[{"x", " ", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{"y", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{"zf", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b"}], 
                   "]"}], "]"}], "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"a", ",", " ", 
               RowBox[{
                RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
               RowBox[{"Pi", "/", "2"}], ",", " ", 
               RowBox[{"Pi", "/", "10"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"b", ",", " ", 
               RowBox[{
                RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
               RowBox[{"Pi", "/", "2"}], ",", " ", 
               RowBox[{"Pi", "/", "10"}]}], "}"}]}], "]"}], ",", "1"}], "]"}],
          ",", " ", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"BarLegend", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Automatic", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "}"}], ",", "None",
             ",", " ", 
            RowBox[{
            "LegendLabel", "\[Rule]", " ", 
             "\"\<\!\(\*SubscriptBox[\(\[Phi]\), SubscriptBox[\(B\), \
\(eff\)]]\)\>\""}]}], "]"}]}], ",", " ", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<\[Alpha]\>\"", ",", "\"\<\[Beta]\>\""}], "}"}]}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", " ", 
         RowBox[{"FrameStyle", " ", "\[Rule]", " ", "Black"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "2"}], ",", 
         RowBox[{"ColorFunction", "\[Rule]", " ", 
          RowBox[{"ColorData", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<BlueGreenYellow\>\"", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "}"}], "]"}]}], ",",
          " ", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", " ", 
           RowBox[{"All", ",", " ", "All", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "}"}]}], ",", " ", 
         RowBox[{"Contours", " ", "\[Rule]", "30"}], ",", " ", 
         RowBox[{"InterpolationOrder", "\[Rule]", "5"}]}], "]"}]}]}], "}"}]}],
    "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7651651969716854`*^9, 3.765165245748807*^9}, {
  3.765165291675214*^9, 3.765165292074174*^9}, {3.7651654293868246`*^9, 
  3.765165517573825*^9}},ExpressionUUID->"f0f14406-1a26-4742-9fe6-\
32a24ab17eb4"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[
        GraphicsComplexBox[CompressedData["
1:eJzl2/lfjF3/APBKSItSoZJW0aISihInURGyVCJbIpKlRYUW0qJFuyhJQoUo
lNKCI6VFadO+aJu2aZuZmqaNvnO7Xec897if1/MHfPvlvN4uM3M+53Ou6zpz
nc9IW9rus+JgY2OT52Rj+6sVUd5qMiU9AVnbNkqMs+qSUeQ9Z/rVCuWHWI6T
WFyNzPb7j+U4YHk9YHl/luOjgKVfgLVfhFlbor///HcSi6uRif6yHAcsrwcs
789yfJS1f4B13Fj7RZi1Jfr7T1cjE/1lOQ5YXg9Y3pfl+Chr/8C/55V13Fj7
RfovbTXyP8eXxDK+JJbxJbGML4llfEks/a3+Yx6y5pl1HP+9n7j9Z3+rWfpb
zdLfapb+VrP0F/UPsJ4XrPOONa+s48baL7b/8kf0l+X1yER/WT6ftX9E/wHr
ecx6nrDOw3/PMx5H1n7+e4vGF7CML2AZX8Ayf/+4zrCex6znyb/PQ5xn1nH8
937ilmX+svQX9Q+wXvdYryus5y3recE671jzyjpurP1ieX+W46Os/UP/znqd
Zr0Osl5n/v08xucJ6zz89zyT/ugXy+ez9o+1/W/3kf91Hfxf5/H/mof/axz/
6KfP4BKDJxrfkFeYHtX9MFSJXPQubmNNYgVyzbYC+/r3ZThOkR3Wc1RKkQ/1
lB9dG1uM/CDDxNRyfiFyp0/DjtCr+Syfl4tc++v9PyAf/vV+WcikX69/w/L/
U1iOx7M4Avl04IkVh4zxvOqUyAy5Ho997DXv+BM6dtOW4xZl+nRks9r0otFI
7G/W3GpL+rB3Tx29u1lrDLkkKI3d+ia2gRSXTXAzdl7q4ao3ygxkHb3XWk1X
sd/VzX7MXoG93sacR156HDl9OuWikQO2WsisZsc87BTpA1vvCU+AzQMntjX0
jqN8K95YO7f1zjjKt6DU7ALS1nGU76msGm8yjYHy3WmcuIUSx0D5Lhl05hgz
YqB8v/E1yJ2aHkP5jpEW8WB/Poby7ZPTu2nuwTGU7/OmWT94546hfJsO+78T
TKejfG/yN3cVOUFH+V4hq6QlsYCO8s3/fmpcFo6ifI/vL32rcH4U5fuf97k9
2iGNF+tW942j66xxqkLio0jsxQGtjoL62E3Hb2/xHGUgP9DcIUh7hH1iAXv7
8b3YK/oyXlbOjCH3fzx3dXMK9ssomV2vD2NftKtfIs2DvW5bMDk0i448Jbk1
i80aGzImfO0WYXuVv9zflo/vMwZPrOT2XMTmucYMXhr7TlWfzB5m/LveaJTb
vR0E/cPGbB+Y8TOGuAN2Cg8CHb4PLUrM+OMUWrfK2w+A24ryOXeZ8RueTJuZ
VdYPyAbhUXMfM+BIrG92q2I/AFbTTk7M+GMaDjnl+JJBhOcp405m/HrCq1ZF
kvpA34OKVXuZ8Q8bcfY7bO4Dm95rzYfM+KP86xOMYntBeGN8/0pm/Lr5LywU
p3pAN2N+cTQz/v6fHkvmHOgBGxZeSeRixh+haVrb/qYbhK7u9HJmxr/JUSHs
/YJuQNq96ziJGX9Pyo8ddy90Ac3zbzftY8Yf1lc5x6mEBIICpMU/MuPXWpaY
u0ce35eLq3I9BVy/IT9Pu06NVKlCDozYbCHZUYHcTOaI3aVUjhz7wtP1cHgp
ssUFjoNnJ4qRZVd5arhYFCJ3U9mF/QvzkZ/9+rxPyA2/3h8iH/31flnIXb9e
/wa5/tf/f8lyPJ7Ff85/wlvEdM+5ZON11SYfrQqt2bXImpTVa6d21yGvPaQU
lRNdj6xaIDvt2tWArKgmbqG9qglZLkY4f9qlGVlqLp/8+88tyEscZge6C7Qi
3xz6yYhVbkOet2xKYaYK2/cg49Cxy+3InCEjQXBpB7Jn/jCUzMOemeinXrPu
RHZX7ZVt4yOBypATsdXo/B8F0vP7TqdHYdsHXlC7Y4Cdyz066TzGQF7gfyXf
LAH7+NyZoPUm2K99vM1EZ2Gzc3JLT74eQ97rGUJutMB+yLbwTQ4/NvVqtHvM
Bzry5h+SBu7nscNcEwSOimO3Tyg2birB6yC1y68eS7pgXx9TP8+m8Of3RUuH
9kczhYM4X0Ny2z/JYvecsRn2vjaAnNSVctugqR/53PGRDdzrsFVa1nWUhpOR
qQfc/EKG+pDTqj+q7DPEdt4zu0Y4sRd5fel21zp27EmDYOnoIz3I7/OqCg9n
dSN7gMUXJBdi6+YcEu6w68LzY11cdnwpPt8LU0kWp//j/N9gf8yX3R+ve7kp
yRq7Vw4jN16Y7oopx65xTjB00qQgb8zYKSN+EzuBPjLxqRmbT/1e5RkVKrKT
o+4zAQ/slrQ+j7eV2HojoQeOytKQk1evXzXbCXuhQ+vcFwXYbq9vtO4TGUEm
UZTfTpzB3rGqJjguBzvN1u2UAR/OP5/X5s7EvnHk7XfdXwVEYXu/zHK/YID9
8TPdcN8YA3mqSU1EIwFbg3a+S9QE24ErKfUHB3aKRPe19tdjyOS1Mrs+W2DL
7Tgq9owf2+J4dE/gBzpyzKXaN3bnseuDBD1NxLGF4o12ry/B8RllB4iLu2AH
VBT0zciPgntHTnb7GeN1eLD9FcMX8djXfYJTyunYjncfC47o05FPJ2c6L4rC
Ns/92qjZh72rpmPTEa0xZJ0+xiOPm9hrmKud+Gbs5QtkzhYqM5DF5NaVk69i
82nuXDO/Aptt1/FINelx5FEL5ykTB+xex5vHLudhN/nF5THXfbi/ColZK0ZG
0P3vlvT+2/PiRtD9r0R0jn3/zhF0/+MUzNj5dYKG7n/a3KfkXybS0P3PkWMR
Z5gxDd3/Xkx+bnVgo6H7H4nmlGOSTEX3v6X9cpEa5lR0/zPtrHEQmUtF97+g
Jh+jyTQKuv8VfFNXbLagoPvfTEnX7A98FHT/s/VTygNOw/j+d/mmy6zyod+f
FwH++VxjjzYRP/H9iYifMBE/YSJ+wkT8hIn4CRPxEybiJ0zET5iInzARP2Ei
fsJE/ISJ+AkT8RNmfU6y03h5+b7+ESiv8rODr3gQWFi8dRCNHoF7t0kp3ls+
CBzPb1vUtm0EXrHUtZf3HgB+Lg1ZiQwafOR2MjO9vR/E+NocOc+M/8udGzO6
oB+8iphiW2tKg7RXT/UrYsgg/2Fg/OQsGhQr+RJ0ZLIP1Kcs3ZabSoW6XQPV
ZLM+MJCT0u97nAptZuaLX07vBWzFIMRIgArDRdVOzBbqBcK1FasXQgrMXmOc
FG7XA+Q7j9c2nafAjl1OVMmybrCRQrvySJwCeawj1ycrdYPHk3M3VN0Zhms8
s65p+XeBUmFFz2OjQ/BwTFNBYTcJjKrsLB7YOwS9M37wmW4lAZrBcz8pZvzE
92PXSycbw+5iz3qydOWsbdiBtbXujmM0ZOE5oeVd8dgx6tulzYyx5aw4Lhax
Y6dE5ORrvqIir8t3XPT8KPbHEWVrcT7sbbI9WUE5FOSKfXE8M2ewD3oePGIn
gp13Qu5oXtAwcvWnSPZEMn5u0yXNneBngG3MPax7IQA/Jyl/bt7zWHkYeeeu
gpsNFdgnGSJRc7UoyDJFRjaPbmK3RXlrb2zBjj2TPb9ehYp8WIvS5uCBLcaz
PI2vCru+6ZDPU1ka8p0XYWZbnLBN3AsVvhdgCxn9mLosMoJcKbGmTMgGO3TY
Oi4lB9voY6zDdr4/nxOlW2YftSGPIHNvK07picI+qlz/86QBdqpgj1EHnYY8
Z5weeywe27yFc7h5H3bKJyFgzo4966lMSN1LKvKBILVWk6PYLxx0VKt4sdkO
7L62O4eCbLrxaHnpGewkmfOShiLYP/jHvwcHDSMnNi685k/Gz/GMEtZIehsM
AR/Zj1fSCgfh5C7f6ARm/JuFNoo6yg3C+s96ZJ+7I2CaIztzrdcAzNjIqXVq
2wjIpGkcoLf1w4j0T/76DBpw7EhjpG/qhw7K1xuWJ9KAatWqSOcYMtyTABTm
mtJAf26yxrrJPqiy9Oflnlk08OS1Yi3DrA/y3n5XVJhKBScePnHKTO+FZF5X
kafHqUAybNnCK0K9sMhb09pPgAoaPR6+0bTvgYnTjLfWkALu2EmYTJZ1Q2/H
jLnbL1DAXot7I9kru+HxAUczhaUUwLtH5JZrQBd0LzplJBQ1DIrA7dXavSS4
PrNz8Bt9CHipClZN65HgyBOLoAjjIWAzGUp5UDCI5kNyhj5fhAz2sMO0gt/V
AeTVqqn6bo39yI79p0/YaWBnPFnqcTKcjDx+4lvMgaE+ZC0p/6ydhthuzZtq
dRJ7kWHUKG0tBza7aRK/wtEe5K0LLFYuze5GvvF14fYFi7CL/EusZjt0IfPo
X/ec+IqfexpxrHswqIA98yjqw5q3g3C4ODpajbn+q1Xw81AWHoSHgsJdUyLH
QfKrS7or7AdgwZ6Aw0r648B73WlO6bJ+uFrYc+PTUQY49GF/gZhSP7xfd0VC
7jEDrNbT9xP2I0Oue/YzD/cywLxSdcP5XX3Q8eiZNgk25vpvnxwvly4zfunj
ufdSxsDbBuEy9ge9cEfXgUciR8ZAsAVn6NRUD3z7dI/XbZ4xYNUzspd+oAfK
nNt2UjCbDrQvdAoNp3fDYFUdvRBrOhCiV9X0CnbDCdq65byL6YDs+imyw7YL
WmWozvX/zPy+xpF6sLmUBCuurOid7TgKovwfLqllxq+9UbLYUwY/F16uXW8g
gta/JCikfK72TiQ2mwSb1UJ97MH5ESO3RhnIjTMrPAUfYxdQcgTC9mKnte9+
wM+GHVfVqRycMoYclHfpHe8R7CtveHbc5MG2SnjQMC+bjrzvzhprP2ts4Fs4
NmcxttLlQz4+n/9jv+rMsBCnIzanudejv+IPSpmTrTSrBq0HqkOulzUY1iKL
2093+IbXIZ/Yd4mh3liP/HwNjYck3Yg8InxeKvxME/KGsZ61Oq+bkb3qLLcP
jbfg9VVmy5EYnVbkebtWasptbUNOfn9my3QP9l6VJ7u+3WxHpseSzJJUO5Dv
8stYXv+Gre1x7NyBS514PfQ7fsJynJQnXT+r4e8WcLVmHgrQqYW/WzCQdZ1f
1bMO/m5BeYRh3re8evi7Bam2Qpcuz26Ev1twx7BZcalBE/zdgityCd9z/Zrh
7xYcZrsQfupLC/zdAtCkoc/D2wp/t2BB08x03fI2+LsFXttI+5MK2+DvFtDT
i165WbfD3y04JZvMvXteB/zdgvrQsJPSSR3wdwsMfzp9GDHshL9bkHPWXKSg
vxP+blH8v8cFxU+YiJ8wET9hIn7CRPyEifgJE/ETJuInTMRPmIifMBE/YSJ+
wkT8hIn4CRPxE/6sFPZ1/0w1NJ6/WGZLEAkMnzhufG9zLbRWnDlppdIFxGLU
Glq96qC7fs8T3/IusLWa/diygnoYbllOfmbXDWx5q0jWXI3wydW3yqULekD0
1kc2yYZN8F30A7uh1B6Q7+ZAoQY2w8oM3zQBk14w9EbXWaO8BXZX2Y6tpvcC
kUHBaZcFrXBqyEzT9E4feBhO/diq0AYFeHTcLq0jg4yUhlkcJW1QboU8vFtP
BiVfcvWXnWuHWlsEON5d6Qdt3c/89fk64O5j41u/iw0AOkd4qXVKB7RybfNl
ezcAeCRd+G/u7oSukUVfZI4MAqkNlvuSKZ0wNO0Vn97PQRQ/sR4k4idMxE+Y
iJ8wET9hIn7CRPyEifjRftTv+AkT8RMm4idMxI/2337HT5iInzARP2EiftZ9
yzW//r4hD+zNlPDpr0SOt9vIXfe4AjmbeXRvZhmy4uGQT3T5UuTou3/9FSPz
1D1mvkMhsptwikG7Sz7y4K/Py0XO+fX+H5Dv/Xq/LJbXv2HpTwrL8Xhk91+O
QCa+/zqt621vYK+B0bxhp8VjhkCH2avcJINaWCnuVMcJmOvHy5cfugbVQS7l
gwaD7cPgfZTO9Z3f6uGD2NgmG10KUMriOr5UtBHmJIYKtd6igLsNFTpDR5tg
bYrnDuMuCpg7GSUF45shNcPRq1CDCpzEjrOFklsgLzyVs8GPCjq1FNosVrVC
+cIDIy8bqOBp8niryIY2uKXcUGmZEg20vm/ezf69DR6r0z4R5UYDi8o+wj6P
dujSqnKPt4wGdn2PV62S7YB3eqS+eUiOAO8hvwfZBR0wdViQh243AnJ+nuN/
fKYTfmVwbjnzaQRQ5++9dpOXBPtmxlxahEbB0oY3ijkf8D7wjS3Pc35y1SIP
Jz/cqWtch3xAJKrF5349cq5n8IXingZkxUHvGd7VTci3zFxD97g1I0/n2ktH
FLQgW620Tq0TaEU+vePlwyDlNuQYD0Wbl1XYFekJqysvtSPP7peaool3IGtJ
xeQJf8K+YLo4UON0J/KjgHCTA7x4/Xc3fd15v5lAVMcRx1gG97k/xHUe7NOW
ednPkflunJklNp2KrMxjalollom8K1TnSYDme+QM7jtu0itzkfW+3kxwz8lD
/nu9UYD89/qiCPnv9UQJsuev9cNX5L/XCxXIf68PKpGjfq0Hqv5n3cr/13H4
/3rdIyzqqz2TloH3hT5ffxgqI4xt7zZHJswe7yMtvXQ2baYM7zsV21dsvbAS
2+mcem2zP96n0i1bW36nDO9r3c37Sb3o/x2ZklkkvHcr3gfblhK+TmUG75s9
eHzYnCe7EXksarl7ryPeZzMKpjz4rIr34RK8sj89IuN9u+nL3l3XEmqQTS4Y
cR2xwPt8ZfODQ03TO0Hdtdteur0jkHc7u3KQQCcYEy/f+/32CDT0cizOP9sB
FmZzSblsGYF+73uspgvawVoz3aGFVBosYJhzrJVpB8ajru9ex9Ig5+qy2LPu
bcAhLD1g104a9K73dNZ/3QrCVIYP9E1QIduuMy/TT38Hr0rkV/g8oUK33N29
yyRaQLm1JV3KlArH1TWkI6qbwNDsmLx3HFTomCRuPutmI+B7XBN24BUFUiRm
3XLY3ABW6vBbjB6hwHO3+kraGXVgR8s2lVAeCuydW8G5N6UWVI9yTpg5DMOT
bhkbP56sAYKql2+HfP3zOah5iurslZWdyOdNS/z8FLGvTZ/i7fLqQA5/zBG6
uaUdOd4wVihWAzuDqhk5GdKGHKb2XD2lqhUfv9ahfdrnO3LTV9GtUutb8HMe
8b07GshNyHI2fvvC7zciG2bCgzv2NCDbzWFYcM6qR75tomL9Pr0WOeeRla2z
dc0fz31Z/f/1eyCR/y/Lr37M+z6I8t/yKy+DKP/DjumFbmEDKP8cv/LUj/Iv
nDdQpr61H+V/+a+8kVH+NRcsqx0a60P53/krj30o/8eOHWp58qwX5d/+V157
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
/wkT858wMf8JE/OfMDH/CRPznzAx//8PneczXw==
         "], {{{
            EdgeForm[], 
            RGBColor[0.122103, 0.00901808, 0.39826], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJxNk0tOG0EQhqd7FuAsowiJHSwtsQPHYoETs8GYoBA/QRgbjBDYDGYDIc4N
fAQfwUfgCBzBR/ARvMtfqi+Cxaeu6e7669Wz2X+sjWKSJAORigNREXsiE7/F
i8iJL+KT2BCbYk08c+ceeyie2MvYb4kr0RYj8SD+wAP6c/FZHIYk2Q1uv/Ft
tu3NlOiJ7UfXfsG/j7bFqIkLURffRMk0xA9RFkfQYs/q/YXfNHhtE61Vrd/R
ML2OuLUzerDAp8N5G70W8ar4TpTrT9PWmgvew0FwzD4L3iPL/ZL+3WO/ph5z
lr7XmfFt+9PU/U1nSd6W/1jrXGd31qvUZ9tN/PsK/Qw7Q/eC8y4zstmMxVdR
FFvilDr7vJcn8l0VK8xviv2XOEPeRY0+W7+u0bCaJsrvxmJR44jzGbXYTLrE
69GXHrpDbDvLpd7nRfS5VZmzveMK76DETHZ4H6bbEAX2ze9Y7DNLu7+NRo+7
5rMe3Wc3vufUhAZ3l8zd5l+mj6Y/iK53pnUeXH+h9TX6WxxHz6VAngX8zL9F
LJtbPrrvnP7UmeEl95p83zLX9eD/a17rMrh2LvocrpntOTM6wf/oQx+b6Ha4
c87ZITU3uGN7B8y7wnkJ+5i+tqnJdMv0u4hdpNYy9W/jv6Cf1tc6ehZjwPvJ
p657SpwGsf/frfO9j7bl8Q/3dnFu
               "]], 
              PolygonBox[CompressedData["
1:eJw1kDFuwkAQRcfeSEDKCEWyRBGXSHQQJBepI6pAOoSrSBG4gSYNR+AIPgJH
8BF8BB/BR3CX9zVL8bVvd//+2Zn85/J9Ts1shp7QJpgdWH/RDW4TswWcowbe
Y/6Al2gO13iOcIn28DX42wuaENizr+AT6nTPm0/zjArO8PyZe+TdcLY2r6na
Hfud+ZsGLtC7uUfeO+sYvShfHtWNZ7orYj9blAWX+Es+uGd9RlPtqdfGrBGq
1WPs5xCzNAPN4k358gfvTTNolJf4bFZo0H3q9dSDehketeJfNbMy5mv2Q/DZ
qWYF16n/VRl3eJJ6tmaQwdfE//KqPfwPVYMtjg==
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.1133109862854342, 0.07145279029981243, 0.4240623956720626], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtk7txg1AQRZ8lJagDyByKCix3IEJnInQmAjsWrkDqAHUAHUAHqAPoAHUA
kc8dbnBmmH37vbu8f/9+/WxCCB+wgwZqGGCEBGMM0zaEFyQ4x3CET0iwxRDB
Hoq3EC5whhye0EMLHWT4nOAGd8Vgixyj2D05I9dQrc6xNTTKR0wPLXTbtQf1
coIM7vjc4AolPKCyTW8JxHCAVO/EVFBDo5mwHdUzsz/DOpNmm3h7GX3PsMif
t6M1kBYPqOAMOaT4HGAg56geyHmDCV4C2wQzLOoZ3ytcoICRHINn1uwpHFxT
tTPP3lvr3NrP5F7gARWU8BdWzaRdDY1yKlb9qZb0g5s1kTZ37+oK5XbtWb1r
Z9qdaqhWq9xhzaFcrXa3WTXs3YN6aay1aqq2NBmsgbQoqHHxjJq1c+7at9m4
98paZ8ScvDPtbsE2O4dyLdZWN6Xbyr0b3aBuMcd29o5S73S2BtKi8e1VvqXC
u1GMYkvfWuzb0j8yeWejNZN2Ef/Qfrf+U/q31LN676yVdq7d/wM9L3qr
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.10603260792092149`, 0.12313872476189437`, 0.4454226442464031], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtk7FxwkAURE9ABB1A5FRqwIM6EJlDyByiGTtHrkDqAHUAHUgdiA5EB1IH
kPjt3AZvhjnd/39v//Lx/fv1swghfMIKnkkII0www30Zwg2u0MITRhjgARVc
YE3xBu7U3OAKLTxpPkIHPTTcrV2j2oqzC5yhhAMUMFD7gDeaXtBBL30wQsG3
A5y4e4QUMnhz9oI1vzfqx4zCMzW7hDOkkC2jRmmtodFMeg9whRZy7uxhCzvX
pD7Tt5kZE7w0W2+kR2cP5MXMncmeybsdHm1X8UzfMmuX5/K+9ewK/kKcqdlr
2MAbXn6D3pJTs0+iZmlvoIYJ5hBrVCuN0nrn7GYP5WXjt1+gSqJn8m4LO3ko
L+EMpfRxdoWbesFDu/KOteveu9IMzSpde9SukthTvfeQL6JGadUMzbq79+De
ue8WzsbJvZQJZUMZGex57zfoLVvNSmKmzs6IsnLCi6MzoWz00DnjynrvrCqT
lXeq3dbKrqntgbx4+L/QuZcyWXgnuTVISwqZ/1OTM6qstv5vSZO0/QPSkHuL

               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.09875422955640878, 0.17482465922397633`, 0.4667828928207437], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtkrGRgmAQhRHMtANILtYCbkY7kOhSiS6VuSsArwLtQDqADqAD7AA6kA4w
uO/N/4Jv5ndld9/u24/v36+fOIqiT1hDmUTRBXawh55YBw20cCd2gwqucF/x
Gyq4wpvY4hqla6jWAY5Q883DOcqdaD5CBz28iS2w4b2FDFEpvMid4UlscI5y
M0jhAMc4aJCWFDJoiTXOUe6TGQZ4QA1vWDyjZs3pcfKMmrWGB5yhSEKOcq/w
FwWNG2vIrEFaTpBDAWfYwT4OO9QuR5iUr1nhAqXR+wwF9PTsoIE2CTH9t1h7
zvsEBzjCEwbolLsKPdV71K5hJucVhZ7qPcPLO9fuc2sfXGvm/YJF3sRBQ+Od
aDct3zT2VN7KI3k1wpSEGTWrNObWKK3yQF7U1HzYI3m1JWeThJ6ze6r3De5x
8FTe7jSbbogaN8+k2XrPLk3SVtg7eSpvS2pc7Im8uULlmP6brH3QrfnGdesb
bnC7DjesW04hS8JOR+9Qu3w6V571/ib1TJqt961X7n33bNqBdvEPN+V8aw==

               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.09147585119189608, 0.2265105936860582, 0.4881431413950842], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtkrtxg1AUREFyKDoQgXORO5A7gMQxShxLdgPCFaAORAfQAXQgOoAOUAdo
xmfnbXBmpMu7v737/v379bOJougD3iDhzw72kEJD7A4V/EET8x9quEHHmxYe
MMITFljhpRg5D9dQrZmcCRZ4wovYCj0McNlG0RkOkMGT2AI73ibqR6yFOzSQ
wG4beqr3CUo4QAYduS1M6h2FGTXrBPMmzKBZVs0CKezhAFkceqhXCSeoyLnC
GS7akdjqmTX7DBM8YIQbPWvvoF1u5NRwl7absHPvGTXrQE7vHbXr7Fl7vYWK
ma6eUbM2rqUbdN5Zu0tjaV1R4yqNOG4CHbHWN9QtB+gd07fM2h/hEwrIodYu
ilH7CDkUm6CZtJNnEt989Y7adeTbwz3Ua7Q22lG7fhI7xsEj8krh2spRbmov
qqd63+w9aSAtZt8253dhctdU7YtvVdobKRrsYZG3tsFT8tZZb+MQW3xD3TKF
vT0mr138toRTHDQ6+k1qjWprXtkzpTWUlifnyvPy/uDbylPy1j+GRH1L
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.08419747282738338, 0.2781965281481401, 0.5095033899694247], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtk8GRgkAQRQfcK2QAVRuAnPeiGeBh73rYu2wEuhFABpgBZAAZaAaaAWag
te/X/MOr6hp6uv/8bj5/fr+bNITwBR+wXYWwgQJK0Mcj7OEAT1jgBW9BzguO
yoUcslXMUe4jCeEOCzyN4he84UHPO9TEOxi5O0APF3jAHa5wM4onmOHJ3QUy
7uZwgytMMEPHt9Y5yn27d4a2HM7EJyiglAbO6jTWUK03d14wwRxijnLXUCXR
o8Jv1ts7aOEEZ6M4w9wcDsR7qGG3ih7KyxY6eUzNfRJ7qveFsx4GGD0DzWIN
VRo9k3cb2EoPPQpY5I08pEYPZ/hTPXJ6aOVNEjXU1iztFay9A9qFBz3uMMFs
ja01SVvnWvJQXjZw9Bv0ltneDTBKB3dO3qnGNSef6dvs2WoHtAtbzjaeyc4z
0+wKKNM488w91fum2VmztI+cDX7zxR7JqytabiHuWO+ZaDajtWontZule0mD
tMzeLdVUbXm8eEe1q5Vno53X7qvH1TPQLEbPUhqltfG/s7b3/8T7fis=
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.08653770197297593, 0.3202035390149642, 0.5171677735724624], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtk8ttgwAQRHGcM+4AlAbsa052B1hKAbaUAqADSAXQAXQAHeAOoAPoAHcA
eSPm8CR72R87w9dv9pN+BEHwDZ8wH4JgggXeEBOMYDnyH57EHrCSu0FFrIQc
Cj2n2QPOcIE7JDBQM8KL3z3kUMCoZzDBDB09WqihgY4ZLUzaDV7QO6ZnMT0j
OMNF/anp3UO97pB4R+16Y8bVO2m3GzVXGOg1eoZmJcTu8KTm4R7qlVGT+h31
rhk5qW+i22zEViihgoZeNRTwBydyQteoNiYn8k7aLWZGBCGcfHPdfoJZ/8lZ
PEOztPPgGZqVkZPCGS66ITNqKKHSfsRW5yh3k5baiV6njz1HuTkUh72Hel11
u+OuobTsdevDrrG0lmdm1+TWJHaOclvo7KnFMzfHWu+oXbVD6JvoNm/eaQn2
m+l2DbEaWnnFNy4d07PG3pFm0q5z7mCvzfaaPPiyB3NrKm1HagZ7SF6qmF16
B+0yWwvlKFceSewheUnfxGqPyqs3306axtZU2kpDaVn42wn5xk7wD1nOfws=

               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.08915525966003109, 0.3619314822765468, 0.5244372710911506], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtk8F1glAQRb+QPXSAqQCX2WEHetKAnBQQ7EBSAXSAHWAH0IF0gB1gB+S+
w1vck/z5M/NmHt/Pn+r7NwohfMEHvDkssCoYh3DfhdBBAy2MhAfo4QF7ijJY
yH0rn1gHNfw5R7kzvHQmp4dOuXCm5wkKOEINN8hgDxM1T/dU7xYaWDRr2GpU
qxzlaomVvhVcBXcVXKD0Do01pBVg9U7aLeWcuEa1D+jtgbwY6Tl4B+3yghme
MMXbzJo9h4Pm12wwqHa3zazZpSGtybXqqd4tNHCDOt48k3fySF6lxJJ4+0b6
VjXcoIIrjDA4pru7vb5AqZmJ9fCEyTWqvUAZbZrSTvAxhTeaizySV9yfuTt5
xtYey+scDkb/F3CUH5B55tSxwjHdjfamt9dnNE7R5pm8Kz27NKV95K5wjnJb
aKDTrtE2o2ZN+Js61nnnh3fW7jO84AC5ztS8zOydtXtpb3Ln6jexWlPaevOL
34DegjSlncHeGrO/yehY5h20S+m3qTeot/gPk0Z48g==
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.09177281734708626, 0.4036594255381296, 0.5317067686098387], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtklGVg0AMRWegAsABOOj+7Sd10K4CugJ2WwewCsABdQAOigPqABxQB3vf
ST7uKZ2ZJC8vKb9/v36SEMInHKDlTwM3uMMUQxhhgAdcODvDwvcL4sECbynv
HX0f4QMibwI8+ZmDnemughM8YIAarnCBM3TQKwe1jrCSYxPkWOEsLTArt2uc
XKO0dtBHy6FcDbTwJnaHjLscWmiggBLe1NpliLTDBKNrlNaSXgvYlSs1DdJS
wck1SuuuXNF6qr0n9daTu4MBHnDlTe0eySvVVG290duXvFb/sHmMYkfNJjFP
5e0IUzBP5W0hrdLM2aC5wh/cqXHzmqo9k+PpM9fso3qHDPLEPMo8RrGl584g
T61n9b4Q9grWs3oPnqvns3PP5b12ZvGZaXbyUF6usKVWU7ULKBObiWZzhI9o
Z7qr4CR/iFngCXNqZ5XvqHa19dlnzCw/mMbFPZE3d9/1WrNITMPqOZV7cm+1
c9q9zWchz+Td7LVH35Wr59LOand738XGd23y2S0+29y91M5p9/4B7+Fy2Q==

               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.09439037503414141, 0.4453873687997123, 0.5389762661285269], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtk8GRgkAQRQcwAc0AM8DTXiUDzQAC2C3NQDcCyEAzwAzYDDQDzUAj2Pdq
+vCqKOjp+f93U/c/++8ypfQFC2iLlLZw5/kBJc8FzDz/ic8wwQ2uHL7ABDdY
06SGd5XSp8pnPDvBzZ7U3OEJrzL3sNfFXrDnzA4GGKv8zm8DjFDSu4AD347W
0GMIDWrZQGN/al9F1qCWJ7zgobfwoJcVtUuo1S7U1LCEFZS8K6LG2jVnamhg
A0feHaCDHkY8DvCGj3nxboYTnMvsQS8nOMODO+4wm1WVM5wiI7NaUbOEg3eF
J7299WYPzpzUSyarRb7Tuz3j2Z5vXWRqth96vvWkNzOh9gk7sy9ypmbbwEY9
MMHFWUSGz9Cs9j68N5G9PXaxQ21oVnunlqCLnXK31KAWZ+gsW9jCzl5lzmQO
DWp5xe6YqdmeI0tn4mw2oX0LbczQWepZ77fYRT3r/RrezKiPM9vYAXfBf8B/
4WJtyjtSh8Y2ZnqKHXAXrlF7ht+UPejFnXP3xthtZ+bsPjFLd8xd+wcD0XO5

               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.09700793272119658, 0.48711531206129505`, 0.5462457636472151], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwt08txgmAYheFfsAKsINABbrLWDqAD3Ccz2IGkAu1AOpAOoAPoADqABvKe
4SyeiXL5c76LX9Vv8ROFEL5xxMKXGT0GbIcQVkR8jjHxeUSPAdc4hAtSZJgw
oseAE+8kSJH5jMjXdG/jmRUzFtxQoUCJjWdWvcPnGA0eSAh7wp17NSrccEau
Gsi24IQENe6HPaOyJsqGlmtvPPFyTartg071cdYFBUos9GhGwb0SN1TqD2K9
z70eH3TIyJge9xpVa+mz1EP1snStT7zi/UydfdH/Vmau1chxjveaZs9kc2Zl
f6BxjbUzKdvJtaqH6mWLNz7oNBOeSZHjjJbMbzT401+eebjH6vXg2X7QKTPX
nj5TZ1+dfeTdKew71PuMxjOqPCPNquWMt2eu2XfunXqsXr/wxIot7JmVfdQu
RntPcu/g1Ts0ewe1i417oxpVa+Zd1Ew12861KEPrHdOuqSbVFnu2mungmkb3
SL2KmW103GekWW3Omnj3Xp7tw7s7Obt+Y/qtdd417aB28R8/fXSZ
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.10863594981469137`, 0.5197985687511097, 0.5454002603086422], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtksGVgkAQREchA0lgH2SAh71rBIsRrJ53D5qBbASaAWQAGUAGmAFmAAHs
rzd1+JeZnp6u6vr4/v362YYQPiGFNgmhgTNc4LQJoYIDHOFC8RlK2MONmiuU
sIcRBuighzc95xB7qFfvO/2hv970mGGAEZ7UPOAONdzgCmf9rRmoOUAFJ0jp
kcBDb2GFZRvPdHf07BMzvKQPGqjhD3pqO5jgBW9qZ1hg3UQP5EUlL9RTvWEH
mWfQLBO1L0HNZA/kRcbZzhqkpaA2twZpOVJzgBwK+QGze6jXaG/uUEujtMId
6iR6Im8SSOGJpgcssIboibxpoLXGyZ7L+5SlJ2ncoXa5Wrs0SuvqXtIgLQW1
OSyq9c5La5CW2rNelY1t9Hyy5/K+sNadvJE+zgbotIsQM6VsaQfaRe87ZUhZ
Sq1Vb/Q2c6/Fu7/5b2VUWe2p7aCBdhN3WNnDpz2Ulzs0ZWncoXY5wGgG91Av
aV68I+2q4CyHEvb+o3GGleXW3itjylrtbOuN3mbOkjKhbPwDNeZ1eQ==
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.12349618318920438`, 0.549237331250863, 0.5416437580178328], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtksttg1AURDGGDqCASNCBLaUA00AEDUR4m2xwByYV4A5wB9CB3YHpADrA
+5wRszgSvHff/c18fP9+/YRBEHxCBMd9EBzgBAXcoIMrtPAk5gEDjFDsiIUX
3xMsMEPJWQVnqCGC2Gel3+jtBRrHKPZOjR5qOKsmzV2hgUu4nemuhGq/nemu
1h3cqN3BCm+IiYk0g+7gTY1V/fAdwx16GGAMtx7Vq2bUrJNm0z88d1tO5U74
TiHnTQYnKJSPsx46uEELV8gUqxzEPDyTZkvpLYFVvak+IkTQaDY4cnaAmbeL
c3bOqdwVd2W49aheNZNmS5TbM3eeUbNW3l1nbaWZtOvhDjm1M1i5ext9z7BI
f3jAACPkkHmG1D039pC8NHq3L5jCrYZqtfAXbB47OYdyjfbWbC9NfjvDohzE
vNyDekk9qzTI7YHaO9Pucu/+AEdrlthz8l5h7bRD7XLkbLCG0rK19xN2kkZb
D7M1lJbSZLan5C1pKC3ludg7m93z5J0N9ri8/rS3VFO1/wFUPXZZ
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.13835641656371742`, 0.5786760937506165, 0.5378872557270235], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtk8Ftg1AQRCHYdGDfczAd2EoDpoBIUEAk+5icSAcmFUAHpgPowHQAHeAO
8Dlv9OfwpA/s7t+dHd6/fj6/36Io+oANZDwc4Aw57JMo2sHK+QVXuMARTtCR
c4ca/iAldgsN31qYYYIFnlDDDSr4VU1yVtjF3AW/5FZwhBOMfHtADwO00DhH
uRk5BzjCCVJqbmGn3mGEh+/U3TM5k3vuXFO1F3jCyJ0P6GGAkpoFnCGPQ8+V
NZAWJRSakW8zdJzv0MMAKe+2cZhBs7TSBm5QJyGmt0azNVrcs3rviLnDBa7W
RNqcITc6HyBLgobSslKvcZhJs2kGzTJ4NtVU7Y53d2igjcOOtWvtULvM7YXC
sw7E9M5R7hUunlGzjprVMYqdqTFZU2lbQmENpEWG6Q6wcn4loefKNVX7ZK8t
mkUQs7jmbE0urlm6xuoYxe7tBXla3k65a7sJHpPXamre7KHMGjR+V/tO3b1K
G6OzPJba4413rt1n3oX+Gf078sRkTaRN7d3v6GG/CZ6St+RJefMfTGR3OQ==

               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.15321664993823045`, 0.6081148562503699, 0.5341307534362141], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtk7txg0AURdFnpA5E7AQ6EK5A5A6k3AHK7EzqAFwBdCA6gA6gA9QB6gCl
Pnf2BmeGebv7PvddPr5/v37WURR9whaeMMEDWrisougMJ8jhRWyOQkxnOY9P
cIYL3DdRdIMjZDDCAB30Rt8PaCGFBA4Qw4scMwwwwp7YDmq+G7hSs4Ad7N2T
epvce+baJ8jhzpsbFHqr/rh7cw7luvrsCNk6zKzZK/iDN3cW1VMv6oFYDYvO
IOUsgSNkq1Dz5Jk02wtmmODpmTV7AddNyKncB4ihhw4meCpGzoN7Vu9vYss6
aCJtUr4T7yC3ZtKuhGodak7egXbREnu4Ru87pTWSViMzDdBBL02lLQwwQg8d
PKCVH2C2RtJqj4l22+ABeaH13RoaqKC0ZqljtWM6S3mbwMLbt1ms4csekVek
gbS48H2WP6DZhB1ql7N7u9ibmkGzVNwplYMa8TZ4qrYmrTWf7EF58e1dawex
PSfvSSNpFXt32oF2MVqrzlr11lL/jP6dxr2qh8oeKDyDZvkH/sp4GQ==
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.16807688331274348`, 0.6375536187501233, 0.5303742511454047], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtkrFxg0AQRU+yxqgDSB2hDkQHUuwExU4gskOpA9EB6gA6QB2IDqAD1AGE
fn/4wZu52fu7e7v3v37+vn+3IYQMdvD4CKGGO1SQbEKI4Qo3uCDOYeA8wkLO
HFZNYo20BZTQom2gg6dA28EEb/VDU8Mdqs0a012uXtBzfjlHuaVrR7CHMzVP
fpPetvedcpR7Y4YrHCGDHs0L7lBJTyzSzJwfcOCcQqzZvQPtImY5yW7V1J6p
dQ3VusINFpi3a03VfnOe3FO9E9eerb05t4DSO9KuBhjN4BqqdWC2FI6QaX44
wcCsY1h3ljumuz1vjnbrDrSLEgrI4QIH7lKYOS/ekXZ1grM1uT3xsEbaSbPB
EzpooNV+4eWY7kYYHOudMzk2Oqfxm/S2Xn8HHTyNzo28ZBp7Rt5pmbmBCj7D
6snBNVRLOxmskXYhNssj+nv9B8SQarfyAJranpa3D76Tx+S1DI76D3l1s/5Z
4ZjuKntZf6S/Uo/IPdRLOZPfoLecvWt5Tt77B3PFeHY=
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.18417892739100858`, 0.6584628099437766, 0.5254611998365437], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJxNlD1OI0EQhZsxIAL/gCyEbf4E/pkBhNcmGq/JWFZEBERAhFYrRATsknAE
jsARfAQfwUfwETgC4b63/SFN8FTVVdWvql/3zN6vp6vHJIRwJ5SEVDgRMmG+
EMKR7HUSYf9Cdkbc+UxYl/9mXwS3rpFt4Dv2LtybRzZPIv+D7Ktw6r2ymXAo
v+G46n7LX1mMHDchrmdC3XH1asrWhKqwJawJm8Kq0Cr4NdarxFz3LPwJcaa+
MBK+CR/wT5nV+YdSzH+n5qcwFs7BmNyn6l58Xs3cQJNPYZmeE3jrnOMCfXLZ
mfDXetpPYo+PJPb2DBPruRjnfivFnGvmsivCgXup55B5rOk0ifNN0HjM7D+E
M+ES/5z5h+w7oXZQiA8K5xyggzXJ4RrB5XxbOEbXirDhO/V50Mc6dbmTToiz
7wo7wja2To8uNcvc3xpc+/RxfInciFk8RwbvDnV9ePrwdgr9XNuj14A30uNN
tel1zNrxFJ6cnj32fenUpUcGf8relPUusx2iTxmNJpxvHuKb9bl05f+/yWrB
r7C2n7C2Jk3iFeJlztki14K3SX274G8UNO0Q/+Ktou8S+8vwL5CrMVuKBn4/
U/4P/k/00S9HqyG1m2jVw2+x/gdHnUUG
               "]], 
              PolygonBox[CompressedData["
1:eJwtkTtuwkAURd+MU1hKFSEkpHwQHSRdKheUIaJKkSqkjFBExSdpWIKX4CV4
CSyBJXgJLIGSc3UprubMfZ95fh79bD7XOSLu0Q06oz66RQ06FBE7zj90hDuS
3+GZYvAqRTzBQ7SHW3J+wzWqlTe89hzAZ2oW8LfuxOd4D/Aj+oLr5FzVNMkS
P6MWnlP/cr2Psz2xvIP6o4li6AQPsuPyymxPsVdUca+ZYRueuYFX2bGpvgcu
8T7CM2t2zahZe+qP6uxc7eQIV8m70zeMNT/eW7iHerXZu5OnWMd5F96BdlEV
3s1S78Nl8lvasXbdFf4X/3ofvgCE8yow
               "]]}]}}, {{}, 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{6, 168, 216, 328, 344, 232, 184, 200, 264, 360, 376, 
               280, 248, 152}], 
              
              LineBox[{1032, 888, 824, 840, 808, 792, 760, 776, 664, 680, 696,
                728, 744, 712, 648, 632, 616, 568, 488, 504, 520, 536, 552, 
               584, 600, 472, 456, 440, 424, 408, 392, 296, 312}], 
              
              LineBox[{1064, 1016, 1000, 984, 968, 952, 936, 872, 856, 920, 
               904, 1048}]}, "0"], Annotation[#, 0, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{136, 167, 215, 327, 343, 231, 183, 199, 263, 359, 375, 
               279, 247, 151}], 
              
              LineBox[{311, 295, 391, 407, 423, 439, 455, 471, 599, 583, 551, 
               535, 519, 503, 487, 567, 615, 631, 647, 711, 743, 727, 695, 
               679, 663, 775, 759, 791, 807, 839, 823, 887, 1031}], 
              
              LineBox[{1047, 903, 919, 855, 871, 935, 951, 967, 983, 999, 
               1015, 1063}]}, 
             RowBox[{"-", "0.2`"}]], Annotation[#, -0.2, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{135, 166, 214, 326, 342, 230, 182, 198, 262, 358, 374, 
               278, 246, 150}], 
              
              LineBox[{310, 294, 390, 406, 422, 438, 454, 470, 598, 582, 550, 
               534, 518, 502, 486, 566, 614, 630, 646, 710, 742, 726, 694, 
               678, 662, 774, 758, 790, 806, 838, 822, 886, 1030}], 
              LineBox[{1046, 902, 918, 854, 870, 934, 950, 966, 982, 998, 
               1014, 1062}]}, 
             RowBox[{"-", "0.4`"}]], Annotation[#, -0.4, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{134, 165, 213, 325, 341, 229, 181, 197, 261, 357, 373, 
               277, 245, 149}], 
              
              LineBox[{309, 293, 389, 405, 421, 437, 453, 469, 597, 581, 549, 
               533, 517, 501, 485, 565, 613, 629, 645, 709, 741, 725, 693, 
               677, 661, 773, 757, 789, 805, 837, 821, 885, 1029}], 
              
              LineBox[{1045, 901, 917, 853, 869, 933, 949, 965, 981, 997, 
               1013, 1061}]}, 
             RowBox[{"-", "0.6000000000000001`"}]], 
            Annotation[#, -0.6000000000000001, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{133, 164, 212, 324, 340, 228, 180, 196, 260, 356, 372, 
               276, 244, 148}], 
              
              LineBox[{308, 292, 388, 404, 420, 436, 452, 468, 596, 580, 548, 
               532, 516, 500, 484, 564, 612, 628, 644, 708, 740, 724, 692, 
               676, 660, 772, 756, 788, 804, 836, 820, 884, 1028}], 
              
              LineBox[{1044, 900, 916, 852, 868, 932, 948, 964, 980, 996, 
               1012, 1060}]}, 
             RowBox[{"-", "0.8`"}]], Annotation[#, -0.8, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{132, 163, 211, 323, 339, 227, 179, 195, 259, 355, 371, 
               275, 243, 147}], 
              
              LineBox[{307, 291, 387, 403, 419, 435, 451, 467, 595, 579, 547, 
               531, 515, 499, 483, 563, 611, 627, 643, 707, 739, 723, 691, 
               675, 659, 771, 755, 787, 803, 835, 819, 883, 1027}], 
              LineBox[{1043, 899, 915, 851, 867, 931, 947, 963, 979, 995, 
               1011, 1059}]}, 
             RowBox[{"-", "1"}]], Annotation[#, -1, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{131, 162, 210, 322, 338, 226, 178, 194, 258, 354, 370, 
               274, 242, 146}], 
              
              LineBox[{306, 290, 386, 402, 418, 434, 450, 466, 594, 578, 546, 
               530, 514, 498, 482, 562, 610, 626, 642, 706, 738, 722, 690, 
               674, 658, 770, 754, 786, 802, 834, 818, 882, 1026}], 
              
              LineBox[{1042, 898, 914, 850, 866, 930, 946, 962, 978, 994, 
               1010, 1058}]}, 
             RowBox[{"-", "1.2000000000000002`"}]], 
            Annotation[#, -1.2000000000000002`, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{130, 161, 209, 321, 337, 225, 177, 193, 257, 353, 369, 
               273, 241, 145}], 
              
              LineBox[{305, 289, 385, 401, 417, 433, 449, 465, 593, 577, 545, 
               529, 513, 497, 481, 561, 609, 625, 641, 705, 737, 721, 689, 
               673, 657, 769, 753, 785, 801, 833, 817, 881, 1025}], 
              
              LineBox[{1041, 897, 913, 849, 865, 929, 945, 961, 977, 993, 
               1009, 1057}]}, 
             RowBox[{"-", "1.4000000000000001`"}]], 
            Annotation[#, -1.4000000000000001`, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{129, 160, 208, 320, 336, 224, 176, 192, 256, 352, 368, 
               272, 240, 144}], 
              
              LineBox[{304, 288, 384, 400, 416, 432, 448, 464, 592, 576, 544, 
               528, 512, 496, 480, 560, 608, 624, 640, 704, 736, 720, 688, 
               672, 656, 768, 752, 784, 800, 832, 816, 880, 1024}], 
              
              LineBox[{1040, 896, 912, 848, 864, 928, 944, 960, 976, 992, 
               1008, 1056}]}, 
             RowBox[{"-", "1.6`"}]], Annotation[#, -1.6, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{128, 159, 207, 319, 335, 223, 175, 191, 255, 351, 367, 
               271, 239, 143}], 
              
              LineBox[{303, 287, 383, 399, 415, 431, 447, 463, 591, 575, 543, 
               527, 511, 495, 479, 559, 607, 623, 639, 703, 735, 719, 687, 
               671, 655, 767, 751, 783, 799, 831, 815, 879, 1023}], 
              
              LineBox[{1039, 895, 911, 847, 863, 927, 943, 959, 975, 991, 
               1007, 1055}]}, 
             RowBox[{"-", "1.8`"}]], Annotation[#, -1.8, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{127, 158, 206, 318, 334, 222, 174, 190, 254, 350, 366, 
               270, 238, 142}], 
              
              LineBox[{302, 286, 382, 398, 414, 430, 446, 462, 590, 574, 542, 
               526, 510, 494, 478, 558, 606, 622, 638, 702, 734, 718, 686, 
               670, 654, 766, 750, 782, 798, 830, 814, 878, 1022}], 
              
              LineBox[{1038, 894, 910, 846, 862, 926, 942, 958, 974, 990, 
               1006, 1054}]}, 
             RowBox[{"-", "2"}]], Annotation[#, -2, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{126, 157, 205, 317, 333, 221, 173, 189, 253, 349, 365, 
               269, 237, 141}], 
              
              LineBox[{301, 285, 381, 397, 413, 429, 445, 461, 589, 573, 541, 
               525, 509, 493, 477, 557, 605, 621, 637, 701, 733, 717, 685, 
               669, 653, 765, 749, 781, 797, 829, 813, 877, 1021}], 
              
              LineBox[{1037, 893, 909, 845, 861, 925, 941, 957, 973, 989, 
               1005, 1053}]}, 
             RowBox[{"-", "2.2`"}]], Annotation[#, -2.2, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{125, 156, 204, 316, 332, 220, 172, 188, 252, 348, 364, 
               268, 236, 140}], 
              
              LineBox[{300, 284, 380, 396, 412, 428, 444, 460, 588, 572, 540, 
               524, 508, 492, 476, 556, 604, 620, 636, 700, 732, 716, 684, 
               668, 652, 764, 748, 780, 796, 828, 812, 876, 1020}], 
              
              LineBox[{1036, 892, 908, 844, 860, 924, 940, 956, 972, 988, 
               1004, 1052}]}, 
             RowBox[{"-", "2.4000000000000004`"}]], 
            Annotation[#, -2.4000000000000004`, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{124, 155, 203, 315, 331, 219, 171, 187, 251, 347, 363, 
               267, 235, 139}], 
              
              LineBox[{299, 283, 379, 395, 411, 427, 443, 459, 587, 571, 539, 
               523, 507, 491, 475, 555, 603, 619, 635, 699, 731, 715, 683, 
               667, 651, 763, 747, 779, 795, 827, 811, 875, 1019}], 
              
              LineBox[{1035, 891, 907, 843, 859, 923, 939, 955, 971, 987, 
               1003, 1051}]}, 
             RowBox[{"-", "2.6`"}]], Annotation[#, -2.6, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{123, 154, 202, 314, 330, 218, 170, 186, 250, 346, 362, 
               266, 234, 138}], 
              
              LineBox[{298, 282, 378, 394, 410, 426, 442, 458, 586, 570, 538, 
               522, 506, 490, 474, 554, 602, 618, 634, 698, 730, 714, 682, 
               666, 650, 762, 746, 778, 794, 826, 810, 874, 1018}], 
              
              LineBox[{1034, 890, 906, 842, 858, 922, 938, 954, 970, 986, 
               1002, 1050}]}, 
             RowBox[{"-", "2.8000000000000003`"}]], 
            Annotation[#, -2.8000000000000003`, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{122, 153, 201, 313, 329, 217, 169, 185, 249, 345, 361, 
               265, 233, 137}], 
              
              LineBox[{297, 281, 377, 393, 409, 425, 441, 457, 585, 569, 537, 
               521, 505, 489, 473, 553, 601, 617, 633, 697, 729, 713, 681, 
               665, 649, 761, 745, 777, 793, 825, 809, 873, 1017}], 
              
              LineBox[{1033, 889, 905, 841, 857, 921, 937, 953, 969, 985, 
               1001, 1049}]}, 
             RowBox[{"-", "3"}]], 
            Annotation[#, -3, "Tooltip"]& ], {}, {}}}], {
        DisplayFunction -> Identity, AspectRatio -> 1, 
         AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, 
         Frame -> True, FrameLabel -> {{
            FormBox["\"\[Beta]\"", TraditionalForm], None}, {
            FormBox["\"\[Alpha]\"", TraditionalForm], None}}, FrameStyle -> 
         GrayLevel[0], 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "GridLinesInFront" -> True}, 
         PlotRange -> {{-1.5707963267948966`, 
          1.5707963267948966`}, {-1.5707963267948966`, 1.5707963267948966`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   StyleBox[
                   "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \
SubscriptBox[\\(B\\), \\(eff\\)]]\\)\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                   GraphicsBox[{{}, {}, 
                    RasterBox[CompressedData["
1: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
5p4c
                    "], {{
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}}], {Antialiasing -> False, 
                    AbsoluteThickness[0.1], 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]], 
                    LineBox[
                    NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                    7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                    112.5}, {7.5, -112.5}}]]}, {
                    CapForm[None], {}}, {Antialiasing -> False, 
                    StyleBox[
                    LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -107.48407643312102`}, 
                    Offset[{4., 0}, {7.5, -107.48407643312102`}]}, {{
                    7.5, -71.656050955414}, 
                    Offset[{4., 0}, {7.5, -71.656050955414}]}, {{
                    7.5, -35.828025477707}, 
                    Offset[{4., 0}, {7.5, -35.828025477707}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 35.828025477707}, 
                    Offset[{4., 0}, {7.5, 35.828025477707}]}, {{7.5, 
                    71.656050955414}, 
                    Offset[{4., 0}, {7.5, 71.656050955414}]}, {{7.5, 
                    107.48407643312102`}, 
                    Offset[{4., 0}, {7.5, 107.48407643312102`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -100.31847133757961`}, 
                    Offset[{2.5, 0.}, {7.5, -100.31847133757961`}]}, {{
                    7.5, -93.15286624203821}, 
                    Offset[{2.5, 0.}, {7.5, -93.15286624203821}]}, {{
                    7.5, -85.9872611464968}, 
                    Offset[{2.5, 0.}, {7.5, -85.9872611464968}]}, {{
                    7.5, -78.82165605095543}, 
                    Offset[{2.5, 0.}, {7.5, -78.82165605095543}]}, {{
                    7.5, -64.49044585987261}, 
                    Offset[{2.5, 0.}, {7.5, -64.49044585987261}]}, {{
                    7.5, -57.324840764331206`}, 
                    Offset[{2.5, 0.}, {7.5, -57.324840764331206`}]}, {{
                    7.5, -50.159235668789805`}, 
                    Offset[{2.5, 0.}, {7.5, -50.159235668789805`}]}, {{
                    7.5, -42.9936305732484}, 
                    Offset[{2.5, 0.}, {7.5, -42.9936305732484}]}, {{
                    7.5, -28.662420382165603`}, 
                    Offset[{2.5, 0.}, {7.5, -28.662420382165603`}]}, {{
                    7.5, -21.4968152866242}, 
                    Offset[{2.5, 0.}, {7.5, -21.4968152866242}]}, {{
                    7.5, -14.331210191082802`}, 
                    Offset[{2.5, 0.}, {7.5, -14.331210191082802`}]}, {{
                    7.5, -7.165605095541401}, 
                    Offset[{2.5, 0.}, {7.5, -7.165605095541401}]}, {{7.5, 
                    7.165605095541401}, 
                    Offset[{2.5, 0.}, {7.5, 7.165605095541401}]}, {{7.5, 
                    14.331210191082802`}, 
                    Offset[{2.5, 0.}, {7.5, 14.331210191082802`}]}, {{7.5, 
                    21.4968152866242}, 
                    Offset[{2.5, 0.}, {7.5, 21.4968152866242}]}, {{7.5, 
                    28.662420382165603`}, 
                    Offset[{2.5, 0.}, {7.5, 28.662420382165603`}]}, {{7.5, 
                    42.9936305732484}, 
                    Offset[{2.5, 0.}, {7.5, 42.9936305732484}]}, {{7.5, 
                    50.159235668789805`}, 
                    Offset[{2.5, 0.}, {7.5, 50.159235668789805`}]}, {{7.5, 
                    57.324840764331206`}, 
                    Offset[{2.5, 0.}, {7.5, 57.324840764331206`}]}, {{7.5, 
                    64.49044585987261}, 
                    Offset[{2.5, 0.}, {7.5, 64.49044585987261}]}, {{7.5, 
                    78.82165605095543}, 
                    Offset[{2.5, 0.}, {7.5, 78.82165605095543}]}, {{7.5, 
                    85.9872611464968}, 
                    Offset[{2.5, 0.}, {7.5, 85.9872611464968}]}, {{7.5, 
                    93.15286624203821}, 
                    Offset[{2.5, 0.}, {7.5, 93.15286624203821}]}, {{7.5, 
                    100.31847133757961`}, 
                    Offset[{2.5, 0.}, {7.5, 100.31847133757961`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "3"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -107.48407643312102`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "2"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -71.656050955414}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "1"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -35.828025477707}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 35.828025477707}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 71.656050955414}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 107.48407643312102`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                    Scaled[0.02], PlotRange -> All, Frame -> True, 
                    FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                    Opacity[0], FrameTicksStyle -> Opacity[0], 
                    ImageSize -> {Automatic, 225}, BaseStyle -> {}]}}, 
                 GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ),
           InterpretationFunction :> (RowBox[{"BarLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.141592653589793`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.122103, 0.00901808, 0.39826], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.081402, 0.006012053333333333, 
                    0.26550666666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.122103, 0.00901808, 0.39826]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.122103, 0.00901808, 0.39826]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.122103, 0.00901808, 0.39826], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.0943951023931957`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.0839935, 0.279645, 0.510102], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.055995666666666666`, 0.18642999999999998`, 
                    0.34006800000000004`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.0839935, 0.279645, 0.510102]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.0839935, 0.279645, 0.510102]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.0839935, 0.279645, 0.510102], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.0471975511965979`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.097699, 0.498132, 0.548165], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.06513266666666667, 0.33208800000000005`, 
                    0.36544333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.097699, 0.498132, 0.548165]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.097699, 0.498132, 0.548165]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.097699, 0.498132, 0.548165], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.175507, 0.652273, 0.528496], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.11700466666666667`, 0.43484866666666666`, 
                    0.3523306666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.175507, 0.652273, 0.528496]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.175507, 0.652273, 0.528496]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.175507, 0.652273, 0.528496], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.0471975511965974`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.329526, 0.762208, 0.474596], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.219684, 0.5081386666666667, 
                    0.31639733333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.329526, 0.762208, 0.474596]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.329526, 0.762208, 0.474596]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.329526, 0.762208, 0.474596], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2.094395102393195`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571909, 0.839991, 0.408102], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3812726666666667, 0.5599940000000001, 
                    0.27206800000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571909, 0.839991, 0.408102]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571909, 0.839991, 0.408102]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.571909, 0.839991, 0.408102], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3.141592653589793`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.914809, 0.897673, 0.350652], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6098726666666667, 0.5984486666666667, 
                    0.23376800000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.914809, 0.897673, 0.350652]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.914809, 0.897673, 0.350652]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.914809, 0.897673, 0.350652], Editable -> False,
                     Selectable -> False]}], "}"}]}], "}"}], ",", "#1"}], 
                    "]"}], "&"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}], 
               ",", "None", ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               
               RowBox[{
                "LegendLabel", "\[Rule]", 
                 "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), SubscriptBox[\\(B\\), \
\\(eff\\)]]\\)\""}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
               RowBox[{"ScalingFunctions", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
               RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
               RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], 
             "]"}]& )], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[
        GraphicsComplexBox[CompressedData["
1:eJzl3Pk/VVv/AHAVFSFSKjOlEEVkyLAUDYoGKZSxSBMhVKKBIlQilKLMGiRJ
RaUVIRIh85B5PofjHGdQ4uvbtde693Sf1/MHPH5Zr3f7nn3W+nzW2nufsz7n
Sh88aeo4k4ODYy0nB8f/t0uUDM1+So9B9raNEuO1RnQUedfRQZVPckNsx7vY
XI3MMf3HdhywvR6wnZ/t+Chg6xdg7xdh9pbo7z//vYvN1chEf9mOA7bXA7bz
sx0fZe8fYI8be78Is7dEf//pamSiv2zHAdvrAdt52Y6PsvcP/Hte2ePG3q+u
/9BWI/8zvl1s8e1ii28XW3y72OLbxdbf6j/mIXue2eP47/3E7T/7W83W32q2
/laz9bearb+of4B9XbDPO/a8sseNvV8c/+GP6C/b65GJ/rK9P3v/iP4D9nXM
vk7Y5+G/5xnHkb2f/96i+AK2+AK2+AK2+fvHdYZ9HbOvk3+fhzjP7HH8937i
lm3+svUX9Q+wX/fYryvs65Z9XbDPO/a8sseNvV9s52c7PsreP/Tv7Ndp9usg
+3Xm39cxXifs8/Df89z1R7/Y3p+9f+ztf7qP/Lfr4H9bx/9tHv63OP7Rz721
uhyim78hg5++hgq/KpHlpN5f1cqqQF4ePB4dVluOzPjmI5Nh+AW5WPzX4/LM
EuS7Tr6qZKlPyM7Pf72dF1qArP/7/fKQZX+f/z3b+XLYXp/F1p90tuNJbI5A
zq6KkL1ojOdVySld2+R72I0Le+58HsAefHmjaliLjjy+T4N3URA2H6t10/p6
bInoqxdsVzKQ16xXybnsha3f1EB9VIht6uOn+HUhE9lBfNXh0UPYnu+/PVj6
AjvA1qdBbyYL+Q6HrJDDbuzH8WXGQXHYbzd6BaQPs4Dn4TT1VyQWyvezk+/m
eN9loXz3n/lSr7uVhfK93K/50QwGE+XbJoTkXZjIRPm+EzG+PWg3E+W7KpZX
3GSSgfLNmyo2JPCUgfK9JUMRVu9noHxfytG5eWcuA+X7bb6xvdUrOso3o9Rq
rZQDHeVbpebErC5BOsr38e8+1alwFOU7pfda8nHnUZTvf97nduk8hZLU6Dg6
vo8Uld/XSqDDuM0Oiy00GsF9/UvNFDILXYcXelVoSsZiBz+RjDQxxuZodxk5
95OJ7CX83uTxY2zSdr7H9ZbYBy9ZzZ7DjV3/6snBddkM5B2kH+8POWEXSG8T
DRfGXm8effpDIR0541rftyEP7BX5Gsriy7FjmAHXtn/D9yEhpdq+s37YQQdl
Nz1UwSadDXh+dYgFmTNdSe15ZGBAzxF/OjX+5LHaAgUpMrjrSg6qnBr/Hopu
7KnzJDAyKMWgT41/Rm+S57vmQbDVyeygyBMmfNYybweX9iB40BFYrrefCa2r
3VfsiB4ADOu36w9NjX9eacNEFLMfmDQMpQROjT8nT7+udW8/SDKTEUqbGr9T
duozuaw+8PPr3gsVU+Nf9Iz/qtuCPmC6PWhwdGr8H5M97d649oJHRe/Ml3rS
oVtMs+asrz2AYyPlo+7U+CVvGQgaK/UA89xlygenxl8W9Lg/IqQbpGuaxwRM
jd/nomB+S38X4MoKnvtkavwKp8/cXbEV37f5Mk9dLJH8hvyR42aQcH4l8tmd
aeGHHCqQrXXCNOz5ypGLG0qMfu4uRVY7PdMqMqoYOW6htsuapkJk3t/v9xH5
zO/zf0D+9Pt8b9le/5Ltv89gO57M5sg/1gNykK8ySbAGHQ9+Pd9i2dFaZKGe
+Av7P9QhxyxUSw1b3IAsa1BUXuzSiJzuZsGYLGxC1ogbENcQb0H+UO6zycXj
O7LRL37n5NJW5P7IXdtcwtqQVz9d+p1btx3ZvaDDLbkP+3XTE64NER3I41SP
6GbQiazPo6d0ZrATiN3tsntDIdbvKCBdWeiUHo/91s3QOcEUO8Ta41TULOz9
Rklng7OYyPLrqi+cd8RmSXEGuAtjF/OqXTv8iYF8m3UofP8ZbKeuW3d2yGOr
V3y8v7GRjjz7HS1JPQS7JnXZEwUd7KRbe55LkPFzkMcF/9cL7mMbHn+RO3vn
n58X21eFkMp58XPfhHffDuXDZGTRz5ueh0ESsubSRCHaEuy9Rzi8zNwHcT5e
W9e/LB1ADp39dv1iWey0vUtiz5zvRy5J8pxsqOtD7qFV2WurYM8yUC6ICe5F
lgq/vmKiswdZt33gqq0u9n7lrYMforrxeriQbCJDwes5snxmhr8RdtzQ6ysL
DfH4V6Trl2f3YD91LhG2DhpGviv86BmHMAWvdy/yN1MnbKlaFVZSNnbnOi8x
JvcIckrkG32jA9hH6RMO99KwlfYaBJF/YY9kBT4FO6nIWQu/VIbFYZ/2EGB0
jmBrV5uJqBvQcD5Vo/WuRmDn32o52NiNfXbVeedkMguZNuZYX3of27nYxIC6
E7s3al36khnY9o7iS0EmE7lJleuy4yHsvTPJQyELsb9WVFtmTj3voPX+4F1B
vRf2R+ekNZMrsXV1rt2VbaDj9c3jwWUcjK3ScMDVXRv7SapB0x0Snt+yXqs2
w1jsB4ZCz7t3jIIC+m6eqJ34ObzMQBhevY9dF9Z46hwZu631vpzL1HojPKB0
qMUuBHv03MrwPY3YEyWDmzdPrWfCc5Zk/NQ8gy1w2CNj1SdskSxNR4mp6wXh
5TN/LRV0xFbalVc+Kwtb4/4Vf8ZMFrI+yUizfzf2tvX85KY47D1Xq+LLh7FX
xS8Y29tMQ/e3+ixL7f7LNHR/CyiO8/VRoqH7m2pzL5xfS8X3t+HVMxPPU9H9
7cYsL0P1lVR0f9NZnBtQ8nUE3d8GFDhLrM6MoPvbbb3t8yhSI+j+ZmgabuJf
QkH3N6pjQ6iwOwXd3+LOSlU9EqGg+9s9ka9y3gHD6P7G2GD9NK5uCMZP39/+
+T3GLh1ivMTzHjFewsR4CRPjRZ8Hp8dLmBgvYWK8hInxEibGS5gYL2FivISJ
8RImxkuYGC96fmX7HmS8VT7yE98oDNrCdZLJNwSa4j3dB3NpcHNpjDxwIYOc
Q3k757vQ4Kydal0B5SRwR5ZPSVWCBj9Uld4vX00CXr0WPOblVOiz75ClcOgg
MHuU1Os9NX6txh9CNsMDYO1xSsH91VTIsA4vT945AASUdBLyv4/AF+3yQeRn
/WBoKPBCz40R6OqYZ7BOoB+UZXyz4gEjUKnfYsLHtQ88cZdcv3qYAvtPULIL
KnpBsNrxxaYPKDCFEniKV6UXHGG8GvXcSYGHPCRXm4X1gOuuXEmqk8NQkvWq
795IN9g2GmNzznYYNp/bkdi5uxvMOaO29CMcgncmu61XZXaBI7ay/rf58PcY
70Z/zIp9R0MWCK64nHAc20EyheuhCHZ21rmApyVUZN5tu+e8OINt17riavZK
7CyP8bnva0eQ5/JUBX28gm31IJWnRA07Q803pLyTgsz52ZS3OhzbwlbuesMG
bPP+n6Lv24eRJ4RSxUsAdrKeqWR1LP6eJvIg3TviAP4eJHS92MXscezgBQZX
mmOHkTfS1TZdlKQgA/viLQtcsXXKDmxL+oCtpTVsrC44gqye7Lez2B5bVVDY
dH8mtrLvIzPSTCry6n4d8/N7sFftrbAUSMKWzztklTCKvUKJaaO2iYa8PDrY
vigSW5pLwsGiB5tYD8/Is6idM7BF7OXHUp/TkK9U7+A4YY9N2eIxR1kQ+8Db
aP7RD1TkotVwUbYrtkpCl5iPFHbMIp7l+hUjyHOC1qzivIjtPm62tngNdstJ
b61rrRTkrZ0P9HeFYr/YV7hlIcDWjqiJzWgZRhY4J5WmqYvdbX/8zYeYIRAg
OClXtY6EPs8FC0fC5oQ+ON2CV6ekAsNIPX98r2d1p27cQq8DHLt4hWXLJEPn
8f6GczOn4r9V+cWT/WS43Q68ls6igfb5Tc7MXBKUL4iI+ORIA7F1V+QMpElw
jtyAm/NiGrB4oNx54/Ig7A4BO4VKqEDIqSm2sXcAfhyOUMzxpoKvqwMsVmwf
gPF7BrhtFakgmKEs5J7eDy+8Br2c30fA5vdNZbmC/dBaNLLgcegImBkQcJXb
sw+uvzAQv2vDCMg1UTHYW98LF3eCCwwqBZxZ1PwrTrsX0jdHWsUkUYBaS0A2
6X4P/PZ4QGvjPgoYTlI5pTmzB2bw6y/um0MBj080K1127Iai3Qr9oqeGwWG1
wL6vxV2wNq0m0al2CEiPqySKKnbBMI+LNi+0ptaj23ZjAzoZP7+b7pjXvBu7
VnX3Z490EvKiRWZBfPOwzRj7tqY4DSLfqrOcAwoGkKuyrYrqpLAF79pecfXt
x/P53EFD7sY+vJ6tHGclqGOX6x7JX3+rF5lP8vilb8M9yMYcLvonjLFD2l0n
OR91I3/OP/U+lgubO8nLV/3gn/sfl+tMea4VDoOWmN1vr+WS4ffNzCU2JBYg
ncgIyhMnw570FRfPxLDAT535FgxfEhwS3tcbbswCPHwuK1Z9H4SM81d2PB1n
gqUtX0Zt9Qbhr56sl5/SmEDu6aqPEfcHINfOLrEOKybQ8A0OK5noh3yvhS6P
8zLBZpN+2wmbfrhI0mBQOJcB9opvXa0K+6BYoLupijMDOJBTxp0k++Dy4fic
7eIMcCqXqzTmQi9cZV4pdbiMDvyvO0RXtvZAVchx9aIvHdyy/ug0W78Hrl+p
PHxXiQ4SlGTUteO64cZQ230vW0ZB5q+LnK4c3dCIeSP36/VRkFfWWpVk1wV3
275fPqCL41HSbmA7j8RClt8SJLMqBjsorbx7mzF2v+DCR8fGmchGpy1PBKdh
P2q+v+axFTb3xi5qCS/20VT5V/3vGPj9eU+e5XbGVnDP0pEXxw6uG5vcWkZH
HtQBH4/4Ym9PuBxwVQk7bc5no4cteHy8zvP5iq9jO1eZVfROjf96+uw3q2bV
oOeN6tBL5Q3bapHF3MY7AsPrkA+Znmaua6xHfqJKndcl3YhMW+gsFX60CVmb
0aum/7wZ2b/uoNEQqwW5NLvFOka/FZnbRFFL1rAN+WnuUYPxXuzdq1NNvoW0
I9Pvd5k/XtOBHD1f5uClb9g6F21PWJzuxM9/0+MnrM655uwBajWcbkHF59xi
I5laON2C42HGSzRN6+B0C2ZbNDmt8KuH0y2Ilzj2emFmA5xugU43a/asjkY4
3YK6J4H7RgSb4XQL3N2FU1o3tMDpFvBpJdPL3L7D6RY8nFTd9C6+FU63QOaQ
/baaI21wugUni+Tcv3C0w+kWvJOnRH+80w6nW8Bz/XXeG+UOON0CC8r5/ufF
HXC6Bcl7Ngs+suuE0y2gveLTimN1wukWxYO43xDxIEzEgzARD8JEPAgT8SBM
xIMwEQ/CRDwIE/EgTMSDMBEPwkQ8CBPxIEzEgzARD8JEPAhzLa962kGrhqeC
NRYEBXYB5wN3wsZka+HKFJHLEVLdoDbcxlPAog425f2iP8jpBnqfl1uuDK6H
oS1tTk9Me0DqjEEdvXcN0GDsY8OrwR4goPVcau9QI2QtTN2ef7kXnHE9zXlC
qhmmKQfnlon3gbZU3T4/0xZoZ+y8puFVHzBqnfUl+vJ3uPDIrviunf0gU/jz
s4xXrbDYX1WI0tcP+FYWlxzyaIO+D4Sv/Lw0API2PtE+ydcOVd6OMWaLDgJP
mxtPvVPaYXdt85EFWYNAwdtNMgB0wLtU2ChuQgLfI83Cwuo74A7+RGP5HhII
f64xK9atE85UCHivdoEMtpSJeD7k6YKvNx1V1l8yhOJBPG8Q8SBMxIMwEQ/C
RDzQ8/t0PAgT8UDPM9PxIEzEgzARD8JEPAgT8SBMxIMwEQ/CRDwIE/EgTMSD
fd9U9fffN2TS7myJK4OVyEmuujx1iRXIb6aO7s4uR1awCs2ny31Bvhv9/38l
yPPqEqfO8AnZZ2H6lnbvAmTy7/fLQ377+/zvke/9Pl8O2+uz2PqTznY8Cdn3
tyOQic/jOxNuhpHGq+HcjY4wOXrq889Zp5pP2rXw4NNd9kJaw+DNTr2lid51
MHeJzqxL9cPg5IpF1udz6iFv/i1TpjYFyP4ajLNkNcCc00HL0kMooOlbfpea
RhM8rHRh1KGJAm4+jpYT8GqGQp0ehaKrRsCmS64nBrNa4Ic7x6KqvEfAD/Mt
GUW079Blh51T0OcRYLF4/o9dS9ugKOc+TX0RKnjh9+Pe++w2WJKznZt5lAr4
h7p1FS3aodfJDY1Pc6jgqGVlazSzHS6X1XjiwE0DBQXvLs253QErGxV9RC1p
QEL54TJP9U544aaMSdVDGjh771ZhR00nVNy8RCKIRQM9u7zMs/YQ989RMLjN
/HxiQi0yxVAzOXykDpmut/TLJf0G5B+aP6iuoY3Ik2ubltp9b0LmVHqnv1Op
BZl7ZayTns93ZH7p8zeUSluRg68/289/vQ35Go/U0BW1duTQwJuXfjVhh3PO
WOTp34EcccntIUmhEzlqol3boQqbyP/gT6883jQaiH6p4Xx18hqqI4ljLoem
vvG4zmTG+MGPb54g8wUcnSUynomsNG/v3iqRbGSTm/qpwVq5yK94onykFfOQ
N5WFJPu+/Yj81/NKEfJfzyfFyH89j5Qi+/1+/ihD/ut5owL5r+eLSuQ7v58n
qv5j3UxBdZ/mrsEa2NC/JlUjFMdnYi6F2nYD1yX8r8bpf/W6iPonzpWQZFOF
1gthYj21XrtJPTCM97XeG4sJTezAjuF9qBqXjvfBzn1RNdvIj215DXp0OeN9
Mw3j7ZEBZXifbRFv3Us5Jeze24VpkUvxvlzS4hZyQz3ex7O/Pbpa4k4zsvhi
XteD5njfrzFq2fMUYbwveFtYmzpQU4+8J8pUdU0k3lcUED7mccoM7zt+ibz0
8rUQ3pccqNn4RobcCRw7Ty6R5xyFlSN3JuINO4HlyN03fc9oMJtveKN0TAcw
niy0eniABh/IbwqMo7UDfb6RCac5NBiw6V6p5PZ2oCoqFr/yBRU624/Mf5DQ
BlbIbzHotaHChz9uPNQZbQVLNdy7U3io0HOttop24nfAuyk28PCrEbjxWG+O
lmkL4NhTLL/i4AgUSLi1UXNGM6DZ0Uq7+UZgSwMoVc9oBD0uEi7JORT4WJC0
Z51tA2j0MRJwdKTAM0Z3mlX560F5sEfmckEK3HTJ0HFtbi3wVwGPis8OQ6Ec
Cln5RA04ZhJJ3lL55/e8hWG5c52fdyKn+ZIoK2ZgRxwVbWjb1YHss3db3t24
duRDG84+MqO0IW9XehjGr4/tuDaddlOyFVmNh7eAE7Ygc3YcjThj04z8LeeT
A+lXI3JCmOw6u9gG/L3XUX+uap165A0b2mu2NNciCy4FKW/P1fzxPTa7/1c/
dxL5Xvc7D2SUbzHG+rT3/GSU77/yQkL5JpXd8VmbPojy/VeeBlC+3yYzjFNM
BlC+E3/nrR/lO8TXTFyE3Ifyfep3HvtQvvfvzSRfv9aL8r3xd157UL4VlATe
z1DsQfn+K8/dKN9jnC43PEv/rMsNuaS65sqjTmTubaSUr2MdyIELkiVEtmFz
NVlHOdxtR/ZPFOZ/NtCGPOPE1ytj67Enjgj8DBRuRf4xdmlA7HULMiOY1vDc
vBmZKupYspnViDyUVpvddKcBeVB360NXrXrk3vKc21yNtchdtqsC73rXILOP
t9V7fvK7/DYw3UJ4bl2hpFEX2KXeH7ty7ShMeXXOW3OkCxTsucZSDRiF10fy
1uyO7gaabmv26DeOQg/Fud1HN/SAJzeqnhqvpkMrpx13/fp7gGSa51xLPzo0
SIjYeS+sF9wqWXLIsZYOFVoaObO0+sDs3re5bgoMKLhE+s2X9j7gzWm75Px5
BmSZOp3sDuoHQ9IzTwVXMWDr9afLJ1QGgD1ILotawYSfimkNwo0DoMZqq1yi
NxOmz1ofusZvEGz1HvR7Vs6EUXoXDbcqkMC72zda3sqw4PmzRWN2VSSw5qWK
ZrEXCzpm8T47600GiVXV4dWfWdB42NQhXGYICFNOk9skcP2s4zFhXfm1uC7p
XdNAgHbA3+qYTGCFSSP2sfe3ROxW47qnvDVHHNz9sJfE66RfrsU+uUCQFaWA
66qK/Ls3PDqPLUHPCXlbhe15+EZN2Qpct1VWd1CyzRt7uZHGUWo5ts+beS84
l+E6sW+r2saFT2Ovis3aLF+K7ccfdFNbcgy+VunJWPi3OqQ7j6C4FQnbWzo6
OPEmrnM4EO3OHFD7W12EoLHD2gZsySDZyrO+uI6CY8akbp40rrNoP1P/eG4R
dj7l+eJdx3CdRuKRkMu3+XEdx5U2h5HvmdiHLfRsVpjjOpCtFYtLnX9iy28d
0Xj5ANeNzPvwOWncANeZkDSSBA37sIl4vKzzAt0CVJgRppOr6NcFpHhCzhSE
DkGN4wZN1UrdILUzLOqE9jDMNdw25tPQDZRy72Qt7B2GhhK7F8te6QH7S3ce
tTGiwFKm+boy5V4grrnnzNoHFGhaabPHs3kqHkn7AmfTKbDhsaOb+NU+kCi4
P6px2wi0u3witFC1Hxw+b52cHjcCe61PPXVu7QcKg3ZZfowR6KLhXbooZAAM
mTt83GdMhaMCl/pz1QfB8wKnKoUEKjw3EDjncMcg8FA53j7BpMKZBTdk+W+Q
gOZ9F0qVCQ1ejY00eKVFBuM87pMpiTTIfzrG3qabDOBpT/5zYzQ0fuJ6wDn5
2CQ2YRBEBFiFc0W2wxl1JzM2FOM6jqOKKu9jPLArL1FLmVLYWnUvGkzLcJ1I
vKJn79Oz2Nx+6vS5K7Dd6pgzHapwHUqDYo4API+9wc9bQmQV9qM6bUXPOlz3
Iqj0S6vCH/us3/stq5Sx859NPubNwXU14fv9ivIFsQ9xcXWcOfZnPXpo/Ife
R2V4n1MnbZMwlyfeB/U44CijzI/3TT+3pea02GNLHR7YFfIS22tQsU+TG+/L
fnE9eaHHCluG8Vw4IgP77LnRpxs48b5vBYfGpmFz7BUBZ5tjnmD7zHt3atsk
9rebEzwsU7zPrCC8ISE5BfviPX+tPT9oUEqtceXSL7j+3i7PMLLFDe/z7Uo1
n1E5D+8LUsi8mi9ssG+q5btEPsdWPnc6+TQn3nf8mqfYbGmOfXJuxwKdx9j8
O28bSfzCTo80vsixC+9z7mie8bojAZss85pcQMe+fvTE8tSteB9VMUP6QNA9
7C+M2rDjQ9jE+In5Le9HO8rzaAjkcCenu9/rgnEbZy/S3D0MlD+/towz6IaL
Zy394Dg2DFKDP3OWD3bDT+2RL0t2UYDE9pZnP2/1wFkbJUPakiggch5lv7xO
L9RLeGjHZFEA75eZs827euHZmWvV+U1GgP+1Rc8vX+uDWQffzpONHwE/jOWs
MtX6ISXfsF2bPgLc+LTntDX3Q8Vl5a9Mjaigr8wkk+/KAHTyN792NJYKbG/Y
WWsrDcLEzjb7iyNUULvj1NyjNYPwu8ExjdubaMBkfsCLKF8SFEmi8aZH00DB
1zs2BbJkuJfTt6OATAPaN59wU8vIULek/6DId2J9dKHPfezfmxCfA30tZm6U
SBwF0y36XLhgqYQhtyv2XgNvn/uF2Leda7NURXHdYOPtteRiV2yx/BuyNkXY
NqQBa5oorkuME94SddUNu1M/sVz8b3WNsscnZ78Qw3WPRyIPgK3u2I/h69Mt
n7DJ/UIZ7uK4rnLNQte+Oaew3fW+SMUWY2cdkbNcO/V88DFv3avyk7iuq4nP
rFWuEJtm6T7XXwTXhc1LuanSchJ7GTV9v0YhtrZemX+YCK472xM8mDZ4Evt4
LXftpr/VrfnLyE0+EMF1bfdcNsv9OIn94o3DbrNC7NLZ/t7pIrhurtM0PnGu
K/bP+/DLwUJsocEW+jsR/HsRYvwnnsspzCvBdQ4i0qkuKl7YJTdlX5gvwz7N
kcT0rfhbHYWrjE6SL3ZNa9zFzwrYl3dKFlLqcN3GWhjLvfgKdvtqsR26a7FD
798NP9SK60J0+ZfWBV3DJvneFs3Qwl7XtOpDWhmuOwl/I2c0thJ7OFq2apPf
3+pUzEYtT9vhfWjDA98V7s/A+9QT9sU/CxKws49kfhk0wPvc7idjYhd0Yyt6
BbhoBeB98h4fV2C3Eu+jx/nvFwgsxt4fbNj+9Cjeh18Ytjqzmgfv05ffXuL/
8wn21fszzWRM8D7/xmTScqMh7F9PauknQ3FdwOvMD0VRyriOwD3n8e3cSuzY
LO5K/4paeHvUyqZVbxSYsMQ2hx7sghnLrRd0hI2C8xbi6RFzu2GJmXVRV9co
yMgWF76b3g3bL1t792rQQfsSifMPzHrgjyzr1QPBdLDgrERP0o8eKNRt3UFq
oQPDBokdj+N6oeIim6hhZQbw1JJ89WxzHzTcZLON6s8AKdGSEi9JfdDa02Zi
tJYB6sYkA96E90PPZJtMpjwTzN0vNQQ1B+CNGpvDP3yYYP0bqX2F3wdgCpet
yK+vTHBcRPr958uDEK6zLZ+UYYEYb+kVFQokWO9o6zfTiwXKG6Vv1FSQICXS
Vp2rhAU4tGUYjV5kyF1kOzBHbAyo3JOxaRPD84G4/jly6LV16uF96bwjugIj
YdjilTr6E13YZ7V0XOdp4n3umnjtuCUh2Co82hWy37Gvu6/nUFXB++j9jVrK
+pexNxlo2ZnUYcc/0by5XwHv0/8S0vzg5Itt6aNB8ajAftmlLuW3DNcFCJqo
7wr1wnZ+ue5iTAl2sfi6jEdi+Pdh8izKT73jo4CLnxzifKAGbjCvDODNGwWO
wS6vEzNroeWr54KNwnRQMJvS0cBdD90WhceknqCD5f5u/AL2DTDIw32lZz4d
XJ6kam3OboTx30wzNy5hgK5zHo4+85thzlpVXQEXBjBk0W9mHm6BlWFCxS0f
GSDJ4/S7vtzvsJ9CM32ylAn8zoyfCuVpgzN2Vbecmbr+ZarnBim8aoNLn2Ud
2Tx1/esY9X1QaN8OVfgjaUKiLLDghd5LO74OaOTseb596vq30W3y88/sDmj/
ZS/3syIWcFvzoS3KoROeWaUe4TM13jjyRYaKQBcUDXy+wfA4/p687J30qcV5
2BeoYUkDwnRkFbmZtbknsLus3eeE5WNH3erQdFjCQN5aYnpMwwX7x0T+PZ4C
7KdqqmUtS5nIdscSJzJOYi+IE1K+XIhdUONvby7KQj49bzRcwQ1bfoNDwa8i
7GavanqFGP69X++nvCa62ShI8z8evrbzGvzRn2kWljJ1/VsG87VPxEM+3qQy
RdYoSHTsbHv84AmUWh25udiIDia++U9e68+EqrsC4KF7dKBEj7xhOCsbbnY/
rTlJogMr4Yfi42K50DLiyPO7egxQKGpdaymaB0+8slRQv8kAVoo9sesefoQX
6rclVrYzAE3npKPguiIY/kNbzFmVCYJNWIrkvGKYLKYUOfcKE8jYXBot3lEK
s/Uk+JNqmSDHheddUlMZLLWbHwjkWOAhLNmgr1YBv/txcDSdZQHalhuy6d6V
kJI0csarlAVAhSm3WF4VnPWpY0RQfAwEWywmB82phjsd9gpViuLfJXaKXdJ8
XoR/x+ZVk2Yd5obNc6Pez00MO3Yz58Pdn/Dv5JQn15SpuGMXvD5AFRTHtnAN
XEz9hH+HR5J7oVPljn2h/bt9pjj2grs8geHF+Hd+Kabqae6nsLXmHaw0lcAu
+3idsbYE/47QzidHVMgDe1StW58m8ef/d+ClcvKOGlHs7pU57cNFuI57kWSZ
B4879ibh9jmy4tiefPS7oBjXjSdxcq/efwq7+qdYnocENidN2Sy0BNelqw0Y
9j7ywHZot/AukMS+VX+Cr/UzrnvP/3oxbswTm1oUobpQGlv6/cOi1V9wXf3u
l+8sjU5jX0yrIB2SwSbmP2Fi/hMm5j+qu5+e/6hufnr+EybmP2Fi/qPj0/Of
MDH/CRPznzAx/wkT858wMf/R+abnP2Fi/qPzT8///wPP8Ij2
         "], {{{
            EdgeForm[], 
            RGBColor[0.122103, 0.00901808, 0.39826], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJxNkrFOlFEQhe/+l0ShoVhjYgehMrEhQKxkWRv2lyUmsO7aKLtQEFdcogKi
LYXxASyMpaEQ7eARsOQReAAKG7eyMZ6T+TahODlzZ+bOnTNzpzd31wZFSqkn
ZGFfOBBeCl1hQ+gLbXI62F3OfXJeYI/uvRI2hR3hlwpvi8/EW/gdH+a4d57D
16HmU+xR3iDFvSk1uiCuF9HjDu+Z35H7R7Fl1ywi1kfTPvaedY6ltGuf3n1O
7yMNe9c0WccT6h/wRo+zeztFl/V9Ed8QPgjf8L8Rj1dSuiV7W9zB/it8J9/3
fgg3hRPynOPcY2l4LHtGdS51npP9WzxbhG3fR2HKvYm/Ytv3Wjn3ZF9UYg49
9JzRm3tsiNeFkpl6tl3xJ/GEcCX8pKZrj6fozTH7poXb1B7t4ZA9eFb/dGde
PFnEDh17z26b/KMVZmx7Fb/ja8Iz+rOvTu4SXMd+xNnveCaL7GaLf+RzjfiA
3g7xLeBf5O6DFP9h/drbPrdAic/78F6qOd4viQ/ZV86R10BHC43OfUjvTfpu
Y/sv+k9WxyJ3hfwOOjybZeq57jn//Ii91ZhHld6GxBvoulOJXd0Vvy3C1xPP
56g5l+N/tOm1ZC6+/xldx9xrELOW++hZ5dzkvjVvgBZzzPTmeiX6avASdo3a
jv8HW6xrhQ==
               "]], 
              PolygonBox[CompressedData["
1:eJw1j70OwVAUgO9tJX4Wi0hsbawWacUkYbJ3J3QRC9E28QAegZfwsxnFZvUg
BguTRXwnp4Yv5+s5vefHj5fRwjHG1KEAd2tMi+jDFT8QS1CEPVT5OSR2wMOn
0MMDaONNmmT4HN6u9pBeHpzwmNwIjyDEL8RyPuMIH6jlOandXO01hgx/Wp0l
O3zxHTMHeBcS/EGs/HtQ35AbGt0xxddWd5F7G1bfyFu5eeXoDJklO6Z4ArP8
W3afOHp7H7Z44OotMuPlaE5qspPslub3So8z/gNuvSNy
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.1133109862854342, 0.07145279029981243, 0.4240623956720626], 
            GraphicsGroupBox[{
              
              PolygonBox[{{947, 104, 883}, {916, 101, 901}, {625, 54, 626}, {
               313, 18, 203}, {218, 18, 328}, {884, 104, 964}, {626, 54, 
               660}, {754, 81, 819}, {660, 54, 659}, {886, 101, 821}, {91, 81,
                80}, {92, 81, 91}, {820, 92, 866}, {659, 54, 608}, {169, 18, 
               170}, {996, 104, 981}, {693, 80, 724}, {883, 104, 884}, {328, 
               18, 313}, {866, 92, 882}}], 
              PolygonBox[CompressedData["
1:eJwt0b0vw1EUxvH76+1SCwkLk0YjYfP2BxB/ADqQsKgIEwMJYaxEmZF42ZRF
bUxeJrUxWXUxkbC0CwO+T84ZPunN/d3bc557soXliaVUCKEbaczFEGb4nUae
9Qsfx1iP4431KlYwiwJyXOpCnbMNpBGxz7cD1JIQXvGJL9zjDhVc4of//cYN
boOd0dlf/CVWQ7X60I8Pzrwjw7cmtLDXjE5kvaZqn+Eci5xZwCSmUGXvAUVs
YSBaNmUeZD0aLbsy51g/c+fJe1bv1+xd4RTlaBmU5RgniWVQlgtUgvWY8R7U
Swfa0YPexHpW78MYwS53djyjsg5RY97nod4anKmn7I311kfsH2IDm8EyKqve
VG/bxpnWaHcanrnoM9Qs1zm75j2pt7znV829aJmUbRulxGagWWimNZ+RZqUZ
aBaP3Kn6G+mtSn5XNVTrHwSkT6k=
               "]], 
              
              PolygonBox[{{1028, 1027, 885, 101, 886}, {1012, 1011, 964, 104, 
               996}, {172, 171, 170, 18, 218}, {804, 80, 803, 787, 788}, {981,
                104, 947, 965, 966}, {932, 931, 882, 92, 867}, {203, 18, 169, 
               153, 154}, {678, 677, 803, 80, 693}, {739, 81, 754, 708, 
               709}, {578, 577, 608, 54, 593}, {593, 54, 625, 461, 462}, {901,
                101, 885, 1043, 1044}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.10603260792092149`, 0.12313872476189437`, 0.4454226442464031], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtkz1Mk1EUhi/9WXCpiV1gwrQLbhIJMoIkdeRnwLUw6IKLQI2MhYCugonA
RmWhbO0kMFkGDC7AgIkMlAUSWNpFB3ne3Hd48t2ce8/fe87XU3w7NpMIIQxA
Cu46QriF/xC4SCexwxrnLzAL76AIUzDC3QvIQR428duAZViBK2xNOIUzGMT2
HI4I/xNWsX2GRViCOtRgCyrwmzfnUMDnJTTI+QPKsOgaVMtT6IN+fJ65JtUm
n4JzKvd7KEEXdEObNy3XeOUaVMsjxMjCGDFH4Zi3vyCNLQVzvJk3c86p3G3e
thJRM2m3i0/VmkibCWzj7lm9r1irkmuruPcpmE7GGlVrLzzpiBpKywYcwj+0
+QvfYS/EGWlW32Ab3uDzGibhFQxjG3JP6u0TPh/hGm7ggjd/vAPahRvfdXJ+
4BiKpZzKfcB53z2q1z7PQjEUK49WuVTUWFpr5pr9V1gPsUbVWoO60fkEThOx
J/W2A1XIajbJqHHbO1D2Ts7aR76X0EzEmR27RtVadSztlHZr2lprJppN077a
Me1a3rutnFlr3vCOalfX3csHWAjxn9G/k+H7EB5DjzUfti1jm+6kaadnpFnd
A7YreOM=
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.09875422955640878, 0.17482465922397633`, 0.4667828928207437], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtkzssw1EUh+9fqwsLiS4sCAsbUWGkEsZiYKQGBibPMKp4rB4JtXks2NrJ
Y8JAWNRAwqAWEpZaGHy/3DN8ycm953V/59zqoYnEeJFzrhXCUB9yrg4qIApT
XE7CMCRhCzbhAA4hgk9xyJ/pbgk7pXiSRWGHnNswDwuQw+cB3iAP/fj2wTps
QC1nNdABnXBMzBE8wTNccXYJi5AyH/kmoBceyZGDK7iGd8jbme5+oGBnutuH
PUjCCAQSA8qgHOp5Q13Yxyj2j+tfOIUz52uq9l3g3H3ga6p2BrKmobQs4PMD
MewWiENXyNcoszfr7WeWW2/W27/J+RX4ntTbLeaNaSptR6x3aSgtkzarJmiG
UmJLYBTGYAafaeshZj3EbeaafTs+bYGvoVor2MswC3NwAseQhl0YhIHAayJt
LrDPzUe+VVAJDdBoOWbtrMpypK2GajVb7y/Yr4GfuWbfjd0T+B1Ztx3Trsnn
xTSSVoe2mxnIFvkZZGzGmnWEWRaHvQbS4pPcH85rJK3ytpvaMe2aanabJtJm
Dd9Vi1Fs1mppp3M2Y81af0J/Y8y0HzCttCN3ppG0Stku64/pr/0D3sN3xQ==

               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.09147585119189608, 0.2265105936860582, 0.4881431413950842], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtkz8snWEUxt/v3hsWlkpYahDiLrVpSBjbSq7Nv6E2cTuQ1IZW2hHRWtGk
2HAX18ZUTNyhNyyuQROG6lJJu/Qulfg93mf4JV/Oe857nue852sZmxp4mwoh
dEMG6pMQ6mACJqGBwyfQCm3wJh1CHoZhBLqhC15Bn9F3O2TTsUa1L+Al3NHj
d4g91KtEzinswwHckvMTTuAUjsk5giLsQZna7/AV1kO8U3cPwhCkILFmaX8O
nXBN7Q0cUvMNdqEIf4n9SWKNaos+u4IfUCF2YU3SlrW3RmiSZmL7zlFuLUOs
gVnO3sEiLCifWFMmepCXDdiEVc5WnKPcIXs54+zcmq+tUVqX0fTZM9Qsq+T+
gxpqa+Ge2H97lNcCZzvWKK2b7r0En/zGeuvXMAq90JPEGZc9A80iR6w/iW8+
bM3SPkfsPTyFZligxzxMw0wqapK2Nb6/pOLMNDtprjpHueOQh1/aAajAZTrW
rNlDwTtx4h7qNWrt8izvVd3tO3RXlpm3Z2Ks6h3Trm3Bdjp6ytmzvOvNZr3T
2m29wZl38NgzW7JneV/3Ln6AjyFqrninS+6x5X/m8d+x107vZrNn9ww64AGZ
ZXil
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.08419747282738338, 0.2781965281481401, 0.5095033899694247], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwt0jksRFEYxfFnRkJDQ0JDIiGjoSMklJaESgwFlQQFobSGErG0hsTSWRqj
M5WlMgpCYxQkFGhIaEZD/E/eKX7Jy3333vd933kVA+NdY5EgCBqQi9JoEJQg
y+IPqlmMIcvaD5pzgqAJ1+y9QYq1E+xhH9WI+Q7d9Y43ZPCAbc5sYQ7zaGet
zWd09oW7n/GFb/SjD7/s/UMnzx2uQbVoTe9OcYYL1s6RxDHKUYYa1GKNPav4
wCd6+WYP1pFwjao1jatoOAPNIo/nfK+l3bN6//RdBdxdmBPWoFqOkMQSexY1
D2ZYikaeG9yzen9iz2MQ9qTeNOOsZ6bZacbXnplmd8eeW/eoXluprQXdiGMI
g6hDPVI4wT0yyKeGPExx97QzU3ZDGEaUPREUoTgS9qzeN3jexCIWMIFJjFLD
iDNSVsU+W4kqHOLANaRck2pTxi/OWFnrm/r2G15xiXQkzFBZ7mAXs5hxpsp2
2LUrQ2VZ5W9rJprNCnuWfUZn0757wb1oBlPORNlkPKtX16JMC9yjep1074Oe
ddJZK0NlqRltuGf1vuvaVYNqiTsrZagsE/739I/oX/kHgEZ5hQ==
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.08653770197297593, 0.3202035390149642, 0.5171677735724624], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwt0z1M01EUxuHbjwEWWCSBBcMAaRfZBElgVEhkMVEYdHEQBgur8hEcLUFd
+UhENosLZWsnWibKANGFdoAEBnDBBBZYhN+b+w5P0tz/ufeee85p19vpF1PJ
EEI/0hhIhfAEwxjBHWv/sYMK1ghexSZ+4RY3aCK2GWeJEE5xhWtso4gf2MA6
Z3zHAj7hHy7RwrdWfOSsD3iHCXzj21fHKLbMHSX8RAGviHmJ3+z9gxq/9/AZ
+WQ8U2e/Rw6z7JnxG/XWvGN1p+6+Ze0GF/iLN+x5nYg1UC3GWRvDMlZMv/NY
xCixzzGIIXSw1p6KNVKtlKNyrWI3EWuoWpZQxgl3HId4hs7K0pRMOuak3OrE
HOEcF8iylvEduusZa09dE9VmyLkccOZhiDkq13bO7EAzmtKxJrPu+bDPzLoG
qkUdDfdYvdYMaBYecnYnHqE3EXM6dw/Ui4b31rCPeWLmvEd7C+7lBCZTsefq
/WP0Jb3mmqv2G56lJXxBDzHdfrPevu+7NCOalTbWHjhGsUVqsOUaq9Zp1lKO
Uey1Z1dr+qaaHXhmNbt9zk0zfuYclvymefe06pnX7JfdW/VMvav4v6QclEvO
s6kZ06zdA28iemU=
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.08915525966003109, 0.3619314822765468, 0.5244372710911506], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtkz0spGEUhV9jFDQ0JKbZ0RAaOkKySkNCofBTUGhQoLZ+QrkjZrXYZNHZ
1aCbqfxURkFoUOwmFEyzEtOMhufkO8WTmfm+e+57z7nvNEzMDc7GQggdENcn
P9rhsSyEJ3jh+zNcQB7ey0MowQsUYI+aXViHDHTDV7ii1zVU0bQSFqhdhDp6
1EIjNME3mIdJmIIWapvj0Rk6a4cev2AFViFNzXdrpF2jJg31aBLwSs1/qGaG
GriFGziDc7ikNg9ZyHkmzdYJXXBPzzt7lvdjNEf2KK95Z6EZ0p550pkpu9/0
2IcpmIYH9fSZlz5DZ/VCHwzQs9+ZKbuCs723dplnS/AFkvAPb39DpBnwjrSr
Nyjas7zPwKw9n9mDvIzDGHzQI5RFGWQ9s2b/iYdt+AMH3pF21QMpOEJ26Bk0
ywb8cObK/sDaLORiUQbKYgRGYQs2vTPtLuO7I4/yGjzbCZyGSDNijbQ599aO
tKsWnjVr/5CAYZ4NxaKda/d9zlo1qk3Zi2pU+w4lqORdVXmU2YwzUlYVvIv7
zuruJnxWyVpppFVmyq7oXUgjrf4DV77DO/Z04gyVZdK7bYU2+AR/A3lH
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.09177281734708626, 0.4036594255381296, 0.5317067686098387], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtkz0spFEUhu98M7YwDQ0Jzap2Yxo6shJKS0KiWasgUaEwvb8N5RI/LTZh
t/PToBvVoEJBaIyCZLcwGhIamn3e3Ld4Ml/OPfe897znTMNwvm88CSG0QAau
UyFcwTGcwDOxJ6jiuxrKJD/AKZxBK7TAX87+wVg6hFH4DgMwydkEjMAoXFLr
AjZg0+h7FubgDzV+wyIsQRs1vkAXdMM2bFlDWo9QhhLcQj8a35LYg3p5J/bm
HOWuoLHsntTbIbGCa6p2ijsBivwchdizeh+HPHym9ifohK9J7FG9rsIaNJDz
EZqgGfapsQd3cA+73NmBAhwmMaazHnJ77aG8fIFX6ID2VPRM3mUZUiVMoTWd
jnd6nKPcNb9lHhbgFxrr1pR2jruNmeiJvCkRu/FMy+6p0x72+40F55Q8wxHP
XLPPUqMyHTWk9eq3V/D9Ac45O7PH8nqIs0F7LK/fyXlLYg3V+kFsxh7KywN5
6J3QbsyT+9M7NekdPHVMZ3nPShrSqqdmXTpqSKsWajxDzVIzLnpGmlW3d60R
cvZQXtbhWX0m7ljJPam3E/9X9v1W9VxhDWnlXEtv0FuWvNvqUb1qhlPece36
f3EzeCk=
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.09439037503414141, 0.4453873687997123, 0.5389762661285269], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwt0zksRFEYxfH3jFCYhobENFSEhgohobQkRGUpiA4JemsojVhaS2LpLM3Q
mcpSoSA0RkFCgYaEZhT+J+8Uv8nN3b5z77tTNjTePZYTBEEdclHNTxWysSD4
wxp9q/jCNxqYXI/XMAje0MScRrSjA5f0XeAYJ2HUp7EqVMeiNVr7g19TO489
81FOuww1qMU5Nc+QwjEm6BvHAAbxQt8zOml3mdrNaHEGZdnFHnIQhtGe2rvF
c29p37lGyntqb2VStmKUYJQzjKAP/ShibaEzKdsGfetIYsln1tlLkYhFmQec
QVlWsIxZzCHO3RdgmrkzsaimalegEmmc4hEZfOAdV7jGH7IoYG3cGZSllD0T
GGFs2N+wwWu0dhFJfDL3Axk8eQ/ttcnYFg5o7/sOdBfq09ghjpzp0ZmULeGz
Z52t0mdpRRtuGLvGKdJ+c1lnUJaks01iyjUOfQe6iznfnd6M3s6336q+ib6N
7nDab7TJZ8q4pmr3skcP7pn7EEY1Jn1Huqu0s+nMOnubs2uN1u75bS37W+5Q
exvzWAiiN9LnN6G3oTd26zmaq5r3/s/ov/MPfZh5CQ==
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.09700793272119658, 0.48711531206129505`, 0.5462457636472151], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtkz1MVEEUheft22QtoIEGk6UAKjdLgw2RSIKlQAJ2/hRAuRCBXlADJUtQ
W34SfjqQRuh2K4UKKCDQgIUmUgANJm4Did/JnOJLXubOnLlzzn0tI+Mv3mZC
CJ2QhY0khHVYgE/QS/E5vIRX0M6mItylIdzDGIzCa3gDD9nTBI+gADtofoNf
8DvEPdq7CEswzB1DkIEUqqxVYBO2oBnycIfWve7nu+g11Qq+Sz2q10k0Jqwp
7RPuPIZVWIOfnLmAQzhKo6a06/iuh0bONFhDWpfwB/5BDbrY+yQT11Rbs/YM
zMJfuA1RQ1pLfmsZ5tPogbwYoDYIK2gtw1fYtsfy+pTaGZT5noN3MAU/OPvd
nsrbmnvLUXtgcs5AWSgjZXUNN/CRvR+gFdrgkD0HvkN3PWOtJ4meyTv1oF72
YD+JPaiXEoxCN5pPoQ/6TZ8zaneGm54RzcoXND/bI3m1b+0d2E2iR/Iqz4w1
Z+MMLrhn9X7jtyhDZXlND1d+g95yAedeU60KFa+pVo9mHUxz9n0aPZAXHfA4
iW8qOWNlveve9E9sOLMBeySvjjxLmtmqNaftibzZdrYV96IZ06wpc2WfevaV
qbL9D8JSeek=
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.10863594981469137`, 0.5197985687511097, 0.5454002603086422], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwt0jksBGEYxvGZ2SkoaGhISMRWhIZCQkgoHQmlo7CtK/TOUFpxtI7E0lnb
WN1utaiWgtBYBckq0JDQEP8n31v8ksnM+x3vM29dbGZoOvA8rw0hHnzPu8cl
rpCNeF4GJ0jigOJ9nCIVuBrVpnGOUt6VoArVOObdETaxhR98+65GtWnOPMMz
XtDMGU2oQS3ueHeLQyTQyJoG9KIPX7z7RAV7VvruzCqrUe0He7yjgCd0oRP9
GMACNfOYwGTgekjbnXX3pPU+iSmj51GMaW/WvCGPa5TzriziMlJWGzzH1Q/h
1obuDJ3Vjo7A3aHfelbvK5y5jHpEUaDm0c7QWQnLYhVruEDOMlSWfZbNMEYC
l4mymcWc7zJVtr98+8MSz4uWSZdlpKyucYM/1VqGyjLGHuOIIPRdBspiF3vq
gR6bQrdGa+OcsW4ZK+sh1gyiGz12p1nbU3u/2CyoRrUpm7UMspZx3vaMW4/q
VTOr2S3n7LLQ9aTeOizrIt9e7c66e86yy9reylhZ31jvmnnNvtYUbWZ/bIY3
7R/pX+2wx7bNoGZRmSpbzYBmocd61QxrlvcsK82EZiNq/7oFrfgHLN96yQ==

               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.12349618318920438`, 0.549237331250863, 0.5416437580178328], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtkjksRWEQhX/eU1DQ0JAQCRWhIVEQEkpLQmkpaHkSemsoEUtrSSydpfF0
VJYKBaHxFCQUnoaE5vGd3FN8yeTe+c/MnJnywdHuRHYIoQHiUBsLoQZKoQyK
skIohDEYhz6Se+GB+BFmYQYqoNI5yh2EIXhGIwU3cBuLvulfHHKgCa1GeCN+
hxNIwi7swS/8QC45eXBFfOkc5b7S8wt0E/dAAUPkwxS1pl1TtU/hTDEa17AA
i1DAt3zYJN7KjnKUuw8HUItWDWSI/+yJvMmQ+wefxGnPqFl36GUb5mA+RDVU
awImYQSGPbNml2bGGtKadO6wcw/cywgkYpEn8mYZVryDB3tyZQ/kRSu0QRqN
D898457Vu2bW7C3QDJ3QZc+m/E3/tJM370C7OOPtKTxByp7Ju0M4giXeLMoj
PCuLR5qdvindVspv1VPabw6tKe0Vzzbj26r0bdVBfVZ0A7qFYiiBATT7YR02
4ALPz+EYkiHyQF7cEd/DN3yF6KZ12x1otPumdds5vk1pSKuab1XOUW7Cu1BN
1ZbmnXeu3a/BqmuoVol7lYa0NtyrPJJXSfeqG9Yt/wNPinup
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.13835641656371742`, 0.5786760937506165, 0.5378872557270235], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtki1sk1EUhu/HB4hNrGaYkrQToFhaA8FAIBkSaADJTwJYWrF5WiAgaQPD
bpAMcGMzMNeqblVrRZdiKAKSIejMmoApz8t9xZPvfueen/ece+buV26Uj4QQ
zsNR+J6GMIQu9GCayynIwkm4BlfhNtyBd/AWNmAT/iYh/ElizLR95DvA9hUq
5CzDXbgH89ydcU7lHsFv2IWua2btI98hfLOPfC+T4xJchxLkIQcTNcW3zvcl
PIaqNUprE1rQQdMOfIEtuIjtAuxz/gXP4CmcgtNJ1CztK7CaRo27rlF3zqY1
SusnfNbd8//esT1yDdXKYJtJ4ww1S9Xc9ww1y6q1K0axY9o6hFnuTiRRg7TU
oZFGjdJ6Fs7BQ3gAx+C4YxS7CEvqm1yf4Qf8hNfYXrln9R48S2mU1gxLMgM1
zk/S+KYDz7DjnIuuqdryqfmN9FZasgnfERxAkf+CbbpruJcc5zy8x7wGz+FF
iD2olzbn7RBzjLyz2t0r3C1An7s9aGFr+g30Fre4u2kf+fa86/KR7xtilj3j
sWei2ShGsUV8Ct4x7dpHbB88M81OmtqeqWZb8m4qRrHS1HdP6m3Lu6ccyvUP
3Sl4jQ==
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.15321664993823045`, 0.6081148562503699, 0.5341307534362141], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtkzssw1EUxu+/bRgYdGEh0YWJtAsmQsLoFUaPCGtrYPcMo4rH6pF4bKqL
dmsnj0kNhAUDCQMWEha/L/cMv+afc+859zvfOY1NpAaTIedcG0Qgyk8VLISd
W4RXYi8wFDg3DJVcroBaqIMpYpNQBuXwDm/wC3+Wo9xu6IFpaqZgDMbDPqaz
W964cz5HuXpDb83yPWNv6K1GaIAWaIWAGg6qIAp95PTCCIxCB7SHvCZpu4JL
yEEeBsjphzgkwr4n9dYEzbBLbAfSsA5PxB7hAz5hm+e34Bt+4ALO4Qxyznsi
b87t7MfuVhOrCXwN1bqGUsjHqq1n9d5sWtSTeutCQ6dplvacvaUZaVYp7iSt
Z/UuT+XtARxCjJx680ze7XNnD04hCzfESlCAIhyj4Qg2YBMS7EY84pcliPia
qr0CqzBPjTnTIC2blrsEy4GfiWZzz/dD4D2PmyZpK3JWMI/ldYbYie2Mdkc5
9zZDzTJr2pWj3C/ufGpO8Gwz0+zq0RqL+J4KVjNjOzhmM9asl01rg+1a1HZL
HsmrZ6stj+RV3nZJHsmrks1yDdIh75G8kiZpS9uZPJJX+o8t2Ew123+mm3Vx

               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.16807688331274348`, 0.6375536187501233, 0.5303742511454047], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwt0jksRFEUxvH3HkFBYRoaktFQERo6QkKJSShtCaWloLdGi1haS2LpBg06
U1kqFITGKEgojIaEwv/L+4rfZHLeOefee3KSQ2Op0SgIgibkI8FPKWbzgmAO
NWEQVKMRTehAO+7JfUA/xX14JPaEXvQ4R7lnOMU+DtBFbqdrVLtBj3V84weX
uMAJTlFETWEYxy6do9wyYuV44/9rEJ+ps/f4v4tFFGCGM6YxhnEc4wjnyGAZ
S85R7i1uHNO3HWy7RrURMwlRigSyxJ7xiRxSxLpRjwbPULNsRRuqkHQP9cr4
LuqRdY9P30F3aXCvpGs183u/cc8zOvEMNIsRZjDsmWl2E9SMYwCDOETaMX27
wy3OdRd8Iad34UVvYBfqESLCFrFNLGPFb2r1m/X2yLk598q4d9pnD/ou6rHl
M7K+w517qneSHlX58c5od1axhgXMeye1mx94xy/+vBPajUlM2aRnotmUMNNi
VKDS9L8WdVbrHdWu/rm3alSrHdeuX+E6jHdKu9WMliiOXXnntfst/vbuu675
LfN+S8K7tO1d+wf1wHXO
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.19021473110804238`, 0.6627710192012846, 0.5233489291404081], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJxNk7kvhFEUxZ9ZRDGGIWJmPkvMZhIxWzVmppBYShEdkQgRpfU/EPEH0NCq
1KIapU50NBIVjXZUSud6P6E4Ofe97767nHu/ia29ld2Qc25dCAu9QlKICye6
2BYPRJybEc8LDeFDGBTazt/XhTm+L+Bz2eXcuPhCvKEEU7KXxa9d3ra7TcXf
kX0grglrslfEJXFZyFFLRsgKD+TtUYx+cVoI+GY+05wLwgiYFEaFPiEqqJWf
+HVqD4iTx7/AG8ubQocMtVmNGQXYl30uOyT7yO4jvgfr5QbfVee1e1Kfi+KO
+D7k9bmFm2i1iL2AhqblktWgPofEX+hicefCPv+B8/naaGLaFPE/FR8rR0v2
mXhWqMneF3eLE8I1sx6m1w51vokfmZHN6hr/F+GKHm1uAZqZXv3om8aOcq4K
lX99VphrE7uBj51bzKOBj83Aai5iVznfUZvVWOB+kjryxC3AVWbYxxzT2Cl6
j9F/mbe2b/YPhPj+rMOh+D3sa/vd8Qr+ZXavxNsxdq1InDj71kvMmPv7x+K8
s52tY88Q0zQM0D1H3Sn6aaFDnvscOcfYgxi5JI/7DPv9tD1NUmsKzmEn0cD+
nxFyWu5u6khgRzlnqblEn6PoH0fbCDXaTG2fvgHb6ULm
               "]], 
              PolygonBox[CompressedData["
1:eJwtkb1KA0EUhe/MphBCAkYEIWaXWKVTUllYCJrYpUghaBlCyvwJPoBIHkBB
g2XwCcQ3yCPExlYbCysrCwN+l7PFx5yZPXPPnbv13qg7jGZWhQK8smmxnsIz
+jyY1dBb8AXLxGzCOoU39AsMTGf+bSPIm8IAXaZGCVLI4B7P2HRngT7Ds2vK
8Kxf1m0owhzeYdPkce83NNBNOKbenH2W5z2i1/AXlOnZ4yjvEdygI5kX6EvY
Q8+C8rzGA7rCWcfkce9nordewQ/6LqpWG1ZRM/JZ+R2/e5Kodh9u0YdBb/GM
RlCP3qu/4Ql9nffv33eCZuSz2oeDqBmmeX/u/YjK9n+0RP8Dt84ofA==
               "]], 
              
              PolygonBox[{{427, 426, 406, 31, 409}, {410, 40, 492, 508, 
               509}, {444, 43, 443, 426, 427}, {560, 559, 592, 43, 444}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.21161203958022942`, 0.6780438953197496, 0.5158607950358438], 
            GraphicsGroupBox[{
              
              PolygonBox[{{526, 41, 509}, {509, 41, 410}, {410, 41, 407}, {
               444, 42, 560}, {427, 42, 444}, {560, 42, 543}, {409, 42, 
               427}, {407, 41, 408}}], 
              PolygonBox[{{408, 41, 42, 409}, {543, 42, 41, 526}}]}]}}, {{}, 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{410, 407, 408, 409, 427, 444, 560, 543, 526, 509, 
               410}]}, "0.2`"], Annotation[#, 0.2, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{6, 168, 217, 327, 342, 232, 186, 202, 264, 358, 374, 
               280, 248, 152}], 
              
              LineBox[{1042, 900, 835, 850, 818, 802, 770, 786, 676, 692, 707,
                738, 753, 723, 658, 642, 624, 576, 492, 508, 525, 542, 559, 
               592, 607, 476, 460, 443, 426, 406, 390, 296, 312}], 
              
              LineBox[{1074, 1026, 1010, 995, 980, 963, 946, 881, 865, 930, 
               915, 1058}]}, "0"], Annotation[#, 0, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{136, 167, 216, 326, 341, 231, 185, 201, 263, 357, 373, 
               279, 247, 151}], 
              
              LineBox[{311, 295, 389, 405, 425, 442, 459, 475, 606, 591, 558, 
               541, 524, 507, 491, 575, 623, 641, 657, 722, 752, 737, 706, 
               691, 675, 785, 769, 801, 817, 849, 834, 899, 1041}], 
              
              LineBox[{1057, 914, 929, 864, 880, 945, 962, 979, 994, 1009, 
               1025, 1073}]}, 
             RowBox[{"-", "0.2`"}]], Annotation[#, -0.2, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{135, 166, 215, 325, 340, 230, 184, 200, 262, 356, 372, 
               278, 246, 150}], 
              
              LineBox[{310, 294, 388, 404, 424, 441, 458, 474, 605, 590, 557, 
               540, 523, 506, 490, 574, 622, 640, 656, 721, 751, 736, 705, 
               690, 674, 784, 768, 800, 816, 848, 833, 898, 1040}], 
              
              LineBox[{1056, 913, 928, 863, 879, 944, 961, 978, 993, 1008, 
               1024, 1072}]}, 
             RowBox[{"-", "0.4`"}]], Annotation[#, -0.4, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{134, 165, 214, 324, 339, 229, 183, 199, 261, 355, 371, 
               277, 245, 149}], 
              
              LineBox[{309, 293, 387, 403, 423, 440, 457, 473, 604, 589, 556, 
               539, 522, 505, 489, 573, 621, 639, 655, 720, 750, 735, 704, 
               689, 673, 783, 767, 799, 815, 847, 832, 897, 1039}], 
              
              LineBox[{1055, 912, 927, 862, 878, 943, 960, 977, 992, 1007, 
               1023, 1071}]}, 
             RowBox[{"-", "0.6000000000000001`"}]], 
            Annotation[#, -0.6000000000000001, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{133, 164, 213, 323, 338, 228, 182, 198, 260, 354, 370, 
               276, 244, 148}], 
              
              LineBox[{308, 292, 386, 402, 422, 439, 456, 472, 603, 588, 555, 
               538, 521, 504, 488, 572, 620, 638, 654, 719, 749, 734, 703, 
               688, 672, 782, 766, 798, 814, 846, 831, 896, 1038}], 
              
              LineBox[{1054, 911, 926, 861, 877, 942, 959, 976, 991, 1006, 
               1022, 1070}]}, 
             RowBox[{"-", "0.8`"}]], Annotation[#, -0.8, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{132, 163, 212, 322, 337, 227, 181, 197, 259, 353, 369, 
               275, 243, 147}], 
              
              LineBox[{307, 291, 385, 401, 421, 438, 455, 471, 602, 587, 554, 
               537, 520, 503, 487, 571, 619, 637, 653, 718, 748, 733, 702, 
               687, 671, 781, 765, 797, 813, 845, 830, 895, 1037}], 
              
              LineBox[{1053, 910, 925, 860, 876, 941, 958, 975, 990, 1005, 
               1021, 1069}]}, 
             RowBox[{"-", "1"}]], Annotation[#, -1, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{131, 162, 211, 321, 336, 226, 180, 196, 258, 352, 368, 
               274, 242, 146}], 
              
              LineBox[{306, 290, 384, 400, 420, 437, 454, 470, 601, 586, 553, 
               536, 519, 502, 486, 570, 618, 636, 652, 717, 747, 732, 701, 
               686, 670, 780, 764, 796, 812, 844, 829, 894, 1036}], 
              
              LineBox[{1052, 909, 924, 859, 875, 940, 957, 974, 989, 1004, 
               1020, 1068}]}, 
             RowBox[{"-", "1.2000000000000002`"}]], 
            Annotation[#, -1.2000000000000002`, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{130, 161, 210, 320, 335, 225, 179, 195, 257, 351, 367, 
               273, 241, 145}], 
              
              LineBox[{305, 289, 383, 399, 419, 436, 453, 469, 600, 585, 552, 
               535, 518, 501, 485, 569, 617, 635, 651, 716, 746, 731, 700, 
               685, 669, 779, 763, 795, 811, 843, 828, 893, 1035}], 
              
              LineBox[{1051, 908, 923, 858, 874, 939, 956, 973, 988, 1003, 
               1019, 1067}]}, 
             RowBox[{"-", "1.4000000000000001`"}]], 
            Annotation[#, -1.4000000000000001`, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{129, 160, 209, 319, 334, 224, 178, 194, 256, 350, 366, 
               272, 240, 144}], 
              
              LineBox[{304, 288, 382, 398, 418, 435, 452, 468, 599, 584, 551, 
               534, 517, 500, 484, 568, 616, 634, 650, 715, 745, 730, 699, 
               684, 668, 778, 762, 794, 810, 842, 827, 892, 1034}], 
              
              LineBox[{1050, 907, 922, 857, 873, 938, 955, 972, 987, 1002, 
               1018, 1066}]}, 
             RowBox[{"-", "1.6`"}]], Annotation[#, -1.6, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{128, 159, 208, 318, 333, 223, 177, 193, 255, 349, 365, 
               271, 239, 143}], 
              
              LineBox[{303, 287, 381, 397, 417, 434, 451, 467, 598, 583, 550, 
               533, 516, 499, 483, 567, 615, 633, 649, 714, 744, 729, 698, 
               683, 667, 777, 761, 793, 809, 841, 826, 891, 1033}], 
              
              LineBox[{1049, 906, 921, 856, 872, 937, 954, 971, 986, 1001, 
               1017, 1065}]}, 
             RowBox[{"-", "1.8`"}]], Annotation[#, -1.8, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{127, 158, 207, 317, 332, 222, 176, 192, 254, 348, 364, 
               270, 238, 142}], 
              
              LineBox[{302, 286, 380, 396, 416, 433, 450, 466, 597, 582, 549, 
               532, 515, 498, 482, 566, 614, 632, 648, 713, 743, 728, 697, 
               682, 666, 776, 760, 792, 808, 840, 825, 890, 1032}], 
              
              LineBox[{1048, 905, 920, 855, 871, 936, 953, 970, 985, 1000, 
               1016, 1064}]}, 
             RowBox[{"-", "2"}]], Annotation[#, -2, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{126, 157, 206, 316, 331, 221, 175, 191, 253, 347, 363, 
               269, 237, 141}], 
              
              LineBox[{301, 285, 379, 395, 415, 432, 449, 465, 596, 581, 548, 
               531, 514, 497, 481, 565, 613, 631, 647, 712, 742, 727, 696, 
               681, 665, 775, 759, 791, 807, 839, 824, 889, 1031}], 
              
              LineBox[{1047, 904, 919, 854, 870, 935, 952, 969, 984, 999, 
               1015, 1063}]}, 
             RowBox[{"-", "2.2`"}]], Annotation[#, -2.2, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{125, 156, 205, 315, 330, 220, 174, 190, 252, 346, 362, 
               268, 236, 140}], 
              
              LineBox[{300, 284, 378, 394, 414, 431, 448, 464, 595, 580, 547, 
               530, 513, 496, 480, 564, 612, 630, 646, 711, 741, 726, 695, 
               680, 664, 774, 758, 790, 806, 838, 823, 888, 1030}], 
              
              LineBox[{1046, 903, 918, 853, 869, 934, 951, 968, 983, 998, 
               1014, 1062}]}, 
             RowBox[{"-", "2.4000000000000004`"}]], 
            Annotation[#, -2.4000000000000004`, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{124, 155, 204, 314, 329, 219, 173, 189, 251, 345, 361, 
               267, 235, 139}], 
              
              LineBox[{299, 283, 377, 393, 413, 430, 447, 463, 594, 579, 546, 
               529, 512, 495, 479, 563, 611, 629, 645, 710, 740, 725, 694, 
               679, 663, 773, 757, 789, 805, 837, 822, 887, 1029}], 
              
              LineBox[{1045, 902, 917, 852, 868, 933, 950, 967, 982, 997, 
               1013, 1061}]}, 
             RowBox[{"-", "2.6`"}]], Annotation[#, -2.6, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{123, 154, 203, 313, 328, 218, 172, 188, 250, 344, 360, 
               266, 234, 138}], 
              
              LineBox[{298, 282, 376, 392, 412, 429, 446, 462, 593, 578, 545, 
               528, 511, 494, 478, 562, 610, 628, 644, 709, 739, 724, 693, 
               678, 662, 772, 756, 788, 804, 836, 821, 886, 1028}], 
              
              LineBox[{1044, 901, 916, 851, 867, 932, 949, 966, 981, 996, 
               1012, 1060}]}, 
             RowBox[{"-", "2.8000000000000003`"}]], 
            Annotation[#, -2.8000000000000003`, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{122, 153, 169, 170, 171, 187, 249, 343, 359, 265, 233, 
               137}], 
              
              LineBox[{297, 281, 375, 391, 411, 428, 445, 461, 625, 626, 660, 
               659, 608, 577, 544, 527, 510, 493, 477, 561, 609, 627, 643, 
               708, 754, 819, 820, 866, 882, 931, 948, 965, 947, 883, 884, 
               964, 1011, 1059}], 
              LineBox[{1043, 885, 1027}], 
              LineBox[{771, 661, 677, 803, 787, 755, 771}]}, 
             RowBox[{"-", "3"}]], 
            Annotation[#, -3, "Tooltip"]& ], {}, {}}}], {
        DisplayFunction -> Identity, AspectRatio -> 1, 
         AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, 
         Frame -> True, FrameLabel -> {{
            FormBox["\"\[Beta]\"", TraditionalForm], None}, {
            FormBox["\"\[Alpha]\"", TraditionalForm], None}}, FrameStyle -> 
         GrayLevel[0], 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "GridLinesInFront" -> True}, 
         PlotRange -> {{-1.5707963267948966`, 
          1.5707963267948966`}, {-1.5707963267948966`, 1.5707963267948966`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   StyleBox[
                   "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \
SubscriptBox[\\(B\\), \\(eff\\)]]\\)\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                   GraphicsBox[{{}, {}, 
                    RasterBox[CompressedData["
1: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
5p4c
                    "], {{
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}}], {Antialiasing -> False, 
                    AbsoluteThickness[0.1], 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]], 
                    LineBox[
                    NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                    7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                    112.5}, {7.5, -112.5}}]]}, {
                    CapForm[None], {}}, {Antialiasing -> False, 
                    StyleBox[
                    LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -107.48407643312102`}, 
                    Offset[{4., 0}, {7.5, -107.48407643312102`}]}, {{
                    7.5, -71.656050955414}, 
                    Offset[{4., 0}, {7.5, -71.656050955414}]}, {{
                    7.5, -35.828025477707}, 
                    Offset[{4., 0}, {7.5, -35.828025477707}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 35.828025477707}, 
                    Offset[{4., 0}, {7.5, 35.828025477707}]}, {{7.5, 
                    71.656050955414}, 
                    Offset[{4., 0}, {7.5, 71.656050955414}]}, {{7.5, 
                    107.48407643312102`}, 
                    Offset[{4., 0}, {7.5, 107.48407643312102`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -100.31847133757961`}, 
                    Offset[{2.5, 0.}, {7.5, -100.31847133757961`}]}, {{
                    7.5, -93.15286624203821}, 
                    Offset[{2.5, 0.}, {7.5, -93.15286624203821}]}, {{
                    7.5, -85.9872611464968}, 
                    Offset[{2.5, 0.}, {7.5, -85.9872611464968}]}, {{
                    7.5, -78.82165605095543}, 
                    Offset[{2.5, 0.}, {7.5, -78.82165605095543}]}, {{
                    7.5, -64.49044585987261}, 
                    Offset[{2.5, 0.}, {7.5, -64.49044585987261}]}, {{
                    7.5, -57.324840764331206`}, 
                    Offset[{2.5, 0.}, {7.5, -57.324840764331206`}]}, {{
                    7.5, -50.159235668789805`}, 
                    Offset[{2.5, 0.}, {7.5, -50.159235668789805`}]}, {{
                    7.5, -42.9936305732484}, 
                    Offset[{2.5, 0.}, {7.5, -42.9936305732484}]}, {{
                    7.5, -28.662420382165603`}, 
                    Offset[{2.5, 0.}, {7.5, -28.662420382165603`}]}, {{
                    7.5, -21.4968152866242}, 
                    Offset[{2.5, 0.}, {7.5, -21.4968152866242}]}, {{
                    7.5, -14.331210191082802`}, 
                    Offset[{2.5, 0.}, {7.5, -14.331210191082802`}]}, {{
                    7.5, -7.165605095541401}, 
                    Offset[{2.5, 0.}, {7.5, -7.165605095541401}]}, {{7.5, 
                    7.165605095541401}, 
                    Offset[{2.5, 0.}, {7.5, 7.165605095541401}]}, {{7.5, 
                    14.331210191082802`}, 
                    Offset[{2.5, 0.}, {7.5, 14.331210191082802`}]}, {{7.5, 
                    21.4968152866242}, 
                    Offset[{2.5, 0.}, {7.5, 21.4968152866242}]}, {{7.5, 
                    28.662420382165603`}, 
                    Offset[{2.5, 0.}, {7.5, 28.662420382165603`}]}, {{7.5, 
                    42.9936305732484}, 
                    Offset[{2.5, 0.}, {7.5, 42.9936305732484}]}, {{7.5, 
                    50.159235668789805`}, 
                    Offset[{2.5, 0.}, {7.5, 50.159235668789805`}]}, {{7.5, 
                    57.324840764331206`}, 
                    Offset[{2.5, 0.}, {7.5, 57.324840764331206`}]}, {{7.5, 
                    64.49044585987261}, 
                    Offset[{2.5, 0.}, {7.5, 64.49044585987261}]}, {{7.5, 
                    78.82165605095543}, 
                    Offset[{2.5, 0.}, {7.5, 78.82165605095543}]}, {{7.5, 
                    85.9872611464968}, 
                    Offset[{2.5, 0.}, {7.5, 85.9872611464968}]}, {{7.5, 
                    93.15286624203821}, 
                    Offset[{2.5, 0.}, {7.5, 93.15286624203821}]}, {{7.5, 
                    100.31847133757961`}, 
                    Offset[{2.5, 0.}, {7.5, 100.31847133757961`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "3"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -107.48407643312102`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "2"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -71.656050955414}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "1"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -35.828025477707}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 35.828025477707}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 71.656050955414}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 107.48407643312102`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                    Scaled[0.02], PlotRange -> All, Frame -> True, 
                    FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                    Opacity[0], FrameTicksStyle -> Opacity[0], 
                    ImageSize -> {Automatic, 225}, BaseStyle -> {}]}}, 
                 GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ),
           InterpretationFunction :> (RowBox[{"BarLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.141592653589793`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.122103, 0.00901808, 0.39826], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.081402, 0.006012053333333333, 
                    0.26550666666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.122103, 0.00901808, 0.39826]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.122103, 0.00901808, 0.39826]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.122103, 0.00901808, 0.39826], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.0943951023931957`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.0839935, 0.279645, 0.510102], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.055995666666666666`, 0.18642999999999998`, 
                    0.34006800000000004`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.0839935, 0.279645, 0.510102]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.0839935, 0.279645, 0.510102]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.0839935, 0.279645, 0.510102], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.0471975511965979`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.097699, 0.498132, 0.548165], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.06513266666666667, 0.33208800000000005`, 
                    0.36544333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.097699, 0.498132, 0.548165]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.097699, 0.498132, 0.548165]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.097699, 0.498132, 0.548165], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.175507, 0.652273, 0.528496], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.11700466666666667`, 0.43484866666666666`, 
                    0.3523306666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.175507, 0.652273, 0.528496]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.175507, 0.652273, 0.528496]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.175507, 0.652273, 0.528496], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.0471975511965974`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.329526, 0.762208, 0.474596], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.219684, 0.5081386666666667, 
                    0.31639733333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.329526, 0.762208, 0.474596]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.329526, 0.762208, 0.474596]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.329526, 0.762208, 0.474596], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2.094395102393195`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571909, 0.839991, 0.408102], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3812726666666667, 0.5599940000000001, 
                    0.27206800000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571909, 0.839991, 0.408102]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571909, 0.839991, 0.408102]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.571909, 0.839991, 0.408102], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3.141592653589793`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.914809, 0.897673, 0.350652], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6098726666666667, 0.5984486666666667, 
                    0.23376800000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.914809, 0.897673, 0.350652]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.914809, 0.897673, 0.350652]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.914809, 0.897673, 0.350652], Editable -> False,
                     Selectable -> False]}], "}"}]}], "}"}], ",", "#1"}], 
                    "]"}], "&"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}], 
               ",", "None", ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               
               RowBox[{
                "LegendLabel", "\[Rule]", 
                 "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), SubscriptBox[\\(B\\), \
\\(eff\\)]]\\)\""}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
               RowBox[{"ScalingFunctions", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
               RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
               RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], 
             "]"}]& )], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[
        GraphicsComplexBox[CompressedData["
1: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
hInxTZgY3/8HMYCKXA==
         "], {{{
            EdgeForm[], 
            RGBColor[0.122103, 0.00901808, 0.39826], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJxNkjsvg1EYx0/filskNpMIO4mkxNRXSURbtfSCRW8G8bZlcBejAYldzCYR
o42PgJWJFZ/A5P/k/ESHX/7vOee5v89IfSu/GTjnlkVcNEQkdkVGhCItsiIl
plE7L4g6vjVRwDYvWmJTrImy2BAVbFfEopgVMyJH3JCcK9jVYa3NJ8eb5Vgl
5zL3S6IkiuTKUOc0bzVs0/hl8JuhlxRq53lymO11zLlh6YX0nm+7s/4OxCG9
tjin4953TjoouwF9j0k74z7umwb+JO0Rj8S1mMfSO2m3uBVNsd8Wt8W5Qo9l
bPa4L9OXzeVKdIkj52OPOF/HDff2fiZ6xbd4UG3r0vO4n8ESsykypwJ2Zv/F
e5WZhsx4QjwT50N6qj6T+t4J/D7ZXu2ISfe/RwXqtjyf6j8h/Yl5e+urQdwE
eWrcNZmjzfMy8PEmsf3brRw1VsgdEidJjBrvEecqdVv9L9LZwNtbXRvUHlFX
E58kO2KxS+xPlpxV97+PJe6zzNPu5vFN4ldqm+vfLtvu1/n3EXGtlv4Or++q
80R1jur7NebrXud/9gV+HkPS8cDPJx/4vpvEzXO/HfiZTTm//y3eze4Xxi1j
CQ==
               "]], 
              PolygonBox[CompressedData["
1:eJwtkDsPAVEQRmcf8YpERSVie4UEUUmQCPX2FBrRUNhGoiQRofcTEFEq1Spq
nd4/UDmTUZzM2Xvn3vnuBsNpOHFFJAs+rPioU0uwxM/UBMThBEfWWmI92nuA
ptia7kXQwCvQxheOSBHPQR7feSIDvA9b/A1jsTXdK3CmitegjH+oKUjCAzr0
hNQuxPCXY1kDuOMz185qJs22oWf0nzfH966d1Yxr/Pa/W994ga9j2TVDWt/C
T4nEMmZ8y6x36Z1Pz2bqbH3j1bEZuq8Ze/gPfnkiFQ==
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.1133109862854342, 0.07145279029981243, 0.4240623956720626], 
            GraphicsGroupBox[{
              
              PolygonBox[{{206, 20, 235}, {909, 104, 992}, {872, 91, 873}, {
               681, 54, 680}, {1024, 104, 1009}, {680, 54, 627}, {940, 101, 
               925}, {363, 20, 347}, {908, 104, 909}, {776, 79, 791}, {268, 
               20, 363}, {644, 54, 645}, {347, 20, 253}, {645, 54, 681}, {684,
                79, 701}, {836, 91, 839}, {975, 104, 908}, {701, 79, 821}, {
               839, 91, 872}, {821, 79, 806}, {910, 101, 842}, {857, 91, 
               836}, {806, 79, 776}, {791, 79, 684}}], 
              PolygonBox[CompressedData["
1:eJwt0b8vQ1EYxvGjV1gq/AGqkVg1+gcwEA3GdhKbxGDRpYYWu7ZpZ9XYWCg2
ptaqG6NrYvTjH9DF98l9hk9y8t73POe958zvlosHqRDCAsYxGgvhD2mKU3iN
QnhBHwOs0LSMacwgS88clpDHFXsv0UIbWXrK5O6hzf5Hag/uUW+TWgNV1HBC
7RizyGCT2gbWUcBFlGQpM0f2Nz1fnnnkM1vOUFaMNzxjiDoznqKCQ2w5bwfb
rPejZK1aj3WHnjPv0d41rKaSM3X2JD0TiKm9O7PiHvUWPLt61Jv3XRVRSiV3
2vcdNH0HVf+z/n3o2XVnujudEXumjt8o7TfQW9ww9zXO0cUnGR9+Q71l199q
OMI97vSvuEUDdfzg17WeM5Wd8dssIocnagNnKOsfrrlLnQ==
               "]], 
              
              PolygonBox[{{595, 594, 627, 54, 611}, {253, 20, 206, 190, 
               191}, {1009, 104, 975, 993, 994}, {611, 54, 644, 473, 474}, {
               237, 236, 235, 20, 268}, {1040, 1039, 992, 104, 1024}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.10603260792092149`, 0.12313872476189437`, 0.4454226442464031], 
            GraphicsGroupBox[{
              
              PolygonBox[{{171, 18, 173}, {332, 18, 318}, {841, 92, 890}, {
               318, 18, 207}, {221, 18, 332}, {890, 92, 907}, {716, 80, 
               746}, {775, 81, 838}}], 
              PolygonBox[CompressedData["
1:eJwt0rsvg1EYx/HT9zWQqDCxUBa2NvoHMGgIFrcFnTC4hYnFZW8lOrtuNbVh
Y3FZa6tRTbq5JUwSKr6/nGf4JOc97znP85znnK659Ym1wDmXQB2uIs5dIo8z
7GIH7ehABY8o4R537LnFOS6QJFgvJjGF09C5E8QJnkCUPY1YwSo6mYthnzW5
0McsWQ2qpZ9/fWhGi9FYxUYwxJ5xPseQshiKNYJRPKCMG9xi0NanMcx4kxo3
MIAUcuTctzPr7IfMHSCDLJ5QsTn9i1gtn8T6QgPq0Yo2HPP7CFvYRpG5gvVE
vXkJfO2q6TvwPVav40hEfM6M1ahae9jTbTmUa4G5+cDfie4mZWd5ZfxmPVav
Z5E2GtfI9+f8Gq39wa/ROEqMpsCfQWcpMC4Gvqfq7TRmQv9G8tYz9e6DmO/O
37HuupM9MXsTSXsTk1azat9jbdb2aK96qF4+oxr6Gmv2xvTWqvavbHe7jCXr
qXqrmqOWU7kXQ3/X6q/eis6gs1zjBv+sVV7B
               "]], 
              
              PolygonBox[{{176, 175, 173, 18, 221}, {858, 857, 836, 80, 
               822}, {207, 18, 171, 155, 156}, {822, 80, 821, 806, 807}, {702,
                701, 821, 80, 716}, {959, 958, 907, 92, 891}, {891, 92, 872, 
               873, 874}, {760, 81, 775, 731, 732}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.09875422955640878, 0.17482465922397633`, 0.4667828928207437], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwt0jtMU2EYxvFzYdFECE6ySDvRDQIJMFkHnaiLwQVkIbAIyAYDVXc1aWcE
usFEUzdcCqwWooERyiIT1wQXTAD5P/me4Ze033nPd95bdnz29fskiqJBtOCU
Pye4xj+sxVG0ihLKSAiKcZVG0V98I2YRn/EFncQ8RTd60OTs0DGKncQEDnh2
iCp3rGMFlTSc6dlPNHCLG7TyThuOyLGJAmev4pDjtb/RdIxiM8himdglFPEB
x3zjD/awb/q9iS3XdOUYxf7nnTtsYRu73LnjHqlXBWKGMIJRVDlbRx2b+M07
v5zDsu/QXTV8j0LP1Ls5zCfhrOYaVeu8n73AyyTUrNqfIR+HGlVrL/qSUINq
WUARP4jZ8Aw1y0vuvMAj9dT0exozeMMdw56RZvWQOx7gCTrS8I1exyj2E+98
9Mw1+wFi+tGFHB6zK+3eGe3OV9XsHJRLxbPv5lkPssigxFk5DT2su+fqfc53
Kyfl1vCuqEbVOupZKAflknevNAPNouxdVs7KvehevcNUGnqsXp/x7DwOOZQ8
Y816jLO3cdgJ7cZzcs27RtU65bu009rtGfdW74z5zjPvtHa7w73Vzmh37gEY
e3j/
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.09147585119189608, 0.2265105936860582, 0.4881431413950842], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtkj1Mk1EUhq/9mEpCjU66QDvRjQYTu1kHnSgDCSwgAwks/DjWwaq7mNBZ
+dlgoqEbLFBWkEBgtGWhEygkuEii8ry57/Dka+8959z3vOdkp96OLKRCCEXo
ghx/sjAIz3TxIIT/fJqwr7gkhOfQD3n4DbdwAR2YIWcafpDXgg1YhyWowSS8
cU3VvuFzDT38zkCd3E3YhT34xNlH6IU++Ad/FcvdQzjjzVPYgyY8polHkIIE
fhH70znKHSNn1Bql9SUxJeco9xtnX+EzLMIXtC1ao7S2OWs5RrF5e5GG7iR6
Nug39JY8kBcHcAhrxKzCAG8VumKP6vU7HKWix/J6Cxoh9qBebu31DjW27am8
vSPnjzVJW8ezkCfyps/eDUABnnL2JIkey+sctbOwxFnNPaQdo9iaZ6cZaBbD
UIYXUII5YmZVD+rwmpqvUtFzeV/3nXpW7w331oZzo99l1z6yF5dwBSvcLUMV
PoS4I9qVeViwBmk55u4kxJlpdhV45x3JeKdzPqtYo7ROoGncO130DmmX3kM1
iTM7sOc7fnPeO6xdvrJWzUCzqDpXnsgbaTp2D+pFHsvrISibIWuQlns0r3fh

               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.08419747282738338, 0.2781965281481401, 0.5095033899694247], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtkzkshVEQhe9bOhKEioanoiMkdCiokChoLImCBq+lsPVIqK0dFaGj4Wkt
IZQ8DZU1oSHBd3JP8SV/5s6dmXPm/lXD2Z6JZAihCdKQTYQwAYMwBFVQCXVQ
Dz8kf8M95GERFmASpuAFnp2j3FwqhBOYhhloJNYAvdAHS/RchHf4gBJixZCB
atjjzi5swhZ0M0MXtECrvol1Qj8MOEe5dYiphwNq7kMeHkKsmfEMmmXAd5ug
Gf6o+ZuIM2iWJ2KPcAO3qVhDtTRDt2fQLFfErmGPO7twDCfJqEnailQTxqkx
Zk3S1mcvRmAUTsnNeWbN/kXOp2fQLKPOvaPWPVQQK0/Fnuq9BqveiXazwtmy
PZJXee9u1bnz1JjzjrXrDmLt8Mr3GxzBIWzDDhRSo8A91VuapX0dNkJ8M3o7
ARKJ6IG8uIDLZKz5ao/ldS01alyz0B7f+M3k/Gam7Zm8a2OnrVAKZbBCjWVr
kJY0sVQ6eibvypyrmM6m/FalUVrPuXNmjdK6YS0zMBvizor8T2TtwbZ7qnez
3440SMultT77X6imZyYdd6BdaGd37nluj+SVdq7d/wO+0XbD
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.08653770197297593, 0.3202035390149642, 0.5171677735724624], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwt0zksRFEUxvE7M3QkCBWNpaIjJuhQUBnR0FiiobG0FJbpjYTa2lEROtMw
WksIJaOhsiY0JOP/5X3FL+/lvXfPPfec82rHZwam4yGENhRhPxbCHtawjsDL
AtdyrhWYxAQeePaIQ+4PcIozPLEkjxTv+jGGUcQQ9zO960QXelnTg3fuP7Cb
CGEHzSTTgibuG1GCUlzz7RVe8YYXnj3jDveYJcaM99Tet+Rygy1shyjHU8dQ
rCr2qEQRijFCjGG0owPHrDnymZ4cQ7EWsRSinJV7wbW65HqBE2R9Rp1VOSiX
Q2Ie+Iw6aw2qE1ENVctNbGAFGfzhF4/II8e3Z1jAYiLqkXq1jDTm+WbONVVt
G1CPViQxzZop56Bc0l5bizr88OzbNVVtsz6LZmLfPVQvc5zlHN3UrMs1VC0b
UI815ZaIYip2M1piUQ9LfGadvdi1157aO++zbrgW2iPnHqgXiqnYfUjhi2ef
KNOMxqIZuHONcu5hu2dIs7TKtxmv0VrN8IN7pt4lXatBDMWjGi+4ZqrdkN9N
+F/QP1HuGqvWKeemGdIsvXlWf93LjHurHqlXyrnMM6vZ/QdgsnWl
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.08915525966003109, 0.3619314822765468, 0.5244372710911506], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwt0i1MW1EYxvHb24JjybqAAgErijkIEHB0AlRhajVsoJihw4KgFE9JQJcV
HFNthgOzdpZCWIZcwTC17iPZDCT8n5xH/JKbc8/He573DC4XXq3GURRNIoX9
ZBTtIYd5JBNRFKPJvy9I8/0U77Fm+n6LJXxlzhU+oIoTfMINbjHMIZlUOENn
TWMKI3iBH7jDN1xrDnvuoYRtNCj2My5wiSPmHGKUPcfQZs53nKOFl4xl0Ys+
PGFuD/oxgDpq3kN7LbBmHjPIJkLNql1j+vccQxjFGP6z5p9rVu3dnNGVCmP6
9waLvqPu+pe9/kQhQ2VZdVZFbDnjpjNTdtfOooEmdhkrew/tVSeDmjNRNkvu
hXqm3g0zlsE4JpDHa6zgXRx6nHONqvXS2f5EJw49GXFmyq7M2A7WsYGEHg/S
eIaPnHnsnql3N4y1UcEBfjP2KxHWaG3LvTrFGeYYm43DHM0tcuYmVlFIhh72
OmNlveFatEZrC55bc2+z7qXepN7mA3PuXZNqazpbnVH0m9DbUKZ13yntDJXl
mWvVHXXXjrPSng++Y8UZlZ35uDPPO3Nlrzfa9psu+U3pbT0Cb110hw==
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.09177281734708626, 0.4036594255381296, 0.5317067686098387], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtkj1Mk2EUhb+fBjdMLKGTJETbCbYSmuiGDjDRbrpYusFgiysM/O1CgjMI
bDCV0E0WWlbUQGSEuugEigksEJ+T9wxP8uXee+577/nuYK1eeZ9EUVSCDDyP
o+gZFGEEVmDZMeXmKZ6DcZiARhpFdWjCPnyiZt0aafdg1zHl9tE04Qja8BvN
L/gB57DFDJ9hEZZgh9g2FBluBF7RYwxOyZ3BALmnaeip3ofkvvhNvf0ITQ/c
UnOn+WAdJqEMq2g+eiftNkxsCHrhsen1G3rrKz1P/Ibe6qK5hA3YNBvuqd6X
1FxYI+0iPRbsWcM7a/c2dKDArPlMmFGzZtE8gVn4AC+JvfCMmnXC/+IPub/w
Wh5BP+QyQSPtFNTisLN2fwfVNGikjemRJOEfNu25vP+Jx10oU1OBGWqmk7CT
djsm14EDaEEfuSzkoQAZatI41Ki26re1g3b5Ts03uIJr+EfNTRR21u5rfK86
plzbtyONtJqp7JvQbXTspTyW1wXPMgqlJNzArW9Ot1ezN5pRs+bsnW5Gt/OA
5t7/uOsZrxxTruXd5ZG8koexPZAXb+GNPZvxDKOOKacbPvXN6/b/A1kbdWc=

               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.09439037503414141, 0.4453873687997123, 0.5389762661285269], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwt0zssg1EYxvHT76voRoIwaSQuExsh0U0NTGqrxWUjoVgZ3HaVMLtuNVXY
WLRWlxBGamFyTWrB/8l5h19S5zvnvJfzahqfSU0HzrluRHHEH3mco4CniHOP
uMQValGDOczbmr6d4gx/nPnVOZTQwKX1qEQMB6Fz++jkd1fUn9HZHA7RxplW
dKMHz+RUQopvw+jgbDuqUI011lbRjBbssXcXy1hBGzFascneLWHPpp1Zs5g5
W9O3QWIO4IPfn1ajah3HhOWgXPqQRMjeALWoQ5EYBSxhOfR7tPeWXO6cX9O3
DGatBtXSiHjoYyhWFBUR/wZ6i2vcIIt1LGAx8Hu0t8jdF9hAFl/41ntyZ956
rt63WK860RXxPVFvhpDCGEbRiwR2iLFtMRX7gbV7q1G1TrE2GfgZ0awsWm7q
oXqpnJTbMU6crzljOSm3ks2KYijWie3Vm+vtb6z2N7wHvibVVmOz+ModL5aT
cuvnrZM2c5q9HpulNEYCX+OQ1ahaf1C2O3TXu8XSDGuW9Wa3NlOarZjNctnO
akY0K5oBzULc3lL/Q0cWM209Uq8S1lvNsGa5zmZHM6/Z/wclKnZH
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.09700793272119658, 0.48711531206129505`, 0.5462457636472151], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtkzssw1EUxu9fS9hIWqkJAzXp1tKETQ1M2Fg8NkI8VgbFjkRnz00nwsbi
sXqkwqi1MKlHwsLvyz3DL6n/Pfec73zf1Tw2MzBd4ZzrgDBs8Mc6LMISpKET
hmEErkLOXcIyZGEMRqELuuGFHiUYDJwbgkG+DViNasP0CEEU6uEe7uAdynDO
nTM4hDxUQSVc0fMacvTYsp7q3YvoDMSgAWqgGn44+4VjOIJ9OAj5mZodhzb4
pPdH4DVJ2w5smwfyYoKzcdMgLZvyCL7g29mO0AOZwH/TWYTf0cBripkmactY
bYGaB7hkxoV5IC9aOWuBJKQCrzFuGaQtE2XTB/2wR49dyMIKFLnzDDdwCwsw
bztol27Lqh0SIe+pvD2BU2hDYzzsPZbXt9ZLmSibU6tVxsp6Cg2TFX5m0XaO
2EzNrqNHLTRCk2WgLJLMSIX9DtpFGSiLOc5mLTNld8zZkXkkr5749mhvUG8x
x50tWIW1wGeu7F/hzWZqtnqo15rVymN5nbW3rJmarUwK5qm8LXGnaG9CbyNh
3mkn7ebgz2pUm7e3K03SVra3rRpnml5tB+0yYv9b8lBe/gNf2XUp
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.10863594981469137`, 0.5197985687511097, 0.5454002603086422], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwt0zssg1EYxvHztUXYSGiYWGgntjYkbGpgoTaWYnNJlJXBpTuSmt266VRh
Y6FWlxBGamFyTVj8n5x3+CVfTr/znfd539O2zNzwbMg5l0QEq2HnVjCPLOIs
xpDneRt/+MUr3rDJ5g0sYRk/fOMbjYFzTfjCJyL8VoU0e0aQwQSu+e0KpzjD
PXvvsId9FHjnAAlqSKLM84XVqFp1hs5awCL6WOtFJ7rQw5ndGMO40fM0ZrDN
njzWkcMQa4MhX7Nq36KGTcukbDWsVaPM8yVeUEGatVFcsPccN7gN+QzKsoo1
5zNnrEbVembZD1EMfI/UqyZE8czak/VIvaqjB7URPwPNYtGyT2IKu+zZsZlo
NqpJtfUjFfjMyq5v6tuPfOPBeqre5qwX7ejACTUfW0ZlHeDsFJrREvEzX7Ke
qXdZuzslHIV9D9SLd3wgjpjNRLNpsW8pk7KlrFbdAd2FI94pWU/V24p6YhmV
tWi90ww1yze7m8qkbB2WJYFk4O+E7kY9GsJ+hmXLqKwBay7sz9BZU9ZbzVyz
/7AsekfvRm1WMcum/0je7njaelCyO1ywM3V2K9qMnpVRWf8B2Gh0Cw==
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.12349618318920438`, 0.549237331250863, 0.5416437580178328], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwt0z1Mk1EUxvH37Vs+IhtNLMEJFmkn2EoggU0YcCDUTQZRNnGAusJggZ2S
lFm+NphKdIMFcBWNBEdbFjsB0gQG/0/uM/yS29v7cc655+1782F6IRVFUQFp
bPPjMzZQQR45jGAUK1jGFF7iJ37gBrd4xiG9eIIuzDL3Gu+hi9bjKFrDcwzE
4cwRr9HaS2L4hR3sos6aP/iOC2yh6jN0VjGJohnM4S2+sucLGrjGPnN7KBDL
cDrktOEcVpyDcrnjrH9IsTZGnblGKszpvzbG7aZxFj3OSbkpxrpjVKzHOMEh
DhyzYu/x3pxre85dZ/iEchL2HHuP9m4xV3WOyvUbOZ07R+XayZqOOMzpv3HW
jGEQQ0mosWpdwHAcaqLaFBm/wibjCu7RwgRzL+LwBnqLecbvfEen9xS9RmvL
jn0RSzgipxpOcZYKMSiWbmSSMHfqnlHvLHlvTXuR541y6ZCzcn/EA/6iiSx3
PkUJH+PQI+qVMlaj0ANzroFq0eVefPBZTZ91hd925TfQW0yydsI9rF5uuTa6
M+s7S66JatPPnr4k5KzcM85Vc/3OqeYeVC+qp+r+xrb9zejbUc+p9/4DsoF0
6w==
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.13835641656371742`, 0.5786760937506165, 0.5378872557270235], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwt0zssQ1Ecx/HbHvEImyaILnRBJyYVEjY1kEiwkYjHpovHylCPHYnOnhtT
hY1F29UjhNFj0ckz0cT3l/MfPs3N/5577///O6dNk6nhuXAQBJ0owwA/STQi
ivpQENRhEUvocEHQjlpEcMAz+1jFGvZ42S42sYUcrnCLO7zwjmdc4wYT1Mah
JlKoQDnq0YBW1rQggS5sYN1qulfgm3mc4RxJav245/oBp7wjaz2olxI9/+Ed
RaxQW8YghsK+J/V2gUsssGYeWZw6P9OmPaNnn6g9Ioc84mTWhh2uM873pN5e
8Rb4GTWrMlAW6vHeMlSWr8rIMlSWMd7R7PwMmiVv30pj1fke1esxTkI+M2XX
hjiOWHOIBD114Zs1XyGfsbLOcL1jmSrbPtb22h5rr6N2FqpRg2lqU7ZGax3C
zves3j/xEfY1ZxkoixGMOn8Gbm2N1kbsLGnGmM2UtswXLPOszaBZ4jZbN3ow
Rs+jtufa+yHbS82oWYu219oj7dWJZaWZNfs2mW/hB7+oolYZ8meqYDXd039A
/4Ue+7bOrM5ujWWjM1WyGUcsI2X1ZnuvHtXrLGbsG1X2n1q0mu79A13Kdcs=

               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.15321664993823045`, 0.6081148562503699, 0.5341307534362141], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwt0zksRFEUxvE3ZhJL6EaCUAgNpqIRQkKHgiiMjkgsFRpLS2HQD8morR3V
CB0No7WEUFoaKmtC/L+8r/gl97173zn33HNf9chU/2ReEATNiOEFz0hGgmAQ
i0wuoBd9+MA7olHW45nxEzaxZRqnsYYKlKMBCdO4De04xxmuceNv0s6p3LXk
qEGW8SFmGc/oGYdoQiPiKMU0a6bwyN6fImEO5RrCMAqQ7z1pb29884p7PCCH
cywhFQ1rVu2fxPrCFS5xglO/01y+Y68yXkEd6rFBjAwGkMQB7/aR0ZxjnPid
5vZYs4sWmtGKP8a/3uObYyjWKMaiYYyMcyr3jc/y3b0qIUZxLIyhWJ3o8Jk1
ueZ716za7+j9LbaxYxqnsIxucnRFwjVaO894DuOYQIJcDbGwZtU+4blCFEXC
HsXd01r3MOuaVfsxMY98B3UXL5DzO80VOVbOc+rxo3ui3gy717oDugtV7KXS
Z6CzSLm3ukO6S7pTWd9B3UXd+aRrVK0/5PhGGeNy91S9bUEreojZ7RzKtc7a
NX+jb8fcqw6fvWKU+cx0dvqH9C/pH9K/9A9JJnar
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.16807688331274348`, 0.6375536187501233, 0.5303742511454047], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwt0zksRFEUxvE3DBmEjgQhkdAwKgoJIaFDgcboUFgaS2NpKUzojWSmtnZU
hI7G0FpCKA0NlTXB/8t8xS+5ucu55553Xs3o9MBUThAELQjjMTcIHpDGBSpC
QVCOBSzihT3PiDEeQg+6ccfcPSYZT6AQRd4T8x7t7SJmJ5rQjA3OJPCNH8dQ
rG3s4ATHvvPFc1qLIx8NxKxHK9pC2RiKpZyVe4LHrWMJy8jjzjAyjJ9RxrgU
tajDOMaco3I9Ys8hzpFGirkkBhHDJXddOEfl2uy3KaZi33LmBu/4cIxzz906
J+XWh35sYdM5J5xjxnNaW/S3UI1V6xSSWMUaZtkzgyfGGcyTwxwO9RbTeBd7
qOajV6EYJWhENJx9o95a4rVfxn+IY8Ux512DQdds3DEVu5UzbXhj/OqeenSM
X8+9ucfSjqnYvZzpcU7Krd+1+eQtXzjDKfZxgA7W2jGMEVSiAlE0WtR7tFc1
UW2ucB3Knhl2zVS7AkQcQ7F0p+6OeO3Adydd+zr3jnpEvbLmb6GebPA/oH9B
PaJeufbdp37Lh3tDPane/Ae8vXcI
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.19021473110804238`, 0.6627710192012846, 0.5233489291404081], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJxNkr9OAkEQxpe9w0b5FwvkRBO9g6MBwViAXEegotFKLY2JnRp9BB/CxljY
GOMz8ASGBzDxBbSys9Rv3Z8JxZeZnZmd+b7Z3Tq9PLywxpipEAhjYSjsC3Wh
KaTCmrAtxMKA/A75rtDj3BAS4j3uNom7urKQF0pCgb5FYZ26OrEq8yJqa8xu
Cx36RNwrYyvcryzES9Sl8NkVluDg8l8SfS37IzsSTuSfy95pKZn8J+vPLn4k
e2B9j1vZe53PHKfQmIecMS35jzmvq4qOmbAqzIU9+rg5MToS9tJgfzG622hx
vDfgXEZbi1hKfcJ+XL8+79OhXwKPGnvu0LvP/lfg+mb9279aP8vNeabGUvdM
/J2zi+fo6/YcYvP4PbQN8Z3NsF3+0Jz9LKvRJ/6MXBcNE+6M0ea4j3jjBv8m
gE8Bv7jAIePdE/7C3y6UvJHdDP1OBsxKqW1RV6JXQO8i+4zJf1jPLx94OP/b
+nc+Nv5/ZJpxJfsS+Hlu7jT03CN4/e9lgq4Ibb/MZjFV
               "]], 
              PolygonBox[CompressedData["
1:eJwtkj0sg1EUhm/7WRgkIjFQg0FItAaxkAqJsEgkTGrTWBjQGvx0lPiJ7kg+
VgmjTnRlwloSiVVNNhESntc5w5N7vvNz79v3tCu/OruSDCH0QAPs8jHEOQ6X
xHswHCynWiURwhXEcAqbUQgbcA03cAD7nlOtysxEsDt0Vwcz7bAF25CDTmqt
8A7n9GQ5J6FOnKbeB1kYgTIcei7tGmLPqXbC3DF8ww/MJ+xuvVEinoKUf+dc
g7QswTJU0bxGrQCPxHVyb1CDJ8ijaQEKUIQmaNTvghS0MZPTuzBIPEZu1Gc0
K0/l7TRcEPdDxnvU+xrZ20X4IH7hbAmm+V+7v5Xx2Qd67t1zeX9Hz63vqOKa
a55T7TNp3monz8TdkWmRZmmfi0z7IsTEv5FpWYdm/iA7zAwE29FR0jyW19qp
dvsFvcF6ZtwjeSUP5WXJ962eM+I/GmJJNQ==
               "]], 
              
              PolygonBox[{{699, 698, 715, 69, 700}, {418, 40, 505, 521, 
               522}, {362, 361, 267, 19, 346}, {974, 113, 991, 972, 973}, {
               682, 78, 805, 698, 699}, {955, 954, 939, 112, 956}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.21963019332412714`, 0.6837670576038535, 0.5130547874212242], 
            GraphicsGroupBox[{
              
              PolygonBox[{{414, 30, 379}, {379, 30, 346}, {973, 102, 974}, {
               699, 68, 682}, {888, 102, 905}, {454, 43, 472}, {300, 21, 
               396}, {646, 68, 647}, {472, 43, 489}, {417, 31, 416}, {955, 
               102, 888}, {956, 102, 955}, {683, 68, 646}, {682, 68, 683}, {
               283, 21, 252}, {626, 43, 610}, {346, 30, 362}, {489, 43, 
               626}, {905, 102, 973}, {974, 102, 956}, {700, 68, 699}, {647, 
               68, 700}}], 
              
              PolygonBox[{{419, 418, 522, 523}, {362, 30, 31, 378}, {541, 540,
                558, 559}, {523, 522, 540, 541}, {378, 31, 21, 283}, {317, 11,
                21, 300}, {252, 21, 11, 153}, {396, 21, 31, 413}, {559, 558, 
               576, 577}, {416, 31, 30, 415}}], 
              
              PolygonBox[{{577, 576, 610, 43, 455}, {415, 30, 414, 418, 
               419}, {455, 43, 454, 436, 437}, {437, 436, 413, 31, 417}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.24895209815697206`, 0.7046963170315788, 0.5027933867466949], 
            GraphicsGroupBox[{
              
              PolygonBox[{{415, 41, 416}, {419, 41, 415}, {523, 41, 419}, {
               437, 42, 455}, {577, 42, 559}, {541, 41, 523}, {417, 42, 
               437}, {455, 42, 577}}], 
              PolygonBox[{{559, 42, 41, 541}, {416, 41, 42, 417}}]}]}}, {{}, 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{419, 415, 416, 417, 437, 455, 577, 559, 541, 523, 
               419}]}, "0.4`"], Annotation[#, 0.4, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{153, 252, 283, 378, 362, 346, 379, 414, 418, 522, 540, 
               558, 576, 610, 626, 489, 472, 454, 436, 413, 396, 300, 317}], 
              LineBox[{683, 646, 647, 700, 699, 682, 683}], 
              LineBox[{955, 888, 905, 973, 974, 956, 955}]}, "0.2`"], 
            Annotation[#, 0.2, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{6, 169, 220, 331, 345, 234, 189, 205, 267, 361, 377, 
               282, 251, 152}], 
              
              LineBox[{1069, 924, 856, 871, 835, 820, 790, 805, 698, 715, 729,
                759, 773, 745, 679, 663, 643, 593, 505, 521, 539, 557, 575, 
               609, 625, 488, 471, 453, 435, 412, 395, 299, 316}], 
              LineBox[{1100, 1054, 1038, 1023, 1008, 991, 972, 904, 887, 954, 
               939, 1084}]}, "0"], Annotation[#, 0, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{136, 168, 219, 330, 344, 233, 188, 204, 266, 360, 376, 
               281, 250, 151}], 
              
              LineBox[{315, 298, 394, 411, 434, 452, 470, 487, 624, 608, 574, 
               556, 538, 520, 504, 592, 642, 662, 678, 744, 772, 758, 728, 
               714, 697, 804, 789, 819, 834, 870, 855, 923, 1068}], 
              
              LineBox[{1083, 938, 953, 886, 903, 971, 990, 1007, 1022, 1037, 
               1053, 1099}]}, 
             RowBox[{"-", "0.2`"}]], Annotation[#, -0.2, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{135, 167, 218, 329, 343, 232, 187, 203, 265, 359, 375, 
               280, 249, 150}], 
              
              LineBox[{314, 297, 393, 410, 433, 451, 469, 486, 623, 607, 573, 
               555, 537, 519, 503, 591, 641, 661, 677, 743, 771, 757, 727, 
               713, 696, 803, 788, 818, 833, 869, 854, 922, 1067}], 
              
              LineBox[{1082, 937, 952, 885, 902, 970, 989, 1006, 1021, 1036, 
               1052, 1098}]}, 
             RowBox[{"-", "0.4`"}]], Annotation[#, -0.4, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{134, 166, 217, 328, 342, 231, 186, 202, 264, 358, 374, 
               279, 248, 149}], 
              
              LineBox[{313, 296, 392, 409, 432, 450, 468, 485, 622, 606, 572, 
               554, 536, 518, 502, 590, 640, 660, 676, 742, 770, 756, 726, 
               712, 695, 802, 787, 817, 832, 868, 853, 921, 1066}], 
              
              LineBox[{1081, 936, 951, 884, 901, 969, 988, 1005, 1020, 1035, 
               1051, 1097}]}, 
             RowBox[{"-", "0.6000000000000001`"}]], 
            Annotation[#, -0.6000000000000001, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{133, 165, 216, 327, 341, 230, 185, 201, 263, 357, 373, 
               278, 247, 148}], 
              
              LineBox[{312, 295, 391, 408, 431, 449, 467, 484, 621, 605, 571, 
               553, 535, 517, 501, 589, 639, 659, 675, 741, 769, 755, 725, 
               711, 694, 801, 786, 816, 831, 867, 852, 920, 1065}], 
              
              LineBox[{1080, 935, 950, 883, 900, 968, 987, 1004, 1019, 1034, 
               1050, 1096}]}, 
             RowBox[{"-", "0.8`"}]], Annotation[#, -0.8, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{132, 164, 215, 326, 340, 229, 184, 200, 262, 356, 372, 
               277, 246, 147}], 
              
              LineBox[{311, 294, 390, 407, 430, 448, 466, 483, 620, 604, 570, 
               552, 534, 516, 500, 588, 638, 658, 674, 740, 768, 754, 724, 
               710, 693, 800, 785, 815, 830, 866, 851, 919, 1064}], 
              
              LineBox[{1079, 934, 949, 882, 899, 967, 986, 1003, 1018, 1033, 
               1049, 1095}]}, 
             RowBox[{"-", "1"}]], Annotation[#, -1, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{131, 163, 214, 325, 339, 228, 183, 199, 261, 355, 371, 
               276, 245, 146}], 
              
              LineBox[{310, 293, 389, 406, 429, 447, 465, 482, 619, 603, 569, 
               551, 533, 515, 499, 587, 637, 657, 673, 739, 767, 753, 723, 
               709, 692, 799, 784, 814, 829, 865, 850, 918, 1063}], 
              
              LineBox[{1078, 933, 948, 881, 898, 966, 985, 1002, 1017, 1032, 
               1048, 1094}]}, 
             RowBox[{"-", "1.2000000000000002`"}]], 
            Annotation[#, -1.2000000000000002`, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{130, 162, 213, 324, 338, 227, 182, 198, 260, 354, 370, 
               275, 244, 145}], 
              
              LineBox[{309, 292, 388, 405, 428, 446, 464, 481, 618, 602, 568, 
               550, 532, 514, 498, 586, 636, 656, 672, 738, 766, 752, 722, 
               708, 691, 798, 783, 813, 828, 864, 849, 917, 1062}], 
              
              LineBox[{1077, 932, 947, 880, 897, 965, 984, 1001, 1016, 1031, 
               1047, 1093}]}, 
             RowBox[{"-", "1.4000000000000001`"}]], 
            Annotation[#, -1.4000000000000001`, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{129, 161, 212, 323, 337, 226, 181, 197, 259, 353, 369, 
               274, 243, 144}], 
              
              LineBox[{308, 291, 387, 404, 427, 445, 463, 480, 617, 601, 567, 
               549, 531, 513, 497, 585, 635, 655, 671, 737, 765, 751, 721, 
               707, 690, 797, 782, 812, 827, 863, 848, 916, 1061}], 
              
              LineBox[{1076, 931, 946, 879, 896, 964, 983, 1000, 1015, 1030, 
               1046, 1092}]}, 
             RowBox[{"-", "1.6`"}]], Annotation[#, -1.6, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{128, 160, 211, 322, 336, 225, 180, 196, 258, 352, 368, 
               273, 242, 143}], 
              
              LineBox[{307, 290, 386, 403, 426, 444, 462, 479, 616, 600, 566, 
               548, 530, 512, 496, 584, 634, 654, 670, 736, 764, 750, 720, 
               706, 689, 796, 781, 811, 826, 862, 847, 915, 1060}], 
              LineBox[{1075, 930, 945, 878, 895, 963, 982, 999, 1014, 1029, 
               1045, 1091}]}, 
             RowBox[{"-", "1.8`"}]], Annotation[#, -1.8, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{127, 159, 210, 321, 335, 224, 179, 195, 257, 351, 367, 
               272, 241, 142}], 
              
              LineBox[{306, 289, 385, 402, 425, 443, 461, 478, 615, 599, 565, 
               547, 529, 511, 495, 583, 633, 653, 669, 735, 763, 749, 719, 
               705, 688, 795, 780, 810, 825, 861, 846, 914, 1059}], 
              
              LineBox[{1074, 929, 944, 877, 894, 962, 981, 998, 1013, 1028, 
               1044, 1090}]}, 
             RowBox[{"-", "2"}]], Annotation[#, -2, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{126, 158, 209, 320, 334, 223, 178, 194, 256, 350, 366, 
               271, 240, 141}], 
              
              LineBox[{305, 288, 384, 401, 424, 442, 460, 477, 614, 598, 564, 
               546, 528, 510, 494, 582, 632, 652, 668, 734, 762, 748, 718, 
               704, 687, 794, 779, 809, 824, 860, 845, 913, 1058}], 
              
              LineBox[{1073, 928, 943, 876, 893, 961, 980, 997, 1012, 1027, 
               1043, 1089}]}, 
             RowBox[{"-", "2.2`"}]], Annotation[#, -2.2, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{125, 157, 208, 319, 333, 222, 177, 193, 255, 349, 365, 
               270, 239, 140}], 
              
              LineBox[{304, 287, 383, 400, 423, 441, 459, 476, 613, 597, 563, 
               545, 527, 509, 493, 581, 631, 651, 667, 733, 761, 747, 717, 
               703, 686, 793, 778, 808, 823, 859, 844, 912, 1057}], 
              LineBox[{1072, 927, 942, 875, 892, 960, 979, 996, 1011, 1026, 
               1042, 1088}]}, 
             RowBox[{"-", "2.4000000000000004`"}]], 
            Annotation[#, -2.4000000000000004`, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{124, 156, 207, 318, 332, 221, 176, 192, 254, 348, 364, 
               269, 238, 139}], 
              
              LineBox[{303, 286, 382, 399, 422, 440, 458, 475, 612, 596, 562, 
               544, 526, 508, 492, 580, 630, 650, 666, 732, 760, 746, 716, 
               702, 685, 792, 777, 807, 822, 858, 843, 911, 1056}], 
              
              LineBox[{1071, 926, 941, 874, 891, 959, 978, 995, 1010, 1025, 
               1041, 1087}]}, 
             RowBox[{"-", "2.6`"}]], Annotation[#, -2.6, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{1070, 925, 940, 873, 872, 839, 836, 857, 842, 910, 
               1055}], 
              
              LineBox[{123, 155, 171, 173, 175, 191, 253, 347, 363, 268, 237, 
               138}], 
              
              LineBox[{302, 285, 381, 398, 421, 439, 457, 474, 611, 595, 561, 
               543, 525, 507, 491, 579, 629, 649, 665, 731, 775, 838, 841, 
               890, 907, 958, 977, 994, 1009, 1024, 1040, 1086}], 
              LineBox[{791, 684, 701, 821, 806, 776, 791}]}, 
             RowBox[{"-", "2.8000000000000003`"}]], 
            Annotation[#, -2.8000000000000003`, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{122, 154, 170, 172, 174, 190, 206, 235, 236, 137}], 
              
              LineBox[{301, 284, 380, 397, 420, 438, 456, 473, 644, 645, 681, 
               680, 627, 594, 560, 542, 524, 506, 490, 578, 628, 648, 664, 
               730, 774, 837, 840, 889, 906, 957, 976, 993, 975, 908, 909, 
               992, 1039, 1085}]}, 
             RowBox[{"-", "3"}]], 
            Annotation[#, -3, "Tooltip"]& ], {}, {}}}], {
        DisplayFunction -> Identity, AspectRatio -> 1, 
         AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, 
         Frame -> True, FrameLabel -> {{
            FormBox["\"\[Beta]\"", TraditionalForm], None}, {
            FormBox["\"\[Alpha]\"", TraditionalForm], None}}, FrameStyle -> 
         GrayLevel[0], 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "GridLinesInFront" -> True}, 
         PlotRange -> {{-1.5707963267948966`, 
          1.5707963267948966`}, {-1.5707963267948966`, 1.5707963267948966`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   StyleBox[
                   "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \
SubscriptBox[\\(B\\), \\(eff\\)]]\\)\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                   GraphicsBox[{{}, {}, 
                    RasterBox[CompressedData["
1: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
5p4c
                    "], {{
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}}], {Antialiasing -> False, 
                    AbsoluteThickness[0.1], 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]], 
                    LineBox[
                    NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                    7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                    112.5}, {7.5, -112.5}}]]}, {
                    CapForm[None], {}}, {Antialiasing -> False, 
                    StyleBox[
                    LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -107.48407643312102`}, 
                    Offset[{4., 0}, {7.5, -107.48407643312102`}]}, {{
                    7.5, -71.656050955414}, 
                    Offset[{4., 0}, {7.5, -71.656050955414}]}, {{
                    7.5, -35.828025477707}, 
                    Offset[{4., 0}, {7.5, -35.828025477707}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 35.828025477707}, 
                    Offset[{4., 0}, {7.5, 35.828025477707}]}, {{7.5, 
                    71.656050955414}, 
                    Offset[{4., 0}, {7.5, 71.656050955414}]}, {{7.5, 
                    107.48407643312102`}, 
                    Offset[{4., 0}, {7.5, 107.48407643312102`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -100.31847133757961`}, 
                    Offset[{2.5, 0.}, {7.5, -100.31847133757961`}]}, {{
                    7.5, -93.15286624203821}, 
                    Offset[{2.5, 0.}, {7.5, -93.15286624203821}]}, {{
                    7.5, -85.9872611464968}, 
                    Offset[{2.5, 0.}, {7.5, -85.9872611464968}]}, {{
                    7.5, -78.82165605095543}, 
                    Offset[{2.5, 0.}, {7.5, -78.82165605095543}]}, {{
                    7.5, -64.49044585987261}, 
                    Offset[{2.5, 0.}, {7.5, -64.49044585987261}]}, {{
                    7.5, -57.324840764331206`}, 
                    Offset[{2.5, 0.}, {7.5, -57.324840764331206`}]}, {{
                    7.5, -50.159235668789805`}, 
                    Offset[{2.5, 0.}, {7.5, -50.159235668789805`}]}, {{
                    7.5, -42.9936305732484}, 
                    Offset[{2.5, 0.}, {7.5, -42.9936305732484}]}, {{
                    7.5, -28.662420382165603`}, 
                    Offset[{2.5, 0.}, {7.5, -28.662420382165603`}]}, {{
                    7.5, -21.4968152866242}, 
                    Offset[{2.5, 0.}, {7.5, -21.4968152866242}]}, {{
                    7.5, -14.331210191082802`}, 
                    Offset[{2.5, 0.}, {7.5, -14.331210191082802`}]}, {{
                    7.5, -7.165605095541401}, 
                    Offset[{2.5, 0.}, {7.5, -7.165605095541401}]}, {{7.5, 
                    7.165605095541401}, 
                    Offset[{2.5, 0.}, {7.5, 7.165605095541401}]}, {{7.5, 
                    14.331210191082802`}, 
                    Offset[{2.5, 0.}, {7.5, 14.331210191082802`}]}, {{7.5, 
                    21.4968152866242}, 
                    Offset[{2.5, 0.}, {7.5, 21.4968152866242}]}, {{7.5, 
                    28.662420382165603`}, 
                    Offset[{2.5, 0.}, {7.5, 28.662420382165603`}]}, {{7.5, 
                    42.9936305732484}, 
                    Offset[{2.5, 0.}, {7.5, 42.9936305732484}]}, {{7.5, 
                    50.159235668789805`}, 
                    Offset[{2.5, 0.}, {7.5, 50.159235668789805`}]}, {{7.5, 
                    57.324840764331206`}, 
                    Offset[{2.5, 0.}, {7.5, 57.324840764331206`}]}, {{7.5, 
                    64.49044585987261}, 
                    Offset[{2.5, 0.}, {7.5, 64.49044585987261}]}, {{7.5, 
                    78.82165605095543}, 
                    Offset[{2.5, 0.}, {7.5, 78.82165605095543}]}, {{7.5, 
                    85.9872611464968}, 
                    Offset[{2.5, 0.}, {7.5, 85.9872611464968}]}, {{7.5, 
                    93.15286624203821}, 
                    Offset[{2.5, 0.}, {7.5, 93.15286624203821}]}, {{7.5, 
                    100.31847133757961`}, 
                    Offset[{2.5, 0.}, {7.5, 100.31847133757961`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "3"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -107.48407643312102`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "2"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -71.656050955414}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "1"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -35.828025477707}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 35.828025477707}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 71.656050955414}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 107.48407643312102`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                    Scaled[0.02], PlotRange -> All, Frame -> True, 
                    FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                    Opacity[0], FrameTicksStyle -> Opacity[0], 
                    ImageSize -> {Automatic, 225}, BaseStyle -> {}]}}, 
                 GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ),
           InterpretationFunction :> (RowBox[{"BarLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.141592653589793`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.122103, 0.00901808, 0.39826], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.081402, 0.006012053333333333, 
                    0.26550666666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.122103, 0.00901808, 0.39826]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.122103, 0.00901808, 0.39826]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.122103, 0.00901808, 0.39826], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.0943951023931957`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.0839935, 0.279645, 0.510102], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.055995666666666666`, 0.18642999999999998`, 
                    0.34006800000000004`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.0839935, 0.279645, 0.510102]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.0839935, 0.279645, 0.510102]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.0839935, 0.279645, 0.510102], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.0471975511965979`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.097699, 0.498132, 0.548165], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.06513266666666667, 0.33208800000000005`, 
                    0.36544333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.097699, 0.498132, 0.548165]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.097699, 0.498132, 0.548165]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.097699, 0.498132, 0.548165], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.175507, 0.652273, 0.528496], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.11700466666666667`, 0.43484866666666666`, 
                    0.3523306666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.175507, 0.652273, 0.528496]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.175507, 0.652273, 0.528496]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.175507, 0.652273, 0.528496], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.0471975511965974`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.329526, 0.762208, 0.474596], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.219684, 0.5081386666666667, 
                    0.31639733333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.329526, 0.762208, 0.474596]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.329526, 0.762208, 0.474596]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.329526, 0.762208, 0.474596], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2.094395102393195`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571909, 0.839991, 0.408102], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3812726666666667, 0.5599940000000001, 
                    0.27206800000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571909, 0.839991, 0.408102]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571909, 0.839991, 0.408102]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.571909, 0.839991, 0.408102], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3.141592653589793`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.914809, 0.897673, 0.350652], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6098726666666667, 0.5984486666666667, 
                    0.23376800000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.914809, 0.897673, 0.350652]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.914809, 0.897673, 0.350652]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.914809, 0.897673, 0.350652], Editable -> False,
                     Selectable -> False]}], "}"}]}], "}"}], ",", "#1"}], 
                    "]"}], "&"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}], 
               ",", "None", ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               
               RowBox[{
                "LegendLabel", "\[Rule]", 
                 "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), SubscriptBox[\\(B\\), \
\\(eff\\)]]\\)\""}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
               RowBox[{"ScalingFunctions", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
               RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
               RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], 
             "]"}]& )], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[
        GraphicsComplexBox[CompressedData["
1:eJzt23k8lev7L3AlKqUkDVQqDUqihNLgVlTYpSiUcYdUmgdEkqIiU0k2iZQ0
kCYNhuoWIkOzeVzmmbWWNano+Gld9/PdT3u/vv+d83qdc/rneb332pbrvj7P
eu5nrWuZaXfQZOdQERER7WEiIv9znLxQb+v3mb2YfmQwr7moTuEQb97Tvjhn
Xhft8QaaC4lFhP9ojyPazyPa89Me5yBaXYheF5h+hHr//t8baC4khnppjyPa
zyPa89Me59DrQ/S+0esC049Q799dSAz10h5HtJ9HtOelPc6h14f+OVd63+h1
NfzLsZD47/1toPW3gdbfBlp/G2j9baDVW/jbeUjPmd7Hf66TOv693kJavYW0
egtp9RbS6iX1Ifrrgn7e0XOl941el8i//IN6aT9PDPXSfj+9Pqgf0V/H9NcJ
/Tz855ypPtLr/Ocj6S+i9RfR+oto5+9v1xn665j+Ovnn85DKmd7Hf66TOtLO
X1q9pD5Ev+7Rryv01y39dUE/7+i50vtGr4v2/LTHOfT6yH+nX6fp10H6deaf
X8fU64R+Hv5zzg2/1UX7/fT66Md/20f+23Xwv72O/9t5+N/6+Fud9D6fyjTz
ix7LR2PP7N2UNI+LedKtAatKH/32urTLiv885iX3t/22RlgPPN6qXVh3P7oc
TaS9TsAb/+W8PH+83u6Ewu/7X8LafBkH1Xzi1+OWxedJVf62Hvj56OPHJWyX
/r7f33n1qiZ5Ne+380rzzbTdVTLU75MacbvyoBr1uD2nu+VaEOXnDC1ubhvl
ke+9h/DXcYmtUt5Lzo6l/DBukpzxT8pDQ3bM9bTkEZt6JqglvKB814mrXTqe
T/zdDP0hdoiyka6fuVoB5RuqX+1t5wmIOVOmHQrwEaDCMRPczolT56VmfnfP
nXgBcfj5vAO5RpR7deNa29h8YgsRL4fRf1F++dKiZuEKyvJuGhabanjEpzSk
ig55U65ltW0KUaS85sHbvKR8LnGsU8zaooOUxRRPpPPGU3asN10xOZl6HdlM
C56y2Z2N7wvPBzCcjzvfTdwtuolNzrfLN4Yd90/qJs6pLVjWr8/E8n/88dzB
p4m8LpX6wvrL8yuJU330dXVf16GpOmParRXZ5HyBx29FPq1WedxO/Glekr7N
FCYycwht2xrVhe0PsExcTDnoYLtERKJNN2Y+Vo5XeM5Beinps0SlmNiDu2vI
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
x1/XlXR8xj1j2tNZPOHnM29wQrEx494GnvDzmAxcqFZ787ozD9UOrjsL9wUd
2nklmofmf5nkX2X3Fs9t/6non8NDh5NCrvvHZ+NN64PbvJg8lBIq+VSLnYOP
x8onusjykYiL77tmrVx842fiwX1r+Gi9uWjVldN5OM9ylZrdXj4KXubJ0s3N
xz0vCjjmoXxULNsrxpZ6j6fKWL3Y+IqP5L8flYvZ9gGvPdTuptvER46VXSpG
MR/xgQL3lVpjBaik+unM/qOf8F+DeQjQiU3sBUWTPuP0wTwEaHq6qub9tM+4
dTAPAcpYtF/H2/YLlh7MQ4Acb8QbWoh+FeYhIPnC5/mQL5lbCfMFQ75gyBcM
+YIhXzDkC4Z8wZAvGPIFQ75gyBcM+YIhXzL/EOYLhnzBkC8Y8iVzQGG+YMgX
DPmCIV8ynxHmS+YpwnzBkC8Y8gVDvmDIlzyfMF/wrIuB82wuFqLHk2VnnVjG
wWs7Iut9lxSjlIeVn9fe4OBd+vHRScUl6M26GC8pCS72vZW8vdqtDOVW2atW
HOHieyI5MiOnVaDPxxSr4yq4OM+q6OOS9EpUNqo94JAeD7cn11+wsa9GtTcf
rFiRyMPnJHpv6okyUJvWkTaxiXz81zIvkfJCBmJ/0oj45MnHdxyH2xy8XYu+
7+pdH9nMx8mhQWnDjtehYT9f8nZuFuDcjAmyVw3q0egwr7hFKQJcJvycagJt
7gnrAcN6wLAeMKwHDOsBw3rAsB4wrAcM6wHDesCwHjCsBwzrGf5yp3nWuHpy
vwqPw/0pGO5PwXB/Cob7UzDcn4Lh/hQM96dguD8Fw/0pGO5PwXB/Cob7UzDc
n4qXh56rl2hARxvDPUeO52DNJpaL8rp65L83h5f4qAfvZBvtcj5dh2JZ3AMm
Rj04tD/B/PXLWpTmOruZ187GWRIj9YcLGOhrn4ltpB8bcyY6Ltu8hIHavU+X
IEU2Xr/unLFaVTUSlXi0qSGLhW/b6KhlbalCUy5W5/jasbCY6zdps7wKpDZR
UmehCAs7BD/tadYpR4bXViR/jmLizDsHCt1elCI7BadFLiuYWCF93rNRKiWo
Z/NiY40n3fh0ad2VqFtFSME6aLVn5+/rM+DMjsqvqye+IbPFcPg4yr3qp/lr
UB2xienDW577a4kTnKuMUyMZxMOVJ/W3X64hTt53dJs9s4p4T+LHJ+UbqLmo
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
yEUyUaUMPHuI29AHCXzEDxf/GqpSi5k/62vvFfNRcFjlpQCfWvyy3+hN3BAB
Ugx9stmnvBb79qXE3FAWIHzJd6zHojq89cdsryhzATIPtvlw9FwdnvE92Dbi
jAB1B6gH7q2swx2937SvJArQ+QsSG+zV6nGyYKf8pVIBmu7LkLD0rSd5wvsH
yBMMeYIhTzDkCYY8wZAnGPIEQ55gyBMMeYIhTzDkCYY8wZAnGPIEQ55gyBMM
eYIhTzDkCYY8wZAnGPIEQ55gyBMMeYIhTzDkCYY5KczVYE4KczWYk8JcDeak
MFeDOSnM1WBOCnM1mJPCXA3mpDBXgzkpzNVgTgpzNZiTwlwN5qQwV4M5KczV
YE4KczWYk8JcDeakMFeDOSnM1WBOCnM1mJPCXA3mpDBXgzkpzNVgTgpzNZiT
wlwN5qQwV4M5KczVYE4KczWYk8JcDeakMFeDOSnM1WBOCnM1/9jbry3+4+/2
Om1Pa3m8FRBvmmr1NGoP5celmqpYkvL4K+PiGQP3h2Bn447ZQ80ol0jmXJ/1
jUeslXdDbm005avnPK44rqH8fY25lG8Tl9j652L/exco47TR4vkqlGccb/bq
+EL9neEZ9Yzvkq6U64X3E/S/n1ywRO3mw//wXO3Yyzt41N+pzTSQOTs+n/LU
rWdd3l6nPMmWt8v1GGVpp13b5xtQlnQuNayYRnmEl8HKwP/4uzdR/9SFKIdy
/5UF01mRlHtjrknFHqLMSZAcarqWcvdzzx5xOcptb7obkruov4NrKPiz2CmT
ck3J55yp4ZTL6takfNhH+WtnUrzXasofBLOvqU2knCsaFtjQRv3dXOaY4afC
MOXXsscP6YdSTp7duuPbbspJqhZb7q+inLg8X89GmvKdtSs1pZqpv8O7uTlR
MSONcpSlvOyxi5T/cgyWmLuT8v+f+//fOff/X4iUoug=
         "], {{{
            EdgeForm[], 
            RGBColor[0.122103, 0.00901808, 0.39826], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJxNkj1SAkEQhZnF3DPoFYSQPxNBNFl+lgT2x8CCBUwUNcGA+3gEj2BZJl6C
xCpDA19Xf1YRvJqZ7unXr9/MSXEXr6NKpdIXqsJAmAlDoSc0ha6QCWNhJDSI
We6CvcVaxHrgktiY+lxI2RvPldCh95eaz7Vuq34ek79mTYRz7tt5KTwKK7j6
9LN7E+r65IyrEG7Itcl1qGmjsxQWwoOwoUd5cLb9p8yKtX5ofaK/6TDt9wf1
C85teli/Nfet7jVy73aRaxzijcViPF1z9xntBfWWn/JWHfl1q/VHPBl7i83I
T5ljg86UXjN8yfHM5q8LNdYW2uvBz5PgM6XMmuPHEr4Rc5bkMrjO+BNNOGvs
Ld7gPRJm2+HJu3q9Bc9vg/c2DWXwewk9Vnhk3qTM/sLsc7QO8DJGXw+9///b
8t/B/8JR5JwFcy2YJ4NjQM0e/b8V/2f2L+1PdoPH9+gwPfYmOXzGexzcg9Pg
vCl9EjjsTf4AVrBT1A==
               "]], 
              
              PolygonBox[{{252, 51, 52, 271}, {382, 61, 51, 328}, {462, 71, 
               61, 446}, {720, 82, 71, 686}, {516, 65, 66, 546}, {759, 94, 93,
                758}, {290, 52, 53, 309}, {1057, 116, 105, 983}, {478, 64, 65,
                497}, {894, 105, 94, 759}, {758, 93, 103, 863}, {756, 103, 93,
                753}, {363, 53, 64, 478}, {753, 93, 82, 722}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.1133109862854342, 0.07145279029981243, 0.4240623956720626], 
            GraphicsGroupBox[{
              
              PolygonBox[{{758, 104, 759}, {954, 104, 925}, {752, 102, 755}, {
               804, 102, 803}, {760, 111, 1028}, {834, 102, 804}, {759, 104, 
               894}, {803, 102, 752}, {863, 104, 758}, {1013, 111, 760}}], 
              PolygonBox[CompressedData["
1:eJwt0DsOglAQheERsNbKHliDrEFbK+zUVqI7ABNdj+xAd+Cz0Eo3gAVEO038
J3eKrzkJZ84lnC1HC09EegjwbIk8UKNBFx1EiLHyRQpMMMWR7IAd9mhTFiBC
jIxsbp3aPUZqWWad2t1Hgh8bvuJu6u0hBqjIXuI26Ta9obcS+za17pJsizU2
ntuk23IU+JC9UaPxXGdlN/X2mexkHaV1aJe+Ud8a8ZNC3Hj73XeduW3UrY11
X3A1F+vU7j8yxTQ7
               "]], 
              
              PolygonBox[{{925, 104, 863, 895, 896}, {755, 102, 833, 756, 
               757}, {865, 864, 833, 102, 834}, {984, 983, 894, 104, 
               954}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.10603260792092149`, 0.12313872476189437`, 0.4454226442464031], 
            GraphicsGroupBox[{
              
              PolygonBox[{{602, 79, 616}, {757, 92, 755}, {702, 79, 602}, {90,
                101, 91}, {687, 81, 721}, {616, 79, 716}, {688, 79, 702}, {
               718, 81, 672}, {723, 92, 754}, {92, 81, 91}, {754, 92, 757}, {
               724, 90, 738}}], 
              PolygonBox[CompressedData["
1:eJwtkD1OQlEQhe+7T6xxAybycAvSSwWNkQ6wkcQOZQk8E1wGrIFaC12A/AUK
qST2GgMVhcTvZKb4biYzZ87MnbNOr/EQQwincAQZTwk+0hDW8JaE8Ap9yGGP
+A5dC1bEFXIX0IRWYj3qfYaX1HKqdeE+sZxqQxjBEx4DmFGbJ5ZTLYdH2JD7
hC3sYIH2mtk3sCT+irbLFYyJO/TcwiVU4ZdcO9jOWWo7dN1z457yLqA71h6u
14wp8Xs0b82YRPOUdxnOU8upph71lvHK/CYVv5luV4M6nEDRNdLuov1F/dpV
N5j5zXV77aTdMnlHu0nuf9Rff+j7hj84OIqLPqvus6WR9h+HSUFJ
               "]], 
              
              PolygonBox[{{805, 804, 803, 101, 775}, {672, 81, 687, 644, 
               645}, {775, 101, 760, 1028, 1029}, {1014, 1013, 760, 101, 
               761}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.09875422955640878, 0.17482465922397633`, 0.4667828928207437], 
            GraphicsGroupBox[{
              
              PolygonBox[{{718, 80, 719}, {433, 68, 603}, {576, 68, 589}, {
               630, 80, 659}, {420, 68, 433}, {719, 80, 717}, {589, 68, 
               420}, {717, 80, 716}}], 
              PolygonBox[CompressedData["
1:eJwt0T1OgkEQxvHlXQRaPQCJgfUK2GuFHSV2UANX8CXRY4jcQGuJHzeABAqs
UHsoNBAs1P+TmeKXkHlnZ2cfjjuDVj8LIVRRRL8QQg8rvOMUDbRxiQ09a/zi
DwsOz/GBT3RjCB2c4TxaTd/u8YAbXGPKrBm+8YUStXJmd668pm8XaBbsTt1d
YWYZByxbKtoMzXrBq9PvK+So01PDkjNv+OGOve+88J202xOeM+tR7yMmOGLG
oeYgYUTtFjmG0XbW7nWkzDJRNjqjsxOfpTMjz0TZJJxEy7TtmSv7oc9Whl3v
Sf5mvT35Lg3/b3bUttHepLfl/vamZzemdueZK/t/eDVDGQ==
               "]], 
              
              PolygonBox[{{603, 68, 602, 616, 617}, {703, 702, 602, 68, 
               576}, {617, 616, 716, 80, 630}, {659, 80, 718, 672, 673}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.09147585119189608, 0.2265105936860582, 0.4881431413950842], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwt0TtOQlEUheFzL0SwxRGYCEwBO0ykEilsoVIaLKDTGkxkANorRgcAtUZl
BppooZWPXgqNBgv9V84qvubcffdzebu31U1DCGVk8ZWE8Ikcj3kcZEIYYAdt
tHhrooNdvOMNY0xwwb/nGGOCFprooocGMZtpjFHsAH1soJ7EmqpdRAmn1Dxx
D+qlREwRFaxiCQW/6ds+/+zhCMe44p9L51CuIW+HuCP2PokzabZ11DIxZ8U9
q/dXvHgn2k1ZPSCPxUycWbNf48Y1VXuEszTGKHaB5eaysaZq32KKH759Y07s
r3MoVxVradxZ1z2ol5p7VQ/q5RlPnlGzTrx73Ui3esSDb6RbzbjxB/4Qklij
6ps03PPIOxr6xh3vVLut+1bKMXMO5Sr4FlPP1vdti8y8ko09qlfNOHdP6u0f
Ff5Tag==
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.08419747282738338, 0.2781965281481401, 0.5095033899694247], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwt0rtOAkEYxfEBNhFp9QUs3PUVpNNEK5HEemmMNJgIndZiog8gvZfgAyy1
xMsbaCKFVl56LTQaLfyfzCl+ybJ8e2bm+2Zus7uxUw4hZEjwxo9XFBjhvhTC
HW5wi9VKCCvIsGB6nkYNJWoCZjCLczLOcIgj/FDzjV+e//DE8yMuMVYO76pI
kZVjhrJSZLjAEAVGaCFHFz3vUXvdRx97ZOziGINyzFDWIuquUe0aGjhgD31s
oV2Je9be1QP14pR3J65R7TL/LWEdTZ9JZ3vABB+04z3Enqg3X/gsxTPqrGOf
XZnKvubdlTOV/ULts7/Rt02vNXQvJl5LM9PsGj6L1tTaPfdGGcqqeVZTDLua
xBkXXlNrt5Cjg23ruIfqZco380mcmWZXdy9zz6Lt3umO6K6MPKvc2QPPQndC
d+MfppZSCA==
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.08653770197297593, 0.3202035390149642, 0.5171677735724624], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwt0c0uA1EYxvEz0y60tlyAjalb0B0JKx+xNwsJGw26q7VKuAD2pakLmK4J
dQckumBV7FkQUon/k/MsfsnMO+/XOTOztb+xl4YQMpSxzssaekkIV+ijwCax
HMulEJZQw1wp5vSco9wXYs+4xg0WqVlwT/XeIbbtHuqVMXS2HGtUqxmatYsG
3vGGAn0M8eSYvh1T03ZP9T4ldoIHdnnEL7EfjIn9pXFn7V7FpOl5gh0q5biz
du/gwjqeoVkN79bCIc5xhkt0Mc3MKWSoJTGn5Rzl3uHWd6K7aZJzgBFek7jj
2Gcc+syFa1T7Tc4XKjxX01gzckzfPvmHH0h4Tn0HuosB7lHHvP4ncuck3lm7
t3GEFay6ZuCYvnV9Vt2x7jp3L52h6TNnnlF3D/XSTtpNO2v3DDX8A9lZUqQ=

               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.08915525966003109, 0.3619314822765468, 0.5244372710911506], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwt0btOAmEQxfGPXRqBVnsrWF4BO0208vYAkFhAIxrttAYSfQDsvQQfYKkl
Xt4AEym0Qu210Ggw/k/2FL9m+JaZObO4s7+9F4UQyshjIRfCPCpI8IB7dNBF
kccFVJDgJQ7hGTcYYYXaMjaxhUO+OcAUr7iidokTnGKD2jo+6P2JY2pH6OMM
3/z2lct6qncbu36jtxf0PEcXPdxRu/UMmqVErYg5litgQu0Jb3j3jJp1QI9r
7c2bcj7bSbtpJs0W8VuMBureSbv13LuJVpy9iZyhshwi1Tf0aHhn7T6m9ohf
vvnBjNpflNXGzlzZr/HbKhJU4yyTvjNUliNnrwyUReLb1bBkNc/c8A07zlzZ
V/3fyqjkHZruqd6aaebMJs5M2aUYRtlNp76RbqUd675R229S30S3UcYDZ6Js
/gGLiFNA
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.09177281734708626, 0.4036594255381296, 0.5317067686098387], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtkrFOAkEURYedrQRbqa10l1/QThKtVH6AjY00SKId1mIiH6C9SPAD2Fqi
+AeaaIEVYI+FRqOem3nFSR67M/fdy93Vg1btKHLOrUEMD/y4hy2owo53bhtS
qMAVzy7hBvrQKTh3BruwBx9oLMAzx9DlzAU8MT9Dzjy0Hdr1xbNPKDKX4A9+
4QVeo6AhrRUowzIeSrCE2WIcnuldAinUuLMPA+Zb26ndY3iEH+5++7BDuyqW
TZrSzjkzhDrvMvMgL3N4j0JGZVVGZd1k3tB5yOANjQncwciHO3PLrOwJntfj
cEZnq/Zfy7O8n6BxDFOYWabEdmjXOXc6cAgNUHlNaMNpFDIPLENumcfWkboa
mbdr6PmQsW4a0mqYtjpX95llkyd561v36rRrO9v2Tejb6Jm2PMrrzLKoY3Wt
jtV1Ain8Aw2rU9w=
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.09439037503414141, 0.4453873687997123, 0.5389762661285269], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwt0TFOQkEUheHh8awEW22tjMAWtJNEK8ENgBU2UmCHtZjoAqRHDS4Aao3g
DjSRAiuQXguNRv+TOcWXvMybe+fOmfXDZvU4CSFsIMVDNoR79HCNtUwIqyig
iMDaHwWvmGCIAR4xwgGq6LP3TnU03cSUurds7KFeW9jGOWsdNHCEkvYgjxU0
6aUB2zhN4kw916j2Fz+eSbMt0TP1zJp9iAFq/K9jjz27PqPkMxte07+R77KD
Mr6p/UKO77x71DyTZpvzb+Y92jtxNu9Y4IW1Z4zxhA7OsI8Kuuy5wg1uk3hn
3X2ZzHJpXNO/C1wmMcOp30hvVXGvD67/GWKmyraGeiZm1vYZXfdQL82k2VSj
WmWm7Mq+e9VvqTfsO0NlufDdBn57ZaJsCigm8Uyd3cKJtZzR3BmMnYGy+Adh
iVJ6
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.09700793272119658, 0.48711531206129505`, 0.5462457636472151], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwt0T1OQkEUxfF5fFgJtlpamchzC9JJghXoBngdFmKhndZCoguQXjG4AKg1
ojuQBAus/Oi10Gj8n8wpfgm83Llzz9zVrNPcz4UQ1lDAmD8j3GOCaRLCEx7w
iL98CL8ISHCFS3TRQ5WaTbSQYQXLqCBN4hmdndH7GRv8TlHGEt6oecU3fnBC
zTEu0Mc1BjjDOT7w7pk1+wE6PqOzR/Q4dE/1njjbFmq4485bZ1CWvu8a+K7M
WdRDvb4Y/xNFfi9gjJFqVIs9erRRxzZ2+baDITU3ScyorIs8dqkQMypriZoy
Knxbx5yal3zMqKzawdQ70C5O0U1izdwZlEUztPwGegvdOfSMmrWJRhIzKEvq
3WhnVWcqemfaXc1vpQzK0vOulVFZu56l4d7KoCwVpLn4BnXvWLvWzmfemXb3
DwWMURg=
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.10863594981469137`, 0.5197985687511097, 0.5454002603086422], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtkT1OQkEURocHwUq01c7KwvfcgnaaaIW6AegwUSm001pIZAHY+xNcANQa
lB1AgoVUKr0WEvV8ma84yeTO3JnvnlmpHJePkhDCKhSgkQvhEsqwBxmksAGb
cMDhfeiwfnBNexWowgV759CGa5jCJ3ShB0/5EB7hBm5hERZgnsdLhVjTXgOa
+Xin7j6FM7jnjju4ghYsU1tyRmUdwRBeYOAe9b7Dh2fSbF/M+h1iJmXrwzMk
vJmDMevXJPao9wdmudij3iLrOZhw9s0zabZterbsSK7WqWWeUbMOnE2O5XqX
2o7P6GydnhM7lMseZ7pywLqaROcd17TXsouhZ2/aXQ0O9S57JUgh85+07VAu
U5yvFeIME/fUnEnZ/uDXTuRGGSrOWLejsf94aod9O5CLmd0pg7LIWdF/pr/7
Bx6oUbQ=
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.12349618318920438`, 0.549237331250863, 0.5416437580178328], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwt0r8yA1EUx/G7u5mhkmipVBq7eQU6ZqLx7wEknQwjRXTUYiYeQHqR4QGS
WkbkDWKGgoroKRi+v9lf8Sn23LP3nnvOXdo/2jqMQwjLKGCDj3XsYg9vSQiv
uMcQF2jhAHVsooIMZSxGISwgRYYaqmjiBPPklDDHYUWsEVt1jnKHPusa3STf
I3WOcnewjS9q/cYZNZ7iCh20WDt3jnJfiD1jik/fSXe7Ze0uyi/9xzkxEqR8
rxTyO+vuA3L7eMAozv/Rv30Movwf/aszdNaY2KNrUC01YlUco+Eapt5Te3+Q
844f/KJErIgUWZzHtKaY1i7RxoTYk3va9B7aa+RaNUPNUjkT16TaOu7VDXqY
JTbjmWl2Pa+1fVbDtavH6nXXs2n5LdT9Fip+C5qJZqM9tXfZb0Mz1+wH7p16
ot78AzyDUVE=
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.13835641656371742`, 0.5786760937506165, 0.5378872557270235], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwt0btOAkEUxvHZnS2wEmi1sbISfAXtNMHCeOkN23lJsNBOayHRB5BeMfgA
bK3x8gaYYCEVSq+Fxv+Xc4pfMszOHM75ZmHvaPMwDSEsIkPOjyZaOMY4hvCB
BzyinoRQwwpW8cyZJ6xhHW32LrCFbVyxd4kh6zecsz7DNbqY4gsDFLhDz+/o
7il3TjDBp/6bJpcy62nsPam3G9xG60G97GA3tT19a6MTbaaW96BeDtjbRwMb
0WbSbE3kKDBILBNlk/s39aTeXvHiM2v2P/yizNmK07qGOpaVISqoRstIWX2T
/U+wGSdeQ7W6nlXPsyk8K2Wu7Oc5M+dvorepeu1ZMiojyexhI3uZ03rE3ffU
3mToM2iWGZS8pmrrzMjfaOqZKts+3+4Ty6zhM2k2zaBZSl6r49krY2WtO33P
VNn+A3/wUO4=
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.15321664993823045`, 0.6081148562503699, 0.5341307534362141], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtkr1OAmEQRZfdtdBKtNXCys5dXkE6TSQx8acmwU4stMBOazDBB5AeJfgA
UGtQ3gATLbQS7LVQz813i5NsZubO3G9m16onu/U4iqJ1SOGvEEW/UCS4BEd8
16AB5zCXUAev5N5gSuzTGmnLsGmNtJfUXMANdOAa2jAh9wILMA8rsAo/ePiO
Qky5MTxDE1qwD3uFUKPajnvfQQ+G5AaaL+9xmDFxj7F7NN1DvYbUDGAET3Hw
IC8Z5HBI7AD6fN87lvmNZe+k4R1MXdO3B3mps6tj2IEKfMA7PMBjEnasXWeQ
Q8wRCmnYsXa9TWzLHuQlI7eRhh7qtawesEismIY3jKyR9gxOfQPdokRtbo20
V9CyR3nVTXXbGXzFwaO8duE2CbGZdzb0jmueoVkVv1UzStZ0PUOzer5V2//C
PwDZUYo=
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.16807688331274348`, 0.6375536187501233, 0.5303742511454047], 
            GraphicsGroupBox[{
              PolygonBox[{{131, 9, 130}, {122, 10, 137}, {129, 8, 127}, {124, 
               7, 6}, {137, 10, 135}, {125, 7, 124}}], 
              PolygonBox[CompressedData["
1:eJwt0jtOAlEUxvHLDL6gEm01sbVxxi1ghwnGAqW1YDqmwUITY8DCxjHRBWCP
Gl0A1BIfO9BEC6xEei30/+We4hflzpl7XrOyl243A+fcKvJw/PjLOVfi7wIS
/m/gAIdIOGughX0shsRhnpdLeCPmFc94wQ5q+OHqX0wTO4V33v1AHbu4I+Ye
6zyL7U7dvYWqnemZalJtEWJc4iLwOZX7mByzmMERznknQxMplolZQoQ452tQ
Ld+YoMhZwWIUe8odBczhxHpQL4op2h26q4wN60G99DEQ7uzjEU+Bn4lmc4YM
t5zdWA/qZUiND+jhOvQz1+y/MEaHmDa6uAp8zrLtSLtKrdeqzS6zXDXbRcSO
1jDi2Wfoa1St2mliNarWCjZtxy3Lqdxjq0XfiL6VkLuCvN+pdtuxWWkHbedz
jKynofXUs51oNxObvWY0sJwV+ybq1mPXZqRZ/QOMAlNn
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.19021473110804238`, 0.6627710192012846, 0.5233489291404081], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJxNkjtOw0AQhu21kyqJE1Hk4aQgD4cG26QKMR2CClHQIFqERAcVHQ1pEQ0X
oKXhCPRICHECCk7AFfhH+xUpPu14dnZm/hlvX96e3bggCI5FJPZEJQ6w7Vxg
l9zti6U4FEf4VuSo8O2IkZiLprAaDZGImojFRExFX7w5//7Fef+uyMVX6Hv4
0flB3m/RFqnoYFvegRjiS+nJei7oq8Q3R4/pOlG9U52fztcr6OlBbIm1yIif
M48KrWvntd7pfKZ/09Gnn5Y4D32dp9DnnpE/R+OSvAu0lcQUzHmFneEvsUt6
yokr0J8wzzbfKXaNO9tFV/REHb/dv6vvC51/zt+NN/YzIGeDPYZoNu3Xzv83
TfRGxDTJb7u4F79yXpkv8pgdxf5Nwv8QkSNG64D6Kd+m+5G9vKKhS689emxR
u4ddR1+Hf8NmPSKmsTGLCe8nzHRKfMabFHvI/ZK5p/Q54+2Yvf4D5M0qIw==

               "]], 
              PolygonBox[CompressedData["
1:eJwt0T0vBFEUxvE713Y0zOoWUUiUZlREx6pkYzWyrUiorHo2XuJ9JVbiC+iQ
UPgC24+Ij6DQUOEDaPyfnFP8Mmfu3HnmzD2TG+21nRhCmEIFE0kI48iQo8rD
FBnyaGt6toS6U72Fbae6QAdXyiF3AW96Rkadeh79xKiewzP1D74R2Je44D2o
l/fEspZxw/0vWtSb+KB+5DqGaZR4GmANPVxjFjmqGMUpe4ZRwx2arK36Hu39
widKvLjSM5W9i7a/0/RMZY9wmCnuvZ8UZ8hYm6lYprJf6bkR7B/60Xrseaay
b6P9q87sKFqPNc9U9oNn617/foFzHOMEhzjAHvYxxPkN+ow16w5rBbq4DDaz
wmegWbT45mKwHlei7en6N/StPz9rzXg9sRlqlnpH7/4DnUI+9Q==
               "]], 
              
              PolygonBox[{{126, 125, 124, 17, 133}, {207, 40, 251, 267, 
               268}, {132, 131, 130, 19, 139}, {134, 19, 129, 127, 128}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.21963019332412714`, 0.6837670576038535, 0.5130547874212242], 
            GraphicsGroupBox[{
              
              PolygonBox[{{205, 31, 203}, {132, 20, 136}, {20, 31, 21}, {139, 
               20, 132}, {126, 18, 128}, {140, 21, 173}, {134, 18, 167}, {166,
                18, 133}, {128, 18, 134}, {167, 18, 166}, {203, 31, 174}, {
               175, 31, 205}, {133, 18, 126}}], 
              PolygonBox[CompressedData["
1:eJwt0L1xwkAQxfETIgMiS04cACVYcgt2DiUQ2YmBWCqA8TCDUjqw+WxDkOAu
TAQt+P9GL/jN3Kx2361uOJmOP1shhCe0sY9D2GGFChnFZ/xxvuItCuEV7/gw
nQuU+CXjgi7nHnJkntHsIxkpHshM2k2msk84Y0BP3zOanVObYYRx3GR23aPe
F2q5M5X9w93f2GJnOtc44YA+Emxcq72zdj97F72B3iLlcRJkyLHwbIovtKhF
7lFv5bfTztp9TU/H/cvQ/MPIO2v3O/9wi5oMZZV+S9X0be9Z7Xz0nakzC/wD
4cQulA==
               "]], 
              PolygonBox[{{170, 20, 139, 168, 169}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.2490456555402119, 0.7047630960064225, 0.5027606457020405], 
            GraphicsGroupBox[{
              
              PolygonBox[{{212, 43, 224}, {169, 30, 170}, {176, 32, 188}, {
               170, 30, 174}, {175, 32, 173}, {224, 43, 362}, {172, 30, 
               169}, {201, 30, 172}}], 
              PolygonBox[CompressedData["
1:eJwt0D8WwUAQx/FNoo3K0mZrnawr0Cc3cAAeNTfgvSi5Q5zACSyef4eg4gi+
8zLFp5m389uZcZNZMY2NMRYt3HFDGhnThkOGHB5dHlvk8FhRW+KLH3oJb9Ah
zOJK1gUBZ+TUBnjz5oM9tR3W2GBBbY4CJYbwminZB9SosMWTnj4yPEyTKdkn
hKSZWWYfYRw1PZX+IX8dtVcyXkjYKdYdZddSZ/E6S9DsWmeRG6V6I6c3kFtI
hmT9AURTJW8=
               "]], 
              
              PolygonBox[{{362, 43, 361, 380, 381}, {327, 326, 361, 43, 
               211}, {210, 32, 175, 205, 206}, {204, 203, 174, 30, 202}, {141,
                140, 173, 32, 176}, {202, 30, 201, 208, 209}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.27846111775629667`, 0.7257591344089915, 0.49246650398285674`], 
            GraphicsGroupBox[{
              
              PolygonBox[{{202, 41, 204}, {515, 54, 496}, {206, 42, 210}, {
               398, 54, 409}, {209, 41, 202}, {289, 41, 270}, {270, 41, 
               209}, {327, 42, 308}, {211, 42, 327}, {210, 42, 211}, {381, 54,
                362}, {496, 54, 381}}], 
              
              PolygonBox[{{943, 942, 913, 914}, {914, 913, 882, 883}, {852, 
               851, 821, 822}, {204, 41, 42, 206}, {155, 154, 141, 142}, {213,
                212, 224, 225}, {1002, 1001, 971, 972}, {972, 971, 942, 
               943}, {189, 188, 212, 213}, {142, 141, 176, 177}, {792, 791, 
               1045, 1046}, {535, 534, 564, 565}, {822, 821, 791, 792}, {883, 
               882, 851, 852}, {177, 176, 188, 189}, {308, 42, 41, 289}, {
               1076, 1075, 1001, 1002}}], 
              
              PolygonBox[{{409, 54, 515, 534, 535}, {225, 224, 362, 54, 
               398}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.3078765799723814, 0.7467551728115606, 0.48217236226367294`], 
            GraphicsGroupBox[{
              
              PolygonBox[{{973, 972, 943, 944}, {944, 943, 914, 915}, {853, 
               852, 822, 823}, {143, 142, 177, 178}, {884, 883, 852, 853}, {
               793, 792, 1046, 1047}, {410, 409, 535, 536}, {178, 177, 189, 
               190}, {156, 155, 142, 143}, {823, 822, 792, 793}, {1077, 1076, 
               1002, 1003}, {226, 225, 398, 399}, {915, 914, 883, 884}, {536, 
               535, 565, 566}, {214, 213, 225, 226}, {1003, 1002, 972, 973}, {
               399, 398, 409, 410}, {190, 189, 213, 214}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.341747586971523, 0.7661300229942115, 0.4712431980127136], 
            GraphicsGroupBox[{
              
              PolygonBox[{{885, 884, 853, 854}, {227, 226, 399, 400}, {794, 
               793, 1047, 1048}, {945, 944, 915, 916}, {824, 823, 793, 794}, {
               179, 178, 190, 191}, {974, 973, 944, 945}, {215, 214, 226, 
               227}, {854, 853, 823, 824}, {157, 156, 143, 144}, {1078, 1077, 
               1003, 1004}, {411, 410, 536, 537}, {191, 190, 214, 215}, {537, 
               536, 566, 567}, {144, 143, 178, 179}, {400, 399, 410, 411}, {
               916, 915, 884, 885}, {1004, 1003, 973, 974}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.3880393300572545, 0.7809854817204318, 0.4585437794695706], 
            GraphicsGroupBox[{
              
              PolygonBox[{{886, 885, 854, 855}, {917, 916, 885, 886}, {412, 
               411, 537, 538}, {855, 854, 824, 825}, {180, 179, 191, 192}, {
               975, 974, 945, 946}, {158, 157, 144, 145}, {145, 144, 179, 
               180}, {795, 794, 1048, 1049}, {1005, 1004, 974, 975}, {228, 
               227, 400, 401}, {1079, 1078, 1004, 1005}, {216, 215, 227, 
               228}, {192, 191, 215, 216}, {401, 400, 411, 412}, {946, 945, 
               916, 917}, {538, 537, 567, 568}, {825, 824, 794, 795}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.4343310731429859, 0.7958409404466521, 0.4458443609264276], 
            GraphicsGroupBox[{
              
              PolygonBox[{{413, 412, 538, 539}, {146, 145, 180, 181}, {217, 
               216, 228, 229}, {796, 795, 1049, 1050}, {539, 538, 568, 569}, {
               159, 158, 145, 146}, {229, 228, 401, 402}, {918, 917, 886, 
               887}, {976, 975, 946, 947}, {402, 401, 412, 413}, {887, 886, 
               855, 856}, {193, 192, 216, 217}, {826, 825, 795, 796}, {181, 
               180, 192, 193}, {1006, 1005, 975, 976}, {947, 946, 917, 918}, {
               1080, 1079, 1005, 1006}, {856, 855, 825, 826}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.4806228162287174, 0.8106963991728724, 0.4331449423832846], 
            GraphicsGroupBox[{
              
              PolygonBox[{{1081, 1080, 1006, 1007}, {540, 539, 569, 570}, {
               230, 229, 402, 403}, {857, 856, 826, 827}, {919, 918, 887, 
               888}, {414, 413, 539, 540}, {160, 159, 146, 147}, {403, 402, 
               413, 414}, {797, 796, 1050, 1051}, {218, 217, 229, 230}, {1007,
                1006, 976, 977}, {948, 947, 918, 919}, {888, 887, 856, 857}, {
               977, 976, 947, 948}, {194, 193, 217, 218}, {827, 826, 796, 
               797}, {182, 181, 193, 194}, {147, 146, 181, 182}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.5269145593144489, 0.8255518578990927, 0.4204455238401416], 
            GraphicsGroupBox[{
              
              PolygonBox[{{858, 857, 827, 828}, {949, 948, 919, 920}, {195, 
               194, 218, 219}, {920, 919, 888, 889}, {231, 230, 403, 404}, {
               541, 540, 570, 571}, {828, 827, 797, 798}, {161, 160, 147, 
               148}, {183, 182, 194, 195}, {798, 797, 1051, 1052}, {978, 977, 
               948, 949}, {889, 888, 857, 858}, {219, 218, 230, 231}, {415, 
               414, 540, 541}, {404, 403, 414, 415}, {148, 147, 182, 183}, {
               1082, 1081, 1007, 1008}, {1008, 1007, 977, 978}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.5737442978262577, 0.8402997303855766, 0.4077945113440697], 
            GraphicsGroupBox[{
              
              PolygonBox[{{149, 148, 183, 184}, {1009, 1008, 978, 979}, {890, 
               889, 858, 859}, {1083, 1082, 1008, 1009}, {184, 183, 195, 
               196}, {979, 978, 949, 950}, {921, 920, 889, 890}, {829, 828, 
               798, 799}, {405, 404, 415, 416}, {416, 415, 541, 542}, {232, 
               231, 404, 405}, {162, 161, 148, 149}, {542, 541, 571, 572}, {
               799, 798, 1052, 1053}, {220, 219, 231, 232}, {950, 949, 920, 
               921}, {859, 858, 828, 829}, {196, 195, 219, 220}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.6392333738097109, 0.8513161808984886, 0.3968223695673144], 
            GraphicsGroupBox[{
              
              PolygonBox[{{197, 196, 220, 221}, {980, 979, 950, 951}, {860, 
               859, 829, 830}, {233, 232, 405, 406}, {543, 542, 572, 573}, {
               185, 184, 196, 197}, {221, 220, 232, 233}, {951, 950, 921, 
               922}, {891, 890, 859, 860}, {922, 921, 890, 891}, {163, 162, 
               149, 150}, {406, 405, 416, 417}, {830, 829, 799, 800}, {417, 
               416, 542, 543}, {150, 149, 184, 185}, {800, 799, 1053, 1054}, {
               1084, 1083, 1009, 1010}, {1010, 1009, 979, 980}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.7047224497931638, 0.8623326314114007, 0.38585022779055916`], 
            GraphicsGroupBox[{
              
              PolygonBox[{{198, 197, 221, 222}, {418, 417, 543, 544}, {164, 
               163, 150, 151}, {952, 951, 922, 923}, {222, 221, 233, 234}, {
               1085, 1084, 1010, 1011}, {861, 860, 830, 831}, {923, 922, 891, 
               892}, {544, 543, 573, 574}, {831, 830, 800, 801}, {407, 406, 
               417, 418}, {801, 800, 1054, 1055}, {234, 233, 406, 407}, {892, 
               891, 860, 861}, {981, 980, 951, 952}, {186, 185, 197, 198}, {
               151, 150, 185, 186}, {1011, 1010, 980, 981}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.7702115257766169, 0.8733490819243127, 0.3748780860138039], 
            GraphicsGroupBox[{
              
              PolygonBox[{{545, 544, 574, 575}, {893, 892, 861, 862}, {165, 
               164, 151, 152}, {223, 222, 234, 235}, {862, 861, 831, 832}, {
               802, 801, 1055, 1056}, {924, 923, 892, 893}, {832, 831, 801, 
               802}, {982, 981, 952, 953}, {187, 186, 198, 199}, {199, 198, 
               222, 223}, {419, 418, 544, 545}, {152, 151, 186, 187}, {1012, 
               1011, 981, 982}, {953, 952, 923, 924}, {408, 407, 418, 419}, {
               235, 234, 407, 408}, {1086, 1085, 1011, 1012}}]}]}, {
            EdgeForm[], 
            RGBColor[0.914809, 0.897673, 0.350652], 
            GraphicsGroupBox[{
              
              PolygonBox[{{545, 55, 419}, {1012, 115, 1086}, {187, 22, 152}, {
               982, 115, 1012}, {575, 55, 545}, {1056, 112, 802}, {802, 112, 
               832}, {408, 44, 235}, {862, 113, 893}, {924, 114, 953}, {152, 
               22, 165}, {223, 33, 199}}], 
              
              PolygonBox[{{893, 113, 114, 924}, {953, 114, 115, 982}, {235, 
               44, 33, 223}, {199, 33, 22, 187}, {419, 55, 44, 408}, {832, 
               112, 113, 862}}]}]}}, {{}, 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{165, 152, 187, 199, 223, 235, 408, 419, 545, 575}], 
              LineBox[{1086, 1012, 982, 953, 924, 893, 862, 832, 802, 1056}]},
              "2.8000000000000003`"], 
            Annotation[#, 2.8000000000000003`, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{164, 151, 186, 198, 222, 234, 407, 418, 544, 574}], 
              LineBox[{1055, 801, 831, 861, 892, 923, 952, 981, 1011, 1085}]},
              "2.6`"], Annotation[#, 2.6, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{163, 150, 185, 197, 221, 233, 406, 417, 543, 573}], 
              LineBox[{1054, 800, 830, 860, 891, 922, 951, 980, 1010, 1084}]},
              "2.4000000000000004`"], 
            Annotation[#, 2.4000000000000004`, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{162, 149, 184, 196, 220, 232, 405, 416, 542, 572}], 
              LineBox[{1053, 799, 829, 859, 890, 921, 950, 979, 1009, 1083}]},
              "2.2`"], Annotation[#, 2.2, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{161, 148, 183, 195, 219, 231, 404, 415, 541, 571}], 
              LineBox[{1052, 798, 828, 858, 889, 920, 949, 978, 1008, 1082}]},
              "2"], Annotation[#, 2, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{160, 147, 182, 194, 218, 230, 403, 414, 540, 570}], 
              LineBox[{1051, 797, 827, 857, 888, 919, 948, 977, 1007, 1081}]},
              "1.8`"], Annotation[#, 1.8, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{159, 146, 181, 193, 217, 229, 402, 413, 539, 569}], 
              LineBox[{1050, 796, 826, 856, 887, 918, 947, 976, 1006, 1080}]},
              "1.6`"], Annotation[#, 1.6, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{158, 145, 180, 192, 216, 228, 401, 412, 538, 568}], 
              LineBox[{1049, 795, 825, 855, 886, 917, 946, 975, 1005, 1079}]},
              "1.4000000000000001`"], 
            Annotation[#, 1.4000000000000001`, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{157, 144, 179, 191, 215, 227, 400, 411, 537, 567}], 
              LineBox[{1048, 794, 824, 854, 885, 916, 945, 974, 1004, 1078}]},
              "1.2000000000000002`"], 
            Annotation[#, 1.2000000000000002`, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{156, 143, 178, 190, 214, 226, 399, 410, 536, 566}], 
              LineBox[{1047, 793, 823, 853, 884, 915, 944, 973, 1003, 1077}]},
              "1"], Annotation[#, 1, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{155, 142, 177, 189, 213, 225, 398, 409, 535, 565}], 
              LineBox[{1046, 792, 822, 852, 883, 914, 943, 972, 1002, 1076}]},
              "0.8`"], Annotation[#, 0.8, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{154, 141, 176, 188, 212, 224, 362, 381, 496, 515, 534, 
               564}], 
              LineBox[{1045, 791, 821, 851, 882, 913, 942, 971, 1001, 1075}], 
              
              LineBox[{209, 202, 204, 206, 210, 211, 327, 308, 289, 270, 
               209}]}, "0.6000000000000001`"], 
            Annotation[#, 0.6000000000000001, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{153, 140, 173, 175, 205, 203, 174, 170, 169, 172, 201, 
               208, 269, 288, 307, 326, 361, 380, 495, 514, 533, 563}], 
              LineBox[{1044, 790, 820, 850, 881, 912, 941, 970, 1000, 1074}]},
              "0.4`"], Annotation[#, 0.4, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{123, 138, 136, 132, 139, 168, 171, 200, 207, 268, 287, 
               306, 325, 360, 379, 494, 513, 532, 562}], 
              LineBox[{1043, 789, 819, 849, 880, 911, 940, 969, 999, 1073}], 
              LineBox[{133, 126, 128, 134, 167, 166, 133}]}, "0.2`"], 
            Annotation[#, 0.2, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{6, 124, 125, 127, 129, 130, 131, 135, 137, 122}], 
              
              LineBox[{1027, 774, 737, 751, 701, 715, 588, 601, 432, 445, 615,
                629, 642, 671, 685, 658, 477, 461, 397, 343, 251, 267, 286, 
               305, 324, 359, 378, 493, 512, 531, 561}], 
              LineBox[{1042, 788, 818, 848, 879, 910, 939, 968, 998, 1072}]}, 
             "0"], Annotation[#, 0, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{560, 530, 511, 492, 377, 358, 323, 304, 285, 266, 250, 
               342, 396, 460, 476, 657, 684, 670, 641, 628, 614, 444, 431, 
               600, 587, 714, 700, 750, 736, 773, 1026}], 
              LineBox[{1041, 787, 817, 847, 878, 909, 938, 967, 997, 1071}]}, 
             RowBox[{"-", "0.2`"}]], Annotation[#, -0.2, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{559, 529, 510, 491, 376, 357, 322, 303, 284, 265, 249, 
               341, 395, 459, 475, 656, 683, 669, 640, 627, 613, 443, 430, 
               599, 586, 713, 699, 749, 735, 772, 1025}], 
              LineBox[{1040, 786, 816, 846, 877, 908, 937, 966, 996, 1070}]}, 
             RowBox[{"-", "0.4`"}]], Annotation[#, -0.4, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{558, 528, 509, 490, 375, 356, 321, 302, 283, 264, 248, 
               340, 394, 458, 474, 655, 682, 668, 639, 626, 612, 442, 429, 
               598, 585, 712, 698, 748, 734, 771, 1024}], 
              LineBox[{1039, 785, 815, 845, 876, 907, 936, 965, 995, 1069}]}, 
             RowBox[{"-", "0.6000000000000001`"}]], 
            Annotation[#, -0.6000000000000001, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{557, 527, 508, 489, 374, 355, 320, 301, 282, 263, 247, 
               339, 393, 457, 473, 654, 681, 667, 638, 625, 611, 441, 428, 
               597, 584, 711, 697, 747, 733, 770, 1023}], 
              LineBox[{1038, 784, 814, 844, 875, 906, 935, 964, 994, 1068}]}, 
             RowBox[{"-", "0.8`"}]], Annotation[#, -0.8, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{556, 526, 507, 488, 373, 354, 319, 300, 281, 262, 246, 
               338, 392, 456, 472, 653, 680, 666, 637, 624, 610, 440, 427, 
               596, 583, 710, 696, 746, 732, 769, 1022}], 
              LineBox[{1037, 783, 813, 843, 874, 905, 934, 963, 993, 1067}]}, 
             RowBox[{"-", "1"}]], Annotation[#, -1, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{555, 525, 506, 487, 372, 353, 318, 299, 280, 261, 245, 
               337, 391, 455, 471, 652, 679, 665, 636, 623, 609, 439, 426, 
               595, 582, 709, 695, 745, 731, 768, 1021}], 
              LineBox[{1036, 782, 812, 842, 873, 904, 933, 962, 992, 1066}]}, 
             RowBox[{"-", "1.2000000000000002`"}]], 
            Annotation[#, -1.2000000000000002`, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{554, 524, 505, 486, 371, 352, 317, 298, 279, 260, 244, 
               336, 390, 454, 470, 651, 678, 664, 635, 622, 608, 438, 425, 
               594, 581, 708, 694, 744, 730, 767, 1020}], 
              LineBox[{1035, 781, 811, 841, 872, 903, 932, 961, 991, 1065}]}, 
             RowBox[{"-", "1.4000000000000001`"}]], 
            Annotation[#, -1.4000000000000001`, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{553, 523, 504, 485, 370, 351, 316, 297, 278, 259, 243, 
               335, 389, 453, 469, 650, 677, 663, 634, 621, 607, 437, 424, 
               593, 580, 707, 693, 743, 729, 766, 1019}], 
              LineBox[{1034, 780, 810, 840, 871, 902, 931, 960, 990, 1064}]}, 
             RowBox[{"-", "1.6`"}]], Annotation[#, -1.6, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{552, 522, 503, 484, 369, 350, 315, 296, 277, 258, 242, 
               334, 388, 452, 468, 649, 676, 662, 633, 620, 606, 436, 423, 
               592, 579, 706, 692, 742, 728, 765, 1018}], 
              LineBox[{1033, 779, 809, 839, 870, 901, 930, 959, 989, 1063}]}, 
             RowBox[{"-", "1.8`"}]], Annotation[#, -1.8, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{551, 521, 502, 483, 368, 349, 314, 295, 276, 257, 241, 
               333, 387, 451, 467, 648, 675, 661, 632, 619, 605, 435, 422, 
               591, 578, 705, 691, 741, 727, 764, 1017}], 
              LineBox[{1032, 778, 808, 838, 869, 900, 929, 958, 988, 1062}]}, 
             RowBox[{"-", "2"}]], Annotation[#, -2, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{550, 520, 501, 482, 367, 348, 313, 294, 275, 256, 240, 
               332, 386, 450, 466, 647, 674, 660, 631, 618, 604, 434, 421, 
               590, 577, 704, 690, 740, 726, 763, 1016}], 
              LineBox[{1031, 777, 807, 837, 868, 899, 928, 957, 987, 1061}]}, 
             RowBox[{"-", "2.2`"}]], Annotation[#, -2.2, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{549, 519, 500, 481, 366, 347, 312, 293, 274, 255, 239, 
               331, 385, 449, 465, 646, 673, 659, 630, 617, 603, 433, 420, 
               589, 576, 703, 689, 739, 725, 762, 1015}], 
              LineBox[{1030, 776, 806, 836, 867, 898, 927, 956, 986, 1060}]}, 
             RowBox[{"-", "2.4000000000000004`"}]], 
            Annotation[#, -2.4000000000000004`, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{548, 518, 499, 480, 365, 346, 311, 292, 273, 254, 238, 
               330, 384, 448, 464, 645, 672, 718, 719, 717, 716, 616, 602, 
               702, 688, 738, 724, 761, 1014}], 
              LineBox[{1029, 775, 805, 835, 866, 897, 926, 955, 985, 1059}]}, 
             RowBox[{"-", "2.6`"}]], Annotation[#, -2.6, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{1028, 760, 1013}], 
              
              LineBox[{547, 517, 498, 479, 364, 345, 310, 291, 272, 253, 237, 
               329, 383, 447, 463, 644, 687, 721, 723, 754, 757, 755, 752, 
               803, 804, 834, 865, 896, 925, 954, 984, 1058}]}, 
             RowBox[{"-", "2.8000000000000003`"}]], 
            Annotation[#, -2.8000000000000003`, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{546, 516, 497, 478, 363, 344, 309, 290, 271, 252, 236, 
               328, 382, 446, 462, 643, 686, 720, 722, 753, 756, 833, 864, 
               895, 863, 758, 759, 894, 983, 1057}]}, 
             RowBox[{"-", "3"}]], 
            Annotation[#, -3, "Tooltip"]& ], {}, {}}}], {
        DisplayFunction -> Identity, AspectRatio -> 1, 
         AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, 
         Frame -> True, FrameLabel -> {{
            FormBox["\"\[Beta]\"", TraditionalForm], None}, {
            FormBox["\"\[Alpha]\"", TraditionalForm], None}}, FrameStyle -> 
         GrayLevel[0], 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "GridLinesInFront" -> True}, 
         PlotRange -> {{-1.5707963267948966`, 
          1.5707963267948966`}, {-1.5707963267948966`, 1.5707963267948966`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   StyleBox[
                   "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \
SubscriptBox[\\(B\\), \\(eff\\)]]\\)\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                   GraphicsBox[{{}, {}, 
                    RasterBox[CompressedData["
1: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
5p4c
                    "], {{
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}}], {Antialiasing -> False, 
                    AbsoluteThickness[0.1], 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]], 
                    LineBox[
                    NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                    7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                    112.5}, {7.5, -112.5}}]]}, {
                    CapForm[None], {}}, {Antialiasing -> False, 
                    StyleBox[
                    LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -107.48407643312102`}, 
                    Offset[{4., 0}, {7.5, -107.48407643312102`}]}, {{
                    7.5, -71.656050955414}, 
                    Offset[{4., 0}, {7.5, -71.656050955414}]}, {{
                    7.5, -35.828025477707}, 
                    Offset[{4., 0}, {7.5, -35.828025477707}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 35.828025477707}, 
                    Offset[{4., 0}, {7.5, 35.828025477707}]}, {{7.5, 
                    71.656050955414}, 
                    Offset[{4., 0}, {7.5, 71.656050955414}]}, {{7.5, 
                    107.48407643312102`}, 
                    Offset[{4., 0}, {7.5, 107.48407643312102`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -100.31847133757961`}, 
                    Offset[{2.5, 0.}, {7.5, -100.31847133757961`}]}, {{
                    7.5, -93.15286624203821}, 
                    Offset[{2.5, 0.}, {7.5, -93.15286624203821}]}, {{
                    7.5, -85.9872611464968}, 
                    Offset[{2.5, 0.}, {7.5, -85.9872611464968}]}, {{
                    7.5, -78.82165605095543}, 
                    Offset[{2.5, 0.}, {7.5, -78.82165605095543}]}, {{
                    7.5, -64.49044585987261}, 
                    Offset[{2.5, 0.}, {7.5, -64.49044585987261}]}, {{
                    7.5, -57.324840764331206`}, 
                    Offset[{2.5, 0.}, {7.5, -57.324840764331206`}]}, {{
                    7.5, -50.159235668789805`}, 
                    Offset[{2.5, 0.}, {7.5, -50.159235668789805`}]}, {{
                    7.5, -42.9936305732484}, 
                    Offset[{2.5, 0.}, {7.5, -42.9936305732484}]}, {{
                    7.5, -28.662420382165603`}, 
                    Offset[{2.5, 0.}, {7.5, -28.662420382165603`}]}, {{
                    7.5, -21.4968152866242}, 
                    Offset[{2.5, 0.}, {7.5, -21.4968152866242}]}, {{
                    7.5, -14.331210191082802`}, 
                    Offset[{2.5, 0.}, {7.5, -14.331210191082802`}]}, {{
                    7.5, -7.165605095541401}, 
                    Offset[{2.5, 0.}, {7.5, -7.165605095541401}]}, {{7.5, 
                    7.165605095541401}, 
                    Offset[{2.5, 0.}, {7.5, 7.165605095541401}]}, {{7.5, 
                    14.331210191082802`}, 
                    Offset[{2.5, 0.}, {7.5, 14.331210191082802`}]}, {{7.5, 
                    21.4968152866242}, 
                    Offset[{2.5, 0.}, {7.5, 21.4968152866242}]}, {{7.5, 
                    28.662420382165603`}, 
                    Offset[{2.5, 0.}, {7.5, 28.662420382165603`}]}, {{7.5, 
                    42.9936305732484}, 
                    Offset[{2.5, 0.}, {7.5, 42.9936305732484}]}, {{7.5, 
                    50.159235668789805`}, 
                    Offset[{2.5, 0.}, {7.5, 50.159235668789805`}]}, {{7.5, 
                    57.324840764331206`}, 
                    Offset[{2.5, 0.}, {7.5, 57.324840764331206`}]}, {{7.5, 
                    64.49044585987261}, 
                    Offset[{2.5, 0.}, {7.5, 64.49044585987261}]}, {{7.5, 
                    78.82165605095543}, 
                    Offset[{2.5, 0.}, {7.5, 78.82165605095543}]}, {{7.5, 
                    85.9872611464968}, 
                    Offset[{2.5, 0.}, {7.5, 85.9872611464968}]}, {{7.5, 
                    93.15286624203821}, 
                    Offset[{2.5, 0.}, {7.5, 93.15286624203821}]}, {{7.5, 
                    100.31847133757961`}, 
                    Offset[{2.5, 0.}, {7.5, 100.31847133757961`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "3"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -107.48407643312102`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "2"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -71.656050955414}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "1"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -35.828025477707}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 35.828025477707}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 71.656050955414}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 107.48407643312102`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                    Scaled[0.02], PlotRange -> All, Frame -> True, 
                    FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                    Opacity[0], FrameTicksStyle -> Opacity[0], 
                    ImageSize -> {Automatic, 225}, BaseStyle -> {}]}}, 
                 GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ),
           InterpretationFunction :> (RowBox[{"BarLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.141592653589793`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.122103, 0.00901808, 0.39826], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.081402, 0.006012053333333333, 
                    0.26550666666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.122103, 0.00901808, 0.39826]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.122103, 0.00901808, 0.39826]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.122103, 0.00901808, 0.39826], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.0943951023931957`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.0839935, 0.279645, 0.510102], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.055995666666666666`, 0.18642999999999998`, 
                    0.34006800000000004`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.0839935, 0.279645, 0.510102]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.0839935, 0.279645, 0.510102]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.0839935, 0.279645, 0.510102], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.0471975511965979`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.097699, 0.498132, 0.548165], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.06513266666666667, 0.33208800000000005`, 
                    0.36544333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.097699, 0.498132, 0.548165]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.097699, 0.498132, 0.548165]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.097699, 0.498132, 0.548165], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.175507, 0.652273, 0.528496], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.11700466666666667`, 0.43484866666666666`, 
                    0.3523306666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.175507, 0.652273, 0.528496]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.175507, 0.652273, 0.528496]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.175507, 0.652273, 0.528496], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.0471975511965974`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.329526, 0.762208, 0.474596], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.219684, 0.5081386666666667, 
                    0.31639733333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.329526, 0.762208, 0.474596]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.329526, 0.762208, 0.474596]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.329526, 0.762208, 0.474596], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2.094395102393195`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571909, 0.839991, 0.408102], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3812726666666667, 0.5599940000000001, 
                    0.27206800000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571909, 0.839991, 0.408102]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571909, 0.839991, 0.408102]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.571909, 0.839991, 0.408102], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3.141592653589793`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.914809, 0.897673, 0.350652], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6098726666666667, 0.5984486666666667, 
                    0.23376800000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.914809, 0.897673, 0.350652]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.914809, 0.897673, 0.350652]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.914809, 0.897673, 0.350652], Editable -> False,
                     Selectable -> False]}], "}"}]}], "}"}], ",", "#1"}], 
                    "]"}], "&"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}], 
               ",", "None", ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               
               RowBox[{
                "LegendLabel", "\[Rule]", 
                 "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), SubscriptBox[\\(B\\), \
\\(eff\\)]]\\)\""}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
               RowBox[{"ScalingFunctions", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
               RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
               RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], 
             "]"}]& )], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.765165346858695*^9, 
  3.765165568057825*^9},ExpressionUUID->"83d24211-2beb-4e70-a10e-\
73d0600bfd50"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"a", "=", " ", "0"}], ";", " ", 
     RowBox[{"b", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", " ", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"udsmintest", " ", "=", " ", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "zf"}], "}"}], ",", " ", 
                   RowBox[{
                    RowBox[{"UDsim", "[", 
                    RowBox[{"x", ",", "y", ",", "zf", ",", "a", ",", "b"}], 
                    "]"}], "/", "Er"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", 
                   RowBox[{
                    RowBox[{"-", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"1", "*", " ", "1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", " ", 
                   RowBox[{"\[Lambda]", "/", "10"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"y", ",", 
                   RowBox[{
                    RowBox[{"-", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"\[Lambda]", "/", "13"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"zf", ",", 
                   RowBox[{
                    RowBox[{"-", " ", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"\[Lambda]", "/", "10"}]}], "}"}]}], "]"}], ",", 
               "2"}], "]"}]}], ";", "\n", 
            RowBox[{"res", " ", "=", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Pick", "[", 
                  RowBox[{"#1", ",", "#2", ",", 
                   RowBox[{"Min", "[", "#2", "]"}]}], "]"}], "&"}], "@@", 
                RowBox[{"Transpose", "[", "udsmintest", "]"}]}], ")"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"mi", " ", "=", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x", "\[Rule]", " ", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
                 RowBox[{"y", " ", "\[Rule]", " ", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
                 RowBox[{"zf", " ", "\[Rule]", " ", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "}"}]}], ";", 
            " ", 
            RowBox[{"{", 
             RowBox[{"r", " ", ",", " ", 
              RowBox[{
               RowBox[{"ToSphericalCoordinates", "[", 
                RowBox[{"ecrosss", "[", 
                 RowBox[{
                  RowBox[{"x", " ", "/.", " ", 
                   RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                  RowBox[{"y", "/.", " ", 
                   RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                  RowBox[{"zf", "/.", " ", 
                   RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b"}], 
                 "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", " ", "0", ",", "10", ",", " ", "0.2"}], "}"}]}],
           "]"}], ",", "0"}], "]"}], ",", " ", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<r\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Theta]\), SubscriptBox[\(B\), \(eff\)]]\
\)\>\""}], "}"}]}], ",", 
       RowBox[{"PlotStyle", " ", "\[Rule]", "Red"}], ",", " ", 
       RowBox[{"FrameStyle", "\[Rule]", " ", "Black"}], ",", " ", 
       RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"LineLegend", "[", 
           RowBox[{"{", "\"\<\[Alpha]=0  \[Beta]=0\>\"", "}"}], "]"}], ",", 
          "Above"}], "]"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"a", "=", " ", 
      RowBox[{"Pi", "/", "2"}]}], ";", " ", 
     RowBox[{"b", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", " ", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"udsmintest", " ", "=", " ", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "zf"}], "}"}], ",", " ", 
                   RowBox[{
                    RowBox[{"UDsim", "[", 
                    RowBox[{"x", ",", "y", ",", "zf", ",", "a", ",", "b"}], 
                    "]"}], "/", "Er"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", 
                   RowBox[{
                    RowBox[{"-", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"1", "*", " ", "1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", " ", 
                   RowBox[{"\[Lambda]", "/", "10"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"y", ",", 
                   RowBox[{
                    RowBox[{"-", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"\[Lambda]", "/", "13"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"zf", ",", 
                   RowBox[{
                    RowBox[{"-", " ", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"\[Lambda]", "/", "10"}]}], "}"}]}], "]"}], ",", 
               "2"}], "]"}]}], ";", "\n", 
            RowBox[{"res", " ", "=", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Pick", "[", 
                  RowBox[{"#1", ",", "#2", ",", 
                   RowBox[{"Min", "[", "#2", "]"}]}], "]"}], "&"}], "@@", 
                RowBox[{"Transpose", "[", "udsmintest", "]"}]}], ")"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"mi", " ", "=", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x", "\[Rule]", " ", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
                 RowBox[{"y", " ", "\[Rule]", " ", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
                 RowBox[{"zf", " ", "\[Rule]", " ", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "}"}]}], ";", 
            " ", 
            RowBox[{"{", 
             RowBox[{"r", " ", ",", " ", 
              RowBox[{
               RowBox[{"ToSphericalCoordinates", "[", 
                RowBox[{"ecrosss", "[", 
                 RowBox[{
                  RowBox[{"x", " ", "/.", " ", 
                   RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                  RowBox[{"y", "/.", " ", 
                   RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                  RowBox[{"zf", "/.", " ", 
                   RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b"}], 
                 "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", " ", "0", ",", "10", ",", " ", "0.2"}], "}"}]}],
           "]"}], ",", "0"}], "]"}], ",", " ", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<r\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Theta]\), SubscriptBox[\(B\), \(eff\)]]\
\)\>\""}], "}"}]}], ",", 
       RowBox[{"PlotStyle", " ", "\[Rule]", "Black"}], ",", " ", 
       RowBox[{"FrameStyle", "\[Rule]", " ", "Black"}], ",", " ", 
       RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"LineLegend", "[", 
           RowBox[{"{", "\"\<\[Alpha]=\[Pi]/2  \[Beta]=0\>\"", "}"}], "]"}], 
          ",", "Above"}], "]"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"a", "=", " ", 
      RowBox[{"Pi", "/", "4"}]}], ";", " ", 
     RowBox[{"b", "=", " ", 
      RowBox[{"Pi", "/", "4"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", " ", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"udsmintest", " ", "=", " ", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "zf"}], "}"}], ",", " ", 
                   RowBox[{
                    RowBox[{"UDsim", "[", 
                    RowBox[{"x", ",", "y", ",", "zf", ",", "a", ",", "b"}], 
                    "]"}], "/", "Er"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", 
                   RowBox[{
                    RowBox[{"-", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"1", "*", " ", "1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", " ", 
                   RowBox[{"\[Lambda]", "/", "10"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"y", ",", 
                   RowBox[{
                    RowBox[{"-", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"\[Lambda]", "/", "13"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"zf", ",", 
                   RowBox[{
                    RowBox[{"-", " ", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"\[Lambda]", "/", "10"}]}], "}"}]}], "]"}], ",", 
               "2"}], "]"}]}], ";", "\n", 
            RowBox[{"res", " ", "=", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Pick", "[", 
                  RowBox[{"#1", ",", "#2", ",", 
                   RowBox[{"Min", "[", "#2", "]"}]}], "]"}], "&"}], "@@", 
                RowBox[{"Transpose", "[", "udsmintest", "]"}]}], ")"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"mi", " ", "=", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x", "\[Rule]", " ", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
                 RowBox[{"y", " ", "\[Rule]", " ", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
                 RowBox[{"zf", " ", "\[Rule]", " ", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "}"}]}], ";", 
            " ", 
            RowBox[{"{", 
             RowBox[{"r", " ", ",", " ", 
              RowBox[{
               RowBox[{"ToSphericalCoordinates", "[", 
                RowBox[{"ecrosss", "[", 
                 RowBox[{
                  RowBox[{"x", " ", "/.", " ", 
                   RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                  RowBox[{"y", "/.", " ", 
                   RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                  RowBox[{"zf", "/.", " ", 
                   RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b"}], 
                 "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", " ", "0", ",", "10", ",", " ", "0.2"}], "}"}]}],
           "]"}], ",", "0"}], "]"}], ",", " ", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<r\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Theta]\), SubscriptBox[\(B\), \(eff\)]]\
\)\>\""}], "}"}]}], ",", 
       RowBox[{"PlotStyle", " ", "\[Rule]", "Orange"}], ",", " ", 
       RowBox[{"FrameStyle", "\[Rule]", " ", "Black"}], ",", " ", 
       RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", " ", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"LineLegend", "[", 
           RowBox[{"{", "\"\<\[Alpha]=\[Pi]/4  \[Beta]=\[Pi]/4\>\"", "}"}], 
           "]"}], ",", "Above"}], "]"}]}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"a", "=", " ", 
      RowBox[{
       RowBox[{"-", "Pi"}], "/", "4"}]}], ";", " ", 
     RowBox[{"b", "=", " ", 
      RowBox[{"Pi", "/", "4"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", " ", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"udsmintest", " ", "=", " ", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "zf"}], "}"}], ",", " ", 
                   RowBox[{
                    RowBox[{"UDsim", "[", 
                    RowBox[{"x", ",", "y", ",", "zf", ",", "a", ",", "b"}], 
                    "]"}], "/", "Er"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", 
                   RowBox[{
                    RowBox[{"-", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"1", "*", " ", "1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", " ", 
                   RowBox[{"\[Lambda]", "/", "10"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"y", ",", 
                   RowBox[{
                    RowBox[{"-", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"\[Lambda]", "/", "13"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"zf", ",", 
                   RowBox[{
                    RowBox[{"-", " ", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"\[Lambda]", "/", "10"}]}], "}"}]}], "]"}], ",", 
               "2"}], "]"}]}], ";", "\n", 
            RowBox[{"res", " ", "=", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Pick", "[", 
                  RowBox[{"#1", ",", "#2", ",", 
                   RowBox[{"Min", "[", "#2", "]"}]}], "]"}], "&"}], "@@", 
                RowBox[{"Transpose", "[", "udsmintest", "]"}]}], ")"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"mi", " ", "=", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x", "\[Rule]", " ", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
                 RowBox[{"y", " ", "\[Rule]", " ", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
                 RowBox[{"zf", " ", "\[Rule]", " ", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "}"}]}], ";", 
            " ", 
            RowBox[{"{", 
             RowBox[{"r", " ", ",", " ", 
              RowBox[{
               RowBox[{"ToSphericalCoordinates", "[", 
                RowBox[{"ecrosss", "[", 
                 RowBox[{
                  RowBox[{"x", " ", "/.", " ", 
                   RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                  RowBox[{"y", "/.", " ", 
                   RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                  RowBox[{"zf", "/.", " ", 
                   RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b"}], 
                 "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", " ", "0", ",", "10", ",", " ", "0.2"}], "}"}]}],
           "]"}], ",", "0"}], "]"}], ",", " ", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<r\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Theta]\), SubscriptBox[\(B\), \(eff\)]]\
\)\>\""}], "}"}]}], ",", 
       RowBox[{"PlotStyle", " ", "\[Rule]", "Brown"}], ",", " ", 
       RowBox[{"FrameStyle", "\[Rule]", " ", "Black"}], ",", " ", 
       RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"LineLegend", "[", 
           RowBox[{"{", "\"\<\[Alpha]=-\[Pi]/4  \[Beta]=\[Pi]/4\>\"", "}"}], 
           "]"}], ",", "Above"}], "]"}]}]}], "]"}]}]}], "\[IndentingNewLine]",
    "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7651211040105247`*^9, 3.765121117387862*^9}, {
  3.765121240208143*^9, 3.765121279618084*^9}, {3.765121385350656*^9, 
  3.7651214287629967`*^9}, {3.7651214615152717`*^9, 3.765121553022422*^9}, {
  3.7651216758530273`*^9, 3.765121696642789*^9}, {3.7651217286821737`*^9, 
  3.7651217346453843`*^9}, {3.7651217688591175`*^9, 3.7651218642644873`*^9}, {
  3.765121944818466*^9, 3.7651221342685194`*^9}, {3.765122164568489*^9, 
  3.765122210829862*^9}, {3.7651223469525433`*^9, 3.765122366786543*^9}, {
  3.765122433002543*^9, 3.7651226005385427`*^9}, {3.7651228611635427`*^9, 
  3.765122896903543*^9}, {3.7651658888158245`*^9, 3.765165895547825*^9}},
 ExpressionUUID -> "825f200d-5cdb-4bbf-a345-09c17059ff53"],

Cell[BoxData[
 TemplateBox[{
  "ArcTan","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"ArcTan\\\", \\\"[\\\", \
RowBox[{\\\"0.`\\\", \\\",\\\", \\\"0.`\\\"}], \\\"]\\\"}]\\) encountered.\"",
   2,76,3,31932667844217584775,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7651222143535433`*^9, 3.765122370583543*^9, 3.765122468541543*^9, {
   3.7651225825125427`*^9, 3.7651226062105427`*^9}, 3.7651228676705427`*^9, 
   3.765122900601543*^9, 3.7651660510698247`*^9, 3.76578390500558*^9},
 ExpressionUUID -> "426b9137-ca10-4449-98b8-085f2b39d2f3"],

Cell[BoxData[
 TemplateBox[{
  "ArcTan","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"ArcTan\\\", \\\"[\\\", \
RowBox[{\\\"0.`\\\", \\\",\\\", \\\"0.`\\\"}], \\\"]\\\"}]\\) encountered.\"",
   2,76,4,31932667844217584775,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7651222143535433`*^9, 3.765122370583543*^9, 3.765122468541543*^9, {
   3.7651225825125427`*^9, 3.7651226062105427`*^9}, 3.7651228676705427`*^9, 
   3.765122900601543*^9, 3.7651660510698247`*^9, 3.765783905021174*^9},
 ExpressionUUID -> "426b9137-ca10-4449-98b8-085f2b39d2f3"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.016666666666666666`], 
          AbsoluteThickness[1.6], FontSize -> 20, FontColor -> GrayLevel[0], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJw10X9IU1EUB/DpbC62apZrP3K6zRz9YcGYEc7iHkMtkClWFERBW7S1zbDa
sNRVBE1MltI/WQNjaM5CaRBCf0T2RxmMksw5dTXX5syaq3RtTh9JP6anLzwu
l3fO59z3rkRTd+hMOo1GU/x7Uuv/8HeWHfkloYj9Xipu4iwO2GqylnHvI3fk
QLHpS6RIkUqYHD1YwDVRi/g+Qngy3dytZIKsaQvklLXRyFuJY32cPFQZGs6x
4kSnTSVJajjW220FP7GfIiE25RVVxsjw21RWSK/zgL7WsoAeDezJ66Ms0zzW
p4GeYSy0ZPxAnw6ddTeOWfq/YX8GMNOjUYkhivMYUNOXKD++dw49JvBWvzeC
3npQtXKfjgi+oseC4pPv7/ZIv6DHhpuG2MvKkln0NkK75dUVh+YzehyYvi/r
bu+YwXoOqBm7TVxfGP0soNoFaiILY/9mON0SUxRencZ5W2Dgd6CPFQyhlw1r
/yOEXjbk6pi7ngwG0eOCfLb5gUwZRG8rmB0u+XDDJ/R4kLff1uOxBdDjQ/Uz
9Tpd/xR6fPjuLLd3TfjRE8C8u8o9sMGPnhBIU7d2SvURvW2wmJbYUdvxAb0c
OO8X73sR8aGXAyzZ0nJpmQ89EVQnz/YZnZPo5cKFkRMtg5sm0csDdRv78etr
E+iJIRaYKRUkx7FeDO+Uoa7DF8fRF8Pz5nqXMOElq+0KCbQOlYiETV6cJ4H6
P44gPdOLnhTvYww9KSTMjyoaC8fQk4JCf9lsHfLgefLhTTRzzyWNB7184FcU
dQroHvS2A8OVq1X2jpK/NdhbVA==
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.016666666666666666`], 
          AbsoluteThickness[1.6], FontSize -> 20, FontColor -> GrayLevel[0], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1:eJw10WtIE1AUB/CZtR4bNnWzZa62aQNhRbKaUB/uKRaFtkVlWyiSmm5kyQpR
UxfTsEGBRQOLRi8zapnkh+xBTQ3LaOrmfMyaOXObGTobPtOxlJqe/nC5XO45
v3Ph8rLUR3NWUCgU0b8V3P+HvU2SEuD5ieF2MGZyjBIlbLwyh2cHkR/cysr3
z5KdomA8RF5ueiu8MIP3o8QozS3Oo02TZW2CSJq8eterSayfJk8eHzh9VjNB
VMpgfpPyy/TSH2982O8nd9UVCk3dOLF0BPOHnJNfojTZxtCjwPL7RrE+BLL7
xCnb7/xEPxSu5k5+SN4zgv0r4ZelP7sgMIzzqJBJ3ZXPcnjQWwNVp6h9YzY3
emvh5eLgM9qQCz0aTI17d7hDXejRIWFE90iwewi9MDDtE7+uD/mOHgMOv8tc
papzYj0DFo6s359+fgD9cCClNUqn9Bv2R8BgZUOTjvTjvEhYJ5ib3ytxoMeE
5ouqM4mpX9FjQuY1+vNP2i/osSDd33pc+6IPvSgw6Qrro2fs6G2Aam5aaiHY
0WOD+56g5vqtXvTYoC5urdDO96C3ETq8qxOLsnrQi4ZsxQNxY283epvAd8Pc
UCvrRi8GrJUlJ592dqEXAzx2UkGCogs9DlgzIqM/D9vQ2wy1sgjPQpENvS3A
aKnS5zFs6HHBWSb0F6R1Yj0X4t+HcOLuW9HngiK1eSzZayFL7SIehOnLTBnE
gvN4wFk0GlyGDvT40DJ7M/zEQjt6fHDTH8YrlO3o8aHRF9CU2NvwPbEwNWBU
5SS1oRcLUuYhWctHM3pxQFv6HzP5C4fEYq0=
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.016666666666666666`], 
          AbsoluteThickness[1.6], FontSize -> 20, FontColor -> GrayLevel[0], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1:eJwtzm1IU1EYB/Brc+LmMmdzrly5TR3kQkwNda7OIw6iDwlpkYmYRbY+RDJX
HyKhpfSyrD4kJbtBVCCJWMt8CSMttVWS073ZnDazaeosm840lRU1e/5wORzu
8/89R3ysLK90HUVRKf++wEnrA+kl+67YC08P/CL/705i1NXWqS8ukbTUQMbJ
0fb79ZmKRfzvIctZJ68dYPwk1FrmiFWceqHC6cP5BVJOS0d0r+eJ6kQgS0SZ
3MHSts9hf4Uwb1a3Fui8xNQXiJ/8mUoS0D2z6FEQ+y63Ty36jvNBUJkelsi8
N4M+A6aLuKuJcg/2g6G646yy1jeF+0Kg7fOLW6tvJtELhUafw8U3fEWPBSXB
73V9TybQCwNuxtMacfc4ehxoaV5sVk650QuHu/sfmm4I3ehFwIOchvqKki84
HwHspksNbU1j6HPhiI4ZGrxhDPuR4HEbqvQ/RnHfRrizXE5kNhd6PLie8KFm
tfcTejzQ9IYnaCwj6EVBJZv2bpseRo8P0py33UOcYfSiIT4laEfhbid6Akha
4Hnrzg+hJ4C0vWW0qceB3iYYPZzlWolyoLcZGi77JlXqj+jFAMd8MFk1OIie
EDTb8ysPZQ+iJwSFNjzjUYsdvS3AU4a0WpLs6G0Fhp3NKjbY0IuF9fNnXrp2
2tATQfZvw6tvXVacF8FxtvGcLN+Kvgg0t4W+PR4LWaunikGeKY1cqLLgPjHs
6qT8ExILehJ4PEtrRoxm9CTA6oou0J8yoyeBGsVV2STfjO+Jg+LS2twY3QB6
caD1y593zvSjFw/p85xnRXn95C+y314a
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.016666666666666666`], 
          AbsoluteThickness[1.6], FontSize -> 20, FontColor -> GrayLevel[0], 
          RGBColor[0.6, 0.4, 0.2]], 
         LineBox[CompressedData["
1:eJw1zm1Ik1EUB/CVVrbFmHMta5Z7tlUOGwmLfZi4exJrlLSshNISy5p+KDGn
SZAZmQ4kQsIXVBpEZGCuF9KwskJxacKmm86XZSvzhU1Tt+GaGw2p1fEPD5fL
c/6/c6mcgpPq9TQaTfr3C51riZakpP+mAqSpMZR+4i+tW5K9XLvbyE1fx6HS
uQA5IA1lmtQYOiOS+9b+zxH9OOOO+UiA/NfcpP6Trsp23Y/zy8Ts1MBqzgrJ
yw3FR96xJLEung/7AXJmmVOR/tZLTMZQgiSfo1GeP76MHg0M1TO5CUsenF8H
2cGMN+0P3eiHQWWCu9BvW8J+ONDnW183PV3AfRuhvi2p1fpqHr0IeNxVp1S6
nOhthp8fKyjZWQd6DChP6VGVembR2wJh/hgx99kMekzQ538+p66aRo8F9j0r
V1PLp3CeBRrdbImk9gf6kdDdWXR4oXMS+2yoEfW0vFj8jvuiYPdCiTq58ht6
HFBF8fyNcjt6HLg4qmar6F/R2woPtPuPFXi+oMcFk2NfS/GiDb1tUPjeOxkf
HEcvGprL3DI9bxy9aKjm911KPTqG3nZgyzWna7Wj6O2AX17DFTI4gh4PGIpu
T7xwBL0Y+EBPbM28bUUvBvI3ZCXOOYfR2wmurGsKZsYwervAUUancS1D6MUC
u6fteXbaEHp8kK92BDJHLTjPhzyFeJM2x4I+H3rtSe2XvWbyry6lgNlAcR7d
NeM+Cnj2W8L+vWb0BCBKu3Ai6v4gegKIm2ooipsYQE8A4brIXpAM4HuEIL5x
yjKmNaEnhP574oPFDiN6IrBOqLueqIzkD/WqZWA=
          "]]}}}, {}, {}, {{}, {}}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 10.}, {0, 1.5707963267948966`}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontSize -> 20, FontColor -> GrayLevel[0]}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), SubscriptBox[\\(B\\), \\(eff\
\\)]]\\)\"", TraditionalForm], None}, {
        FormBox["\"r\"", TraditionalForm], None}}, FrameStyle -> GrayLevel[0],
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 10.}, {0, 1.5707963267948966`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TemplateBox[{"\[ThinSpace]", "\" \"", 
      FormBox[
       TemplateBox[{"\"\[Alpha]=0  \[Beta]=0\""}, "LineLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], FontSize -> 20, FontColor -> 
                    GrayLevel[0], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], FontSize -> 20, FontColor -> 
                    GrayLevel[0], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   RowBox[{"FontColor", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", "True", "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], 
      FormBox[
       TemplateBox[{"\"\[Alpha]=\[Pi]/2  \[Beta]=0\""}, "LineLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], FontSize -> 20, FontColor -> 
                    GrayLevel[0], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], FontSize -> 20, FontColor -> 
                    GrayLevel[0], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   RowBox[{"FontColor", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", "True", "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], 
      FormBox[
       TemplateBox[{"\"\[Alpha]=\[Pi]/4  \[Beta]=\[Pi]/4\""}, "LineLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], FontSize -> 20, FontColor -> 
                    GrayLevel[0], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], FontSize -> 20, FontColor -> 
                    GrayLevel[0], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   RowBox[{"FontColor", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", "True", "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], 
      FormBox[
       TemplateBox[{"\"\[Alpha]=-\[Pi]/4  \[Beta]=\[Pi]/4\""}, "LineLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], FontSize -> 20, FontColor -> 
                    GrayLevel[0], 
                    RGBColor[0.6, 0.4, 0.2]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], FontSize -> 20, FontColor -> 
                    GrayLevel[0], 
                    RGBColor[0.6, 0.4, 0.2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   RowBox[{"FontColor", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.4, 0.2]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", "True", "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm]}, "RowWithSeparators"], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.765122219126543*^9, 3.7651223756365433`*^9, 3.765122473738543*^9, {
   3.765122587641543*^9, 3.7651226112175426`*^9}, 3.765122872752543*^9, 
   3.765122905584543*^9, 3.765166061022825*^9, 3.7657839083014765`*^9},
 ExpressionUUID -> "77a46863-1754-4713-b498-5fd95e4237e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"a", "=", " ", "0"}], ";", " ", 
     RowBox[{"b", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", " ", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"udsmintest", " ", "=", " ", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "zf"}], "}"}], ",", " ", 
                   RowBox[{
                    RowBox[{"UDsim", "[", 
                    RowBox[{"x", ",", "y", ",", "zf", ",", "a", ",", "b"}], 
                    "]"}], "/", "Er"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", 
                   RowBox[{
                    RowBox[{"-", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"1", "*", " ", "1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", " ", 
                   RowBox[{"\[Lambda]", "/", "10"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"y", ",", 
                   RowBox[{
                    RowBox[{"-", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"\[Lambda]", "/", "13"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"zf", ",", 
                   RowBox[{
                    RowBox[{"-", " ", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"\[Lambda]", "/", "10"}]}], "}"}]}], "]"}], ",", 
               "2"}], "]"}]}], ";", "\n", 
            RowBox[{"res", " ", "=", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Pick", "[", 
                  RowBox[{"#1", ",", "#2", ",", 
                   RowBox[{"Min", "[", "#2", "]"}]}], "]"}], "&"}], "@@", 
                RowBox[{"Transpose", "[", "udsmintest", "]"}]}], ")"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"mi", " ", "=", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x", "\[Rule]", " ", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
                 RowBox[{"y", " ", "\[Rule]", " ", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
                 RowBox[{"zf", " ", "\[Rule]", " ", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "}"}]}], ";", 
            " ", 
            RowBox[{"{", 
             RowBox[{"r", " ", ",", " ", 
              RowBox[{
               RowBox[{"ToSphericalCoordinates", "[", 
                RowBox[{"ecrosss", "[", 
                 RowBox[{
                  RowBox[{"x", " ", "/.", " ", 
                   RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                  RowBox[{"y", "/.", " ", 
                   RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                  RowBox[{"zf", "/.", " ", 
                   RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b"}], 
                 "]"}], "]"}], "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", " ", "0", ",", "10", ",", " ", "0.2"}], "}"}]}],
           "]"}], ",", "0"}], "]"}], ",", " ", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<r\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Phi]\), SubscriptBox[\(B\), \(eff\)]]\)\
\>\""}], "}"}]}], ",", 
       RowBox[{"PlotStyle", " ", "\[Rule]", "Red"}], ",", " ", 
       RowBox[{"FrameStyle", "\[Rule]", " ", "Black"}], ",", " ", 
       RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"LineLegend", "[", 
           RowBox[{"{", "\"\<\[Alpha]=0  \[Beta]=0\>\"", "}"}], "]"}], ",", 
          "Above"}], "]"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"a", "=", " ", 
      RowBox[{"Pi", "/", "2"}]}], ";", " ", 
     RowBox[{"b", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", " ", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"udsmintest", " ", "=", " ", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "zf"}], "}"}], ",", " ", 
                   RowBox[{
                    RowBox[{"UDsim", "[", 
                    RowBox[{"x", ",", "y", ",", "zf", ",", "a", ",", "b"}], 
                    "]"}], "/", "Er"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", 
                   RowBox[{
                    RowBox[{"-", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"1", "*", " ", "1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", " ", 
                   RowBox[{"\[Lambda]", "/", "10"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"y", ",", 
                   RowBox[{
                    RowBox[{"-", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"\[Lambda]", "/", "13"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"zf", ",", 
                   RowBox[{
                    RowBox[{"-", " ", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"\[Lambda]", "/", "10"}]}], "}"}]}], "]"}], ",", 
               "2"}], "]"}]}], ";", "\n", 
            RowBox[{"res", " ", "=", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Pick", "[", 
                  RowBox[{"#1", ",", "#2", ",", 
                   RowBox[{"Min", "[", "#2", "]"}]}], "]"}], "&"}], "@@", 
                RowBox[{"Transpose", "[", "udsmintest", "]"}]}], ")"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"mi", " ", "=", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x", "\[Rule]", " ", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
                 RowBox[{"y", " ", "\[Rule]", " ", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
                 RowBox[{"zf", " ", "\[Rule]", " ", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "}"}]}], ";", 
            " ", 
            RowBox[{"{", 
             RowBox[{"r", " ", ",", " ", 
              RowBox[{
               RowBox[{"ToSphericalCoordinates", "[", 
                RowBox[{"ecrosss", "[", 
                 RowBox[{
                  RowBox[{"x", " ", "/.", " ", 
                   RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                  RowBox[{"y", "/.", " ", 
                   RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                  RowBox[{"zf", "/.", " ", 
                   RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b"}], 
                 "]"}], "]"}], "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", " ", "0", ",", "10", ",", " ", "0.2"}], "}"}]}],
           "]"}], ",", "0"}], "]"}], ",", " ", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<r\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Phi]\), SubscriptBox[\(B\), \(eff\)]]\)\
\>\""}], "}"}]}], ",", 
       RowBox[{"PlotStyle", " ", "\[Rule]", "Black"}], ",", " ", 
       RowBox[{"FrameStyle", "\[Rule]", " ", "Black"}], ",", " ", 
       RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"LineLegend", "[", 
           RowBox[{"{", "\"\<\[Alpha]=\[Pi]/2  \[Beta]=0\>\"", "}"}], "]"}], 
          ",", "Above"}], "]"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"a", "=", " ", 
      RowBox[{"Pi", "/", "3"}]}], ";", " ", 
     RowBox[{"b", "=", " ", 
      RowBox[{"Pi", "/", "3"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", " ", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"udsmintest", " ", "=", " ", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "zf"}], "}"}], ",", " ", 
                   RowBox[{
                    RowBox[{"UDsim", "[", 
                    RowBox[{"x", ",", "y", ",", "zf", ",", "a", ",", "b"}], 
                    "]"}], "/", "Er"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", 
                   RowBox[{
                    RowBox[{"-", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"1", "*", " ", "1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", " ", 
                   RowBox[{"\[Lambda]", "/", "10"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"y", ",", 
                   RowBox[{
                    RowBox[{"-", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"\[Lambda]", "/", "13"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"zf", ",", 
                   RowBox[{
                    RowBox[{"-", " ", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"\[Lambda]", "/", "10"}]}], "}"}]}], "]"}], ",", 
               "2"}], "]"}]}], ";", "\n", 
            RowBox[{"res", " ", "=", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Pick", "[", 
                  RowBox[{"#1", ",", "#2", ",", 
                   RowBox[{"Min", "[", "#2", "]"}]}], "]"}], "&"}], "@@", 
                RowBox[{"Transpose", "[", "udsmintest", "]"}]}], ")"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"mi", " ", "=", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x", "\[Rule]", " ", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
                 RowBox[{"y", " ", "\[Rule]", " ", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
                 RowBox[{"zf", " ", "\[Rule]", " ", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "}"}]}], ";", 
            " ", 
            RowBox[{"{", 
             RowBox[{"r", " ", ",", " ", 
              RowBox[{
               RowBox[{"ToSphericalCoordinates", "[", 
                RowBox[{"ecrosss", "[", 
                 RowBox[{
                  RowBox[{"x", " ", "/.", " ", 
                   RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                  RowBox[{"y", "/.", " ", 
                   RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                  RowBox[{"zf", "/.", " ", 
                   RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b"}], 
                 "]"}], "]"}], "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", " ", "0", ",", "10", ",", " ", "0.2"}], "}"}]}],
           "]"}], ",", "0"}], "]"}], ",", " ", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<r\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Phi]\), SubscriptBox[\(B\), \(eff\)]]\)\
\>\""}], "}"}]}], ",", 
       RowBox[{"PlotStyle", " ", "\[Rule]", "Orange"}], ",", " ", 
       RowBox[{"FrameStyle", "\[Rule]", " ", "Black"}], ",", " ", 
       RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", " ", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"LineLegend", "[", 
           RowBox[{"{", "\"\<\[Alpha]=\[Pi]/4  \[Beta]=\[Pi]/4\>\"", "}"}], 
           "]"}], ",", "Above"}], "]"}]}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"a", "=", " ", 
      RowBox[{
       RowBox[{"-", "Pi"}], "/", "3"}]}], ";", " ", 
     RowBox[{"b", "=", " ", 
      RowBox[{"Pi", "/", "4"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", " ", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"udsmintest", " ", "=", " ", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "zf"}], "}"}], ",", " ", 
                   RowBox[{
                    RowBox[{"UDsim", "[", 
                    RowBox[{"x", ",", "y", ",", "zf", ",", "a", ",", "b"}], 
                    "]"}], "/", "Er"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", 
                   RowBox[{
                    RowBox[{"-", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"1", "*", " ", "1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", " ", 
                   RowBox[{"\[Lambda]", "/", "10"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"y", ",", 
                   RowBox[{
                    RowBox[{"-", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"\[Lambda]", "/", "13"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"zf", ",", 
                   RowBox[{
                    RowBox[{"-", " ", "1"}], 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"1", 
                    RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
                   RowBox[{"\[Lambda]", "/", "10"}]}], "}"}]}], "]"}], ",", 
               "2"}], "]"}]}], ";", "\n", 
            RowBox[{"res", " ", "=", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Pick", "[", 
                  RowBox[{"#1", ",", "#2", ",", 
                   RowBox[{"Min", "[", "#2", "]"}]}], "]"}], "&"}], "@@", 
                RowBox[{"Transpose", "[", "udsmintest", "]"}]}], ")"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"mi", " ", "=", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x", "\[Rule]", " ", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
                 RowBox[{"y", " ", "\[Rule]", " ", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
                 RowBox[{"zf", " ", "\[Rule]", " ", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "}"}]}], ";", 
            " ", 
            RowBox[{"{", 
             RowBox[{"r", " ", ",", " ", 
              RowBox[{
               RowBox[{"ToSphericalCoordinates", "[", 
                RowBox[{"ecrosss", "[", 
                 RowBox[{
                  RowBox[{"x", " ", "/.", " ", 
                   RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                  RowBox[{"y", "/.", " ", 
                   RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                  RowBox[{"zf", "/.", " ", 
                   RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b"}], 
                 "]"}], "]"}], "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", " ", "0", ",", "10", ",", " ", "0.2"}], "}"}]}],
           "]"}], ",", "0"}], "]"}], ",", " ", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<r\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Phi]\), SubscriptBox[\(B\), \(eff\)]]\)\
\>\""}], "}"}]}], ",", 
       RowBox[{"PlotStyle", " ", "\[Rule]", "Brown"}], ",", " ", 
       RowBox[{"FrameStyle", "\[Rule]", " ", "Black"}], ",", " ", 
       RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"LineLegend", "[", 
           RowBox[{"{", "\"\<\[Alpha]=-\[Pi]/4  \[Beta]=\[Pi]/4\>\"", "}"}], 
           "]"}], ",", "Above"}], "]"}]}]}], "]"}]}]}], "\[IndentingNewLine]",
    "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.765122612551543*^9, 3.765122645678543*^9}, {
  3.7651227943685427`*^9, 3.7651228043805428`*^9}, {3.7651229145525427`*^9, 
  3.765122921877543*^9}, {3.7651651255268307`*^9, 
  3.7651651538230004`*^9}},ExpressionUUID->"1cfc2005-9cf1-48e2-9a34-\
27e31aa0ad42"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.016666666666666666`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxdzk0OwVAUhuH6iWiIFEVR9LamRjV3B1YgViDB0HpYjamEBRgbmUkkEmHA
Va7c90ua5kvPeU7FbDWZpy3Lit+Pev/iDcbTh7DlZq2yG337NulH3Yexygnf
z7on2gXzV92XC5Ub9u+6H/YqT3iWNOdT0vQz0tzPSvNeTppeHp4NrwCvCK8E
z8G8A7+M/QruVeG58Fx4NXh1eA14HjwPXhNeC14bng/Ph9eB14XXgxdgPoD/
75/1WOCegBfCC+GF+J8IXgSvr/sLLiwd/g==
          "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.016666666666666666`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1:eJxdzk0OwVAUhuH6iWiIFEVR9LamRjV3B1YgViDB0HpYjamEBRgbmUkkEmHA
Va7c90ua5kvPeU7FbDWZpy3Lit+Pev/iDcbTh7DlZq2yG337NulH3Yexygnf
z7on2gXzV92XC5Ub9u+6H/YqT3iWNOdT0vQz0tzPSvNeTppeHp4NrwCvCK8E
z8G8A7+M/QruVeG58Fx4NXh1eA14HjwPXhNeC14bng/Ph9eB14XXgxdgPoD/
75/1WOCegBfCC+GF+J8IXgSvr/sLLiwd/g==
          "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.016666666666666666`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1:eJxdzs0OwUAUhuHxE9EQKYqi6LS2VrU3C1cgrkCCpevhamwlXIC1lZ1EIhEW
jCYj835J03zpOc+pXGxmy6wQIvk++s3stjqHiT+azl/S2af9bPo40bng+9X0
VLlh/m76eqXzwP7T9NNR5w1PKHs+o2w/p+z9vLLvFZTtFeE58ErwyvAq8FzM
u/Cr2K/hXh2eB8+D14DXhNeC58Pz4bXhdeB14QXwAng9eH14A3gh5kP4//5b
TyTuSXgRvAhehP+J4cXwhqZ/ABWrG7w=
          "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.016666666666666666`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.6, 0.4, 0.2]], 
         LineBox[CompressedData["
1:eJxdzm1IU2EUB/CbiSZOM982zdU2tcwPRc3AGPKcTEwNe5nkSmSCoRJNDLJB
WdYHo5LBRIiLSgaWqGDMGgQlolbYZpvVwsl8mffuXiWjbFTeoYTV8twv/eHy
8HDP/3ceZWWdtiqEoij13y94/p/2tmDspKGEEva6+8nG3UOay/SjHfsGSZY6
GI5UJwrHsnNf4f8lMqYbZ0qLbWRD8ZMniy7tgwkHzv8gvROW4ULDe1JTHYxA
pMknFppyXNhfJZbEadko+5E4HcH8Ip0FCv2QfhI9Cujyjhv6526c3wTmwtb0
DytT6G8Gz/hCQo/Ug/1QOPv54tdvymncFwb2A9qpYukMelugOWreFbY2g14E
8D9rY+Mcs+hFgia3bjnDPIeeBNKzMqfG8rzoRUNkwNqpWfaiFwO5eXTVY9M8
zseAf/WN1RzDoL8NvPXltZpSBvuxEFKkvjVMM7gvDs7xT2uMkwx68WBtaB8Z
2MqiFw+N6zWDz/JZ9BLAonPE26+y6CXClwpnqKqfRU8K3wNz4cI0i54MZl/I
TfXhPvRkwOyJvm3b70MvCdw5pwKyMh96yZAUMJy+e9OH3nZoPR8rHOr2oZcC
x4d+VxTYRC8FHHcI/W5J9OTQaDxc8SmCQ28H9D6KutyXwaG3E0YuPXy5O59D
TwH06wsmY6U4r4BrLU1tPdc59BWQl2bWvaU58q+uVoIks3XNP8DhPiUsnjS0
7bKLngpcqUeOXmFETwX+9aLMFUH0VCC/n93SLeHxPanASruoe0oevVSQyU3F
zoM8emlQWnKmS1fIkz997mET
          "]]}}}, {}, {}, {{}, {}}, {{}, {}}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 10.}, {-3.141592653589793, 3.141592653589793}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), SubscriptBox[\\(B\\), \
\\(eff\\)]]\\)\"", TraditionalForm], None}, {
        FormBox["\"r\"", TraditionalForm], None}}, FrameStyle -> GrayLevel[0],
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 10.}, {-3.141592653589793, 3.141592653589793}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TemplateBox[{"\[ThinSpace]", "\" \"", 
      FormBox[
       TemplateBox[{"\"\[Alpha]=0  \[Beta]=0\""}, "LineLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", "True", "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], 
      FormBox[
       TemplateBox[{"\"\[Alpha]=\[Pi]/2  \[Beta]=0\""}, "LineLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", "True", "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], 
      FormBox[
       TemplateBox[{"\"\[Alpha]=\[Pi]/4  \[Beta]=\[Pi]/4\""}, "LineLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", "True", "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], 
      FormBox[
       TemplateBox[{"\"\[Alpha]=-\[Pi]/4  \[Beta]=\[Pi]/4\""}, "LineLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.4, 0.2]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", "True", "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm]}, "RowWithSeparators"], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7651226326365433`*^9, 3.765122654665543*^9}, 
   3.7651228186885433`*^9, 3.765122942233543*^9, {3.7651651441949635`*^9, 
   3.7651651694544373`*^9}},ExpressionUUID->"5a4b531a-9a89-4320-9561-\
247623d9a70c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", " ", 
   RowBox[{
    RowBox[{"-", "Pi"}], "/", "4"}]}], ";", " ", 
  RowBox[{"b", "=", " ", 
   RowBox[{"Pi", "/", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", " ", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"udsmintest", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"x", ",", "y", ",", "zf"}], "}"}], ",", " ", 
               RowBox[{
                RowBox[{"UDsim", "[", 
                 RowBox[{"x", ",", "y", ",", "zf", ",", "a", ",", "b"}], 
                 "]"}], "/", "Er"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{
                RowBox[{"-", "1"}], 
                RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
               RowBox[{"1", "*", " ", "1", 
                RowBox[{"\[Lambda]", "/", "2"}]}], ",", " ", 
               RowBox[{"\[Lambda]", "/", "10"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", 
               RowBox[{
                RowBox[{"-", "1"}], 
                RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
               RowBox[{"1", 
                RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
               RowBox[{"\[Lambda]", "/", "13"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"zf", ",", 
               RowBox[{
                RowBox[{"-", " ", "1"}], 
                RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
               RowBox[{"1", 
                RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
               RowBox[{"\[Lambda]", "/", "10"}]}], "}"}]}], "]"}], ",", "2"}],
           "]"}]}], ";", "\n", 
        RowBox[{"res", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Pick", "[", 
              RowBox[{"#1", ",", "#2", ",", 
               RowBox[{"Min", "[", "#2", "]"}]}], "]"}], "&"}], "@@", 
            RowBox[{"Transpose", "[", "udsmintest", "]"}]}], ")"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"mi", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "\[Rule]", " ", 
              RowBox[{"res", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
             RowBox[{"y", " ", "\[Rule]", " ", 
              RowBox[{"res", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
             RowBox[{"zf", " ", "\[Rule]", " ", 
              RowBox[{"res", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "}"}]}], ";", " ", 
        RowBox[{"{", 
         RowBox[{"r", " ", ",", " ", 
          RowBox[{
           RowBox[{"ToSphericalCoordinates", "[", 
            RowBox[{"ecrosss", "[", 
             RowBox[{
              RowBox[{"x", " ", "/.", " ", 
               RowBox[{"mi", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", 
              RowBox[{"y", "/.", " ", 
               RowBox[{"mi", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", 
              RowBox[{"zf", "/.", " ", 
               RowBox[{"mi", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b"}], "]"}],
             "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", " ", "0", ",", "5", ",", " ", "0.2"}], "}"}]}], 
      "]"}], ",", "0"}], "]"}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<r\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Phi]\), SubscriptBox[\(B\), \
\(eff\)]]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", " ", "\[Rule]", "Red"}], ",", " ", 
   RowBox[{"FrameStyle", "\[Rule]", " ", "Black"}], ",", " ", 
   RowBox[{"Frame", "\[Rule]", " ", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7651215677598953`*^9, 3.765121583674486*^9}, 
   3.7651216657760515`*^9},ExpressionUUID->"721239cc-079f-411a-83b7-\
6d46f630b133"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQjQ5mzQSBk/Zz3Xvn8BrssYfwb9offK02q+/2GXsT
YxB4bD/7+Nv4T9+uQuVf2q/i8q8XLL5rDzHlg73cv63ZD8IfQdV/tr+gqveR
49BT+/Q0EPhmP8P3DWfUqxdQ/T/tbzhsY1E+9dr+7BkQ+GN/sa6styThHdQ8
BoechlP79SM+QNUzOhwuXySxNP4j1Hxmh0MxU5iveH6C6mdxkJ31rZhf6jPU
PjYHjgdvFzRf/gw1j8MhY/fqh6KVX6DmcTr8s3NbHMH7FWoet0N41o63XZO+
Qs3jcUjTvfh4Ltc3qHl8DlMnzLprU/4Nap6Aw70gcZNrN79B1Qs42J5T3bfY
+DvUfEGHJo6M9k2t36H6hRy2yFyY9vLCd6h9wg4FJ74d4hf7ATVPxCHR7/vS
C6E/7AGu/rd5
      "]]}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), SubscriptBox[\\(B\\), \\(eff\\)]]\
\\)\"", TraditionalForm], None}, {
     FormBox["\"r\"", TraditionalForm], None}},
  FrameStyle->GrayLevel[0],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 5.}, {0, 1.5209509356544901`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7651215706711864`*^9, 3.7651215868328023`*^9}, 
   3.7651216685012336`*^9},ExpressionUUID->"bf40d3dc-0900-4a9c-b957-\
89bc0b4e19e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", " ", 
   RowBox[{
    RowBox[{"-", "Pi"}], "/", "4"}]}], ";", " ", 
  RowBox[{"b", "=", " ", 
   RowBox[{"Pi", "/", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", " ", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"udsmintest", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"x", ",", "y", ",", "zf"}], "}"}], ",", " ", 
               RowBox[{
                RowBox[{"UDsim", "[", 
                 RowBox[{"x", ",", "y", ",", "zf", ",", "a", ",", "b"}], 
                 "]"}], "/", "Er"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{
                RowBox[{"-", "1"}], 
                RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
               RowBox[{"1", "*", " ", "1", 
                RowBox[{"\[Lambda]", "/", "2"}]}], ",", " ", 
               RowBox[{"\[Lambda]", "/", "10"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", 
               RowBox[{
                RowBox[{"-", "1"}], 
                RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
               RowBox[{"1", 
                RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
               RowBox[{"\[Lambda]", "/", "13"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"zf", ",", 
               RowBox[{
                RowBox[{"-", " ", "1"}], 
                RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
               RowBox[{"1", 
                RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
               RowBox[{"\[Lambda]", "/", "10"}]}], "}"}]}], "]"}], ",", "2"}],
           "]"}]}], ";", "\n", 
        RowBox[{"res", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Pick", "[", 
              RowBox[{"#1", ",", "#2", ",", 
               RowBox[{"Min", "[", "#2", "]"}]}], "]"}], "&"}], "@@", 
            RowBox[{"Transpose", "[", "udsmintest", "]"}]}], ")"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"mi", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "\[Rule]", " ", 
              RowBox[{"res", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
             RowBox[{"y", " ", "\[Rule]", " ", 
              RowBox[{"res", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
             RowBox[{"zf", " ", "\[Rule]", " ", 
              RowBox[{"res", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "}"}]}], ";", " ", 
        RowBox[{"{", 
         RowBox[{"r", " ", ",", " ", 
          RowBox[{
           RowBox[{"ToSphericalCoordinates", "[", 
            RowBox[{"ecrosss", "[", 
             RowBox[{
              RowBox[{"x", " ", "/.", " ", 
               RowBox[{"mi", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", 
              RowBox[{"y", "/.", " ", 
               RowBox[{"mi", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", 
              RowBox[{"zf", "/.", " ", 
               RowBox[{"mi", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b"}], "]"}],
             "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", " ", "0", ",", "5", ",", " ", "0.2"}], "}"}]}], 
      "]"}], ",", "0"}], "]"}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<r\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Phi]\), SubscriptBox[\(B\), \
\(eff\)]]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", " ", "\[Rule]", "Red"}], ",", " ", 
   RowBox[{"FrameStyle", "\[Rule]", " ", "Black"}], ",", " ", 
   RowBox[{"Frame", "\[Rule]", " ", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.765121599233042*^9, 3.7651215993130503`*^9}, 
   3.7651216552052236`*^9},ExpressionUUID->"2f80c359-8039-4aaf-a83c-\
480cb4071c08"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQNWv8VS2ly9rGbNBIGT9jtPCueca/eE8m/az+5K
W2Ml62llYgwCj+2n3Jp7xZkFJv/SftcfyyN5jp5WENM+2F9kCHx/8R5M/Wd7
xbVS/0pfeVmlp4HAN/sVytLXHhb7QPX/tI/YqpJV2+lndfYMCPyxz7b9+NRr
dgDUPAaHx1qP9jg4BkHVMzqsSE8QzLUIgZrP7LBF/iS7XmMYVD+LQ3a46tlv
UpFQ+9gcKirK7fazxEDN43D4dOzQgUDbeKh5nA55ISs+7UlMhJrH7RDgrqrN
550MNY/HYceVT1YKUalQ8/gcHt8R+d3Rlw41T8DBzLHY8v3zTKh6AYdr6qpb
ONJyoOYLOvAphj2ZzpEP1S/ksC6p/fOW5wVQ+4Qd5kaJBmnFFkHNE3F4MuHj
3FlPiq0AwOqo/Q==
      "]]}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), SubscriptBox[\\(B\\), \\(eff\\)]]\
\\)\"", TraditionalForm], None}, {
     FormBox["\"r\"", TraditionalForm], None}},
  FrameStyle->GrayLevel[0],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 5.}, {0, 4.017356179700825*^-27}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7651216021093297`*^9, 
  3.7651216579733925`*^9},ExpressionUUID->"68d93750-b711-4f1b-b86f-\
d18929f2b7c5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
new lattice potential   (doesnt make sense as lattice stays the same in spite \
of the new beam!!!!!)\
\>", "Section",
 CellChangeTimes->{{3.765166257578825*^9, 3.7651662631888247`*^9}, {
  3.765167401498825*^9, 
  3.765167416281825*^9}},ExpressionUUID->"d6efbe5a-37be-4a63-a9b7-\
3178d4ca87e4"],

Cell[BoxData[
 RowBox[{"udsimraw", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"+", 
      RowBox[{"-", "2"}]}], "/", "3"}], "*", "hbar", " ", 
    SuperscriptBox["Gam", "2"], 
    RowBox[{"Inti", " ", "/", " ", 
     RowBox[{"(", 
      RowBox[{"Delta", "*", "8", " ", "Ints"}], ")"}]}], 
    RowBox[{"\[Epsilon]1", ".", "\[Epsilon]1s"}]}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.7651057781451535`*^9, 3.7651057798923197`*^9}, {
  3.7651058609053807`*^9, 3.7651058638849235`*^9}, {3.765166267757825*^9, 
  3.765166288875825*^9}, {3.765166371861825*^9, 3.765166382420825*^9}, {
  3.7651664530258245`*^9, 
  3.765166454321825*^9}},ExpressionUUID->"8fea2dae-2f17-4b8f-8b5a-\
efea727aa571"],

Cell[BoxData[
 RowBox[{
  RowBox[{"UDsim", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_", ",", "a_", ",", "b_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", 
     RowBox[{"12", " ", "Delta", " ", "Ints"}]]}], 
   SuperscriptBox["Gam", "2"], " ", "hbar", " ", "Inti", " ", 
   RowBox[{"(", 
    RowBox[{"4", "+", 
     RowBox[{"Cos", "[", 
      RowBox[{"a", "-", "b", "-", 
       RowBox[{"2", " ", "k", " ", "x"}]}], "]"}], "+", 
     RowBox[{"Cos", "[", 
      RowBox[{"a", "-", "b", "+", 
       RowBox[{"2", " ", "k", " ", "x"}]}], "]"}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", "a", "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"k", " ", 
        RowBox[{"(", 
         RowBox[{"x", "-", "y"}], ")"}]}], "]"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", "b", "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"k", " ", 
        RowBox[{"(", 
         RowBox[{"x", "+", "y"}], ")"}]}], "]"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"k", " ", 
        RowBox[{"(", 
         RowBox[{"x", "+", "z"}], ")"}]}], "]"}], " ", 
      RowBox[{"Sin", "[", "b", "]"}]}], "+", 
     RowBox[{"Sin", "[", 
      RowBox[{"a", "+", 
       RowBox[{"k", " ", "x"}], "-", 
       RowBox[{"k", " ", "z"}]}], "]"}], "+", 
     RowBox[{"Sin", "[", 
      RowBox[{"a", "-", 
       RowBox[{"k", " ", "x"}], "+", 
       RowBox[{"k", " ", "z"}]}], "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{3.7651664455238247`*^9, 
  3.7651691569439225`*^9},ExpressionUUID->"fd311d08-1b02-4085-ad17-\
43ac6f570565"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", "0"}], ";", 
  RowBox[{"z", "=", "0"}], ";", 
  RowBox[{"a", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"+", "Pi"}], "/", "4"}], "+", 
    RowBox[{"Pi", "/", "18"}]}]}], ";", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"+", "Pi"}], "/", "4"}], "+", 
   RowBox[{"Pi", "/", "6"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"udsmintest", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "zf"}], "}"}], ",", " ", 
         RowBox[{
          RowBox[{"UDsim", "[", 
           RowBox[{"x", ",", "y", ",", "zf", ",", "a", ",", "b"}], "]"}], "/",
           "Er"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"-", "1"}], 
          RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
         RowBox[{"1", "*", " ", "1", 
          RowBox[{"\[Lambda]", "/", "2"}]}], ",", " ", 
         RowBox[{"\[Lambda]", "/", "10"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{
          RowBox[{"-", "1"}], 
          RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
         RowBox[{"1", 
          RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
         RowBox[{"\[Lambda]", "/", "10"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"zf", ",", 
         RowBox[{
          RowBox[{"-", " ", "1"}], 
          RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
         RowBox[{"1", 
          RowBox[{"\[Lambda]", "/", "2"}]}], ",", 
         RowBox[{"\[Lambda]", "/", "10"}]}], "}"}]}], "]"}], ",", "2"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"res", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Pick", "[", 
        RowBox[{"#1", ",", "#2", ",", 
         RowBox[{"Min", "[", "#2", "]"}]}], "]"}], "&"}], "@@", 
      RowBox[{"Transpose", "[", "udsmintest", "]"}]}], ")"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"mi", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"0", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", " ", 
       RowBox[{"res", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
      RowBox[{"y", " ", "\[Rule]", " ", 
       RowBox[{"res", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
      RowBox[{"zf", " ", "\[Rule]", " ", 
       RowBox[{"res", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goodlat", " ", "=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ListPlot3D", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", "y", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"Sqrt", "[", 
                  RowBox[{
                   RowBox[{"ecrosss", "[", 
                    RowBox[{"x", ",", "y", ",", 
                    RowBox[{"zf", " ", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b"}], 
                    "]"}], ".", 
                   RowBox[{"ecrosss", "[", 
                    RowBox[{"x", ",", "y", ",", 
                    RowBox[{"zf", " ", "/.", " ", 
                    RowBox[{"mi", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b"}], 
                    "]"}]}], "]"}], "*", "2", "*", 
                 SuperscriptBox["10", "28"]}], "-", "13"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{
                RowBox[{"-", "2"}], "\[Lambda]"}], ",", 
               RowBox[{"2", "\[Lambda]"}], ",", " ", 
               RowBox[{"\[Lambda]", "/", "10"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", 
               RowBox[{
                RowBox[{"-", "2"}], " ", "\[Lambda]"}], ",", 
               RowBox[{"2", "\[Lambda]"}], ",", 
               RowBox[{"\[Lambda]", "/", "10"}]}], "}"}]}], "]"}], ",", "1"}],
           "]"}], ",", " ", 
         RowBox[{"PlotStyle", " ", "\[Rule]", "  ", 
          RowBox[{"{", 
           RowBox[{"LightRed", ",", " ", 
            RowBox[{"Opacity", "[", "0.7", "]"}]}], "}"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ListPlot3D", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", 
              RowBox[{
               RowBox[{"UDsim", "[", 
                RowBox[{"x", ",", "y", ",", 
                 RowBox[{"zf", " ", "/.", " ", 
                  RowBox[{"mi", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b"}], 
                "]"}], "/", "Er"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{
               RowBox[{"-", "2"}], "\[Lambda]"}], ",", 
              RowBox[{"2", "\[Lambda]"}], ",", " ", 
              RowBox[{"\[Lambda]", "/", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"y", ",", 
              RowBox[{
               RowBox[{"-", "2"}], " ", "\[Lambda]"}], ",", 
              RowBox[{"2", "\[Lambda]"}], ",", 
              RowBox[{"\[Lambda]", "/", "10"}]}], "}"}]}], "]"}], ",", "1"}], 
         "]"}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], 
     ",", " ", 
     RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}]}], "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ho", " ", "=", " ", 
   SuperscriptBox["10", 
    RowBox[{"-", "9"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x0", "=", 
   RowBox[{"x", "/.", 
    RowBox[{"mi", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}]}], ";", " ", 
  RowBox[{"y0", "=", 
   RowBox[{"y", "/.", 
    RowBox[{"mi", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}]}], ";", " ", 
  RowBox[{"z0", "=", 
   RowBox[{"zf", "/.", 
    RowBox[{"mi", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"abola", " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"cart", " ", "=", " ", 
        RowBox[{
         RowBox[{"FromSphericalCoordinates", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], "]"}], "//", 
         "N"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"\[Phi]", ",", "\[Theta]", ",", 
         RowBox[{"(", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            FractionBox["1", "mCs"], 
            FractionBox["1", 
             SuperscriptBox["ho", "2"]], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"UDsim", "[", 
               RowBox[{
                RowBox[{"x0", "+", " ", 
                 RowBox[{"ho", " ", 
                  RowBox[{"cart", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
                RowBox[{"y0", " ", "+", 
                 RowBox[{"ho", " ", 
                  RowBox[{"cart", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
                RowBox[{"z0", " ", "+", " ", 
                 RowBox[{"ho", " ", 
                  RowBox[{"cart", "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}]}], ",", "a", ",", "b"}], 
               "]"}], "-", " ", 
              RowBox[{"2", 
               RowBox[{"UDsim", "[", 
                RowBox[{"x0", ",", "y0", " ", ",", "z0", ",", "a", ",", "b"}],
                 "]"}]}], " ", "+", " ", 
              RowBox[{"UDsim", "[", 
               RowBox[{
                RowBox[{"x0", "-", 
                 RowBox[{"ho", " ", 
                  RowBox[{"cart", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
                RowBox[{"y0", " ", "-", 
                 RowBox[{"ho", " ", 
                  RowBox[{"cart", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
                RowBox[{"z0", " ", "-", " ", 
                 RowBox[{"ho", " ", 
                  RowBox[{"cart", "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}]}], ",", "a", ",", "b"}], 
               "]"}]}], ")"}]}], "]"}], ")"}]}], "}"}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "0.0001", " ", ",", 
        RowBox[{"0.999", " ", "Pi"}], ",", " ", 
        RowBox[{"Pi", "/", "20"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Phi]", ",", 
        RowBox[{
         RowBox[{"-", "Pi"}], "*", "0.999"}], " ", ",", " ", "Pi", ",", " ", 
        RowBox[{"Pi", "/", "20"}]}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"goodfreq", " ", "=", " ", 
  RowBox[{"ListContourPlot", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"abola", ",", "1"}], "]"}], ",", " ", 
    RowBox[{"PlotLegends", "\[Rule]", "True"}], ",", " ", 
    RowBox[{"ColorFunction", "\[Rule]", " ", "\"\<Rainbow\>\""}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Phi]\>\"", ",", " ", "\"\<\[Theta]\>\""}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.765166532623825*^9, 3.765166557446825*^9}, {
   3.765166590718825*^9, 3.765166590958825*^9}, {3.765166744854825*^9, 
   3.765166745028825*^9}, {3.7651667750448246`*^9, 3.7651668044178247`*^9}, {
   3.7651688703897285`*^9, 3.765168873123275*^9}, {3.7651689564009275`*^9, 
   3.765169022067436*^9}, {3.765169054969726*^9, 3.765169056421871*^9}, {
   3.765169139486177*^9, 3.765169140253254*^9}, {3.765169178447073*^9, 
   3.7651692123864665`*^9}, {3.765169272078435*^9, 3.7651694580120263`*^9}, {
   3.7651695432315474`*^9, 3.765169543549579*^9}, {3.7651695897622004`*^9, 
   3.7651696110093246`*^9}, {3.765169645873811*^9, 3.765169718420065*^9}, {
   3.7651697897061925`*^9, 3.7651697900242243`*^9}, 3.7651698504922705`*^9, {
   3.765169923584579*^9, 3.7651699497411947`*^9}, {3.7651701473539534`*^9, 
   3.7651701683270507`*^9}, {3.7651829534381933`*^9, 3.765182953576235*^9}, {
   3.7651852425085793`*^9, 3.765185268843213*^9}, {3.765185362063534*^9, 
   3.765185375119839*^9}, 3.7651854426305895`*^9, {3.7651854756718936`*^9, 
   3.7651854782601523`*^9}, {3.765185551500476*^9, 3.7651855516874943`*^9}, {
   3.76518561515084*^9, 3.765185615504875*^9}, {3.765185737924116*^9, 
   3.7651857640647297`*^9}, {3.765185811078431*^9, 
   3.7651858141627393`*^9}},ExpressionUUID->"0c356159-5a8b-4db9-a3ed-\
102aa3c97de3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "4.2605000000000003`*^-7"}]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{"-", "4.2605000000000003`*^-7"}]}], ",", 
     RowBox[{"zf", "\[Rule]", 
      RowBox[{"-", "4.2605000000000003`*^-7"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7651665388798246`*^9, 3.765166557949825*^9}, 
   3.765166592712825*^9, 3.7651667458228245`*^9, {3.765166776545825*^9, 
   3.7651668049858246`*^9}, 3.7651688748656235`*^9, 3.7651689874241304`*^9, {
   3.765169017543984*^9, 3.7651690225014796`*^9}, 3.7651690570809374`*^9, {
   3.7651691600832367`*^9, 3.765169212901518*^9}, 3.765169285159743*^9, {
   3.765169353812608*^9, 3.7651694584320683`*^9}, 3.765169543901614*^9, {
   3.765169590319256*^9, 3.7651696115203753`*^9}, {3.765169652180441*^9, 
   3.7651697187821007`*^9}, 3.765169790307253*^9, 3.7651698508643074`*^9, {
   3.765169926205841*^9, 3.7651699500792284`*^9}, {3.765170147902008*^9, 
   3.7651701688351016`*^9}, 3.765182954243435*^9, {3.765185231151444*^9, 
   3.7651852431396427`*^9}, 3.765185375486876*^9, 3.7651854432296495`*^9, 
   3.7651854791402407`*^9, 3.765185552101536*^9, 3.7651856157589006`*^9, {
   3.7651857410064244`*^9, 3.765185764986822*^9}, 
   3.765185814609784*^9},ExpressionUUID->"85399872-7c2a-46f9-9f91-\
422754a5d8ce"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJx1nXvcXdO191PiFrcIIk31lNI2VW1RFOmZ8p46RY+3dXpBW1V1TZWKiiKi
SSN2UydV1dhuQUI8bfTRBvFIebqlqoSiWre0pUKDiLhfSgSv1zO+Y5/13Wvn
n/15fqa5xm+M+VtjzTnHmmvLQ479wuGrDRo0aPuhgwat/vbvX479/HWnnNvf
4velt/7/vw8v5O+1T/yfL0358A2tQ1bO/daX39g68X///q3PT7vhN61vnLHf
thcs3TLx756++k9+8n8XtA4S/ovpu2/bfLivNVb9/ONnp9w287hrW2/quhtf
eN0Rl60+v/Udtd/r0hdXv+Kcq1uHqf/vz/347Hkfuqp1uPAjv/nAxO8c/+vW
OPUz8Nvbel3XHeA1t3WE2g/Y39M6UP1v8o6dczr4Dtgzu4Pv3e/8zmy9pesO
9N9sHav2k9/p56cdvAbaNzr8MOsd/Hut49TPoPhnvtG+2M7ov5hv2FO+XmtP
sxxZz7es1HUnDvinOL7hz2Je4f8O/FMD8SrfVT/3DsS3vKjrjh0YD+VwtY/x
08ErxltxfIcNjM8OvjGei8dzjP/icRh66eBVBvRVjhQeeuzoJ37LqrguuuW/
//iXG89888NtnN8Zp9y9+oyzP5g4ul5w7PLfbjLyA4mj68dn3rLi8/u2cXS9
xtCXf3HmFh9KHF1vOGHOtFP/2r4uun76yyMe3uwn7fboev3P7nD+ecPb9qDr
cuIGi+7Zp42j688v/9TUYe8dJb69rZ+JL7r+mfiia/NF18vEF12/uWGVL7oe
Lr7o+knxRdcbiC+63kV80fUB4ouuzxFfdN2s5dso88UXXT9WG99mGTS0lm/Z
WHzRtfmi641q+faU0eKLrs0XXf9UfNH1dPFF19eLL7r2eEbX76ofz2Xz2vj2
FY9ndO3xjK7NF10fWDue+8t5wRd9ouupa5++5DdXtnH+vz2nr/7FN679YOL8
Hnvefcun7rF14uh6++1/PP4PK7ZKHF1fcFbzk5+++wOJo+vZd21/3747t6+L
rj9yy34HHfHRDyWOrj/3l1GvPH1D+7roestvL5n0scPaOLqedPuT/9G75wfF
t7f1Q/FF13uIL7o2X3S9g/ii6/PFF12bL7o2X3T9NfFF18PFF12fJr7ouiG+
6HrvWr6NYr7oeufa+DZLF77lYvFF1zuIL7r+Si3fnmK+6Hqi+KJrxxddO77o
eoL4outR4ouuz6sfz2VmbXz7yrbii66/Kr7oenPxRden1o7n/jIl+KJDdP3M
Vg+d+fK6bRxdr37nJ7Z5/rL3JE5/e6x5+5KNfjUkcX6/9K1frLXJ59dJHF3/
/L6vvDhx8bsTR9frv/6zPQY996HE0fXEW3/xu9Xu3yJxdL3DH6bs/d5vbJw4
ur76lecPvPjXwxJH1/PPPXGfny55n/j2tp4UX3S96o4qX3Rtvuj6U+KLri8T
X3S9qfii6x+KL7r+mPii6z7xRdfXiS+6Nl90PfjOOr6Nsq/4ous9auPbLD31
fMsQ8UXXZ4ovut6mlm9PmSe+6PqX4ouuHxVfdO34ouu9xBdd7yW+6Hp6/Xgu
Q2vj21ccX3S9m/ii617xRde/rh3P/eWp4Ive0PUZk845dPAtoxJH16PG/tvV
H5m/fuJ5P3uqf+JHv/X67uA5Xr508YtrvueNxPkdP3z6e//PxHWzH3S91lWD
Tzx9ePu66Pqtv/xtq9W23DRxdD1o0vHTH/32Tdk/ul542/c//auVf0ocXW92
xU//ut4am4hvb6shvuh6E/FF1+aLrueJL7o+WnzR9Ybii65XiC+6HnRqlS+6
Nl90vZX4outp4ouux9TybRTzRdfTauPbLIfV8y2riy+6XvOeKl90Pfn7dXx7
ivmi68Hii65/IL7oenPxRddjxBddLxBfdL1X/Xgua9fGt6+8oPiia8cXXS+8
tcoXXQ+tHc/9ZXrwRVfomnk3eM57Vn1074+csE7i6HrafY9+5EebrjUGHF0b
5/qrXq/2w+8Lui66fk7t0bX7R9fjhaProbIfXb+p66LrB3VddD1d/aPrGbX2
zG4tVT/oeqWui67Xlp3oelytPxuticLR9ebqB12bL7r2ddG1eaWua+1pFscL
Xb+o66LrHXVddG1e6NrxRdd367ro2uMKXb+k9ujavND1LOHoen79eC5v1Ma3
r1hH6Ppg9Y+uxwpPXdeO5/7Cuij6Qdenhd7B0fW2cX8Az3lb3D/B87nvlIH7
Dzi6fjTuV+DYtU7c38D5PTjuh/yNrrl/gqNr7rfg6HqLuD9X+b49vxZfdP1e
8UXX5ouux3y/yhddvyy+6Ho18UXXh4kvup4lvuh6L/FF16PEF12fLr7oesta
vo0yeVGVL7omv8j+zEfiWzYQX3Q9U3zRteOLrs0XXT93ZJUvup4uvuh6Y/HN
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
vs2yop5vGSa+6HqO+KLrWbV8e4r5outB4ouuzxFfdL2++Ga+Fl90vVDxRdd3
14/nslZtfPvKSeKLrh1fdD1CfNH1jrXj+e35dfBl3KDrpfF8Do6u++N5Hhxd
834NOLreLuYL4Oj69JhfgOf+dcxHwNE18xfwrAOK+Q54PofH/AgcXa+MeqQq
397WCvFF11eLL7o2X3S9jfii64b4ut6s2n+zNVd8+d1XfNH1XuKLrte8s8rX
73OpfXF80bX5ousdauPbLFPr+ZbNxBddXy++6HqfWr49xXyzjlTxzXwtvuj6
GvFF173im+9pii+6PqV+PJdhtfHtK1eIb9aRii+6Pkx80fWq2vHcrjdjfLje
DBxdn1ZZf2ukrkdU1usaqevqenWjo94MHF1X14cbHfVmOY5D19tX1icbqevq
emYjdb1nZf2z0WU9vJG6/oH4omvzRdf7iy+6/oj4ut6s2n+zgy9x21F809/i
63ozcHT9Q/FF11Nq+TbKu8UXXdfHt1m68C2Or+vN5M9Sz7enmC+6/rT4ut4M
HF17PKNrxxddf1F80fWo+vGc9WYa/+Ui8UXXO4tvPoeLL7o2X9ebMQ7QNfu5
OU8LXVOfA46uPxn7a+Domv04cHS9NPbvwNE19VfgrjfL8Rq65vwKcHTNfjo4
uj439iurfNv1ZlVec1tfFF90vbP4out1xBddPyG+Pi+l2n+ztZr4ousnxJd4
Xi++/J4nvq43U/tSz7dRzBddmy+67sK3bCa+6HoN8UXXj9Xy7Sm/EV90fb74
ut4MHF1/XnzRtcczuvZ4RtfL6sdzng+j8V/e2rDKF117PKPrfvFF1xfUjuf+
clHwJd7o+tWY74Oj66OjvgXc55uBo+uDhaPrb6sfdP2arouu3R5dH6L+0fU3
haNr2+91syqvuVmvVbW/p4MvujZfdG37XW9W7b/Z0R5dmy+6Nk6cj1E//DNf
dO3romvzQtf18W0W+w1dv6nromvbia7r++/pwNG144uuX9d10fURao+uHV90
bT/7fDNw15tV7e/rsDPf01T/6NrXRdfja8dze92MuKLrc6r3t4Kuf1a9PxR0
rftnQdfKLwVd635V8n2u6v2t5D5X9X5Y0LXunwVd71K93xZ0rXxU0PV54ouu
m+KLrheIL7pWfinoevVqPiroWvmroGvd/wu6Nl90bb7o+sviS/zN1+ebqf9i
vuj68dr4Nstq9XyL4+vzzeTPsnYt3x7n04Kuzdf1Znk+Y+j6bPFF13r+YbwV
j2fXm2k8l/fUxrev6HkVvfj5p6Dr3cQXXe9fO577y4xKvVkjdT2pOh9JXVfr
cxqp6+Orz/+lvt6skbrW/DF1rflmqa83a6Suv1Sd76SuNT9KXU+qzqdKl/l1
6lrz8dS15nepa/NF1+ZbX2/WSF2bb329WSN1bb719WaN1PXp4su4cHz5dXzR
dX18m+XCer7F8UXXHxdfdH1ALd8ez39T16eIL7qeJr719WY5fjyfTV1vJ77o
+oL68VwuqY2v681SL6qva6SuzRddT6wdz+16M+KErp+rrh+mrteprq+mrrU+
mbr+UnV9L3X98+p6YHG9GTi6Pq263pi61vpz6vqK6npm6npedf0zdb1MfNH1
m9X1xtS1+WZdkviia61vp66Hiy+61n5B6lrrz6lrrVenrm8QX3S9XHwzD9xZ
x7dR9hFffvetjW+zOL7oel3x9flm8mfZtpZvj9fnU9eXi6/rzcDR9VuKb+5z
iS+6HiO+6Pqc+vFcNqqNb1/R/kjqekfxdb2Z9Fiuqh3PPt+sWVxvBo6u96ju
l6WutZ+Yuj6vuh+Xuq6eb9YsrjcDz/c+qvuDqWvtF6eutf+Yut6wul9ZXG9W
5TW3tbn4omvzrT/frJm61n506nqo+KJr7XenridX94tT1+brejNwdK3969T1
LrV8G94vTl3Xx7ddbya+WW8Gjq6H3FPli67HfL+Ob4/3l0v9+WbN4nqztC90
PVR80fV24ouuF4kvut6xfjxnvZnGf3lZ8a0/36yZuua8GumxvLd2PHfUm6Wu
V1brZFLXql9KXasOJ3Wtup3UteqRitfN8rzp0LXq01LXqkdKXfu66Fr1OaVL
vVnqeqnao2tf1+ebVe2Z3cEXXZsvujZfdD2+1p8N16GlrlU/lro2X59vpv5d
95W6ro9vsyyr51te0nV9vpn82aX/Hte5FZ9vBo6un9V10bXtRNfm6/PNss4m
dD2/fjzn+pXGfxksvuh6rPrPcxWE5/517Xjuz/VJ/Iuup4Tes343dE09Knie
J337wP0EHF2PiXwKjq4fi/sVeJ4DF/c3cHR9YNwPwdH1krh/gqPrg+N+C+56
syrf3tb/iC+6Xkt8M1//sco334eYXOWLrs0XXQ8WX3R9sPii6wXii64PEF90
va34ousfiS+63qyW79vzcvFF1/XxbZaH6/mWTcSX3xnii64X1fLtKY4vun71
yCpfdD1DfNH1EPFF1+ab55spvuj6D/XjOc8j1fgv48QXXc8SX3S9l/ii6y1q
x3N/Ib740eeb5bpk6PqG6vsjqeubqu+bpK71Pk7qWu8rtdfDq++/pK6vq74v
k7rW+1Op64nV93Haz+HV93dS10+JL7qeL77oWu9Ppa71flnqepr4omu9v5a6
vlZ80fVJ4ouu9b5V6noT8UXX5ouub6rl2/D7RKnr+vi2zzcT3zzfLM8bjfF4
i/jyO76Wb4/ft0pdU38FnueRii+69nhG1x7PPt8M3OebaTzn+WYa/+W34ouu
J4ovunZ80fW7asez6816Sn29WU/qulqP1JO61vuwpb7erCd1rfeLU9eXVt9X
TV3rfd7Utd7vTl3rfeHU9X9V37ftsh7ek7qeJL7o2nzRtfnW15v1pK4vEV90
faH4+nyzavtGB190vaf4omvz9flm6t/vO6eu96+Nb7NsU89X9Vc9qeuLxJdx
unMtX9eb9ZT6erOeUl9v1pO61vv4pb7eLMdb2U980fWH6sdzB1907fii60+K
L7r+jvjW15ulfnP9H7+g61mx/wWOrtn/BUfXu8b+Wn7/LHS9buzHgaNr9mfB
fV4KeJ6rGvuD4Oj6mdhPBEfXC2P/ERxdU59T5dvbOl98fb5Z1f6e1m7ii643
EF+fb5bzQO1fV/tvn28Gjq7NF13fJL7o+iLxRdcXii+63q+WbyO/DyV7ynq1
8W3meSDiW0aKbz5Xii+6rufbUxxffi8WX3R9sfii6y+IL7reRXzR9Ybi63oz
jec830zjP8+TkV7KcvFF178XX3R9Se147i/Ui8Lf3wUAR9fUEYGja+pkwNH1
IcLR9XfUj883A8/3udTe9Wbg6Nq4682qfNvnm1V5ze3gi66/of5db1a1p11v
Bo6uzRdduz26/matPxsdfNG1/Yyuzdf1Zuq/mJfrzWR/sd/Qtfn6e5ryZ5f+
ezpwxvWx6sf1Zvzt8800fjr6d70ZOLp2P+i6Pr59HXaia8fX9WbSY34/VPrN
75bCE12fGXoHR9fkO3B0TX0OuM83A0fX3K/Ana/z3PbQ9TNxPwRH19w/wfN8
1rjfgqNr6nOqfNv1ZlVec1vniC+6bokvun5SfNH1YPH1eaTV/psdfNH1UPFF
1/8uvuj6K+KLrpvii67Pq+XbKDeIL7o239yHqeeb55uB+3wz+bM4vuh6d/FF
1+bLeD9XfPl1fNH1b8UXXXs8o+s16sdz5muN/7JCfNH1BuKLrseIL7r+Zu14
bp9vBh+fbwaOrj9XPa84dX1U9Xzj1LXOf+6oNwN3vRk4utZ51Klrndedun53
9fznjnqzKt+O88NT1zqfOXWt86tT1+aLrnUeeEe9WbX/ZgdfdG2+6Np8XW+W
67yqN1P7rL9S/+UE8fX5ZrK/OL7o+hLxdb2Z/Fnq+fb4fO/U9QTxdb0ZODrY
W3z5/Z745rqZ+KLrZv14Lh7P6Pqj4pvvaYqvzzeTHovj63oz7Pb5ZuDoWt+P
SF3rewSpa32PI3Wt73ekrvX9i9S1vg+Sutb3RFLXN1W/15C61vcdOurNqrzm
+vsgqeux4ouujxZfdH21+KLrTcUXXf+P+KLrz4gvul4ovuha32fpqDdT+7Jp
Ld9GMV90fVJtfJtlXj3f/J4mOLo+W3yzLqWW79vza/FF11eJL7p+RHzRteOb
uhdffg8QX3TdUz+e83wzjf8yXXzRtfmi6zvEF13fWDue+wvnCWBfPofH/he4
683A0TXnk4Cj631jPw4cXVN/Be56M3B0/XzsD+b3C0PXCycO7CeCZ11K1Ofk
+zaha/bfq3x7W9PEF11vLb7o2nzR9TTxRdcniW/uc4kvun5NfNH1wlOqfFPX
t1b5ousPiS+6/qH4omvHN/evxTfPLayNb7OMr+dbHN/cr76nyjf3006t49uT
388CR9fri2/O48UXXW8hvuja8UU3ji+/e9SP5zKkNr7tejPppQyaUOWLrgcp
vq43k37LD6vf00xd63uLqWt9B7Cdr6vf++uoNwNH14PVD7p+SddF18uq3yvs
qDcDz/1r4fmdBF3X9WZVXnNbS3Rd15uBu96sas/sDvvR9au6Lrq2f1xvVm3f
6LAn96/Vj+vN1L6st6qOb6Po+6Ed9Way39+pTF2/rOv6fDP5s0v/Pf7OZke9
GXh+n0vX7fI9zY56M403f08zdb3g9drxXFbWxrfP38HsqDcDd72Z9NjRj9fN
uF79+WZ9HfVm4Fkffnvl+7zterPq94tT19X65772c3j1e8Gp6+nV7wunrvW9
6XZ9ePX7xalrfb87da3vfaeuNxRfdG2+9eeb9aWu9T3r1PUa4ouux4pv1oeL
L7o2X3St71l3qQ/P9mWrWr6NYr6p61Pr4tssT9bzLRuJb9a7iW/9+WZ97Xwt
vlkfLr7o+ifim/Xh4ouu9X3t9nsfii+6/mv9eFZ9eI5/nW+WevH3xFPXQ8UX
XW9SO57b55vRL7p+PJ7PwdH1dfE8D46uOQ8KHF1TnwOOrjn/Ctz1ZuDo+vyY
v4DndwFivgOOrnn/CBxdrx7zqSrfdr1ZldfcfP+ran9PB190/X7xRddTxNf1
ZtX+m60rxdfnm1XbN1oHiC+6Xkt8XW+m9mV+Ld9GuVp80fU2tfFtn28mvllv
lvVVoevrxTfrvGr59pR9xRddv3ZHla/rzTIvhq4dX59vpvHWwRddn1A/nrPe
TOO/OL5pl/hmHan4+nwz6bdwfh3/f77PFetp4Oh6Wqy/5fdFQtfvj/U6cHTN
9wvA0fUnYj0Q3OebgaNrvj+YPFk3i/VJ8Jxfx3omOLreN9Y/q3x7W1PFF12f
Jr7oeqT4omvzdb0ZuM83q/bfbM0W3zyfT3zR9QTxRdefE1/Xm6l9+WEt30Z5
n/ii62/UxreZ3+8Q33K5+OZ5pOKLrner5duT69Xg6Poz4ouuTxNfdO3xjK63
Ft9cNxNfdO34omvzRdc94osudxVffk8RX3T92drx3J/fN6Edur489r/A0TXn
QYGj651ify33y0PXnP8A7nozcHT9vtjvA0fX68T+YH4fVN/TBHe9GTi6nhH7
lVW+va1LxBddmy+6Nl90vZ74outHxdf719X+m601xBddmy+6vl580fVM8UXX
M8UXXf93Ld9G2V588z3g2vg28zwQ8c3zQ/JcgND1muLrejP5P7+nCY6uLxJf
dD1bfHNfWnxdb6bxVjye0fVj9eO5DKuNb18ZIr6uNwP3+WbSY5lVO577ywWV
72n2p65Z3wBH14dWvt/X31FvBo6uDxKOrr+lftD1m7ouuj5G7dH1YeofXRtH
18eqH3S9UtfN77OpPbo+UP2ja/NF1+ZbPad/G/Xf1Pc3+1PX5oWujaPrceoH
Xa8SX3RtO9H119U/uq6Pb7PYb+j6dV3X55vJn6Web08Hjq6PUz9eNwP3+WYa
Px180bX5ut5M41nf8czxXxxfdH2o+kfXRwhHx/XjuT+/W7r4B4ePmT74N62j
j396jUlLbmiNPOC5ca8t+VDi6PrI32zw0spPvz/xSyd8+LLTv3t9a8KN/7qx
rLtl4uh9yMi1D13nuZGJPxC/f7z6xhV7n9fGuQ+c9V8nfu+MMW18vR/Nfujs
5nWtlVdM3nXtrTdPnPvD9b+dvXjMQe3r/sdZD004f1Rfq3XgsT/fc6OtEue+
8cDSR6eP+tmoxE86990jZl0/vzXz4BP++5oz23y5n9x/y1s/mf+urRO/8uIv
X9uzzzWtx+9Y9rVXF7X9kPXqOy6/YOK3/y3xRy//6Reu/MdVrZvunL31bzdu
49x/phzxlV+9ccN7Ex9x5Z3PXjNuXuuRPxxy3CmXvC9x7ksf/+PZ41e+p81r
5tiNR56wxq9aOx518Kff9ae2ndyvdhl+1XUPHNiO75rvxPGXreGKL/exwxTf
gbj8onWy4sv9zfF96B0/X966Q/HlvneG4jvgt0tbLyi+3A8XKL6HveOHSzri
y33y74rvbu/wOr81S/Hl/vl3xXdApzNaLyi+3FdXKr4D153emq/4cr89SfE9
6Z1+ftB6QvHlPry94nvWO/gRHfHl/uz4kpd3FT5voJ8yQnHP894U9wG+Pyin
1Ma9UdZT3BcP+KHco7hz/7euhw/4ubxUq+tm+Y3iPnB/O7/8tj7u5V7F/YiB
cVIuVtzJI48q7nsPjMPysuJOfnlFcX94YJyXq2vj/vY8UXE/fkBH5SHFnXz0
EcV9nQGdlh0Ud/LUTorvJQP3gTJM8SV/WdcjB+4z5fuKL3ltuOK7dOA+Vn6v
+JLvpiq+vxq4T3bElzx4teIb9+Fybf19u9yv+O4xcJ/viC9580HFd4OBPFKs
a/Lpm4pv/JaFii95doLiO2cgD5YHFV/y77aK73cG8mzZrva+3V8+GfENv2de
3j7ag5OXt4v+wcnL2ANOXh4b9oPfTz4JvuDk5UfDP+Dk5afDn+DkZfImOHn5
0ogXOHn5wYgvOHm5L8YDOHn52hg/4L2Rlx+O8QZOXp4Q4xOcvNyK8QxOXn7j
3QPjH5y8fFLoBZy8fHDoC/yCyMvvCT2Ck5d3VXzJy9sqvuTljyi+4yIv36n4
kpePUnwfjLw8V/ElLy9VfPeMvLxC8SUvO76HRF6+SPElL9+v+O4SeXm+4kte
7lN8h0ZeflzxJS9PUnzviLzcr/iSlx3f8ZGXT1F8ycuHKr6TIy87vs7L1bj3
d8R9YeTljynu5OWPKu5TIy/fVRv3RumIe+TlKxV38vJyxX1E5OV6XTeL4z4m
8vJl9XEvDynuYyMvX6+45z6L4v7ZyMtPKO75/r3iviTysnVNXn7TcY+8fILi
Tl7+quI+JPLy5oo7eXm04jsr8vJHFF/y8raKL3n5T4ovednxJS/PUXyzjlLx
JS8vU3zJy39SfE+OvGxdk5f/rviSl6+r1XVfsa7Jy0sV39zvUnz/Gnn5ZsWX
vPyW4ktePlHxzfc1FF/y8sja+3Y7L0e8W38OXbMuBE5e1nt5rbXq38fMvHx4
9X2xGIedOHn5SOHHBT5WOHn5OF3354HrfbTMy3oPLuZ31+Z5++Bd3vdkXLWO
FE5ePkh27tkFz/OXhJ8auN6/y7xsPx9e/z5p5mXzursLTl4+Xv2MDtz+JC87
jj1dcPKy8WGBH1Hrn9m5jgce99WOuPu7CeB3BK73LjMv259zqPMRTl52vCZ2
wcnLxmcF7viSl62vswI/Rjh52Xx93mC1/bjRbk9etj/nBW7/k5cdx3ldcPKy
4zs1cOudvOzr9gbeJe7FvO7VuqvGT7FeYrz5vePMy1+XncO74ORlvZfduiJw
jwd/nwK8BK73kTMv673p1v1dcPKyx/lRgX+r1g9XdcRlUhc836cRvjfvVdTq
fX5HHDemPrr+vp3fywB/OPCXanXd18F3buDmS152vI7vgnd5D7q1e+CHCicv
e1ytE7h1TV6mrjie/zrWscHJy9+JvA/OfHlyPCeAZ51JrIeAM19eGs8h4OTl
y+K5BZz58nq/HHjOAScv/y6ei8CZL98az1Hg5OXF8dwF7nVscPLykniuA2e+
zHoXOHl58E4Dz43gXscGJy9Pi+dScObLr8ZzLDh5eed47gVnvrxbPCeDex0b
3OvY1XjNbR2l+DJfnqT4kpcdX+bLji95+VLFl/nyEMWXvHyj4st8+RbFl7z8
kOK7i9axq/Y3Ww8rvsyXX1R8yctrKr7Ml29RfMnLDcWX+fILii952fFlvuz4
er5cjXt/65PCmS9vpriTl49V3JkvT6mNe6O8z3GP+fISxZ287LgzX67XdbMs
VNyZL99cH/dc5wRnvmxdk5cfU9yZL7+muOc5cIo78+U/1Ma9p1jXzJefU9zJ
yx9T3Jkv76y4k5d3VnyZL2+q+JKXfd9mvuz7NnnZuma+/KjiS16+SPFlvjxY
8SUv36D4Ml/+Xf19u/i+zXz5olpd95VHFF/my68ovuTl9RRf5svWNXl5iuLL
fPkZxZe8vJ3iy3zZ8SUvs971QNzX7g5dPxr5Gpy8vGm83wG+ZuC8lwSe5wPH
eyLgowOfIpy8/F3h4zh3VDh5eaWu2xP4vrLT54eDPxj4MuH5nU31s1Hgd+u6
5OWTZednWN8WTl7+jvCJgX9KOHl5NdlzWOB7Cff5S+B3BW6+5OWnxWu3wBcI
Jy+Pl51zAv+ecPKy4z408M/V+md2601dd0LgXxJf8vLL4nVb/C4V7vfawGcH
7vjmOVGy8+TAD6kdn43WEcIvCHxH4eTlkbJnauAHC/d5U9W4t79rWW0/cfST
wvO9ePXfH7h1TV4eJ/v7Ard+83sjwn8YeL2um+UFXffXgXuc+9x48Pgt/xRO
Xh6zqi6+s/N9Q43bcozsHBG49Utedtx7A3fcyct/E98xgW8he8jLz4nX4sD/
Jpy8/Lz6PzrwfuH5nanaOF5VrGvy8hnCP8s5nMLJyze9Xufn+WVE/X27rBKv
JYE/VavrvvxOAfgVvKel65KXvyw7xwdu+8nLXxU+JvBRwsnLa8qeIYHvU3vf
bp/PH8+7OV9mHwqcvMw+BTjz5dviOQE86zzjuQKc+fLseA4BJy8viX0KcObL
7D+Ck5fvjecicObLs+M5Cpy8zD4FOPPlq+M5DZy8fFU814EzX14c+xTg5OVx
8dwIznz5V/GcCU5efjb2KcCZLx8fz7Hg5OUD47kX3PvL4N5fBme+/GHFl7w8
SvFlvnyr4ktednyZL1+s+JKXH1R8vb9c9c/sjvh6fxnc+8vgzJcdX/Ly1Yov
8+W/Kb7k5RMUX+bL8xVf8vLzii/z5e8pvuTlbyi+zJdHKr6eL1fj3t8yznx5
W8WdvGxdM19eVBv3RjnEcR/4LZcp7uTlRxV35stP1eq6We5R3JkvX1of9/Kg
4s58+TrFnby8QHFnvvyg4p7nySvuzJfr495TOuIe8+Vxijt5eX/F3fvL4OTl
3RRf5sujFF/y8jaKL/Nl65q8fJDiy3z5IsWXvLxY8WW+vFTxJS/fqfgyX764
/r5d/qb4Ml+eX6vrvnKN4st8+SHFl7x8suLLfLlf8SUvr1R8mS+PV3zJy19V
fJkvb1Z7327vLw+ofPwN7C9Xv389/gbyMnXd4OwvHyOcvMx6O/inuuB5/phw
9pcPF05e9nXZX7ad9d+pH38D+8vm6/c7wNlf/rZw8rLt3LML7vdBwNlfdnvy
su1hvjxOuOfL4N5frsZrbkf/zJfNl7zsOPZ0wcnL5jtM+85V/8zusIf9ZcfX
+8vgfwx8pXDysvu/LHDzJS/bzlO64ORl4xczjxbuc5jBpwd+nPBB8c/xJS//
S3j8jrZ/yMu+7vzAj66Ne6M4jld3wcnLxk8PvN5vzY7rXhm47SQv2w/3Bb5K
OHnZ44f9ZY8H8rLH8/AuOHnZOPvL9gN52ddlf9m6Ji97PLO/7PvbWO0jg7O/
fGStH67qsH9SF5y87PG8t/adwcnLtof9ZevO+8vg3l+u+r+vY5ywv+xx5feb
wI/vgpOXPW7ZX7YfyMsn6LrsL59Ue9/uz/ezFsXzLjjP2+DMo5mXgZOvx8Xz
APjsmEezPwXufWdw5tHsX4CTr3vieQacefSw2L8A974zOPNo9iXBve8MfqL2
ncHJ1/+I5z1w5tHPxfMheH4nN/YvwJlH3xzPn+Dk66nxvAq+Wcyjn43nW3Dy
9Q7xPAzOPHrXeH6uxre97ww+OObRmyq+5OujFV/vO1f939PaQvH9O/vtiq/3
ncE/E/PoDRRf8vVNiu/BMY9epPiSr/+h+O6sfeeq/e19Z/AN9P4UOPl6LcU3
fluLFF/y9Q8V33Exj35R8SVf76T4jot59KcU30Hxz/H1PDr9o/endN1iXU/T
vrN4Fet6Sfz+U3EnX89R3EfGPHpora7b+86p65hHW9fk6wcU96O07wzufWfw
/4p59L8Ud/L1Gor7IzGPtq7J1477CTGPfkZxJ19/VHFfN+bRuyju3nfO+3DM
ozdRfL3vnP7XvrPuS8W6Zh79oOJLvp6p+DKPHqL4kq/7Fd8JMY++qf6+Xf6q
+Pr9KeWFssS6jnn0S4ov+XqI4vu3mEdb1+TrMxVf5tGvKL7k6+0VX+bRxPfO
GMd+rxmcefRzwsnLQ2KdHJx5NOclgpOXfxLr8ODMo88STl6eKJx59BHCycvP
67rMozeRneTlV8WLefTzwsnL71I/zKOX67rkZdvPPPpU4eTlE4Qzjz5IOHl5
la57ROCby07Po8GZR78snLz8uPqP+0buw1b939M6TXYyj54qnLzsuDOPnlDr
n9kd8WUe7fj63FTw+O2IL3nZ8b08cMeXvDy2Nl4/bX2rdnw2WscJvzTwrwon
L4+QPTMC30U4ednxJS+/Jnyg9djRjjt52bruDdy6Ji877r8K3HEnL1sXp1G/
Xeu3ZnlS1/1l4OvVxz3PowC/J35XCM/vS6sf5tEfFJ7r27KTebT1S1523JlH
O+7k5cXiyzz6VeHk5WfEi3n0Y8LJyx7PzKPvfb3OD1d1xJd5tOObeVk48+hG
rd7nl2t1XebR9oPP/QBnHm29k5fXVxyZR7+i/snLB8pO5tFfF57zaOHMoz8n
nLw8WPYwj9468JjPFK9vgzNf3ibyODh5+cOR98GZL7M/BU5e/mY8V4AzX54V
zyHg3ncG93vN4N53Bve+M7j3ncFP1L4zOHmZfUlw5sv3xv4FOHn5u/HcCM58
+bp4zgQnL78U+xfgzJfZlwT3e83gzJffG8/J1fi258vgzJc/qPiSlz+o+DJf
vlnx9b4zOPPlmYovefkhxfcz2neu+md26x7F92DtO4OTl+9TfJkvz1N8ve8M
znx5seKb558rvsyXr1Z8ycvPKb7Ml09UfL3vnO2nV99rBvd8WbrOeoP0T8yX
P6y4k5e3UdyZL/+hNu6N8g3FnfmydU1eflhxH6l9Z8Wl/MW61r6z4p7vNYMf
pX1ncPLydYo78+W/Ke7k5e8p7syXrWvy8guKO/Pl4xR37zuDM1+2rr3vnPfh
mC9b1953Tv/HfPl2xZe8fIjiy3z5AsXX+87gfq8ZnLx8l+I7QfvOum/nvjO4
952VF8p86zrmy44veXmC4st8uU/xJS+vUHyZL49TfMnLByi+zJdZv4r5UuZl
nqvBqdM2nu9PxTo5OHXaRwsnL7MODz66C/5dvb8MTp32UcLJy9/VdanTPkG4
32sGp077deEba38ZnDrtscLJy0fKTuq0zZe8bJw6bfuBvGz/Hxq4/eD3msGp
0zZf8rL735X1beF+rxl8ThecvGy+1GmbL3n5WF2XOm3z9fd5wRcFbr4+RxF8
lvadwcnLtv+kLnjWaQs/L3Dz9XmMed3AxwsnLzu+5GXzHWg9ebTxfH9K/S8M
/JjauDeKeS3ogvu9ZvBpgdsP5GXHZd706nvNintx3BcHbr7kZfdDnbavS172
eKZO+7Ba+3s6cOq07QefSwlOnbbvY953rvLtzfkjOHnZ+qVO+yjh5OX6OHbi
e+n9ZXDqtH3fJi/bHuq0PQ49XwanTrte133F9wfqtN0/edm8xnfBfd5mNV6/
6fADedn6HaJ955i/dewvgzNfpj4QnLx8fOR9cOq02X8EJy/z/iM48+Vl8RwC
Tl6+JJ5bwJkvrxv7FODeXwb3/jK4z+cE93vN4H6vGZz5Mu+9gpOXV4t9CnDv
L4OTl8+I51Jw6rR57xWcvLxjPPeCe3+5Gt/efL8V3O81V+M1t3WM4st8eYri
S17eUvGlTnuJ4ktenq347qn95ap/ZnfElzrtWxVfv9cM7veaq/Y3O+Lr95rB
yctrK77Uaf9R8SUvT1N8/V4zuN9rzuvGfHm04uv5snTdEXfqtEco7t5fBqdO
e2pt3Nv7yxn3mC877t5fznGu/WXFJfeXwf1es+Je7lPc/V4zuPeXwT+r/WWN
27Km4k6d9m21ce8p1jV12isUd7/XDE6d9icVd5/PmXGM+fLGiq/3l8GZL1vX
5OWtFF/my/9QfMnLFyq+zJdXU3z9XjP4ydpf1n0795fBvb+svJDvNYMzX35Z
8c3vySi+1Gn/XvElLzu+zJdfVXzJy75ve3855ofF542AM19eKjy/Nxfr4eDM
lx98vYqTl0+J9XZw5ssThZOXxwtnvryLcPLyWrKH+fJY4eTl58WL+fI/hJOX
B6kf5su/F1/y8rdkJ/Plo4STlw8Sznx5a+FHah8ZnPnyOOGeL4MzX35MuPeX
wZkv/0I4ednxZb7s+Ob3c4UzX96n1j+zW0/pusyX9xFfv9cMznz5UeHkZfuT
+fLDui55+cuyk/nyfrXjs9ERd+bL2wknL4+SPcyXJwr3fFm6bq0SznzZcScv
D1P/zJfvrY17o0yS/cyXJwsnL1vXzJfrdd0s/9J1mS8fUB/38oJ4MV9eIpy8
vIf9HLjvJ+Tlb8pO5suH1NrfU6xr5svWNXl5qfgyX95F9pCXfR9jvvxX4eTl
lerf7zXrvlSsa+bL1jV5eYZw5ssHCM+8/Hqdn+cX65G8/C/xYr7sPEVeto6Y
L/t+Ql7eW3YyX/6scPLyF4QzXx4hfG3tI4PnfDnwmK92zJfBvx3z5Q9EHgf3
/jL4rJgvXx/PCeDk5a/EcwU482XejwMnL98b+xTg68Z8eXk854CTl9l/BP8/
MV/uiecocO8vg38v5ss98ZwGTl6eG8914MyXF8U+BTh5eWw8N4I/EvPlnnjO
BCcvPx37FOCb6dxscL/XDH5ezJe3jOfkanzb82Vw9pe3UHzJyx9QfL8T8+X5
ii95+b8V37/FfPnHii95+Q7F9z9jvrxM8SUv36X4HhTz5YsVX+8vg+8Y8+Ur
FF/y8q8V3/Vivny74ktePkrxvTnmy72KL3l5ueJ7tN5rTh1F/nV8D4758haK
r+fL0nVH3JfEfPn9ijt5eZTiPj3my/21cW8U63ppzJebijt5+T7FffOYL6+o
1XWz3K247xHz5Tn1cc/95fRzzJfnKe7k5fmK+z4xX3bcyctHKO6Psp9ZG/ee
slRx/57eawYnL39ZcV8v5svvU9y9vwx+acyXrWvy8ocU3/fEfNn3bfLy1xTf
x2Ked6HiS16+S/H9dcyXH1F8ycu3Kr7sL8+qv2/n/nLeN2K+3Fur6778Xgb4
hjFfvlfxJS8fo/iyv+z7Nnn5CcX38pgvH6/4en8Z/NiYL1M/wDp1fsfp1C1O
2H/SVnx/KnHOCwXnvG19t4v337MOlv7zvPajbj7k/Dfa/XMOmb7Pxbk9ua/9
Z/Wv77txvkHuY4Lzftgrsofrri++1K3re3At6uZ4Trtbdur7ay328+0f9hNW
yJ48b0D+YZ3D/nlQz41/Ft/XZA/xxz88VxHfzzcO+PIOO31gIfsQ4FeMvOvb
R92+ddqZ76uF3+iH+F5+8Kzt+rb/YNqD3xgPtCeOZ1e/z5hx2Vf20P8f5rzn
4YOn5vcQ0/8bx/cWsRP/7x7+pD1+vizsXEv2/DTsuVvxek724+cZsh//7CP7
4fXL8Cftsy5V9ud6m/wMr56wf035YaPo526Nk5WyH15nyX6ua//jt0Xyf84X
47o8xzPexsj/4HPkf/zJeOA5Pr8fddhVH798xNYL+S4d+IK4T2a9afh/bviZ
fhg/Cy4ePHqDs7bO6+J//EZ7xsPp8Z1ccOL457AnzxfmOwaRp2hPXC6K7/xi
Z9YJhj9pj59/E3auqXj9WP7Bb6fJTvxwj+zE/nnhN9rjh5lhJ3FnPPxa/sT+
BbKT8TBc/sT+KbKT/u1P/HCx/En/54adzAMZV/Yn+A1hJ/M9xs8dn9z1pbPf
XGch+6Pg2z7xs7NX7vjEjbQnvi98fbd7vr7Wxgs/Jb+dF/bkfDLGz6PV78Wn
/3+n69L/JV89c6/dN18t2+f5YdXvv6d/sOc4Xfcfcd3R8v/J4X/6Yfw8IjsZ
P3+Undh/8+NV/+CHwbKTcfJM2DlOvAZF+9GK7//In9h/n+xk/NwmO/HPNfJn
rhfKTsbJS/In/nkwrsv8n3Hy4iUf3WXkf6zanf1y8GffWvyFxp9XG4M9+HNm
+I1+iPt+W7925F6fuG334+TPd4WdWdce8Z046ZxDB98yKnHi8rrsye963TRy
6I6bvrY77fH/ynmDTzx9+Kj0G/GaEX6jPf7cb6sBO38ue04Oe8YpXnfKb/jz
FNmPfx6X/fB6NfxJe/xj+3OfTX7OOtPwc4/88Fr0M07j5NWVVf9nPY7s57r2
P37bRv6n/+fiuqw3MQ7PlP/B/+/7q/7HnyeFPfn+f4xD9iOozwAfEvZgJ/5/
OfxMP/ldo+jn5138T3vGA+u34MTxLNmT33nTdYkL+xrYmXW+YX9+ly78zLmU
D3Wxp0dxPFJ+w59Py378c6bsz3PuZQ/+eVL2M05eFV94nVRdX00/PCH7GT/P
yv/wul/2c90Zsj/PS5M99P9I9MP6Zq4Xii/4YfI//uR9MdY3GYdrxHjme72J
f21g/PMeTr6f/buB69IP4+eN0N1D8v9Tui7jgftP1idFHK+I+xvrrfT/UjwP
0J64vBD+x07i+HD4k/b4+eWwc5jsmRz2PKg4Lpb9+PN7sh//3PX+qv3weiLu
J7TP96evGrCf8ZD1TTdV/Qyv1WYN2L+R/MD980GNn2WyP+v1ZD/XPUr+x2+b
L6v6n/5fieuyns44bMn/4DfJ//iTfMp6OuNw8EEDzwPUn4FfH8+luS4f/n8z
/Ew/jJ8n4/lkmPw/JPxPe8bD45E3wYnjG1+v2pPfl4vnedoTF57HsJM47hP+
pH2Oz7BzI8XL/vFzI3ie2yG/Yf+t4Tfa53uuspPx8Jj8if22k/Hw1ryqP7H/
n7Iz78PyZ54LK3/S/zqyk3E1Q/4EXxl2su/C+Lk65iPUKYIzf6F9frcw5kd7
ym8jwh7a53eo4jkfHP8v0HXpf17M72jP+Lk4nsPB8Q/zylO7XPcz8v9z4X/6
8bwVnPFjO7H/dvkHP1wmOxkn2DmxC6/PKL7D5M+sp5adjJ/rZCf+sT/pf7bs
zP0T+dP+YR+OccL6Fft2+O228A/tie+XYj3n1C5+oz1xPC/WGcDzuxNxXXD8
uWnM97EH/7NuQHv888WwZ2IXP9MeP9ge+F4me+CFPcSFeC2Sf7DT9hCvS+Uf
7DxX9mT9muzJcSX/EPdfyT/gxIv9VOLOuWrUH4NvFOuE1DHjn09U1pN7czyw
nnyE/LZJ2En7+vX23hwPh8ie/G6wrss4Yb0aO/H/OpV1+N4cJwdV6/PTHuqC
DlVczom40A/jx/bjH9sPr41kT853ZD9x31l84cU+wl3yw0rZzzjZQP6H16uy
n+seJvvx266yJ+cL0Q/794w3+z/3veV//Ml+B/v3jMMvxLj9buzf53fmY5xT
B5Dnz8V16SfXUUNHd8v/vi7j4cLKuujcjCO6pv6e/qvrhHMzLqxjYydx3C38
Sfs8VzjsHC17Lgh77lIcbT/+PFf24x/bn987qqzHzu3YR2A8ZL2w/Jzvp4b9
u8kPrN/epfHzguyH1wzZz3Vtv/cR0p/R/6byP+NwtPwPfpnsx5/NsId6EcYh
zwO8XwHOd6ixE/9fGX6mH+8jfKqL/2nv5yLw/L6W7PE+Au2JyyWRj7DT+wi0
x888n+yqeJ0t/+C3KbIzz9uTndiP32jvfQTszHp2+dP7CLtqPGwsf2K//Un/
jm+eOy5/0v/5YSf1Royr2+RPcPxJXRHj54V4zt8r6orAD4t1A9oT3zdj3tEj
v7GPQHvGz9J4fgbH/8/GdXn/h/6vi3kT7b2PkN97CP8wXxum6y6J686R/08J
/9MP4+dR2cn4sZ3Yv7X8gx/WlJ25/hB2DhUv1snnKL4/lj9zfUx2Mn6elJ25
Hyd/eh8BnHGyuvyJfx6qzINmd+wjcO4JflsV69i0J759sU4yTH5bvTJ/md2x
XwDu/QJw/Pl6zKOxJ89RCD/Q3vsCQ+Xnu8TX6//g8H1G9mT9QNhDXPK9xieq
/snzTmSP1/Npj51HyB6v5yff6OelsIc6QuI+U/4B/3HYQ70gcec8q92iXtDr
83kOLDqKdS36YTywLj2xi99oz3ggj4MzHjgvi/f96H+Frss4eTj6wc5cXwr7
aZ/fr4j+7+hizwTF5ZsRF/ph/Dwr+/PcU9mf37eUPfiHOhzehyTuL4svvIjX
bfLDUtnPOHlR/s99TNnPdc+Q/fn9FtlD/+yPUJ/KePus+GbdWfT/R/mT+hbq
UxmHf6jcZ2Yk/qcY55yj5PV5+mH8PB86ulP+f0bXZTycWtlfa2Ycj9r6f+t6
Rnt97In/vd/X7Fifx06vz9MePz8Wds6RPVPCnkWK4wOyH3+eLPtz/2irqv3w
uqey39dM/6wb68OMh3yv8aaqn+H1Qtg/W35gn26Rxs8y2Q8v+z/Hp/yf31mS
/32fpB4662fl/1wHC/svkz+/H/ZQD804fC6eo3h/GPzGeN7j3C78vzz8TD+M
n99H3r9c/t8g/E97P4+BE8enZU+Oz3hOpr3X57GTOK4Kf9IeP1OPMUvxasg/
+O1h2Ykf7Dfs7w+/0T7PRww7iXvWXcif2H+b7GQ8vDGv6k/sf0R20v9y2Ykf
/iZ/5vsoYSf19Iyr8cuq/gR/MOykbj7ryuI5/6Som/f6PO2J758r67dtv21W
qd9odJkPNtL/zC94v53+q/PQRsc6NrjX52d1ue5J8v8zlTqNRo4f2+n1eezE
fvsnz52VnV6fv6ALr5MU343kT68bgzN+rpWd+Mf+9Po8OOPkvrDz4i7+4T0K
xsnsWJfgXD+vz9Oe+P439ZZd/EZ7r8+D53e547rgro/FHvyPH2iPf7DnvC5+
pr3X58Hz3H3Zk+fXhj3EhXjdIv9g5+dlj9fnae/1eXD6ny178j1d6m/DHq/P
0x4c/wyKf66TnxfvvYBTx8u5jfhnu1jXoh/GA+vSM+Q31udpz3iofq9n0CDG
A/ZwboXX52nv9fnxYSf+HxL20z6/91j5bsu40djDudCTFRfW5wdV/rXX50Hy
OxiyP7+vLnvwD+cLTQ37ifsO4pvnhlbsnzja6/OTNU7Wk//h9ZLs57q23+vz
6U+tzx8W9jPe7H/wb1a/mzMaf7I/wntWjEPquifHe1bg3Ac4DxT/bxjXpR/G
DzoauN7Y0V6fpz3jQXrMOH4u7OGcFNf50z6/D0x9e9hJHBnPtMfP2DlP9jQr
43DyaO+z0A/+tP345/Oy33X+tLd+GQ95Xo78DK9Lwv5++WFYZRxOHu31efrx
+jy46/yxH7/pPsw5EmWzuC7v9Xl9nvbg+H++/Fldn2/kOGQ9fHH4F5zvPHL+
LP7/ZTWP5/jpi7zf28X/tO/yPJZxvEf20H9PZT25Ubw+j53E8Zbqc1H6meeo
hYrX2fIPfpsiO/N7Kax7x9/YP7+yPt9IP/B8RdwZD3ouKl6fX6jxsKn8if2n
yc48V0l25neq5U/6vyDs5L1QxtWt8ic4703w/ifj5654zh8e73+C71idZ2V8
mXf8Sn7DHtq7zh8c/zMP4pwm+j+3Om8qXp8Hxz/Phz1TdV3q/BfI/xPC//TD
+LGdjJ8/yU7sp46a9vhhDdnJOHk27PyheLE+v0DxPVP+9Pp8fp84xs/vZCf+
mSt/0v9qsjPrssLO0+WfhyrzoGaOk6diXYLzqfFbf6XOvJnxHR7rJKfJb6tV
5i/N4vV5cPz/r7guuNfnsQf/N6vrSMXr89Pk57vEFz+cInty/UT2eJ2ZuNTX
4TfTzqtlD/F6bWXVP16fB/f6fPLVuhPve+d75/IP+JXvr6zPZ9xZjz0i3usG
H0n9fLwfjn9erK7T5nhg3fiXXfxG+y7r8zkeWOfnXLZ8L0nXZZxQv42drp+n
PeOE+vN7u9gzT3HR+nyOn2dkP/6ZKvvhtY3swT/Lox/OrSPub4hvnlMe/T8g
Pzwu+7uszyeve2S/6+exH789Lnvon30BzhFgvH1cfPP8gOj/PvmTeQHnCDAO
H4v7zN5xjgD4fTHOOe8+v4sY16Ufxs+WUdd9j/y/QtdlPEyKuIMTx+UfGLCH
cwDp/8HIs7QnLugUO4njE+FP2uPndWZV9uPaz29hz2LF8T7Zjz8nyH788zHZ
D68Hwp+0xz/rx/ow4yHnm/IzvIaH/ZPlB+7nizV+lst+12ODc93bZT9+G7ys
6n/6fzmuy7kVed6D/A/+SnU/NP3J+wucW8E4pK7g4eCf9TbxvMf3FfD/iuo+
e46f5yt11G3/Dw3/075LvUTGcdXXq/bk+IznZNoTF55zsJM4brusUrfQfk4L
OycrXlPlH/z2iOzED9T5cz4m9t8UfqO96+eJe56/KH9i/4uyk/Hw5ryqP7Ff
dR3Z/0rZme8TyZ+un+fckzz3Rf4Ef6GyPt+T44d18uPjfBNw1e1kfJl3DJff
RlSex3q6zAd7Ssf6fFzX9fO0Z/zMrKwn96R/sOeKLtcdIf8/W3lO68nxc5rs
ZPzYTtfP09514OD5XZGws1e8eJ99hOI7TP6sX5/vyfFjO10/n36rXZ/vyXFi
f9o/+Z2zGCeXxroE31/J953DP3luXcR3/1gnuaKL32jv9S5w18+De10Le/D/
VeEH2uOfA8Ke3i5+pj1+OF/25Pc8ZQ+83s36fNjj+nnaY+f+ssfr87THzgtk
j+vnk6/q5znPKJ/b5R9w7OHcIuLOeuklcW4ROOucfF8H/7BuTD9eny/yG/XD
tHf9PLjX5zl32Ofk0N7n4WAn/uc8FtozTuB7v+x5o/Jc3Y4L+zj0w/ix/V6f
x37Xz9Pe68Ocy0zcdxJfr88vlh9WyX7Xz9OP1+fBue43Zb/P4Ul/Uj8W/XBO
FuNtA/H1+vz98if2c06W6+c5V9rn8PA9J/yPn+kn1ydDR/fL/2/qur5fgbt+
HnvonzxLe78HhJ35PavwJ+3xM3YeJXtYH16sOL4q+/HnObIf/9ifrp+nveu3
GQ+un6c9vH4e9h8tP7Dfuljj53XZD6+m7Hf9PPa7fj79yf54XJdz2fL8MPkf
/OfyP/5kv4Bz2bLuK/Is55iD3xTPe9iZ38euvgeX44f15KO6+J/2Xd5nzDje
K3u8Pk97r89jZ9arVN8r7FifP1rx+pn84/V5cK/PYyf2Xx9+oz1+uEh2+hwe
2nt9/miNhw3lT6/Pg+e5+LIz6yXkT/q/MOzkXD/Gld7TTJx9mfw+XIyfV+I5
n/PuwY9+ovJebcaX+dEk+Y36edp7fR4c/z+l69L/76rvHXesz4PjH+q999Z1
/1FZx76qY32efrw+D874eV52Yv8e8o/P4QFnnLwr7PyseA2qrJO34/sT+TO/
ayQ7GT+PyE78c6v86fp5cMbJWvKn1+c5z5FxckOsS3DdPIct/EN74tt8//9e
N2v7jX0K2hNH6g/Bc12oep5A+zkt5tHYg/97ww+0xz99W/7vdZu2n+8QX69f
gcO3T/bAy/YQr83ln6yff3/VHtfP097nqIDTv/2T+9RhD+d1Evdb5B/wY7YY
sIdzOV0/z3cswIfH+hvne+Kfp6rnnOR4mBL9bNzFb7T3eji41+exJ89n0HUZ
J5zfjp34f7vq+So5TljffriLPZsoLodUz7fpWJ8Hxz8N2Q+vkbLH56vw3RHi
vkJ8vT6/RH54TPYzTp6X/113De71eezHb/+QPXn+uvyf58WKr9fnH5Y/WZ/n
HFjG4X/G+jzfTQHnfoid+P/VSv18e/y8Fjp6WP5/Wtf1/Qo8z7eRPV6fp73X
57GTOD5UPY8r/fxI2DlX9lA/v0Rx/Kvsx58ny/58P2irqv3w+lP1vKz0D+er
YD/j5N+q53ElL+rnr5AfVoUflmj8LJX98DpR9rt+Hvvr6+f72vuhvGcU9jMO
75L/E5f/8SfjgXOH85y6eI6Kv9v5lPr5sDP9Xz1PL8fPnyPvz5X/2R+hvdfn
wfOcorCH7wbRP99Lor3X57GTOL5UPb8x/XxP2HmF4jVZ/vH6PDh+eFp25vN8
+I32Xp/HTsbDnfIn9v9RdmY9g/zp9Xlw+n9KduKHpfKn1+c5tzrfa1tW9Sf4
/WEn51Pn/k485/M9J9fP0z7vPzHvOF5+Y32e9nk/iedn8PS/rpv1YDFvor3r
zMHxz9/Dnt27XHe8/M/6PP14/Rmc8XOj7Mx6IfkHP8yRnYyTxWHnmC68xiu+
w+RP7J8kOxk/jmOeqyl/er0XPM81lz/tH84rZ5xQ98j3vcA5zwR78Oft1XOJ
M+5fjvWT3bv4k/bE96LqecgZl9myh/6HVs9n7lgHw07idU31/Of0J+tU68ie
mWHPmC7xoh/8eYHsxz8XyX54bV89nzn9M1L25/s+8jO89gv7h8gPrOeM0Ti5
TP6Hl/3vun3sx2/ry/9e9+B8fMbhfPkf/IvyP/48r3KeTH+OQ9btsSfrB6rn
t+c44ZyWdeRn9gtoT9w5rx68yzn56WfW57Env29fPd8+/YY9Q+T/C8UXP7wq
e+Bre3zeO/YQx+3kH5+TP0RxXFf+8fn54F3Oye9Yt+f7B8R9Xfknz7GMfjjn
Oc9pDN1xXjH+P7uyz9U+l/v70Z5zrXNdtPp9h/a5u9XvXOT7CxerfX5/I9pz
Lhx2PhX5iPPNsHO9uP/THjufjPacg5fnflS/25h2rqh+vzLtpD6B7w9h56po
PzPOHUJHnJvEeUrohfcdDte5ZOxT0B5d7Bj9HKZzybj/0J7xT/+0xw+sw3Mu
R9Y7RRw5X4L+Z0TcaU8/E6N9+Cv9eXX4ARx/zgq/cW4J/qTune8b4c/zo/1h
8d53nkMS8wLeZ8efe1frkTrObaY9/uT9d95n93vEtMefH1X/+OGkSp1S+/3Z
5THeTtb7sIzPU/Qe6xPRfhH7H+HPReEHcPzJ+Y28N4o/mdfw/aQ89zvaz4j3
brI+PMYV7xPhT/LOWXovj/FJe/y5Q6Wf9nt5vHfG94nxJ/u50/WeHeNznt5f
YHz26X0ExufVeo+A8bkEP8Yv35MCx5/nht94DwJ/9kX7ZYFnPU+0L1H3iD9f
inFFPSf+/PcYP72qi2Z80j7roqOfX6sumvFJe/z5wej/StU5Mz6Hq36M++EI
1YOtH+NzuOq4aP9I+At/3sn9MPA8Dz/8Rh0a/lwQ7f8ZeH5365qB9uvEvrPH
J/vp+JO8T32C91Vp7/sn++n+ngjt8edQ9Y8fGP+TtH83qfI+wlUd43OS9tEY
n+xD+f4JnueYhd/A05/Rnu9I4U++FxbnHqc//x7jivVM/PnR6nnIyYs6edrj
T9Y/N9G+APXetM/nWPWPH1hHOl7rJ4y38VoPYXwer3UM2vN9qZw3hR/A8eeT
4TfWDbL+R+3x53PRHj/y+0fhed4C9xPe+wpeO8T3xcDx553qB753xfe5wPHn
teofP2yn/nN/Vv3zHOv+cx6n/nkuHaX+8dvN6p/n0lvUP/78XXU8pz8vFM7v
b6u6SH/yPT5w/PkL9YM/7w17cl0m/HmD+sefO6n/zCPqH38+qP7xp+3Hn7Yf
f16m/vM7seoff/4++scv+POIeM7Pdcn4/74hvEsdV/rzcLX3+9Tg+PNgtfc8
Cxx/un+fRwqOPw9Se/xpe/DnkWrv95HB8Sf2wz/fR+D5IXDrPes2pHdwft0P
/rw74gue+8vq33rP8ynCn4+of/zp/vP9TfWPPz+s/vHnP9U//lyk/vN9xugf
nvhzQvV9lvTneOH+zkXuL8Z1Jqo9vw+pfa4PqD3+fFrt8ed31d7v74Djz6PU
PusK1B5/Tlb7/E6y2uPP/C5z8MGfOc8KPM9XiXiB+/6Zde3hz4vUj++feW5X
/F6j/n3/zLqu8Oel6h9//l39Zz5S//hzZ/WPP2eqf/z5gPrP72dF/9jt86jB
8efhwn3/BMef7sf3T3B/5xGcX/ePPw9Te58XAY4/bQ/+fFHtfQ5z2qn7J7jX
l7APf3LfyPPUOA+hOs8tvn+C40/34/snOP68Tf37/pnzbexS//jzz+off9p+
3z/B8edD6h9/3q7+s94s+scO/Ek9Azj+PFm475/g+PMMtXf9Rj7fhD+PUXvf
P8HhMVnt/f2g1H/483i1x59/UXv8eZba489/qn3WLUf73GdiXyb8DJ77a9V1
rfQn9x9w/Hmh+sGff4n4guPPq9S/7595DnL403b6+ROcX9vv+2euK4U/z1f/
vn+C575D9J/f9Ql/8twFjj+PEO77J7ifP7M+Jvz5mtrjT/fv509w/On2rucH
93o+uO+fuW+t58+0U+v2eS5A+BN7+P/xJ/PWfP9c98+scw1/cn8Dx5+PqB/f
P8GzfkP9+/6Z82c9f2YdQPjzT+off96u/j3fBOf3YfXv+yc4/ry5sv7crq/T
98ja+1nC8SfniObzWfhzitr7+RM850dqjz9XqD3+nKD2+HOZ2ud7JWrv94Xz
fNXw0zS1z/7UHn9+LtrzN/7kuQs8v5us733jz530vXX8OV39+P6Z5xuGP3+p
/n3/zO+nhj+1D9Vx/wTP7xGrf98/wfHnBerf98+sL4nfOdH//wORm5fb
    "], {{
      {RGBColor[1, 0.85, 0.85], Opacity[0.7], EdgeForm[None], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNnXf8l9P7x9/vz3iv+/2+7w9CpeyszDKSFdmjIpK9ioySPbJDJHsUJQ3J
CmWL8CU0hBRlk1lmyQy/19Pr6vHzx/V+Xefc51xn3Nc59/U+97mvs9axpx7Q
ry6Xy+1ay+XqhW1F3UUHilZNcrlOwnUShw8SbRxpDgx+VdEqop2COkXcpqJN
RD1EnUWriVqKDhFtLuoZBL+Z6IFCLne18EHhzirvDPG7CVdJXO4Wwl2ELUQ7
h/yDI2/ziGsRcT0jfppoumh0pO8R15FJ3VYWbhF1OlS0umh30R6iw0TtRe2i
7ruKWlGnQMJritYQ7Rm0V8StKbmHC7cWbik8QrRV9A99tWPI7Bxy6GfakER9
No86rZW4LhsllnFkyCGecjNhq8R1bC7sJbqZdgrvE94rekv0uOgJ0bWiIRGG
f099PUr4vvAD0bnBr5i5z45OnOYc8fOF1wufFD0lukc0TjRLdEziuFOFnyjd
+eI/Fs4Uvi66m7rr2nXCAxKnvwF9SizzupD7huhX0W85yxkr/LTgdk0W3z+x
HNpySsh4WnRj1If840U3RdwzQZMj7jjleVN4UWKe/jk2+op+mp1z/z0ruiXy
3hhlvI2Oiu6Pct6MsmbHNeIfFM0Rzc1Z5uyIfy7kIXeK6DbRrZH2gci/e+hf
65x1p33o4FHoUdz7oeqLi4XDCtb3k3IeEycHEr5d1y4R3iEcXvBYgG+vdp6I
7gnvLFi/Rgg7KDxKeKrueb+c9bsvOpazPu9NX4eeoq/IoWzmhF3jWt+43jfy
jy647silrMvEjyy4DVuHDo8tuJ1jhKdHOZQ3TuEruZ/C7VVGf2Qn5hljjIW9
on5rivrk3K5OIfMK9K3gcXNqzvnBPaKPx0c9kE+ZlM1cs5PkXiXsij4U3O/3
Ck+LNHtFmvuJyxymPlxnvtpH2FY4QdePyXkeU7LcNqIOopquNQkLieeixpzn
oI1EzL/5nOfVuoirD75t7v/nZeZbif03P/NbUbISruunnPM8UAlsH/zKOc83
q0Qe5paiiIwNlJs4rhTxDTEHMZ8UlpeTc1wp8hei/svnePiGqCN15/lRjftc
C9w6+I6iFUTbUj+VkZI/cV+l0V/bRpqmSEPe1YQfqeAxOc8tVTfh3/l1xUjf
MfqEtrdMnGbLKH8lhXcQrp04PWm3E20vasb1nK83i7imxHGlxOOVcft8zmOc
McvYZS69RvRYxKHn9wfBXyp6reBx9apwYMSTdmAg8vZTGS/p+tnqhFcKLo/0
3RX/kPgThN1El4vfV3iNlOU40bGinXRzzhXuKPxfwfMMspokaxpzd2YZjIsJ
QfDIml7w2CDdKVK2W0S3imYqfLviXxdOEj4qGpzzuHxYNEg0S9fuEL4hfDPG
MPzEnMfRI0FXRfqDE1/rI1xBdXpbac8THpi4nHPFH5q4P/dPbAtMinLnMI8I
5xZc/iMh8x2Fz4p40pyZs9zDlP9s8Xsklkn9T0LfpcAXq32NwgukHD3E9xcO
EJ0s/nzhX+rHC8T/I/xddL74P+hjXesl/jzhrwp3E/+LcCnXgr9J+IxosuhE
UR/RjaLtRb1FO4h2DDxetK3oWFFHUUV1ukyYCLeLuONEp4qGioaJ1tO1E4Rt
hH+qvAHilxUta4cogzzUExmbqE9/0/UHMtefehxXdT1vFp0kKkjWwdEn3Pvb
RH3rrA8nh07U6dpBwnzJfUXe26qeEC6M+Etyfuah88joF3IuUrqirj+UuT77
E191u/pF24YGTz5kHhj9f0roY9+o5yV1lkXf3hT131D3dV/mocT6z7PwxbBZ
sGe65qzLL4r+h87kPB4YB+8GT9xtMb6Hil4WjRANF52YOG1v4Qtx/fmQh9xh
or6JZQ0UzhPODx1FV+cFfxq2FOMusVzGzktBL0dZ5JsY6d8Lnrh+iet+TmLb
7UPRR6K7mF9yYcOJPoixOinC8Gclnp/Q/1eYV0QjgxhTxJ2ha1Ppr8Q88Uck
zovMKxlPics7KrFdPSrKph4f52yTUbfHon6kp6zzo84fRZoR0V7KGx1ypkUb
6ZPD6cOCy8LmHBIykdFZ1/aLew1/Voxx7nWXnMf8wwXPIY8UrI/3h07WpHvH
CrdNzD/EnJV5zkAOOrRfyEDW47rem7KFezL/it8s8DzR/tyfqN+kgtNjxz4h
fBSbNeLJix7uJfxM4QE527T7JLYfsT/hsev2TmzHYlNjY14ouiBnO/uAKPP8
iCfdRaKnC7aDJxfcBuwQ2vRswbYR8V2jTfTTk2HHP1VwGuzb57BVMtvI/He4
JGfb+L4oZ3yUNaVgW+u5sDEvjnTnR93olxcKtqEZgzxj6fPjcua3jfC60ddt
RDeqvEY9v8YIbxWVxN8d/Ce6fpVwqGgGfRH8EvHDQr/Q3x9EC3MeI4zLvGTU
5T125kV4fugd4+3bSEueRdwPUVlpKqKrMSqEdwkHJ75+c+I834UM4pHDeKzP
e6xS3uKc6zY9ZH4SchknP4WeL835f9HPon9ynjeYf/iP8VnO/zkWBBJeHPnI
zxgq5j3e4Blnhbx5kGv0xY859830yIuMGVHmzJBRCjk3Ja4f4xSevLclvi/I
Z+wzlzTkPRdcr/D3wlsSxzVG/McK9xT/jrC5dGldzd+DhG2EO+cdvlh4iehg
UY+8w/DniLqKuoi65W3PnBfYNa7PltxmknG5ZJ6v8AGi/UUDgifuA6W5SPht
YjldQ8Z+orND/kqScUzess4O2cSvr/AuwvWKrvNJwc9LXMYi4ZfS6bXFf1Gw
LkwNffic/xIRPzX05PvoK/STebUu9AQ9vDb0ZlTi/7q/5/x/sqa4qmirvNtx
kOjCIPgDRa153gtXF64l2kn8msL5ieOuVP90V9wFkX4NxZ0QaS4IWcSvWrQN
2bzouea3qAM88w//w++TzI2V5lnhJsJN434/kFjP0IGVFV4l7zavFmOgZd7t
J37VuP599EvbvNtOf2wcPHE/xjhuHnqMPm8W/Oahr8WII4zubfKf+lDOI4nH
Scuox0MKtxA/iWcQ/5XEjw++vfj/YZPyf0f8C8GXY/55NPF4GRbYOu+xyxzR
Lu/8tLdV3mN+SYyz1WIeKUe61SMf+dGR00VniBL1+17CBdKZX2JeIO0eoj25
b3nXd8vQCdq8RfTDVhHHtYeizYzZCYn7bUzw3K8pwgsTz0fXBM9cw1oNZVI2
azTMee/GnHRJ4rUK1luYL8bG/DEmkDDrPU/GHPdUIGVcnFif70g8j32e8/oL
ayF/iP6MNKy3sA5zd8ijnAGJ56wLYlysqTqtlfd6yl+iv3Pm50QYO+zrnO2y
2SGbtZRlkebtiFsW/OrRr8vbPDP6HZ1rETp4e+J5l76anPv/+fjLnNdxvoiy
3or2fBPlfx31+Sr4ZyMtea5IPMdfmvg66aZEG+ZE/ehz+mqIsKVs3GNk27YQ
riY92V51aymcm3jOe0v4d8H39y/hsoLnU3jaQXt2Dtol2tZM88I/PLeFryWO
n8mzruh5Oy98PbGePoYeFa2/jcJdQ9c7M+6K1sP6ouW0jPFVp/AhEU/63WJs
tIx8y8cKyHXuNfrEGiN12yx0lTqQd1bUZff8/4+L1SPcvugx0k5YEh3OeCv6
3i5Py1jbK8ZbrRhjRriKyjpK/PuJx+GZon3ybu9hzDFF5z0j4l9Ruk7C6Ynl
HCk+Fb6ZOO9Xifl9xb8hzHRt60hzXuIxwlolPM9b7BlspQ1ytiWPznm9iDWi
DRLz2KjrCNfO2Z7bJtKRhjVA1rFvE66XeA2LdSd40q8gXDfx+tU2ifNjFyIP
GxCbC9uL/03YYSsmjsdGXC9nOw17bbsIt4l81A37rXXi670izcaJ10vWSGyX
YqtiMz5TsO16E3qaWD72M2ss2NXH5xy/vrBZxG8f1zaM/llu72IzY/+uH33G
tYr694i4p5snXuNibYf6/Fu3iDsh53X3PoGESU/5OwhvLfj9wi0FryEuT3tz
we0h/oCoE/VZNfNYvCKzXXFW3nbEy4mf0XOEbXW9r/iNY0xcJjpU9KWuXSH8
SXi4rg1nDhduKxopvqNwga4NFP9D4nwDI2/bGFcbCTfkv3HwtwvvEJ3G80Hh
/jEujhZenbetg0x0+93E9bk06gTfM8KbFD3uqDP1pG/fEw4OGcjaTtfuEm6P
bSe8Ku+xtEKUt6Lwk8TjnbkFmxB77zuew7q2Xd72Rkv1XQfhYOHXifMyHpHF
+EL2Vro+Qrh14MuiqXmnp9zF6EzR9tv2IfOsGI+DQs6Vom2KHqdbh75cGdfo
K+aJzYWbiU4NnrmEvrpc9K3ufRvhImGKLFFGHQoe798UfN//ZF0+c/tW5D6K
nko8D7yUmCf/vYnzrkM9WXsPecj9nvFMXwm3pU9FTaLneL6ji5njtg35KwRS
3sKCdZF6Ige79wfsioJtwV8LtsGw1XYMwm4krlnez5cd8p4jqTN26Ith2z2c
WPa+oesteE8g/CJxX9FP6DR2dYfQAeZMnkHYY9tHGSuJfi7YVl8q/KNg++93
4W8F24DUkzQbil9SsE1HPZl/Fyu8Qd59Qd2o77TE15fbmNhsPGN4fl1bla7q
GTpS2FzP0avjeXqv6reB+PuEC6mX+EXc67yxmcJzdW1l4Zyiw4si3T6StaJw
36p58rcT3s+YVPwDRcv/R/HjhQ+KNlL8Q8KHRXXB7yvcT7SuqJNoZ1Fz0URd
qxc+EunbBr9qpCMN/Cqincivsp9GF6oeG9+hR6I1Mt8X5pA/Euv2F8EPFf+n
8PKi542BofvD8p47yNtDcddnnlv6x7VDFPeQ8FCegaJHGPsxNofH+DyMeguP
EK6jOv2CvladflDEj4hxfGfgK8GfFmVR5sFKN0HYU7hCnfv8G4VHIlf8XcIe
krsn66zC5xVuL/4F4YuiLcX/D/tauLdoLdHBVV8fo3atWedrxL+kuGqkR94a
oj1Ya2UtXnFjhc8Jy4p7tuhrpFm9zvk+V70W5F3O2iFzn+CJe1V50jrLOrTq
aycJu4haoAfBowO9hWP4/yl+LPO9wl9I9qZV8zXF7ykcpWt/5t0Pa/Ouln4V
fpl3esrbRenu5BmTmac+B1R9LatzWvIuY/wr/ivmG8V/nXeffx3h3atOv3fV
POk2F94j2X+LH1f0vVme726F16tz/G156xvzxdHFeF4I/0r8vFuGXVD0M6KL
8GeFbxL/m7BeZYwV/4/4Rtbndf1m1Xe+4t4TTRSdnPf/9Jvzzgv/GTaP0o5n
zhKeKLwxb7nUh+fyrXk/P2+NcAvJ/0G4ZdV5+e+9t3A/xnPUDRnI6hPl3RLl
r646ddP16zLLeVVxzYUtq67nelWPyR9C1xkf8/IeP1Nj3DBuL4tn+aXCD5jL
RO8ztyn/u8I2Vaf5X4xZ4pFVrv7//PVS9Auy6afX8q7Pj3nXZ5KwUnU8cT9F
Hb6Pus2PvNRvUpRPPfZXefcLDxD+krjtvyfm6cfPE9sFr0aZ8CMjfGzRso4T
9ipaXu+i000TjRL9ndi+WBxyXot4XuCR9qbMOvNK9C35RkeaMaLpohl5yx8c
ZY2JNFw7SeFruX/CPqLHg58eaaaFjvYNHTmoaLvrwKLXWq4TXS9ajbGkuGuE
uxW9LrRryO4lGiLaOcom3Q2he31CT7CzsIW669oDIX9dxW+s8XJI1esxQ0IW
eVi3QQZl3S3cXfhj4vhPE7/7o/6dIp46/ircQ+Fx4vdkDix6zQeedtCe3uiD
yuwsWk30uK5tKnwCG1DYSrQr86zq9KDwXuFo0XDxw4XjRCPFjxBeITpd/MXC
PqLNxB9Wdd7LxQ9hHhK9SDnCq0Vnib9EeIfoPvH3CNcQ/ax6bSNcS/Sk+DRk
8n7qtIj/WPEbVT2XrhNzGnIuFT+46ufOLKVpLWxV9VjaQHiKqJ3SHE7aqt+n
3S7cuupn7s7Cq4oep4OEV8ZzF/69GBs8vyHSEze46Dn8GmFB+JHiPuSeKbwE
nSl6DDXUuR5XpLnc243SMeHRNY39eulAzXU7VGnOoJ8ret4ozRjhdcq/WPmu
FQ4p+p7BN4Y85K6vPG+hX9Hex8RXhUnVc1edcI7oO6V9QzhP9KP4N8knWkl1
+IJ3dKrHLuL/Fr+t+PPFryecrPCE0AH4uTwzhU+IZot/Mfj74z4uFP1D/wS/
vuT8FDLHiN9Z+KXCy5RmPmkZ44pflf1nop3E/1V1mnXF/yDcUvF3id9J2EP0
nPguwq6iT8QfJ9xB6T4J3ehQdR91rjq+JH63iP8w9KE7zzPFn0Dbqx4v+art
CuyD/au+v8yTV2N3qIyTVVZLYWvRedE/B4ieEb9fzfU8R/y6wjVEfcS3EDYX
dRFfEq4muk58+5Czv/hKpDk78r4WczPzEvqJDvEcQb/Qs6JoM4XfUXht4ZS8
n8vP5/0cfj7Cf+X9jJ4rmhNh+C2qfmZjuxK/LK7x/OD5wvOkva6xAaVTPH8o
C7v2xbztXtK98J8yF0XcwsjLM6RN5CUfsrClsau/jfq8HWVTH+SuUrWsb0I2
+r5LzFPwLSL8qO7HJsLHip67GoPvHPMWc1q3quezUZnjWkV8m8x23OjMOoAd
17VqW/pTlblJ1TYdtl0t+pk+3FHYus7zI3rztGRsLnxGOLloHYNvHWWRbuOq
7SzspQlF2+1XCH9T3JuiN/LOx5zGPb1F15aKv1m4XdV4e2bbk7qh37cVbVff
WrQ+FCM/10lXqbM9+pkoqTNVI455ibrdWLQc7Nih2I6i33V9uHCnqvPSD3dE
XW8XDit6XNweaShnj7jP+TrPj8yX/C/hv8qG0Y+bxnz8a7T3mbz/s3wWcb9F
POEFcZ05jfp0rDpucsT/Hv32W8zF86PsyZGX8tpWbRtj0/6RNz877znyj+A3
jjHTTPic8Nm87WbqDL9i1XLQzzWrvsZ9JC3PqZnC1aq+D6/nfc+WBs81/osc
xrNG9JX66zTsaWG/qv+bHEW7it4D8XnRc/8W2ACRj/ztIi//Sb7E/lSeMeJH
oRdV7/VgL8oDwrdFc8ij/7ffkF/4aTzLPyk6Ddd5ls8NJMx/k22Erwm3Vp7/
id+qZHnkYU7vWWc957m+Yeb6jue9edVr1OdUzf+7l0W4qOj/PQuFpyt8lPiz
ef4ofKb474U/Ff3/90fhxpLVRfzJVfOLsTWFR9dZfoco/5DoI9rFXpHPYvz1
jGv0Lf19lvCHom0M5JOfNiLvm6JtFer2dNVtfTxzv72AfOFzin+Y9gtvEF4v
ekr0SJ3j54m2V7qpwu2Ejyndm+Kfp/4Kfyl+E+E0bBXx07FluA8hZ1qEHxHu
rXQzxe8l7CL6lXlLuKdoBuOL9QrhW3W2kz4NGch6QvS46KOgjyMOmUuF+5T8
fL4v8lNPZN0t3FTXvuKeCjuWbBvQlneED9X5eb+Bwp9zz0uO49q73A+FX6JP
o6+Im1p1/LfitxVuVWc9P0I0XnSP6A3RRrr2bMjcXPR81IFrb0Za+vA5Ydso
v6pnYk00Tvys/8i6J8JdlW6BcH3h/iGLPqTsI+tcF3Dr4Jt07QrhCsIRddbJ
M0R3Bk8c9mF/4YXCqtINFF8TNitZ1krCFUVXBo9ODQ85w0MG/Pyi/9fPK3pP
E+s53UUDq5b3cOZxzR6zy6veu8W+L/aEXVl1HR9RmiXKf47ifi76vwJykHdH
neeW24PgqTdrX6S/TLiKZFwlflXhNVXjxMz2O+tjZ9d5rIwMHvucvsC2X11p
h4hfQ7hmyfvK4NnvNko0us79w/yVRPw5cY3/BdSP/wutKFt865LzMI+dV+f0
o4OnrOMizUbRT7Tz76L30b1T9L4v9tOx9+utovezzY71hq7ogOj1otchZgqP
qHqeYW6BZ13lwKrX6tiHdkCd+Q0iTF76f5Zw/cx76Ngvxzz27xxStR6hA8xr
R1a9RsLayMdF2xkfCY+pen8g+9zgkX+Q8I2i17JmRZ27RL2hblH/GUXPpTPD
xmGPIv/N2OPH3j/2Dx4ccT1CD9ibh168XfQ+QNYte1XdvlMZo9F36CHzMGtQ
3wo3UBvfE94jPL5qOeyHpG5ton4fFr0Pj3a9X/SewA+KLqtZ9D9ysMtYv0IO
9eb/LHXgXvYUXle1XvO8OEf3+DP0Tfh0nec05rZpRa818TxCZ5lzJ9b5/+Yr
pBOOr3ot94bguf5g1f8FWVdlTZX/0eyR5b/0A2FnYm+eX/Rzf0D8/74/rp1d
9HP/nKLLpOxB6GfRax3EZ1Wnb+CeV712xBoI8bPDTrig6PUD5DOeXo0xNrjO
dZ4U9GjE3Vf1WGGNeoJobJ2f7w/TX+JvCZ55necF8xZzM/Mx88zLdZ5rqCtz
Ec8n+onxOzXozkjzcPTnoKjXa1E3/tcznz+JfVG1bJ59L0d+8hKP/OurtqNo
732ilateG2Y9eU78t3gw7/UV/mdhn7L28kTe63eXFG3ns8b1UPyn4P/B6UWv
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
Sn/RaaKVasa1hCvUPA8xn7xcsm5P5XlZ8hhHV8+ot37uE3L2CFlJzWOfj7Gz
muPrhK+ErTY18u4d9SD+8HrPaaRHb1evuc7MkUdHGaQ/I+pJGxprvn51pLm2
5OfmEGG15rG+NHSS+jBfXCg6SHRgIOGLIoz+XFDv97A3C7cWtqnZhkmFNwlP
Cv27OfibIs+FIYP+u110h2iu6vGE8J2SecbhnJJ1+MaQMyrG2fLxRnh0vfv7
8nr3y7kRxxgdE0h4TdVpgHBD4fUxrtBx5qiBokNFbXVtmLBjzXz/6FvsM+Lp
a+Yu0m9ac55DQgbjeGik4b008x1zHX1Cn20U7/AZg/sHEqZON0R9qBfvqQlv
VXOd6eda6Fr/6K8boy/pk7dLHpOzhWND3nK5hO8WlZX/aV1/PfP7btrN+/0R
wjtDL98oeS6dJWxX81y7drxjpx2dRc+UfH8nC58qWSeQy14F7i/v4tFn0mN/
MlfzfHg+ZFLWDsIpJdusxD9b8jNoctggJ0dZyNs52nhm6PKIqOejwjdLruPI
ej8froj7jx7cFXFcW6x0jwinC99i7ou+er/kfn5POL/kvp8n3KZmfCvzWOgb
95axNzzqMVE0n7yiGSWHZ5ZcvzMi3esljzXiN6s5P3PFQ8KH6z3fEI/ub1/z
3HN4tOOakudxxmZdvW22jer9fMCeI26Xmp+r/I/YUfSZ0r6dWdfuEY0XfVyy
nnwk/LDkfRHwO7I3UTgnM49dwH+KTjX/90BX7xXeV+//IV+InhV9Lvqp5H0y
S0oex4zncfXOS5n4LVpQ8p6Qz0vOj0zkfVGyDUB8Xdn6mS87P3VGHm2hLPaT
TCu5r1oozR4KPyh+z2j3/fUedw8EEl5U8jhdSP+pXT9iw2Xua/qVvv9BcS/V
+9pDET8hyr8o6sD9fCTu8aclz1+flNzn9Mnuwu+Y38V/X7LOTQhZXyn8vPBr
4WeMD2Sgy5nbOj/zPpmnFLeP8DdsJfG/Cz+q9xz4OPcueOLQWXT+A/qZfbDC
g7BxRH8q3zzF/YG9W+8w6T8MOR+GDPjN9GzcVHRwg3mwZ4P1+H3RJNEfyGCM
iLZUfTNd36ps+XdFPbn2VqSdGOOAvD/r2lThUmzsksc7fKns/i0KC6JZwbNX
hz7qLXwy2sz+ob+xZ4X/YDuXPY/Dfxr9Sd99o/ALca/R6wWiyaLuktWoPO+p
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
JalxSPQ17Tg62jK64DPtxzC+C857rKhBea8WloR3CQ9VmpGRj/xXR5pjhD+l
znNMyOA/Jv8/fg97j/9J/G/qKdoMPQMz+8rEfyY8/o+fEL5ate8u/GjhWxuf
PfhMxu/0wvBjhp9AfFPhJxFff/jlxP8g/qXxL4WvP/wN4vsOP4H4GTtQODmz
bzR8eB9ash8zfDxz7ZCSfSMRz/ti3v/g0wTfI7znxBfKzqnXhlnz5Ds+vnvl
+8EtMvsyfCazny725OHbjbbgo/rpzD4P8feIf2nS44N5Sviaw28450Egn287
ak3284wfNXxr4z8Kv2j4O+qQ2T/TyzxDSvbviN9y/HHhT+oU4a9F+wbmDPul
RfvJxQcy/sPxVYyv8E2x+VifErbN7AOW85X+LNr/7R9F+/JC3guZ/a3hHwv/
YvjNw78BPqbw34XfLc6twGcXPt7wnYUvL/wucUYGfu3wvX16yb6n8IeETyp8
kRH3IuOmZH+Mx5fs0wmfXkeX7Jfp3eDxG4Z/Sfxm9w6fC6TnnT7vlXmnzj4i
9hfwTvmQzO/2K03e38K7HdbqedfAfzjeTxyX+X0fa93saWFNnX0v7NngXT17
CdjbgD2zR8X7/UqsLTV53wh7stiPwbcP7Bn7sez3KbyT4V0vexTZn0Ee3l/w
foH3L7z7GEJ9m/y+Zkj8d7ixYpvnporX8K8Pm+eaWDMiD++V+M83suL3PjcH
z3sr3tUOq/i9Fe+EeW87tGJbd1i0l7X2Fip3k9TvzHn3zd4n3nWzj2u1iv+P
sOeKfSPsmdq54vfj2wmzeF/Me3feiXSq2PYjDXs2OsZ/It7js2+F/S3cC/Yq
sZeJPRW8K2AvB/tP2AOD/x/ey7MvjDLYB9I7bEi+bWGf2rKyv0lhfzb7+tgT
xV4W9p+wB4z9iew3o13s/yo1+RsZ9uD9UrbO4x8b3858u8GeOfbm/RX787Dt
+Qbk+yiL727qJKfQ5O9E2PtAeGnZ/8uQydjBN/992BqSWy99nJDZr3XfOp8j
gL84fP2MK9lfHDhNae4v2VfTAyX7iVoveHxS8f0qPt/wB4XftYnMb1n4S8vs
DwqfbJwR80jJvmpIg58xfL1x/gs+4vDRgi88fALwvRrf1fMtPN/d8s37Hpm/
7f408/fp+G7gXJiNyv5mtm2kwd8Bfgz4zppv7vnmmu+++caU7/rwFbCy8MPM
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
           "]], Polygon3DBox[CompressedData["
1:eJxNnXfY1ETXxvfZlmx2k33EBnawi4IUC6CiolixAQoIiKKIAmIDFSyIYAGs
iF2wYwVFbAiCYhcVO/YOdsGCXb/7xz3fdb1/nGvPZCaTyWTmzOnb/Kjhh5yQ
z+Vyf0e5XFG/76a53PVC7qzkcivrudwDKh+u8hkqf6/yXRXX3yC4W3iHLJfb
oZTLdUxyuXpjLrezyjurvIZgO+E3q81wtT1BcJPwYk19NORyrwvqwscKRmoA
0wQXCx+hZzxRzuWu0Fjqwt/S86/SvVN17y8qjxQsVP2Vqu9VzeUeiXO5rQu5
XEvBw8KvV7sr1X4KYxReUZ8z9Kx3BGsLX0tjKmps2wg2FH612lyhtpMF1whv
oWurq26nMP6puucmje20MD76H6q2QwTXCT+94vnpIzhN+CYa72kaywGCpsI3
1T1L9OyZ4fnM3ylqe3KY41l6n/U07qPU/yWq30jwhtreHeanpnldqba/Ceaq
/b/q81Phnwj/T/d+qN9HVH5Y8IHwkYKxws8L46H+Y9oLPhJ+quDcotuMEP6p
4DHhj4Y+G/TOnwv/QnhO3/P9ivt+SPCe8HEa0xka6y2Cy4WfqWvjVXe+4Czh
jRpfL737E3qnVzS++wWrCR+v9pfWvB6uZq4FtzD3ujZBdQ8K7hbeXrBc7/6c
oBlzL7hVdaPC8x5Qf2urvwtVvkzlU1R+UOvhYg23q9bD/NTrjb5/Vd0Rmr8b
9C1vFAwQ3lT3PKu+fwz9T1G7y4teA1cJv0HXpqrvEYKLhC/UtbtVd5fgKeEz
dG226iaG8T6ma7eq7jbBnIrXYw+9f0/Bo8LvUZuZans+c1bzHDAXM0L5R41p
e41/B8Fy4ffq2iyeLZgufA1d66axHyBYU/hG+j6NwjsIthXeSdBR+GqhvJfm
YKTmopugi/A1da1BdVsJ1hX+iPp8Wn1fL7hZ+LWCa4Q/Kbix5jllbh8Iz58j
eCHvPXCX8OfVx8Ya6/6CxcJP1xy/LPxaPa+vnrc19YxHY421fo7VtZmqO1/Q
Xfgxun6a6kcKjhb+nNpvpPv3ESwSvoT3Eb5Sddvq/unq/wvRpuF6/ll6/lUq
j1J5ir5fY5i/TO1TwQ/CZ6o+1byfp/aTVP+o4Lm8v+ntwtdRm4P07IOZD+Gb
ab2M0rc6WLA+tK/muTlZMF54U7XZXG03E6wt/Cm1OVXf+l5969/0rLc1ll3V
trPgX+FLBLvlfe0d4WX1ca/G+pZgdeG/6P7Xw1r6U/e30LW3VXdfqGe9s7de
EtwnfL7a3an20wVPCC9rfr4pmkY1Ez5XbRblvUf+v/1i1b8mWFDx+hwtfBR7
HPqhNrvpXY8XRBrL1RrDGI3zGj1/TdXNq/hZdwi+FP644Myi+2B9837H6VnH
C96NTC+h9d8WPZ6H1OYM4acLZgu/X30+Am0TzBR+T2zaeKDg3tjtb2a/QsOE
P1jxvacJZoXyTUW3ob8r1cfF6uvh0N+tgtuEv8yaZa+pzVS1nSa4X3hrjWlL
jS/H9xN+rL7h6SWvwUGJyzcJv1kwOPH9I6GNghkV03/OpufD+h+qaz1V10Nw
pfATBIcWfW2Y8L3Uxy4ln4FdhR+la5uqbjPBQOFttKb/0vU1tF6f0niO5pto
Lv4puH6S4GK1vURwsfBY36ib6kaG84T+aPu34EjhHTWmP/XtXhNszt5Vmw10
b3fVLau7f569ueAYcLV5X21nCdYR/qK+wf3q6wHBS8I3qLmvOwVV4YN1zxa6
d0vBccJXY0+p7lPBJsKP0p6+U9N7jmA/4b3UZiO1bS7oLby/4C/1/aegn/B2
Gt+lwgcJ1hXeVnPRV3PVT9Au8f2/q+43wWHCJ6buD/wrvc++esbZetb08Lx1
NYaXNJZfBBsK31p99FZffTjjEz9/Y92/ieAI5jd1mbF8zdrX7xEq9xecI3wt
9bFAfX0taCN8D66pbm3BnsK7Cn7U2H4ouHy++ltXdd2EL1V/O+mevxt8hrcM
5zm8zl+h3ErwpfC5gi2F76v7mun+dQT7VTzfMGL/qf9jhR/PmVz0NeZ/guBo
1pLgoorvX6G2ywX7CN9Qc9JJzY8WbC28iZ7xuJ71RXjeKxrvpHDvco33IP2u
p/L6goMrLv+ivn5mjwpfA5qge5cKthaecAYLfy+sn9nqbwD8BvOi/s5LPV+7
q/yFytuqzTK1fSLcz3wyd98X3GYbXftMdY+F9cT7sta2Yk6EdxZ8p7bfCnZh
vpkD1U0UXCB8F93zX4NpaGvhrfXOB+ndNxe0qvp78e2aCvYS3gR+Vn09rbX+
qsa3vfZgW62V1loraaPpHWf57fB48Etq85j26rHqL4PXgGbr3mNEDybreUfo
/tG6/xDBfsKXVgL/JFgm/GRBL9av4CThf+v5HwVe6l/1tT7fRGO/XRDVvB4v
UP2FgnOhd2ozPPKeY+/tpnEO5OwU7C78N/X3jtouYp+p7TP6fUPlNwXPwgtW
3NdF4Rtxf6eSeYZdE/ODvYse4ynMVeq9ubPgv5rn+yjVHSkYL3wfvWN33Xsm
PElm+nc2e0cwPNC/Qao7VrC38O907QnVzRN8y1jU59nwFoJraq5fylwJvhc+
We8wRO/7sN43U/1XujZXdY+H+WR+wecEHpV65vpLwdd8O91zp/o+J/S/j9bA
GTmvib2rXh8HCj89lKfoeSMi7xH2yiaJZYOtBRsLf0N9vqe+32dOhXdQm98a
/M02rnk+eqhtc7VNtH5eU5sHOHsEiwM9P6boPTux4vp3i+7zddrG5j0OEcwS
XlR/X6nuR9Xl1d+tGt+zGl+m99kbWpKaX52s+p/qll+OhzYE/hV+FnxwaPOP
7tkFWiIo6N6y3lm35XYUpMLfUZsP1PZDwRLhs9jvetaVgqvhB3XtWNUNElwa
xrul+tpCcL/wF3TtPvghwfPCT9Q9h+rebQSD4NcEk4XPDf1xXt8u/EzBlJrX
6z1F89hPC98gMa/Kmb0+/GHFa/mt0D/jnS38QcHbwl+ueP0vEbzC3lGfo/Pm
Cej/Tr3s15q/fVTeSvj7mt8u2s/rCJ7OfAavLvzPxGfzx/otq1wSfCT8YPWx
IXMvOJSzU9e2Vt02gg+EP6G+26qunWB+5HIivCKYJ3xaxbLvsKJl2NsFJwk/
UXBbxf0V1VdB8J7wwfoms/RtLhIcJvyl1LLVTNZT6vuvFX4dPFrF422le1sL
PhF+ht7xDeGn6v49df9uGnMB3oixqO4KwTHCH9T6ranuXJWLKvdR+SW1ny1Y
T/iegpeFLxJ0gdYLnhc+Vu0TtW8Pvyh8lq41E757qH9N87mtnv8Z86T5nMQc
61veo/LGKo9VebbKHwquEP546vWL7P2z+lumPkaor/0Fi4VfqTavqe2fyHDC
b9WzN9X7bMY3Fv4KNF5t1w/jfVWwn/BTw/3v6rkty/5mzO8rmcvvsM40np/1
26hyXfCT8Mmqf0XP+k1wrfAvWReqaytYmrj9jsI7CH6Bf9Qc7qWxbCDoXrN8
M61knhL+8k3Blmq7leAt4Y9qzJHalgWPCB+ia7eo7a2CocK/1zP7qm07wRfC
vxX0En4ua1T465nHcnioX4x8InwLwWvwsrr2qfp6VHC18ONYEyXzvPC3tP9P
+L+CV4XfpzYrhb8smCL8aY0p1dhqgoVh/aJ/QWZHf0P9dqrbXvCM8EP0zi2E
7yfoI3wcMqb6+iQ8n/dv0Nhygjd4Nvyx8M6CmcI/1fefUbQO4WXhx+meSSWf
cQMyfz/2Rj58s+66dpTqJob6F1nj+tZNBc8Kfza1/IEs8YfW0wS1ma+2t+ve
Fvrel8DzRNZBoYu6Te27Fq0zeCT1/DH2ip73oPDf1edktT0eHjPoF9i7e4X2
C3Streoqggeq1gehexlXtM7sFrXpUrTOaJbwx9VnUvY3ov9nE6/tPwTPCD9f
49tA4xsEj63+zlJ5Bd8XHknlP6qWfYcKVgrfRjR4qeZ+maCV8M907TjVXRHG
O0n376X+zlR5PeGXCg6NLJMim16u8lEqX6Tyv2o/I7U8w1n+neq+1LUTVHe1
4E/h81LTsj3C+/SKLLuiY+sdecyM/VLB8qr5nzFF65zgL77QtSGquzKMH/m/
ud5vIbK4vs9vunaZ6o4N91+sMXRTv+ewx+vWb6Frg2dBf4V+D93a4WpzmerP
FqxkvyFPo39SH2sL3zWsD/jFf4XfofY3qv5MwdKyacYjVcvzg/OWcZHf79S1
VHXbCx4V/lTVtK8qeEj4GN3/n+4/DB5U5XEqr6H7jlT5Q5W/rXruuwuWCJ+q
9/1I3/qhQP/OU/u62h+h+rWEvwb/KvwMdAbCx+vaOqrfCZ0Y31/3nKTn7Q2N
FT5d1xLVtQvj6aX320pjv1f3TNW9M3VtDdXtLHhS+Dm69hfnFzKIyh+klq+R
tX+vW/5/tWgdAvqGF5gzaH24f1FqXnIW/JDwu/ScLfS8LdGHoUdQm59zPkMe
FH5PxbriG4vWmSzUtR3g7cJ8Uo8+BZ0o+mTOH2j5Lznff7/Wxdoab1PBA5y3
mfU96Mpas14S64s6CX5PXG4ifLWgQ+pSM639UH3uCC+kPo9X37sJ2gm/VGP+
WXU/CS7hXdTmA+GlvNsP15zcBL1V+/ZV62vQ5fwb5I0Wuraz6gYJthX+dWLa
3V7wjfCzBPfoW98rOBtc/f0eWYeKLvWjzN9yQ8ELwrdRH/urrxFBf/d54vOU
M+gLzlBd21V1x4Xxn6D+ppQtE7etWn+KbvNCvoXqTlOft5d8pp3F2tG1u9V+
gNrvoPbXqM/LVHcp9Fr4Hrp2EryxYCfWt+55UHUXq259zfdE9dtMY18H/Zrw
lmqzr9qewpwyF1XLSruE+YAHgRfZL9Sfrv7u4jxSf83U38kazwyNZ4LqDw7v
G6scBR5ioN6nk551tOB09A2CHYUfKThV+Gk16847hDLrn7V4CPcIv0P9vxdZ
XzUK3lPlVyP3uTm8v671E95ecALyXM28XN9QvkttflT7/VVuKbynrm0u/CDG
wPmhay+pvlHl/ir3RgchvGfgf4cJDs57j9B+uKB73nuU8fVA5hDeTdBP+BDB
AXnzOJS30pzspbk5MXwP3oF3gaceLfw++LfYPPeZKo8UDBC+AzpM4WfULKvu
FOZvQM1n9xGh/m7d/1NkGwy2mFs051P0fa5EJ5Z4PVfLPrO+Qj+t9v9EfodW
detk0c2iQz5X+AxdizSeMSpPQPeXmb+FV26p772/3uE8vcu9yGTguj5Dz5op
GJdYXkD2GBLe7zT194LuH672u0M/4dGgnfCDidfTnSXziOcK31dwqPBzkMmF
z0pMO5pxniemJz+q7gfBksT1y0u+Bn2ZIbhe+HWC+9C9C3ZDVhbsn5gf6132
nvw4M78L790rlPsIhqltD3R8et97E/O/C/+nv+OEH4/8LPxhwU/CV3AmwJ8m
5s3+gScT/kdi+aRJoG9vqf/thH8H36/+r9e3+EP7/XfBdcK/T1y/fdCHw2+2
1lxuK3hM+IjEc3O24NTE/C28Thzoyx2Cq1V3VeCZ4FcqgffdRs8bkplWIOMf
nfl56N5rYUw9dO0Y1V0S6j/JrNs/mT4y06M7VHcy30X9DU+sS0CHckJ4Pvza
AsF04XcKril5TJSZT77NtUGmmKJ3Wql3/xWeQvjlgvX0rusLrojM3/6qtvPU
dlM9b27i8i+Cx4VfkfgsflgwGZlAa+5j9RXr/p2Ff5rZ1jECei58QWJajc3i
yfB9OHt2CjIk/V1cMg97eeL1+rjwuYJpQZ7ciP2isV1XN/2FV3+MdxJ+oq7d
rr76ab3XhF+emTe/TXAG/HlifqlF2fziHMF6wtcv+33gJ6nDRvMcfQvWLbvN
Y2E+mdsnBXcl1vcubvAaQn+8Z82y6ycNfv/7M/On9LW55u9F/W6ivjYVvBT6
/7nkNfwI54fadxXeS/iaof3fKv8leCHx+OF1fy+Z53tR7Tcre61vofbbwl8U
VBYNWRzsd6eq7SmCC4SfnFm+wna0ltp3Es/wjdp/LeiIfkv33yI8h55F93+l
d2iGflTvtKRm+xu2uCaxbZMdRFOOUvMOgi2EPwE/rLqc7vkQ3aLwF9GNhz4v
S60PRzf7bd38PbwwOuCrUuuD0eV2CeXDBC+gr1c/S9D3Va17OTI8j/4Z782C
f4WvLuif95nUJJQZ7wWCNYQv05jWQn+q8ps12yPOKloHh/2hqjZ9VNdbkAh/
CX2z8Ez3LEIXrDF01/U/dK1t3e3H5m0vqwkvxdadQb/Lwj/XPfWCZQzux56D
7eVjwQvC56iPA7D1qtwGW6CufSN8dd3zmvD5ujZY9e/r2rM12xexbTaNbct9
UeVP8rYR0V+z2Gf7gNAGG944xh/btseZcq7Kceyz5nWVV8CP6HnvC/9D158T
/jw2B+FNNMcb58xTbQlvqmtPq+4ZwS/CfxXcKPyGUP4n9re4KXyzZuiXhC8R
vBDac++zgpWx++Pe6wUrhD+vMXyYt434afRbgiV524DnCU/RAart64JMeGtk
IuGfC1qFck3fMhVsK3zn1OPjWe9gC9XvFJWv5J7Y9mhs5x+E5/VI/X6M5e26
55P5xsa+jvDHdG1v/f6i8nN8S5U7xrYJt+bs1jPv0P23C8oVl18R/qogFr6H
+p8uPEF3pfaHp66n7Xt1v99dKt8pqAl/SNe2U/9Pqf+HaraHY/t+J8wH32ua
2k4V/B6b/8V2vUn4XvPV5rW8dbqz0QerzdVqe5VgmfBvBAuEP4mNIJSvKbjN
18J/EFwn/Fr2jPBO2KDhpYJ9hO/N/nwx7L9r9D47FG3TuFn4lrF1l4/Dwwmv
Ik/mzIOvjbyX2n6D7eVLZEHR9R5580fwSX9G5kXhAf+IXI/u8yxBTv1tKrhU
+GWCzYQvj+x7AD+2Qvhr6nNJbJsZtrOPdG2o6oaxByOX9xDeBRlH+GeCrsL3
FHwqvEvqb3mmoJPwTyLfe0Kob4g9FnTy+dhleNceYXyv42Oi38uxCaBbFHwW
e/1tn9o+s4bef03BrhWvueWqX1jwWmwj/Cv19TX0Rvg+ujaLvSrYF91f7LUL
fThO+EqN6fS85aPfhH8Q+d12p03kenjvAwW/Cv8lMg7P/LPwDhrDahpLk6LP
A2SsUWHukb2YX3ht+Hn4enje08K98MJbakyjNbbbwnytoW+8Wc42A+xJW+na
2QXvgV2FtxKchy1bsFdqfvhE9fdlZN+FjWPbvvnGmwhfXzAwb5kFv5+rdU97
jbUfMnLqenxLJgk2EL5hbNlnYCjjj9VXbdsJrk2tv0IXhc33euGLsFHFtiek
qfVDT+St099a+DzV94c2qLywZvkN2ayFYDPhc1XfS/V/qf5dZJ3Ya38Ocy68
dWxdE99029j2Fmw5i8P+ZL98kfeZs1VsezS2xa5hfKvpGc1zlhl53jeRfS1O
EXwbmb5AO84J8/td5LpTBd9Hbr9v3vp89Pp7q819ajsuzP9bddMB6MGeqeeP
ucRnYCPhXXXtbtWdi/1R+NaCMQXTLMrsx2PVdlD4Xnw/cGQo7H5voi9iTtX+
oNTzMT/vOW4Vzs/D8pbHkMuWRl4PJwmWRV7vRd1bEgwR/qj66xL7DOMs44xk
L+AD9BRnr+Zog5xlwObon9BZqf0O0EvsK8LXw5YumMLZJ+iLrZ0zUHhL7YHP
hH8q2Er46NTnC2fNJ+orz/rh/OJe+FHWaMF9Xs060TNWaiwbqvxZzXt+Mv3F
pgXfw89ir8+7/qHYvnhbCWbH7m9P4V2hwZyVsfvaIDyzDXSz4DOQ8+4H9bEx
Z7f6+0L4OzXzKi0KLn+EPaNgn7/lzJfGcKX66QJ/prG9qPJdsX0m8J24IjZv
AA94eezy7gW3nwz9xYYi/CPBJtAv9qvwiwVvCR+mPn4q+Iw4WnhztSlp/sqC
FsLP1LW68PbCP617DHuEb8HYJul37YJ5ton0Ldi1YB+cS4V/W/Nc/Ao9r5lf
hHdZEZ4HzWc878Q+C/qr/IbKjdjtVH5ScJLqYl3bjrLw3sL7CJ5ibcb2x+Pa
AuEZ+l3hc4S/rPaP67eVytuEa5SpP0wwV/ii2Pz4hQX7hzTVGmyj1+yDjq9q
/xHqLhD8JPw/XbulwT4ZBdZL1bJMe8FGwp9Rm3Zq27ZgGzxl7PGs2WfD+m1f
cBvK7G9o6xp63w/rHg++KpwhyAist+4F+9zh/8n7t2Ethfd9uu55Z/535Pyq
mfdhjTPfi6G3wifA43DeCWYLf0jwRihPKrjNa+z/2HUPh/XxHntY+GOcaWG+
eXbrgn0gF+qZ5+t3J5X/Qrej95lb8Jo/NLWMgayBTfU7+MW61ynrtYPwj4TP
Ef44441dvqLg85hz+ZPYdXPDnvy55r3XEPrrlnps0IBDUuv8Vun+4LGE38yZ
zFksuIW1yh4omOdtKnxd+Drh77JnKq6fUTDNXatiGgQtGiD4Q/hq2HMLprGs
0d9q/tYVwUrk6ZrXaptQXh37LnMZvjE06LrY9ALatL6uFbS/ipxxFfPjMwse
A+PjeewH+mhScX+sl3tCmfHni+5jPeFnqM+kaFr4Mbxpxfu3UbB9xeVlundp
wXsa+gQvngnaCv+6Zlr7U97yBvSV/qqCrYU/oj47x/Y5xPcQf058Kd8L9HyB
6ofFlhE+gNZVTHs+LJiebA5dLpgmbVYxP4Ns+xXrV/jZqfkb8M/UV6FiXuVW
5kv487o2LTZN3kn4wNS0nzV6YGp5Gd5odcFOFd+/iL0kKFZMDyPVxUU/n/mH
V2MNMH+MF9pHG+glPAb7D1oP78F6al7w8xkH+mp07U0DvwxNxv/v7ti0+tbY
tL15WH/3CTbn3Qv2D6Setbmf4DbhlYp5L2SUOMwXY60IthDeK7Wsjg/T4NT9
4Wt4EGsm9h5kLx5TsH9Lktr/Al+Gl+qGmbHbU8fzkH0WFyzzDNe1XwueM/pv
JhgsvHPB/hW/1ExLOeM5n0amPi824jur709qPvuhuT8J/7VmWlEOZfYz5+sV
Yb9z3rA2Pii4D3iO+QXLPvAiHVPLO/A8bwX5cF7B/MmXwqcL9i/4PLwztvzE
/chMX4f6TQo+c+8Q/kLdv6vO4Jrlp6cK5ud/FL6GnnckazHsd8433p0z7WLh
bZH/sRUF/7lBqffSvEDvOC/ZS8hY49mLidae8EV8w8T2FGwHawpWr7r+16J9
4KvCGxP7F7cQ1BP7x79SdB/UX6/x3xjZJxLfSNrvh+62ZJ/kvXStmrfPWWd0
KYl9ezct2b8af98DS/YRbpYEHV1kn5/mdfur4fuIjwf3l9XmJT37RUFJeJZ4
bM0F2yf22cF3B5+/PWr2/8MXDxs75RvYM5FtANgCJuiei3TvhYKLEvvLshc2
DXsGej4n0H5kszMz68/HoudrFN+c2NZ0n2CM8AsT93WB4PzE74svOe+4dqi/
H913eB76b3TVTwv6J16vrE1oFrSrjb7Jofo22wjWqlp/gy4IHgReBH3++bp3
fBjTrqpvyDsGop3wczI/j7Gs12j/duZ+E8Hqwp+oWZeEj9ADYX5/1tz+As1J
TG+QbZDRNkotryHbdg/lRP0vV9v/4NPUf073PK/yc+EaZepXCBoS6xeQXdCJ
oRuDv0W2HcKeSO0vvkXJPuCsh/V0bWjBOpjNOU91rb/qjhDsmFieQLaA59pC
+GL1/yO6rIL1jx0Stx1QcswMZeJntg/346/M8/BNrzTahoctr6n62E73r6k5
31qv0TPMfx+N+290DYLDhe+YWjcyLIzvT73zM/hWCf6oWH5FtoLH21T47Lrl
NOS1B9V/EXtE0XPOesbfHN/uXzkrGs0/EttwdrifeA94xTHhfX/ivCraR/3n
isf3pvp+Q9A7dv/slRc4kxOP73vhPwj+wp6fucxYi43u70mVF/DNOP9i054O
gnNizz9ztx0g/IzE9sW7BaOEj8psfz1T+DqNpk/49jbRePYTvp+uDy7ZJoN9
Z394krxpGPUH69oQ1Q3FnpSY37usYH3Mu7HvxzbUWbCv8MMy9wfepNH3d1F5
d2iK8MPR8Qs/SdA3MT+JrAGPCb+JTwK+CdgY99HzO6fWRRJT1D51fBG+4NNC
GX03Zz8xDB1SxzOcUbBOmfKume1X2JpWb7T9Z3rJNrORwmdn9gfCd2hL1R9f
s25k47z9eeCPHyyYJ4b/xZ8IX3l8lo4XfqRgRMk6euJrjqlZV4ON+ICafc7w
PcMmuonwUxLbf6YH+1O3mtf2bqF9P13bR3V7h/mhf2J3pgqO4lmZbSHYitZu
tI8Dvg7QmI3rtidRj837xMT+VaNK9oFivMh38O6PFCxT8T141l6CPonPfM5+
5pB4kBsS2xovF1yfuDynZJsO9kf8m/GNruv5XYUfWLPtCR0c/mA3a0xzI9tU
sK1ckPl++tqo0fwDvpmsqQ1Tx4sRq5bLm15yHkCbZwkmJvbfx/can77ta6b3
41R3Xsn+BfgbgI8Nax7/v2LePv+0v1bjmRzZXrYDvGzVskAGaax6/5zL2VGy
jR5/rlW+ZMI3xH8qse/VhJJ9AnomtneeIDiU9Z/Y/rPn/5SpGx5sQvvWbCvH
J5z5uknjeVjjaQX9qrk/7t2jZBvqlYltc/iUTUm8frBdnlWyDfEW3b8gss0e
2z3jw18BH8NLE/sbPhRscRto/MfVrDvCBoc/J/1jq8Rmh/0v1hw0ydmHvlH4
OqljZSaH8+AEZLC8+XfOxO1Sy2KDw/dj/bK3TxakiWWAZ9V2l9iyATaphor3
LHsXfQBnw9qBf8JfF35qYpBdd4ttu0I/tLvwvrFp/b+Cfug2qpat9ZOLqpbH
oI9nxdYVna7fVOWa4CbhowTbFyyzjQ5lbEO0OSM2fW0s2OZDH/ul3iufBPmB
8RALg3yza2ydFbLQHrF1WcQXoV9BhkWWZf44S7lGvNEOuv6t2n8n2FH4jzXz
NpxhS2vWOaJ7hCelXE7N+58qWAv5hX7ztldgtxgn6FQwTz9e+EjBZ6r7VDAi
ts2B2Lb2sW0R8K/Iqug01hTeInXf2FjaCt8TuSTvmDfeaWfBD3mf4XxDno/t
jWs7ocuI3f+CvPXbYwVN1NdqgnOFnxpb9k0KHk8PffuVBcsQxOhQRne7oaBn
sKGUKpbHsK2g40GORp7uk5r/h7dHRu0d9AfI+gNj2y6PTC0rQLPRr1+SOv6I
WKFvVH907PZ5wTHCj00tW84P/Z2oa1HBMjo8HTaeasU6WXSzfSqO7WkhOLzi
8h8Fx+wQ78P98IPskeGx9wv8I31SRr+JLHxsbNsg8z+iYBmF78v43s3bZjYw
zB/fEhvhKcIvjB2bgE/7RbH1mcje6NDPTW1j/Su2Dg1d2pjYvELH8D3QX7W1
KTdXxJcytS4dGf6s1Drxt8LeQlfO/XzLxsBvHFCxrZeYGeJj+N70zRo8T/gx
qW158OjoW7DZYbvDXrhr3esV22iT0B55lPe5ILauiP6JvUHnSEzRQZn5S3ib
TPSrobpKXbSKB2TT76X7fs5bp4Vdj/gWdH/YJLYR3jZzPMOmur/a6PiGniX7
yHANfSz6373ZA7H974llIcZjQ2SZxLEQLUuOcaBMvAN9EB+xgZ4xvGAZtKXw
LaD50HrBlontl9j2RoT9hb4a/Sg6YfTLheoqljzXLtCvUnWVCjW3fTiPsK+g
2z88vE9zwUkF2/RaC98pte315FDGPxjfYWJbGhsdX9Ze5XaCNsK/1HyvUTAN
wj49KPZ6ZM2xHyizN9Axs0Z3Thxru6NgJ+Gv1ky71izY/s77n1jwHNaFd0kc
m4MPzB6J7z+yZJ/lXYQPUJ//5a3zOzK2/I5t8sQwf/g8oNdEv9kmdXtspdhr
jojdP7HpxPAQ/0O8/U7hWavpfVsljmdqU3L8Gzo0dGnDw/j4Pq1V1wqZhm+t
Pn/PW8eODPSPrq1Zdnzi34np8d+Bd8c2xHojNhUa2TX2/chPrwoODvfvXLaP
97/CD4pdh0yHn8ChsXX70PjDYscboYtBx008IPubuV0j7An8xdcqe0z0t6Lm
2BPm8BtoSc1nITojyviPoMs9MtB3nvd63jbknuH8ZH+/GeSlUuq1z5panbMm
diwpMbX7xo5hR4+LjqYW1h9rbZ/QnvvB0XWheyP+kLnflj2T+HsQi3h4yTFm
+2eOT6Su1ugYNPTg6EhXS20/wDaBjFlN7e+HLxy2T3wZOd84S6qC02Kfj9DO
/9fdMN/YYn4P3wMd/2OxZTZkN+RXZMM9Qv9jUttvia37XG3/1p67scEx8v9U
7e9ELAQxAvOFH6txTFLdRMGgyP4wxJYeJLgntY8svrJtg33g0dSxQzsL7kod
f8nZsZ/gVnR1mWMXDsa/H18+3qfoGE3qpzO/RceATk0dL0Luhd0F9yMbwZMU
HUNCOdMz1yP2RbCB8Ht17eCifXYY39d6xmFlx8x8KHxztemqtuuH9lfo+pnC
zxJMFv5w6ljLjoLbkQegOUXHdPE+2HzQE6Pj2gtbTOrYVXwijk9tY8PWxpnQ
VXjf1LpEzswTWEupY2NfC+XrBB2KjrnjefAA8AIrQ3/we9DKvsGecreuHVD0
GX8Hz9Y7DS07xumDzOc/sa/dQj0xr30r/gZ8C+KhdlfbIaE9Pv/4/hPPN1P1
c1LHknUW3Cc8X13lFrDKBsT5SbwpvhSrB36Z87Rt0TkxsE/j/7dv2T5rxPc/
mDrWdrtg7+b78S3xobhS+KuZY6sODd/nS8EhZcfQsD7gz+A3fw70B38qfLca
Qzwb/mT4ph1AvInwcqP1DOgbYnwZ8YfP2Wcb/WJTXYtKjsmMMvN78OvPBP4O
fcs2Dr9ddd7i70Es6W5hvHwv1gY6+YtSx7/iC7GL4PLU8cvwdnuH9Tstdd2x
YT6JnyW2csei/U2oZ67XCvdfIdim6JiMyal9zvA9Iz740tTxGsSWtgr12Aew
ZXQI44Hng/cjXnxCWL/sRfb8xWH/r7IFhDI2hR0q7oO+kPmuSix/IQt+Rbxj
2TFU72XWaW9YsX0GXTfxdJwd36r9k5l1CugW2OPzVX4jda4VYjo/Eb4gs6/+
V2o/V/iHqXMBoFP9KbUO6Hf1/13RuiFiXF/CRlV07Cv26d/C2YIvGjlRPq44
3wm5UpB/titY5kG+Ib8NsXMLBV8xP6ljU68M4/m77rhN4jd71B0fQS4BdIg/
pM4fUyo5ZrKAL6tgWckxZIy/odFxrvS5MnW+B3Ix/IkOLbWP46LEa5S1Sk6d
URX7dODbQcznDxXHwxILSjzgA1p67wlOEt7IHBSdQ4L+Vs0Buk30Z6nzfeRL
jjH9L/XG+BxbUdG5XdCJ/qvyj0XrStHp/VKxvg5d38+pdfG3hvlfkXrv3BTe
n3haYmc/0PhHa+w/ptYtXh/mkzNk54rXFGsLezW+buQAODF1ToJDKvYJwTcE
exy2m7aB/8YfBtpQC/w8/ljsDWx02Auw2W1Z8T3cW9N4muEbLmgmvGdqXpsY
/aNSx3Til4t/7jDdOzR1rPxzoX5T3dNF964T7ic+kFi97mF9k3Pg0Ir3MHv5
lNR76Y3wPkektl2Sw+FU4f/UHZdKfGrPuuO9ia0tl0xf3ksdC/Os4LvUMeDv
VtyGtstT66qnhnr2FHsLGnBaah8zfM14h9NT5xzYv2KfU3xPR6SmDW+H8RCD
v1vFNAnadDI+rnrXKcSsVJ1DiVxK80IZegMtKYXnDUkdq49P4YDU+jdiFReV
7I+MD/q3ieNd8E1Hx3JZYv0Luhfi49o0OMaUWNMtdG3dknXMm2SOv4c3T+BH
ie3JrOtfH/lB+PqCask8fEvh60DDS+ZxaV/LrMtfp+T+2mfmvaDpG2fWoa+X
OJ4Y3Tr0nm/ROtSzB9gLTZFv+Pa8Q8k2J56/Y2bdci08v0Hv0YtYN0E+8ngY
OzmZqsJnZvZtfrXk+FH8VfGlvUtwnfDbdG2p6uYJpmXOdzW/7JgkYpPuzhwL
8Dz6K+HXC94t2WZyMfQgs+4NmaJ/5nxG5EqaGvg19KH3RI6B6RX0r7Mi6wDR
BV6Y2Rf9y/B89JH4nn8muC6zvze+2q+XQryt4POSdZbUo68jbpWYqoNqzv+F
bFRHpmDu+IYl2zQobypYq2Sd/nqZ49mJGyUGZbO6aTq0fc2S69ur7nq9yw2C
7YS/h/9Ig2OOiT1GnkV2gQaTv+sZzn/VNwrmCP9ec7mZ8E0F3wn/UXBgg2Pq
lpetD8IX9dq88x3drXvqxIaF+9tklnWhoeRLwj53S+ScHi3q1uc+rnIb3b9p
3e/Lu5PDoEnmM4ezhzXKesB/Gd/qewXTaqbfnAWrciRl1l8+GdkmeVjNOZOw
U2Kv3AbfeEGzkm1WrM985lwHzDHPu1P33Je3jzT9E19HrCIxhcQWRo22q0LT
08xnAGcBe6oe9hdrm5wVlMnfhC2OM4bxRerncPXXl5gI4Zfo2nMlx8ywPokP
Qzf9vuAy5kvwQck6WMrEL0AriLmYEvhtePMTBB2rjgFBj4s+96i6Y8LQO6N/
HqjyrmozNGcavV3V9hVySxCzNiiz/RNb59uCi5gPfeMj1La/YHrZNoJhiWkW
tOukzLEj2GBOzBxDuCJx/DexhYdn1lVfE+qHZdb9Dw7PIwZpeM4yA+PHhjk+
cfwStk3iE7BVMEenCL+m7Nw4YwTXlm2Pwjb1hmA8bXVtbM4xUdPKnl/2/rRw
PzF36NnZ86dmjk+HtmBDIZ6PmGbidIjXOT+zTeG6xHuavX2D+uytvnsJri87
np69jY2MeCnOP87OIWF+iXfpVnaMB/m9mqu/mxLTDGjHVYI3S7apMf5bypZF
kPluLjun1ZMV8zzwPr0yxzoRs3W88AOqzgVGjAuxLsT8EgcCzTy27ngxci+w
hu6F9ggOLDtG5I3wfOaOmJKbM9sv0BUdEfyZWH+sRWLOuJ+YnycSy6/EAhEP
/kTJPNstmfPHzS7bJxzfcPJL4a+Lrye5Xu6ARuQdcwD9npU5NuvN8Hy+Od9+
SaDP8IPwsvND/9jXiH1/R+XbWQ+Z1+p/oXxC5li7IWF+qKftjLCesVmOToI9
k7WZ+VtjcxmaOd4M2+SUUMY+j22YmFBiQ8m5QJwUa35i5pxqxMXCc7+ZOT8D
sUDfCKazfzLz7k+F8iaNjpsjfu4elR/OHIvPmXRXOJ94d2L8KeODcG7iPcne
PFXjeVLjuYY1Jry34GrhC0KZfCaXFZ2D8KPUOSfJi0h+xNdS5/Ajlx/5Ag+s
O+caccTwUAfVHeP/SMX5zYj9Z/2RW418fYfUHdP8QMU8PLw8OSTJw0EM+4uB
PyaPDPlketXNv71Vcb6XP1PHmxJbSownsZ7wa+TuIR/ioXXLI+TeIYdB9yB/
kEeRfIqH1S1PvFpxfpI/UtuEsQ1jLz4ws7zwTcU0HdqOvzO5FPBxxh+anJqd
Ep+xnLXocNHbor/tmFleIFfMfN3/e2qdJ7pP8vvsndmeja2bmFdiX9Eho0uG
pzm87pxH2ybmweDFkAew9T+l/v5BPqw5HgFfeWJh0Vmhu4LH6lO3/z3+8/js
44+PDQ9bHj7Qg2v230d/RcwC8QnoKNFVoh/tV7dNGts0NKJ/3fkIOZvxmSae
lPPhpMT2XGIH67HPOnIoNiKfx45lJWaK+Khzava1vi7v/H3Qf2zFxBceWfd+
wi6KffTouvsj1vfwvGOMeF98zW/MO/8jMWbEmpGvcEDdzyMWixyJa8WOceud
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
gNLHcw==
           "]], Polygon3DBox[CompressedData["
1:eJwV13m4jnUex/GbrNkTFdlKWbLEsRzZyU6WHDvHORzbsWYpNGgshRlMtriG
NMxkuTDZNXayS3YSWRLZd3Kkef3+eF+Xz8fnu9y/537u+zmFEvu16Js6iqId
SIvKWaOokn9Uez6KqqM+XR3VePXpBmhKr8BT3j56P3pki6IqmaMoJVUUzUsf
RV/hNd56uXTpouiczHnspB9liqLJcn1l+iGDuge8v/N60clIy2sjm2xGszAT
nfSrzU9r4dUya9CMriPXRC6nzAsoSQ/ld5UrmCGKCmEqfc+MCWZ0VZeEiNcZ
FeV20TvxphmV5BL891J7L0MW3u+8aWo/khmK7OrqmdPC3HxmvooY+o7cWLm2
Mu1QUO1ufmF99sjsxjr6OGJ5d+k76C13UG1jtVf4l7GW/k6ugH9vltmEb+j+
ZsfZObXreg4f09dkh6utY2ZdvKpfC/7rcnPpOahFV5Xr5trW6rkOWeUa8rPJ
7ZHZi070Hrmq+uWj8+MU3cTsDq63jD3eRk36f/xicvf1eoCc+h3iNefdpe9g
I11GtrjaAuoKoq1cDXMicxfrvwSv807ItlebLtwD2BfOALG8nPSLOEzfUlv4
uSha6PoX4SldzozSZhTTvzja6RfLK8eLocuhPa+tbElzV+q1AoV5d3hF9Fum
13KkyuJz4L3Mm0xPQSW55vol6FdFr8rowDtrnyT75dUrD17i/cYbyqsZzh15
wzmrba22iLo38Q59yZxVaaLoZEZnjFZhF95uXiqZ1MggV0O/ZMe1zXluRxP6
qtwGud/UXcVDuiN/jtxRmSPIod9l/lq5szI/ozUvRW6m/UbYbSRyudbrvBG8
RnRj5JP7We1CtVvUbUULXkv7dHMdde1WBx15Z+Tmy62TWYvmvAv69dLvjXDG
eJnXlDfefkvsthjV6Xtq96lNH64VWfR/zP9c7SB1g5HFfjvkhsj9V/9vcJLe
Jhcjl0EmY7iOcL2yuXxu431mExDLu8TLyRtLj0NF3gBea/dBOjo9RtBJqMk7
pdePKCq3xT7Z7Xrfbg9wlE4y+4J+JexREnXlfuTNtd8yeima8W7Zb7T94vRq
hQK8jXK95f4pMwd76Rtyo+Sahmda+M7Jvcvr76z2m30ALcN3V/aSuWXVxaCe
XAV+B7n5MguQOZwBb5B+FfWKDfclr4PaQ2ozq8uEWrwuvHO8onQx1OHdVfuZ
2s7qEvCMXhnuLTv/RWYEGsmd5neWyxGeh8jNKy83Rb/TzvMnVOUd581Su0Dd
fDTltVI71c5bwrMN2XiN5NapPaXuZPiM6LpYxMuqLhva0bGYzrsk8yuqhXcP
bzbvFn0b1Xm7eKPMHaCuP5bTCTgtl58ugHflOtvlX3Y5a48zeIG3VW6A2v/I
fI1D9Bqfeyr/f8w9cBw95eqpHaz2OP8E2tMNZFeacdAe36MMHY/jvNx65ULt
8C7jLeClodPifToOu3iP1T1CDbnu7sm67smLzvgXFAvPMHO+MHdveK8ge3jm
qF1v5wt6XUQbXi+1jdTeUHcTb4V7Um673COZx4jCe0y/Sf65Wq9VqBueN3LX
7VJDpiYaqm3D289LTacKPu8ib7l+39MH0ZK3hzeWN5wehtX0QLu0s0tm15UF
o+nz/KVye2X2hTNQ+wtvBe8ofQxxvH6yLdSmuIanKMXbZ+9i4TnnsziMzfRt
tTvV/qHuWThXXh/eHTs3ohuHfcJ3yPX1c++WDr3win4f8H+Xay/TAZ/SDeVG
OpeZ5sxAWfogf7IZk2UmYXs4E34t/YqEZwbOhXc5xqj9St08xNLVZb8044nr
T0Fjuh/u85qH5ytG0j1db33Xe1mvKyhuv/u8EnLr1K1HxnCP4iEvLrw78Ff6
GjbZ7wZ9M3zG4fmCrbx79H38QR92NjH2uuLsLiPZjG/53eX+IfM5moR73Nzn
7bLZHlvQmt7kWkq53mfq/8SL4T5Ve9kuFdRVRH1esmwTtXfU3UUJXry5w7w/
epvZBwm8I2qnmTtb3Sy8x0uUGyk3ROZDdOEl8cbwRtGfICnM5Y3jjaHHohvv
prmv2WWBc/o3ntAHwu8ku1Sgy4czpLugCu+Q3X5AEbXXePnUzpKZjcq8BDM+
NqO//gOQGL5vcnnkpspMwzu8tbzt+sWG3wsozeuhdrzaier+hkH0kfCbV66h
TAPsovugGe+RPR6jZPhNKFvK+Z5Vdwa9wnuL94V+i+jFmEjfU1vMLiv0Wok0
4TvOz6N2tcwqLKFvyBWQmyMzF1XCd4s/Xb/5Mgswjq6F2rwW9PtoFX77qS1r
v41224A3wvuD/4ncMJnh6MqLkysqt1DmazSg24ffrXLtwm8/xMt15A3mJYbP
Fp15H8omqM1jt7yYFO4fvMKboNd4lKebh3e/67ghcx116Ef8Mrxt9HbkCN+D
8LmrbUw3Cc/i8Nzg/corQb8VzovuLXtLbb1w3+Kj8EwLf6vYb6vdtqF7eC/I
HlbbWl2b8Hynk+UmyU2XmRHOgd6ITM7+Kn0NB8K1ynZQmz3sFn6H0IPNeWZu
kpndMDl893GVV4WuigbmDuSl8OLpzpgQnjmY4Dszlh6DDfRR38tWvpdPzU7B
DnoNP1HuU5nPwjMw/I1j9kO5Gc5zJgrxetpxouuYbN8pGELvlvvJzsn27R3e
6fR3OMFLoBNxjP4Wu3m16Np4W7/3zN1o54v0hfCeppvK5ZebZuZUVKYvIqvc
8PC3DCqo7Wv2VLt8aY95GE3/IHdbbY3wfscW+izSqO1J90A5ted5GXkD6Q/C
dz38NuP9qTae7oQYXh89p5gxS//ZGEEPkYuXyy3zEiaGa8UTXhzdEmXVPuCV
MmMDvRGZXdsp9VWd+VO9UsKzTe7//HMNQg==
           "]]}],
        Lighting->Automatic]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0zlMVFEYhuEfRoRhWNwAxYUZF1QsXUo1sREbE7BUChtRFGRQUQFXZNyF
xEosLMTOaCuxExMtxMoEWoydWFg4GtfnxmTevN9359xz7zlnJne4p627JCJm
MZKKeIa3FREzXLIgojEd0cLtGESXPsHTeCkXOVsW0Yrqyog8j6NDnuJ51C80
r76LOzGGUdxDpjbiLt/BbaT1W3wTFfINvo4CyvURvoYyeZiv4gpS+mW+hFL5
Il/AEEr0QR7A35qI83wOZ/Fb7+cz+CWf5lPow089z734IZ/kHnTjBI6j6HoX
H8NR7EYDZqz3i7W/xkMU9D7ehx1yjr/bu/f4ZB+f8BDuywd4C0qxR591Fs/x
1bkUuAPb8Uiv4o+lEfvlSR5DJ/6U22+ux1N53iFPYRwH9Ty3IiNnuej8pzGB
QUxaQzu3IPl9mCZSSc5EeK3w+mFIuD0qku9d96pRmYyTfaIK1clYxTZFbXKP
vIgXY0lyr76UlyEt13E9GpDRl/OKZC65kVdiFWr01bwmmVdu4ixyydz6Wl6X
PENezxvQnDxH38ibsBltGMCcxTzmd/iGJovei60W2MsPMCy/4s+osyEf9J18
BM02YZRfYA79esaGbcMb+VDq///rHx6VWmY=
        "]]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwNzr8rxHEcx/H3bcqPO8WF7cpgOOWEvwDlxHC7cLKeoijEbqAoxH4DRSF2
FEXd7cRgsBjJjyiP4fF9vXv2Gb6Z4kyhlIiIcRK1PjSTJkcpGdFt8wxTZIoV
Vtljn3OWvb2wFaq80qat8ev+o6UuopUedvVeO8Io03RoZRbdS2yzwwln+qm9
454X+rRLvtzfNNX7f7qo6jk7RJ5J+rUn5t0LbLLFEW/6sb3hlmcK2g/v7g9S
DRGNZKlJRXTaAQYZY8LbtD7rnmOdDQ5o1w/tFdc88Mgn/7x6Nhg=
        "]], 
       Line3DBox[{6, 47, 88, 1691, 129, 170, 211, 252, 293, 1772, 334, 375, 
        1853, 416, 457, 498, 1934, 539, 580, 2015, 621, 662, 703, 2096, 744, 
        785, 2177, 826, 867, 908, 2259, 949, 990, 2340, 1031, 1072, 1113, 
        2421, 1154, 1195, 2502, 1236, 1277, 1318, 2583, 1359, 1400, 2664, 
        1441, 1482, 1523, 2745, 1564, 1605, 1646}], Line3DBox[CompressedData["
1:eJwVzSFPglEUBuCrWJwKbgbYdGMGA8mAG25mZ4ANJj+AoWPOIslA+ALBZDIQ
CASTiUAgEEzOQCB8warTzWAwO0bA5wvP3nPfnd2zf9E+v1kJITRY3QhhjRx7
HNHOhHAsK9RocU2XOwY8MiGy+yxj3vhhV3fP0pza9CZPib7+RFapc0VB90Rk
7iY7DBgn9BM5I+Y7+Uf3wsK8JLvlBkVifUmWqXLJqe6DjjmiR58Rv/qxnDLj
k3ryN3/mBTtpNzhkfdsdeUaZBk27Wf2tucMDPYYc6EfylSnvfDHnH5M1Nlk=

        "]], Line3DBox[CompressedData["
1:eJwNzD0oxHEcx/HvdcMV56GkPMalDBYZ6AxWJblypExypcvgYTMISQZlu0FI
MiibQTFYlYEiDMYrxaDs4uI1vOr9/fz+/TOFpfxiIiJmSFZHpGihkwHSdRHL
5PQERRbYYodjTrmmwXfrPOtXPmlz75JI+zftdDFIxn7AuJ5inh73GRt6m0NO
uKLXfsmDfuGDrPuGik7WRDTTQT9D9ifGdJ45ht1lVvUmexxxwaj9izv9yBuT
7l++9R+NtRGt9DFtr6qPGNE5ZinYmmwreo0S+5xT9Nbt7VbfU+adH/4Bj64z
MQ==
        "]], Line3DBox[CompressedData["
1:eJwVzz8oxHEYx/EHSfn5NymERN1gM5AbKIsyUL9CWdQpyUA2g0IxGG4zKBSD
4TaDcsMNBspguHKDwXJlkJRdR16GV5+nd9/lO5DbTDfqImKZxiSimR6GGGOr
PWLSzrHI2n/jgDwXFCix6+29rfDKJ71anvqWiIQ+MmQ51adsyhLrDGsF9txH
nHFFkVv9zpZ54Z1x7YFfd1NrRDeDjPKsT9hZFlhlWquy4z7khEtu+NJL9okK
b8xrP3y7G9oiOulnhKTDP+wMKTlWvO3St937HHPONRm9aB8pU+WDGn+YazT9

        "]], Line3DBox[CompressedData["
1:eJwVy78rxHEcx/G3EsPdOYNB4vJjcMVgMCDdbDAcoe5KCkUUpSwGSVEG6haD
pCgDZTFIBqPBYEAMBkUGA/kDkIfhUc/36/P9No3PD86VRcQYFYmIFA1k6f6/
0xELDOgiMyyyTokDTrikxncrPOhnPsi4tyhPRqRppI1emu27DOlRZml3H7Oq
N9njiAs67Ofc6ife6XFfEamIBPW00kXOfk9eF5iiz/3Cst5gh0PO6Ld/caMf
eWPE/cu3rqyKqKWFTor2ZLX/9DATTNrqbEt6jW32OWXaW9bbtb7jlU9++AOH
lDKd
        "]], Line3DBox[CompressedData["
1:eJwVzL8rxHEcx/E3g9Q5d2WjiEVCNoMrZTh1g8GVZECUQfkxmJSBMjBIBnUD
ZWCQDMpAKcpguMEg3WAwXDIYxB/gPL7Do9e7Z58+nfOrxZW6iJilMRWRpYM+
cqxlIkZtkRmWWGeHQ0654oEtb8u2QpXv5C9tn4amiBa6GGCYY71gJ5hjmX7t
gm33ASdccset/mRfeOeLXNKoT0dkaKeXIV71vB1nmkUKWpVN9x5HnHPDj/5o
n3njk0mtxp871RzRSjeDpLMRI3aMKRYS3rbpG+5dSpxxTY9+b8tU+OCXGv8n
pTW4
        "]], Line3DBox[CompressedData["
1:eJwVzj8ohHEcBvDvOxguvKckC+XIQvmTxXBiVkqirih/Ekl5F6sUg0FXDAYp
BoMUg4HhBoPJZDAYbjBIYriBwexj+NTzPN/f8CssZVMbSUTMk6uPaKaTAUZI
8xGbzMiLZGyxzzEX3PJAi3c7VOUPvunQD8g1RLTSzRBjdNlPKcnLZPTpV+zJ
R5xzwz2D9gov8hs1ivojdY3+ToF+ioz+v2VaXmCdcf2dXfmQM66pMGH/4Vl+
5YuSHk0RSRqRp51ehpl1S90m5TlWWbG12bblMidccseaW4/bk1zlk18S+x8C
BDFK
        "]], Line3DBox[CompressedData["
1:eJwNzb8rxHEcx/H33WBwzlcGSrnyI4synFIGcv+Aoigl6pIkcQNlMFwxGAyU
wXDFYDBQBkXdYDCZDIYbpAwUBgMlGeQxPPq8evauT0dxZXw5FRGzZDIRrXTR
zzBrSUTCpD1HiTI7VDjhihs23bXwYL/yyR97Wn1DRBs9DFDgUO9myp6nxAZn
2rb3gGMuuKaq56nZz3zwy61Wl/U3neQZoqaPMGEXWWKdF23Lu88R51T50ke5
t59455tUU0S6MaKZHH0MkujT7sfsGRZYpV0ve3epcMolvfqi+zv7kTd+SGv/
qVk0hw==
        "]], Line3DBox[CompressedData["
1:eJwVzT8oxHEcx+GPP4O6ww0GShdFGQwGShkoyw3UxUAZSBIDYrjBYLhkMBhu
MBguGQyGGwyKGAwMNyhKMUgZbnCDgUEyeAxPr/q8v/1+nfNrE6s1ETFLMhHR
RjcDjDBOrjliWhfZIM8eRU644IYHtr190Xc+E/8fjSi4JbWdHgYZJcuhbUaX
WGeLktuuHnDMGdfccWl71gof/FJ2a2iMaKWLfoYZ48k2pQussEnFbUf3OeKU
K8p82R71jSrf1KYi6psiWuigjyEypGyTOscyOdJueS1QpMQ5t/Ta7vWVKj/U
+ecfE7o2ng==
        "]], Line3DBox[CompressedData["
1:eJwNyj8oxAEYx+H30hn8+TmTDOgUSplkoG64K7OSgSIlg/rJDZTBYEAMBmUw
GBCDQRkMhks3GAw2g2IwiVKnDDeSZ3h6v3168wvlyZVMRMyTNEd0M8AYJdbb
InLM2Clr7HLAOVdUeWDHXwdv9jd1si0Rh1ri5hmkwDhneh+z9jKrbHGt7bsn
XFLhnjt9mFf7ix8yrRGPWpPbRT+jFHnRi0zbS5TZ5FPbc4+54JYqdX2CZ/uD
Gr805CIak4hOehmhQLs+53/KXiRlgx592z3ilBsqDOmp/yf7nRp/ZLV/6qA0
Gg==
        "]], Line3DBox[CompressedData["
1:eJwV0D8ohHEcx/GvUsj9wWy4KwaK1UDdQBkV6gbqymBQHhnEZDCcYjAwGQwU
g4HFYLirGwyKwXDDKYOJQblSrF7P8Opd38+vnnqKKxvzSUdEVMj3RhQZZYoZ
FtnJRyxrwjYHHHPJDQ0eaVH19l3b/NGdiThx69chxigxS5lzW0UTtqhy63aU
blxT44EmddubfvFDZzbiyS2rBUaYZJoFXm1LusYme3y6HeoZV9zT4IVfWyt9
wzeR842+iB4dZJgJSswxYCvrKuvsUnDb11MuuKPGM+O2pn7QzqU/PaKLf1WT
NZM=
        "]], Line3DBox[CompressedData["
1:eJwVyj8oxHEcx+GPonDu/FtuvcGvUCxGw9FdGWUy+JdR+qlTYjacohiYDaco
BlbDqRtuUFYDZbCpG05dMXoMT5/399W3sLmzlHZFxDrDmYiESeYoczCos2rv
ss8p59xyT5Nnqv7l+bQ7/JIdiLjQRtxxpiixQE1P2LAr7HHMg3bmXnNHgyZP
+gwfdpsOfdmIFy3njjFBkRLv+jwrdkqFKl/aiVvjhjoNfvRF3uwWbXpyDEX0
uwUSZikyqq/5v2xvkXL4/08/ci+54pE60/q2/692i2+6vXv5A7ehM74=
        "]], Line3DBox[CompressedData["
1:eJwVzSFLAwEYx+HXIopTD9kXUAwTJuwTGCZMMBoMEzZYFicoCn4AkYWFBT+A
yMLCwrLhwsKCLBkWLiyYDIqKom3PwsPveP/H3WajeXS2EBF1NlYidthlnwNO
uFm369X8mQ739Bkw4pkpd9591V/+SXLedctrkRIVDqnxaGvoJde0Gbh1tEef
ISMyUttUv/ghtxoxdku0QJEyFapktpqec0GLN7e2dumRMmTCny3Tdz5ZWotY
TPxHtymwR5lj8raqntLkli23lj7Q5YmUF0q2iX7wPf+2/y0zA592N0U=
        "]], Line3DBox[CompressedData["
1:eJwVzs0qhGEYBuDHShkzfjLKcrIQZTTKEYwyE5uxtfjE2l9RxAmIoihOQBRF
jRMYRVFYW8zCwsrOb9i4ZnF13+/ds3hzMwuT800RkdCVisgzRIky620RnUw3
OhsccEiVS+55YNNdDy/6L39kW93bumWBYcaZ4Mjex6y+yhp7VG378pwLbrmj
Zh/hWf/im450xGPjj3KQPGOUqNuLJPoyK+zwatuVp5xxzQ0/9gp1/Y130pmI
5vaIjOxngCKjZO2J+yl9kSW26LVvy2NOqHFFwT7n/kn/4JMW7xT/9JQ1YA==

        "]]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwNylcyA2AAhdHfi1drsCUbMGMBCQmi7EKLiBYteu+E6L1FEIRgJc7DmW/m
zq1tiNZFqkII9exWh9BFNz30EqkJoU+T9JNigDSDDDHMCFHfUc0wxjgTNNon
dYos08zQZJ/VOeZZYJGYfUmXWWGVNeL2dd1gky22abbv6B775DigxX6oeY44
5oRW+6mecc4FlyTsV3rNDbfc0Wa/1wceeaJAu/1Zi7zwyhsd9pK+88EnZTrt
X/pNhR9++eMf849GBA==
        "]], 
       Line3DBox[{206, 207, 208, 2942, 209, 210, 211, 212, 213, 2945, 214, 
        215, 2947, 216, 217, 218, 2948, 219, 220, 2950, 221, 222, 223, 2952, 
        224, 225, 2955, 226, 227, 228, 2956, 229, 230, 2958, 231, 232, 233, 
        2960, 234, 235, 2963, 236, 237, 238, 2964, 239, 240, 2966, 241, 242, 
        243, 2968, 244, 245, 246}], Line3DBox[CompressedData["
1:eJwNzlVSAgAUhtGLATZ2YCB2507cgDMuQDYgdq7TbkVFsc/DmW/mn/twc2v5
lfVERKxSn4o4TUaccc4FG+mIS73imhtuueOeBx55ouD2WYu88Mobm/aSvvNB
mU+27F/6zQ+//LFtD78kqKCSKnbs1ZokRQ217NrrtIFGmkizZ2/WFlppo519
e4d20kU3PRzYM9pLH/0McGjP6iA5hhjmyD6io4wxzgTH9kmdYpoZZjmxz+k8
CyyyxDL/OJwsnQ==
        "]], Line3DBox[CompressedData["
1:eJwNytk2AmAYhtHfkUPX4B7MkswiRTJliMxTySwzHZlFuV37YK9nre/9mvPF
dKEhhJBjqTGEFlppo50OXppC6NQuuonQQ5ReYvTRz6vfAR1kiGHe3EZ0lDhj
jJPg3TahSVJM8uE2pWmmyTDDLJ+2OZ1ngSxfbou6zAo5Vlnj25bXdTbYpOq2
pdvssMse+/zYDvSQAkV+3Y60xDEnnHJGzXauF1xyRd2trNfccMsd9/zZHvSR
J56p8A/TMyof
        "]], Line3DBox[CompressedData["
1:eJwVz1c2Q2EYhtHflUtjMCUTsJYBMAohotcERwkSvfceovc2H/u72Os56z29
ua2jpb0hpdTKRmNKneTooptiU0p57aFAL330M8AgQwxTcu2IjjLGOBNM2otx
Po6ZYjpqz3SGWeaYj3P2si6wyBIVMntVl1lhlbW4376um2yxzU48076re+xz
wGG8x36kx5xwylm8236uF1xyxTVle01vuKXOXXyf/V4feOSJ5/hm+4u+8sY7
H/Ef9k/94psffvnjH7/HRIQ=
        "]], Line3DBox[CompressedData["
1:eJwNylcyAwAUhtEbLVEieokS0RZkA2YsgF0p0dmL6J3oRO+chzPfzP1vfmJq
bDIREeP8JiM2KLLJFttMZyJ2dJc99jngkCOOOeGUGb9nek6JC2bdLvWKa264
5Y45270+UOaRgtuTPvPCK2+8M2/70E+++GbB7Uf/iFREggoqWbRVaTU1JFly
S2ktddTTQJplW6NmaKKZFbcWbaWNdjroZNXWpd1k6WHNrVf76CfHAHnWbYM6
xDAjjPIPgzI4EA==
        "]], Line3DBox[CompressedData["
1:eJwNylc3AnAAxuG/O3c+gyszIXslK1RGtlAiW5H1xczI+Gaei+f8znnP21ys
ZMsNIYQ8y40htNBKG+08N4XQoZ1E6CJKNz30EqOPF99+HWCQIYZ5tY/oKGOM
M8GbPa6TJJhimnf7jM4yR5J5PuwLukiKNBlq9iVdYZUsa3za13WDTbbY5su+
o7vk2GOfuv1A8xQ4pMi3/UiPKXHCKT/2Mz3ngkuu+LVfa5kKN9zyZ6/qHfc8
8MgT/6b/KJ8=
        "]], Line3DBox[CompressedData["
1:eJwV0EdSQlEQQNHnzJlrcEtuwCoWoFMVxIBZMOecMGDCnDOYEN2S5w1O3aru
P/j96hPNDU01IYRG1mpDaKGVNpKkeK0LoV3TdNBJF91k6KGXPt58268DDDJE
yWxYs+QYYZQxynbjOsEkU7ybTesMs8wxzwIfdou6xDIrfJqt6jobbLJFni+7
bd1hlz2+zQq6zwGHHHFMxa6oJ5xyxo/ZuV5wyRXX3FC1u9U77nng1+xRn3jm
Jb5hfBv+7Erx7nhnvCf+P/+GC0ME
        "]], Line3DBox[CompressedData["
1:eJwVzldSAkEYhdEfI2DAiProltyAVS5A1mnOIkkBc84B8+mHU9/Una7pmV0o
zS1mImKepWzETC5imimKTNIoREzoOGOMMkLdXtBhhhhkgJo9rzmy9NNH1d6r
PXTTRYaKPfTP/b/88M2B/Us/6fDBO2X7m77ywjOP7Nsf9J47brlhz36tV1xy
wTm79jM95YRj2uzYW9rkiEMabNvrWqNKJf0jW/Zyuj/dlb6bvpHOp3dsssF6
enZ2TVdZYZkn/gGDz0OD
        "]], Line3DBox[CompressedData["
1:eJwNylc7AnAYxuG/Q0fO7YRsGVkZZa+MQmREtgO+cWRFvoT74L5+1/U+b6T0
kn2uCyEUaawP4YlHHrjnryGEO73lhmtKXFGzXWqRC875dTvTUwqccEyeH9uR
HnJAjqpbVvfZY5cdMnzbtnWLTTb4clvXNVZZYZlFPm1pTbHAPB9uczpLkhmm
meLdNqkTJBin4jamo4wQZ5gh3myDOkA/fby69WoPMbrpopMoHURop+y3TVtp
oZkmlvgHQ+QnHw==
        "]], Line3DBox[CompressedData["
1:eJwNyscyA2AAhdHf0sozeKW8gBlbJEH0FtGiJEr0XkJ0opdXEjWEnbM4883c
ubX1sUi0KoRQR0N1CM888cgD9/zVhHCnt9xwzRW/9qJecsE5Z1Tsp3rCMUcc
8mMv6AH75Nnj276rO2yzxSZl+4aus8YqK3zZl3WJRRbI8Wmf01lmmCbLhz2j
U0wywTjv9rSOMcoIw7zZhzTFIEkGeLX3ax+99NBNyd6lnXTQThsJWmmhmTgv
vjGN0kQj8/wD47lBhA==
        "]], Line3DBox[CompressedData["
1:eJwV0OdNA0EQgNE5B7ANErRASzSARAHQIDkHY3LOOWdMxubtj6dPN3Mn7V5X
b393XxYRPQyUI9orEW1UKNPaGVFKpYUiBfLp2S6nGUHT90Wzhv7xyw/ffFGw
+9QP3qmTN3vTV1545olHcnYPes8dt2RmN3rNFZdccEbYneoJxxzR7Ig41AP2
2WOXHRp227rFJhvp3GbrusYqKyyzlO5jt6g1Fqim+5nN6xyzzDDNFJNMMM5Y
+g/eHdURhhlikHP+AXVqRv4=
        "]], Line3DBox[CompressedData["
1:eJwV0FkzgmEcxuHHGZHKErJmLXu2FLJmjcgexowPwPc/cz0H1/xm7nkP3uef
//lr/XaEEL5JJkL44pMP2rwzmA7hTV954ZknBuyP2uKBe5r02+/0lgY3XNNn
v9JLLjinTsZ+pqeccMwRafuh1jhgnz1S9qpW2KXMNr32Ld1kgxLrJO1rusoK
yyzRY1/UIgUWmKfbPqezzDBNnoR9SieZYJwxuuyjmmOEYYbIxtvFO8WbxPfT
6dtMfFt8R/xndvgHUCEXrQ==
        "]], Line3DBox[CompressedData["
1:eJwNytk2AmAYhtHfqSNHZiXdkQsQEQkVknmeRebM8xjlGu2DvZ61vveLJXO9
2YYQQoK+xhD+qFPjl3hTCD9a5ZsvPvmgx/aub7zyQsztWZ945IF77ui23eoN
11wRdavoJRecc8YpEduJHlPmiC63Qy1xwD577NBp29YtNtmgw21d11hlhWWW
aLct6gLzzNHmNqtFZigwzRSttknNkyNLi9uEjjNGhlHSjDBMiiGa/Q5qkgH6
SbDLP/heMhI=
        "]], Line3DBox[CompressedData["
1:eJwNylcyA2AAhdHfqydbMKMniK3YgBkLYGmIiBYl0XsnRO+dIAhRzsOZb+bO
rWzvbO0oCyG00VUewh+//FDim5aKEL60yCcfvBOzF/SNV17I02x/1iceeeCe
Jvud3nLDNVc02i/1gnPOOCVqP9FjjjjkgIh9X3PsscsODfZt3WKTDdapt6/p
Kisss0SdfVEXmGeOWWrtMzrNFJNMUGPPaJpxxhil2j6iKYYZYpAB+knSR4Iq
316N00M3Wf4BucJMdw==
        "]]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
fg48rm+kTTT74spIHVVqaujXKQONmY0bTWisg1WyEqkKeewLV9/HnKpi29jH
GLnn39C7d06qKh43yx+ZFKlSDgpwm/S6hrE0JEPbF3k6B7XbPsBzYM4mxqdf
v/8XqfaYn9eVzM/rZHz+kvn9Oq75/bqBj/n9f5nHo4LN41ERHM8M95jj1xy/
iuT433fcseL25EZB1ZN+eHV8TlHjJ/9uC3d73md8Pg+8t+F9yvevh9cZ3mwc
zwR4/4Y3A8e/clq9Il5vhgWdTxDUpblbjaBb/Ltr4a0Mb0I+vwFevl9n5/sH
wXsT3nSlzeMZI3ifcvzdU8w8OaRhr6AKMbw5jPf8u1/dTN7s8D7i86OF38/w
joE3NbzX8TtH8Kbi+Od1qnVjwaoBRmgLt6r+mT2MV/y74+Dl8zojn98Bb0Lh
txC8/P4qFbzTBO8njr/2zx9z3RYNNGqn6n1/beu/gl7w774R5/NjPl8YXs4f
fQbejfAmgded45kieHNw/Fv8tozdWrye8TGG1/XPebVDnM/W77MT3kTwZuX7
2wq/OeBtJXgtX/d9Y8avYvyqRIzfd+Z4V4x3nWunOd5bmtcH1c68PuiLXB9G
m9cTFWX+vdBNuJ7w90X1Ma8/qg/Xnznm9UplNK9XKk4e83qV1/z7peKZ13M9
ebt5fTtpXg8Vf9/1aq6Hs8zrp/pmXj/1Ia6fzc3rrQo0r7fqX663s8zrs+L6
rBZyfT5iXs/VBPN6rktzPe8Lrxe81vV/MLzZzOunbgHvL3jbwmv9PZ0JbyZ4
E8B7zLyeq2Hm9Vwf4nq+FV7+vus18HI/oLgf0Ifh5f5Bcf+gPlh/XwTvNHj5
+6Uew1sH3o7wtoX3MLxj4X2N3+bwfoe3I7yD4J0r/Ebx96gQfsNymbxX8LtZ
+N0N73R4XeA9B29LeDcJ3j3wtoF3Ebzcn6hv8MaDtxO8beDdA+9QeNPgtym8
TilM3pbwjoB3Kbzp4f2R297vEPz64fcivNzP6IPwToQ3L7w74O0E7xJ4k5Q2
ef3h5f5ZzYU394+Y+23V1LzfVhW43y7RLOb+XKUz78/1W+7Pr5r382qWeT+v
83I/v9K8/1dDzft/bT3f8Tyo/jWfB5UvzwtpzOcLdcV8vlD7eb4YYj6PqObm
84geyPPIcfP5RW0xn190F55fgsznHbXffN7R1vPdSvP5SPG8r7x4PtptPk+p
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
PFIckb+aL/JIE+H1gpd+or5j9YvhZX8P5Q/vJQf7fSUnb9YC3tLwThF5pJfw
0i/WXcT+ZqPg/S72N5P7ue0TvPvJX42Fd7bwO1bsb2bt53Yf3rHwloN3KrwX
BG8AvC/x+wreifBOEH6/OcibWfubjYA3Pn7bwdtf7G92VfDugLcRvAuE3ynw
NoZ3J7wX4F0I76NR9n6fi7zZFniD4S1M3uwlvD7wZhV5M8k7wkGe0OKtC28H
eNfBe1fkzd6TN+s1xT5vZuVVvov9r6z80nSx/5WNPMx48jkpyef8ZP8rH7G/
mbVf2ZeLC5r5BfoYV2PyORWNg8wzLBD5HCuPdJZ8Dvkf3Zp8jqvIIyXieNKI
/aCs/dkeLp40oYdLK8PKm/3g3y1WwJ73FZ9vDO8tkUfaKPJXBTieMYLX2r8r
R+TiaTVqDwu6Qt4smH93tdjfzIXPk+/SScT+V01FHikvvNUF70uO/y/Pv9Jd
D6kf9LfI11UTvFb+aoTwa+Wd5or96+JxPOMEr5WXaxE6PFfVfuON4/hdBe9M
4Tcdnz8s9jdTfH9+sb9ZRo6nv+D9wvEf9lgw5vw+P+NlTN6sUlAX/t1Ika97
yOcrCb8H8avhTQBvZY5nmoM8Ydwrny4/WNHhT67Pmp9cLvw6O/BrnT81hd8S
8C4VvLc5/nkib5aY8Xte5M3ikjerL/I5Vh6J64mykc/xEnkkK282iesP+08q
rs/qtvX3iHzOWvI5G7i+bRH7fS3lesjfR5VA7H/FfpJqG/mcULHfl5XPmSry
V/HMv9d6CtfzevByPdQHxf5XqeDtLvb74nqrxsE7WfB+h/cqvJXZ/+o0vBsE
7zJ4x8NbFN6jIo+0QeznNkXkzXwFbxT5q1nwNhS8hx3kzboLv+wXqnzg9Rf5
KytPmI28WTb8KnhXwttV5OvYz1a5wnvaAW8UvGtF3myS2L/uBbyF4WW/VsV+
rXqt2L8uI7zW/U8csb/ZRJGvs3gj4eXvtXLD72h4g0S+boXIE1aA9wS87Per
WH+hPsM7Dt7O8Fr75a4hb9aMvFkO7reriLxZBPfn18T+Vzm5n2d9jSog8mah
Io9k5a9cRB5pv8gjlSOfM99B3qyXyOesJ59j7dfN85FaRj6no4M8UnKRR6p9
x8wjVeF58yK8c+HNLvb7+kvkr8LEfm6jxP5XF+A9Cy/Pm2o3vN3gZf5BbRb7
X1n5qzMO9r+aBm8nB/m6FIJ3D/kr6/n6Arzz4M0n8oTVhF+5n9tw4feWyBNa
fgvCa61fC4J3B7yDHeSvNjnIm1l+dwi/LtIvvP3hvSTyhNlFvq6B2L8uAt7H
gjcbvGfgteZ/2B9e8XytveA9JfwOEPv1HRD5yeXifO72f+QJX5A3e0vebC15
Mxf2N1tE3mwn82l7xX5QdZh/Y/2vYv2vfst8HfOZ6hH5nLTM790jn1OVfE5q
5gOZH1b3yecsZP4wUOz3dZr5xlHkc7KQz8nC/GQg+Zzt5HNusR/UN/JmrC9W
OZj/zEUeaQ15pOvMl56Dl/lz3QJe1v+qNfCGwTsa3g/wRrE++ju8HiJftwXe
UvBa66+3wpsO3mPwst5ZucH7Na/Jy/y8Og/vYXgbi/2+XOAtD+9oeIc52M+t
tfB7FN5Hif47fxUKL+upVWl4vzrY32wyvGvgzQFvsAO/jfG7Bd4AeN/C6w3v
F3id4K0Kbx94e8K7G94l8HqLfF0+8mY/xflMP0JdhDcZ+5vlgTcBfnl/jRot
8oTL4c0H722xv1lneAfks/d7Cd798G6ANwzed+xv5pfHPm92gn5WQfJmf5E3
S0H/6x/yObfI56SiX7ZG7Pd1nf5aMPkc9vdQBv24cPaDyk4+Zxv9u0rs91WK
/b6q099cZ+6/oQqQz7lPf3Ck2A8qjP0rCpO/+pf8VSL6jw3JX00nn2P13+lf
K/rX6jL9zdHkr3bCWxZe/dme9zG85+CtBO/f8MYT+33dgbcovFXgPcX+IfcF
7yV4v5j7sfzhfQ7vc/JIhckjpYX3B3mkFfBa75/qBu8xeHOQv2om9nMz4J0p
/E6C9wq8vB9NVYH3X/xmE3mz/mY/V0XAOx6/7eFlfxUdCu9tmz3vB3ifwusB
bz54D8G7BV5rv5eN8HaFd1CgyTub8/kBvBnhzfvNnvchvHPg9Rbnc0Kxf911
eLPCW5Z83VZ4R8DrDu89eEsmsueNS398NLy+8N5mf7Nd8G6Ddwm8eYaaebMn
5M0akz850cd+fzMrbzaLfM4u8jlNyLeMEPtBFSKfUyejmc9JSz6nKvmZXCXt
80ijydu8Zl+zV+mvN/zoW+LPfI4W+ZzFfP5sejOfk4l8zhi+/5TI57hyPDtF
Psfa36yy/5d7CcsYxvS6ecrsKOz259/dKvJXVj5tpdjPLT/ff07kr6x8VDLB
u4jjfxmTqws/bP7X5c+/e1TwTuXzqUW+bhjfv8RB3myP4PWw8kgx+bqeQf1j
eLsFhTKfEwDvdnhL8vnJ8LKfmM7C9y8VvO04nkLwsj+bGmT5jcmbdQh6EZM3
K/Un5/ZM5M028/kWDvavY781Rf5N/Rhmv5/bNsGbZvPPcZ0TDAvqWnxRs1nr
hwVt499dInjz8vmlwm9xeKcL3v4cz3zBa+UhW0UGFKo97G/jdrmpTU8PrBpk
5Qnbw8v+b3oBn68meLvz/YdEvi7cQd4sE8d/qrWZN/tO3izdJnP8LjXHu7pH
3mwS432TeP/gSq4PFcnnPCGfs4/ryVcn+/2gArnePhD7QVl/j8LJI3Uin3Oa
v1/5yeekEe/TlPt95eL6OVvkc8ZZ+2eSR9pAPmcQ1+eK4v2SHfl73VLk65bC
mwleJ/P6qeNb+3/+tM8jVeJ6u1Dsb2bt9xUA71p443A9zyV4rTz5YXhrwJsb
3mYf/ztv9h7eJfD2hrcsvAnIX0VuNHmtPOEUeKeL96Wy36luAu82ka9LD2/K
+//tdyf5q73sb9YNv+XgJT+vX8LL/q6qELxu8Bpf7Hkbw5uZ/NU8eKfBmwze
KvCGwtsX3onwWvvTtoD3Erw14X3wzZ63BLyv4XWD9zG8Gt5N8O4aaZ8nTC3e
p/kTXld4rf1siwjeVPBmELyj4C1J3mwZebNr3G83+9s+b5b6vnl/vl3kc5Lw
/LKNfM5C8kin09jnrzzJ57TieSGAfA7PU+o8zxfbyef8e8fM5/TleSQR+5vl
J5+TkOcX9uvW68nnXBH7fZ0gnxPsIJ/TmeepzOSRtov8VajImxWAdxm8icgj
pRL7m+UV79NcJd63+ATetfDuIY80Hd6v5JGKwfstyD6PZO1/dSK7fR5pN7xX
4H0Eb3d428KbCd4d8L6E9xq8acX+Zlbe7Al+m4v964rA2wTe1fDmgvcCvDvg
/Y7fOfD+hLcwvIXwOwXePfAehTeheJ/mRXi/wFsf3vrwlobXF95t8L6ANyW8
7vAuhdfliP37YX3hfcz7NMvBuxveFOJ8tvJ1NfA7D94PIj+ZQuTNLsC7W/CO
hdcX3k/wNoC3HLwJzPkxvZi82UlrPSZ5s2/sb+ZO3szKI5Ukn2PNNzI/qWeS
z2ki8ld7xH5fp8X+V/J9muvJ53Rg/pD5ZM18sj7NfCPrYfUr8X5Jaz+onGL/
qxvkc2Y42O9rEHmkHMyX7oHXHd7k4v2hzD/rpmJ/s+li/6sb8K6Ad4jY/6ot
vCPhTQHvdXgP/B/5K4u3OLzWfDXrizXz26qQ4L0ObykH+ToXB/u5eYn81QrB
ewHeNSJ/Zb1P8zO8TeHl/S/6itjfTOYJpd+y8GaF9y68fg54d8F79ry934Ii
X2e9P3QtvPVFvu6wOJ8vOuC13pc6RrwfNrXI1x0T+/XRT9HjRH6yJrx5HZzP
Vt7Myexn6Qzkze7RzwoV79N0o/8VQD6nvchfdSefM5t8zl36a8PJ53iRRxpK
Py5C5HOsfmUU+Zw95JHq0+9jPwrN/hv6q8jndBD5nBEin9OW/mN9kc85JN4v
OZC8mbV/SCC8beGdJvJXK0X+ivdJaWd4feG1JTZ5veE9BG9a8mYGvC7wThX7
uUWK90t2h9faf4b3Z+mISPs8UguRN5O8ZeCd7GC/r+lif7O18B4T+5vlF+/T
DBZ+A+F9hd8X8I6Ed6bgjcf7y+gX69bwjhP7fSUR+7kNh7clvCEib7aEvFlt
eFeI94c6ej/sQ+E3Kbyj4c2C3/bCr3U+/wOvh4M84b/Cbzexf904eJ/j18qH
NBF+98N7UOTNvpA3OzXZPm+WirzKdJHPuU++ZTX5nOsib2a9TzMF+ZwHY/57
/6t45G0exeSQ+v5Zt2itpxso9r9yFfmcpORzrP3Emov9vl6TF6pZ4L/zV5uO
bG7w4Fl19jcr+mf+KpPIX1m8dUUe6QXfHyDet5iS45ku8khZOP4KpeJlG/q8
U9AbM38V9BneWSJ/lZzPT4WX/J7+xO85XPCm5ff/4Wa//5X1vsiQMVlSrT5f
7f+1v1mIyBOG8nkfkTd7DO9UkSd85SBPaL0vtczLshHhm4cZf7dONKy8Rx3D
en/oBMGbQ7w/1Mpf5ef3rCd4rTzhMeE3iuNf9eNSrjNvfIzUpt+gffy7Sd3/
+32atYTf0/D+I/avcxX7m1l+rbyc18I+Qd79exkdzP36gv4V7w+tIvKEi+F1
gTcR399d8CaBN7f7f+/Xt3iifd7MhfG7SeTNvu6wz5tZeaT9Yr8v9kvUzRy8
T9P6+zKSfA7v/1VW/rkYeaQrvG8x6//xfsmp5HPSkc/ZKN63aOWRrP0kp4r8
lZ/IX90mjzST63k7sb/ZbpG/Sir2N5Pv0xzuYH+zT/DyfmSVhDzSMHhviv2v
dsJL3l7Vh9fKY3cU71u0/r4sFPm6mYI3EN4Z8Eq/1vuy+XuhXvI+TW942T9T
9RLvS50k8nWPRd4sO3mzYvDuFfmrbQ7ydasd7G8WBu96kTebLHj/gbeagzxh
ALyDRN7M2q8vLnmzZuJ8XgRvBvH+0Odif7Oe8M4R+bolIl+XA94AB3kz63ye
LM5n6/45l3ifZjLut/OI92k+4v5c7n+VQeSRFPmctGL/K+t9i2N5XnAmn3OX
fM4mni9Y/6KWkc/Z4uB9i91FPueyg/dpziCf0+r/yOe0I4+UkjxSD7H/1TwH
+32xP7nOId63+PIfe175vsXTIo80ROxvdkLsb2bNPxxxkL+y8kgLxP5X6+Et
LfJ1beCdAW9reK08Ifur6/zCb3mRvwoV+7lZz7+J4A2Bdw+8w+HNDu8yeA84
2N/M8nvQQd7MX+xfJ9+XmkzkzdrDO0nsXzdL5Cct3lLwZhR5s/vwjnOQJ9wu
zufR8A6C96TIT3YX+bqTDvKEU0XeTOYnE8D7VrxP8yp5s7LkzWaRNzvMfNoa
8jlbyOf4Mv/2iXzOSPI5vVkP60c+J4h8zgTyZtvJI7Ujn+Mm8mbPRd6M+UaV
QrxPcxz5nJ/m/KSew/zkbPI5VdnfbD/zmQ3ImxUhb9aW+c+s5JECySOtYL50
G7wrxfsWrf3coshfeYj3Sz6Btza8wfDWgLehts9fnYLXWn/N+0FUQXjfwzsU
3urkkUJEvm4TeaRz8NK/UPQvVGrxPs1F8E6Cd4/IXy2E9zO8A/HrDe8oeH/B
ewHeQHg7wmvNb1vvS/0l3qcp3y/5SvBWhncRvFvhXaTt96/LQf4qgXh/aBZ4
t8HrCe8ceI/Cuxze9/DugNcXXn9458E7At6b8NaEN4MD3rtiP7dy8EbBOwxe
A94t8NJ/Uc6cz2vgLQBvPHg/kzd7Wcg+b/bIel9PCzNvNpW8WQL6X+snm/mc
JJfMfE4W+mWXwuz3v3pCfy0l+5ulJp+TkH5cHbG/2Wz6d3fI58wlj1SKfm4n
9vsqLN6n+fGL/f5Xa+kn9iZvdoi82XD6j17kzehHK+v9YifJIxnkkYLJXzUm
jxRKHikevGXe2eeR8gTRLyaPlB/e9vB2h9cZ3ocO8khe8HoK3gfwDhO8bvC2
gvcivH7w5oOX922pMfBugLczvBHw9oH3ObxZ4S361N5vengT4zcjvBXgbQqv
C7wL4B3O/mYX4G3P/iFZxX5fz+EdKHjjwVsA3o/w9oF3N/mrrfBa79v6Au/7
gyZvmq0m7yjO51Scz79Ww/vB3q+1f10SeDPA+xe8nYTfvfBmxG8FeI/gt6nY
v+4OvCc+2/M2hPcjebOc5M16wZsUv0vhHQrvJPJmD8ibtSV/kvX6DZelTbeo
xYuP5Jr6b6ReWcDtztxFw4yML7q4pMn1SgeuCK432Om5ntTcq1uNvd6G15Ni
AaeNSH1kaompz1ef1wWyuIbVX93ROHF81NKKfcN1nMRXJzqlv6N2dIucc614
F+OI19WXO7M/1LdnzkyX/ONrNTlwwO4uFbsaed80bJWzzg3dc0jYlIwtIvTJ
MzW2Dt491igxbF3bNNuf6fw1i2e42e2Vbjnyh5vzsi6GV60tVzeFRuhn5zd3
Hz3lim685sOd0EHdjV5hNdO2jPNGT9tbteC3jw/UrWDXG4We9jIee5XtkMO4
pgv6PFyeLzBCdcs1ZUbDXN2NkOrGiM/nglWljD3fh+wO188KN+vbus5sIxG8
Gt5p8LaBdyW82eG9Bu9RZ5P3CLxBgvcovMvDTN4t8N6E1xXev+DtD28jeItc
MHm94G0F7zl4r8Nbt7XJmxneifAmq2XyXs1g8mYsYvImhPcYvL6Cdym8peA9
C+8beA/Buw7eB/DOgDfktck7FN4b8FaFNzO8M+FtBm8SeBW83eBdDO8ueFvB
mxHe3hZvVXjxG4Bf63zeAu9aeFvC+xxeV3jPwBvubH8+b4H3HryB1vmM36Pw
Zjxr8rrD6wFvI3g94XUWflvCewne3fD6wJsa3pHw3voZ/9qSFCfV6ZBvXev5
R6pRs8v0/OnUwfgUp8bK0Fo3deoaGd83KRShZ9nmhO1L09Xw7H231YV2j/S2
z4OP7B71Wr+e8PhKlZ0djWl3X+WbPzBMl099+dNZ2xMd3zlu+sV1uxvt0s2r
1zlrhB54+PjyLmtu6mLJtxfsmaubEdppR0bjU6SufjLj3Lib1+t65+MXW9a4
o7H0+/6qhVwi9RDfbnsTR15StT80Kdh7uLdRrN20UsXLvdEt5pda9SvHA/Wq
ZZ0fR7a2NYr0zfBvg6/Pdecz/xjVK79U3Q7kC+/zrI2xaFHy3s71I3SLEY2K
RE66ob6fqvCux8YhxsRxl7f6/ojUb0vPK5S4yCK9rfWN8Kyuo42ss5b9Kl0w
XJd8vDd927p39fAbB3ZUTTPUaDT4wot1/zzRB22l0iV4H6rHtE/4McfVzoaT
Xy+fiYXC9OfuhXL5dnmiL00uEhX4rpNR4myVKndeheuO/dIUXnbklq5SSZ9q
4N7R6H3815yroZG6XafP1Ydd36mnjXgXt1RUe2P8h4HBfVNE6gPZTlToc+CS
KuPtsdKzTXtj66gf4f1rvtHuGzwber25r/b9k65A1L32RtxXq5u/fPZcF0/9
olFfz5cqYYYjrcseam98TtZk8Y7ZkXrd48xxkwWfUC+ahlbfOHSa0XHPj48D
n0forUdn/AjeeEWvLDjGrWPoFONkmm7fcr0O00lypV3tX/ex/tezzPvwlkON
jvhdh99X+J2B37/wmwa/bfE7FL8Vhd/L+G0h/PbFryd+i+K3PX4/4rcQfrvi
dwh+l+FX4feT8HvzL9Pvcfwmw29//Gr8Kvyewe9G/L6aZPrN0sP0G4Xf3Pjd
j9/++O2F33v4rY9fP/x2w28i/O7Eb2b8bsdvYvwWxO/P9KbfD/h1emL63Y7f
Hvgdgd9p+J0Y6VL4eedj2rPa0v4vNkXf77UeUm1Moa7GEbynxvsvvLfG+2a8
X8b7fLwXxnsvvHvjvSPe5wjvTfDui/fFeJ+P9xFiXLfBe4SDcd1LjOvmeP+G
90l4T8e43oX3tHhvhvczDrw/w/sLvGfH+w28u+L9Et5r470H3ud0Nr3XxfsU
vNfGewK878d7QrwH4D0L3rPi/VN6+3G9h3G9F++d8b4C7wPxfgC/2fD7Cb/y
up3L1/Q7BL+t8Nsavw3wexW/0/H7Er+Nzph+k+N3DX7DJ5h+U+O3BH6b4vcQ
fkvgtz1+K+N3AX698TtP+F1cyvQ7DL8Z8FsHv6fwWwO/x/C7Hb/v8ZsEv4mn
mH7d8LsYv2OE39L47SjGdTv8ZsHvQfx+XW/6nYffVPjNg98X+G364GWyw4Uf
6G2Ny8e9UPqNWu3f7uPq0a2N2RWTDwx8eUXnDumXJ9n9CHUkJOnglwtbGdvM
z6v55uf1ZD7/7WXM96ty5vfrC3z/NvN4lJt5vukRHI+vefxqgXn8+kEH8/jh
VR1NXpUH3hzm76OOm7+PysLvc8/8PVVB8/dUSxkvFc3fX502f3/lx++fzfSl
PExfagO+uG6r0LIxflUgfmeZ54PyNc8H/ZTzIZ95/qje5vmji3P+lDbPN1XX
PN/0Ds63Zeb5qVqb1x/9F+fnK/N8Vi1Px5zPqjzncxvz/FejzfNffU9mnv8T
zPGiapjjRZ1LZI6XUeb4UgvM8aWucf18Zo5HdTdnzHhUSZqZ43GgOX5VSXP8
qpyM31fmeFfG05jxrjMy3m3m+aNK4fc5fvfhNwF+5+CX81N1wG8czs/u+N2M
3xr4dcfvdPxWx+9b/KbE70381sPvYfzOwW9+/Drhdyl+Gb9qYknT70D8TsPv
avyuwe9f+G2F39L4rYTffPjdJPy2xW9q4Tc/flPjtwN+e+C3Lte3yfitiN9c
XA+H4Xcxfk/h9zF+H+I3IX4H4zcPflPj94o5rlVmc1zrdYzrl3ivjfdvTUzv
3xnXZfEejvc9eE+F96V4n4T3fnhPLrxPxHtzvOfF+3q8N8P7c7y74v0+3ivj
/RTee4px7Y73VWJcV2BcW/fbM/E+H+/38J4H733wXhvvpfBeB+8nhfdueC8v
vH84ZXo38N4K7/54j493H7zXx/t1xrU/3qfj/STew/F+Ce/p8T4I7/nwngbv
lt+u+H2H34/4Vfi1/i5sx28e/C7A7wT8rsKvi7f9dTsrfpvitxB+x+G3JH4j
xbg+hN8O+N2G35b4LYTfN49Mv12F37nmfZdqLfwuwO8ccd3uJfwWx29L/F7A
7yL8BuC3In65z1Sl8VtDXLfH4fc01+1x+K2N3zn4XYTfSfj1w6+PU8zzr/pa
Peb5VxXk+Xfn25j7alXLvK9WG7ivzsm6yy+su1zIusvFrFPbyTq12qzz2iDW
rw2nvkis16vA+rXX4r0A9agnYV1bRta1tWfdWV5R96S+WuyvvsHaD591cLep
p/5o1lPZbMa5Iz2MpDbbmcYbihkfyPOksj3yoL4wdn27WP84je8PEvUr1Bs5
eO/AY+rpqE+lXpD1dC9ZT5eC36Ec9RfU41L3Y53dbtbZVeF31tTZr16dpB7N
47dtZSXDxWZrEP9psT+5uOh6G+oV48WqW+tMWbeoK/M9h8R++L2o38Qj61t1
So4zX1qzfpt6Tup/i33yO/I7dBL1VtSXC79H+J17CL+58JvGZiv4ckAdI63N
Vsb1bl3DWueYxubz9YVZd41dT1vSfr3nSL4/J3W+Xx+m3lT47e3Arw/1rnh8
isfs/A5DRN363ebikXXNyp3f+Sz1zdQDqaeItpZwU97f//WJv6lUkOUxoLf9
+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
3/T4XSP6y7vMfIjyw+90/Abg96iDPpTCb0n8NsLvQfySX1LL8NtA+D1BH6oZ
flvj1w+/RfA7Br8N8RuH+aX++F2G32P4fYrfe/j9xnPQSPx+P2L6jWA+5CD9
5Wz0l1dxv/0U75vwfhHvn/Fu4D0U7+TTVGbhfSLexznwPhzv3mJcb8V7N7w/
wXtuvL/De3G8X8X7eLyT81E18H5SjOuWjOsDePfH+1S838F7NrwPEv1H8ofK
C+9nRP9xFd6bCO/j8N7SQf+xTnL7/mMdvLvifTjeF+Fd4/25yI24iXFdinGd
WYzrEmJcv8VvVfy+wm+guG4vxy95VLUdvxlFf9lZ+LVyI7Px2wi/4fhNi9+7
+K2NX43fvvjNjd90+PUTfuOUMf1Oxu8MkR84g9+s+B2CXy/htwN+74txvQi/
XYXfpfjtL/IDc/HbGL+j8dsIv3nxOw6/8/B7AL+K/nICc15atWReeo3oL09j
vmtnd/v3yLdlfnud6CNbfai91NlfVPtQvy36j7mtPiN9qGDxnu6Cok/Rifn8
hqJP0Yz6VNGHWkW/YJroP3rRp0hus/X7/Z766OeLK9ljvac+uj6W+sLY9YGi
T7GW758o6l+op6VPwfHrSRznWdGfWk69reg3FeR3GET9CfWM1GeI/nJZfuer
1DdSv089mifepCZ1gjLabP6tdrn/2Vc2ul6GukebWHV/0YcyrH2MHfQZ94g+
Yx6O0xW/d6iXp36BfiL7MCtrn94o0We03kffQ/hd7SA/0Op//eV41842+50j
iP7f80M//9dffnY1up4hpv7mT32K8LiQ718s+lDh1L1EH2oEx5lS9KFmUW8p
/Fp92F6iv5xa5Af24LEEv/N56puE39/9tRZt2v1+XjgVf5Pnn32Sc4nx257x
m8zmM53PZ0oQ6/Mz8ct5pcs78N7f6juL3IjlPZHoL1ve7wvv1n7XCcR4b0N9
gPA+l99/pPBeB+8pbLaVYR45f3Mdmeed7s/8T3R98Wuz/mhurPpa4dfaZ3uf
A+9Lxfgdal2X8M6+5Xom9c4O/I4Q4zoOdV/hvQK/8zmRK3hBPfp5OMCjdpff
XHvzFO0c9NbKS9h8tlN/FLu+SOSCrFzKRnE9H0F9vfBbneNMKfy2oj5B+O3D
77BT1DtQbyP8HuB37iD8Dv/fuJ7+pufg3/N/h+5lqxX06M+4fjSB+u3Y9WZi
XFt+u4m65feW8GvlQ2YJvwupT8HjY9FftvZX53dTT6nPErmRdPb9fYUXlYR6
82Zmf/kn/eWdjN/5zG/nYn5bc7+9i75zNvrOwfx9V/QvDtG/cKfvPIv+RSn6
F/W4f+A5Qo+nfzGY+40w+herTpj9i4linQX3M2oM9zO56V/Mp38Rp5V5/0Pe
UvelfzFa9CUL0r+IEv2Lzeb9mJ7H/Vhi+heTRN9Z9qfWcr/3nf7FL9ZP/eL+
sAD9i4X0L4aJvrMn/akh3H/yPKJH0b8owP0q8xK6tOg7JxHra76KdRZL6E91
FutrhtOfqsP99k76U/npT33kuawNfjfi96PoO3vgd6RYPzUcv2uE384n7NfR
8DyiF+B3FH7d8Dsav++5vy2M3y74HYTfdfh1xm/S0/Z+D5U3/R7F7zd/0+9Z
/G7BbzH88rymN4n+VCL6Uymm2PedA/A7Wfgdit++IlfQC7958bsJv2Xxuwu/
8fFbFL9OrI/7hN+T+J2D31747YHfQfgtR9+5BX3nuG3M+/CteC+Mdxeey5rg
fTvef06wH9el8d5TjGtfvM8T3v3x7udgXI/Fez68T8T7Wwfr5vrifSXeC4v1
U5b3y/Sdl+LdiXG9QfSdeU7XV/B+Ge+f8J4A77lFX3Id3heIvvMOvPcR66fq
CO+78J4O72vxngnv2cT6qW9498L7Zrx3xfsUvPfB+xb8FsXvXcZ1M/xuxW8i
X/t1kWXx64lf5vf0AvxOEH3nYeQKauF3OX6b4LeGyAt1xG8wfsvhtyV+W+N3
LX5T4Peh8Ms8iZ6J3+9iXB/GbwH83sJvsPAbH79pHayfmi7GdSB+uwm/dfGb
E7/MN2rWNagN+E2H35zCbzP6zlvpO69jvrqieP+s9f7oVaLvnJJ6Q9G/sPbJ
rJrfvv6T+kHRp/jBPPxF0Y+29mnsIPrLzszzy37lB/p9nUX/wtpPsiL16tQ3
DjbriWxHGv9+b3Uim63z7/caH+C+K/r/e1KPF7u+VvQv0vD9F6hXEvtSyj5F
U44/lPpP+lNdqT8S/WXrd7BNsO9PxaF+1N2+T2H1nWsXsu9rTKd/FP2c1eH3
+7Kdbbavsd+XHV0fTv3tsVj1scKv1ff0FX6d+P7xoj91H7/zRD/6FXU/sS9o
SX6HBeL91Nb+mZ2EX2t/1PLC71n8RnPN/f2e7uj/1vjdX779h/fITOobYtd3
CL8p+P4bov9o/bv78ZgIv+k4zpOib5WXemrRh8qHx5LivefZSv93f8r6/XsI
v6P4/aOfE71+vx/c8mvNh1wR74VPzviN/nxBPh/j3fr8LOH9mQPv36kHOtjX
97AY70mpDxbjN7n1/nHqqah/ZVx3c9B3ruLAe2Lbkey/31fuzLi23lee2PYo
B/V4sevLRd/ZyqucEOM6D/XL+HUS/cf7YrxXo/5UjOtM/A4JxbhOWfq/8wbW
77xZeF+GdxdbxRG/35PubPN5Fvs96dH10Wbdlv9ErHolB++LzyO8f6XeF4/s
K6v3M37HivF+gvoKPLLfsqrD77CFujP10tb1XOwDnJXfuY7ImfzPr+3h7/ez
O8fMg1wp/+2PX59b/6s/OmTVt4hxndTBuM7gYFzn5DiPi3Ft5QoSCY/We97d
xLguWPq/cwUh/M57xPU8mPpZ5rdrMr/tw/z2JvrOC+k7d+Hv+Bf6F+XpX5zn
7/5e+hfJ6F+M5j6B+wrFfaP+Rp6tG/2Ln/QvKoq+5Cb6F9a6/kf0L/LRv7D2
AShP/+Ic/YsR3BfloH+Rg/7FQdG/6MP6x7miL7mC/sUm7tPIgSty4Don93VV
6F9ko3+xmPtA7htVffoXcblvZJ2+Kmmu01c27jPJu6rB9C/WsT7OV6xrHkTf
eahY93qF55oI+lMX6U/l5zloKP2p9PSnanFf/Yz+1FT6U6W5D3diXXNJ/F7H
L+vo1SdzHb0eK/xWxu8n4TdZF9NvBdF/3IZfQ+QK8uD3FH4b45ecvJqLXw/8
PmH9Y6DoO4eUMP32xu9E/J4T6x+l32z4rYzfnPidjd+lIlfw7r19f2ofuYK3
50y/zCeoEfidlsx+fWsD/LbC71T8+uP3IH4/4/cQfuPidxR+39N3fkTf+Th9
56z0ncczD/YI78/xvqWJ/Xp2K29wC+/kitUvvE/AO/lz5Yn398J7XLyXwTvP
I2oZ3kvj/Rnec+L9GN6Zp1LMUylvvOfFe1LG9Xoxrgsxrn3xPgXvO/G+FO88
j6suYj27wnt+vAeKcd0Y79nEuH6L96yMa/ZjUV3xfhTvk/BeFe+zxLrmaXjf
4sB7VryPxnuo8P4QvwmemX5nO1jXbPnl+V1l4rrtJ/ajmC72K7D6zt5ivwLL
L+tTlBt+X4g8yTb8tsHvTvz2w29R/N5hXE8U4/o6eZKx+PXD7z787sJvYeG3
FH4r4LcYfrc4WNdcWPSdv9B3LiHyJMwXKb9k9n3nxvhtgt+l+PXF7yL8jqXv
/IV1zWWZl57tZc5v/2B+OwXvnQzoZb8usiPz3l70KQ7SpxjNPPkQ6vuo36Le
mP4F6/t0RfoUn9PY9y/aU+8j+suNmOc/KN7jWZ66n+hfzKeP4F7KrN+k3uGT
Wf/db226oVhMvjUq1vtqo+u9m5j1Vx9i1fuJPsV6vn+GqLtFmfUA8X7bORzn
SdHX2G+t+xPrH0vzO8h+dCarbyXWP9bnd35FfR319h/MegGbLZFzGcPIFX0z
uTPWe3Kj616JzPrKrbHqw4XHpnz/XNG32mp5xyN9NF2W48wi1jV7UY8Q/eUh
/A6lRf/R6k8NFH638/tnFX4n4Deay+Z0N/zw7/9miPV+3t//P4tZr5g2Vl3m
Cqz+1CxRz4pfjv9PrmAGx+ki+s47rX40Hl/hsQi/Q3Gxbj0V9VHCb3V+5zfC
bwv8utlsf/1+L3Bumy3b7/cCh/G8cKqn/fjtzPiN/nx9Pt8h9uf74Pcf/Laz
3iMs+tF7qbfHO+enLszxJxB9yYbUT4v+Yy9+H7mPgbXeebbwPh0vCu83qHv+
b1xv/v2eYlebresi71JB1nNTdP0E9SOx6wuEX6vvuUv0nSvgvYTIk0zkOJsK
75uolxF+0/A7tBbj+jN9ycH43S+8P6W+nnpzvOe2+fT9/X7kPDafWr/fj7wd
rmivI6j3jF3vjMcDeGzI94+jTr9br6c+UKxrrsbxZxR5ki7U9wm/1nu9v4nx
3pX65xL265d38/uvwe916uPxm9lmW/P7vczZbLZ7sd/LnNnmo6gnOhOrngaP
90ReyEPUret2DuHXOv5qwu8a6h5iP4p4/A4NhV9rXbMc10X5naeKHFEO6uQ5
NXlOtYv76jf0l9PQX57N33HZh3rB3/2F9Cnc6VOs4z6hI32K1vQprib77/5y
XdF/XC76FNb+jd70KS472OfNU6xrbkWfYqdY/+jHPm+due9KQx/Kiz7FBO7T
Got1zcu5r/tFn+Ir/WVr/6LC9ClG06do7KAP1Uj0KarTp0jMfek/9CmcxLrX
TA728bP6j6fpQ/mK/vJQ+lDdeF4+RB8qE32ohA7Wt8b3td9/1cBvOH7JK2ry
ijqL6DNa65rbij5US/x6ifWtXmL/Vfbp0l747YffAPxmwe890Yc6QR9qDn5d
8DsKv9Mc5AemO1j/eE2sa16F37rCb5TYn9PyW0Psz2mtf0wi1remwW9usa7Z
8nsPv3vw2xO/A/A7E79N6C83p7+clv6ytX9jFtFflrkCa13zTNF/LO0gN+It
+o8N8F5TrGtmnkFVFeO6rdivQK5rbo73xXhviPc7Ylx3NPd/0xPwnh7vTfC+
GO918E5OWJ/F+ze82/Bu5YoL4p3963QdsX9jfta91hHrmguI/Tk13sPZv3Eu
3vPjPSXeI/Aehff0rGevjff+eP8b7x5iXGfA73VP+3G9Fr8JGNdT8avw64Lf
5vgNwG95/PL8qENZ11xarGsuhN8y+GW9g26A3/P4rYjfpuK6be27azjoL/uQ
C5ohxvVw/Prjtxp+j4v9KGR+4KLIBc3HbzXhl1y6zovfqfgti99nzBcdxu97
/E7Db278psHvI/xOpL+8mv7yEualt/va95et90XmnG7fn8pGfafoN1nv3QvP
Y9ZdxfpHV1+zH3GJfsRH+hE1qF+gnpF5eIN+RHbRb2pHPSP149S9RB8qCf2C
t2Lda7NhZj29zVb093sqs5k53vJWjjG97Uj5/9WjDln1JaIPlY/v/ybWx1Wj
fkusf8xNP+KzWP9Y18H6R2tdsJPoX9ymnlP0Kax1x/fE+sf+rH/MabPFe/is
+u88dpwTsd6PGV33e2DW/Y/Fqldy4He6A78XRE7gnrV+U6xv/UW9AR6z4LEQ
v4PVf0xD3VovXEv0m3LxOz/Gb23qQ/Gb3War9vu9nNGe/52ZuWLQFzxG14tQ
f+Mfq75f9BPT8v3pWLdegXpJ6kF4TIDfpxznA9FnTALXZbH+0Xq/Zy7Rd7by
A9dEv8laX7xU+O33v/WtZ36/DzRnjL/9f9Y1H5ny3+uaoz9f6/fnY85zn6g/
65rjCO/h1vtShffCeI/ja+/XWveaj/pF6l+ol8FvDrF+uZVY73yB31OJPrLV
B7whvA/Be/Rz4t3f7yfNb7Ndiv1+0ty2I8+pXykXq75Z9B/z8/1J8G5Qr049
RPhNw/F/F/sVlKe+RoxrZ2s/B7Gu2VrvPNtBf9nLw74+Du8ZbT4Zfr8XNZPN
dvX3e1H/gSujraIr9YonY9WLiT7yc76/l9ivIA9+z4qcgHYwrh9Rt/adSI9H
63ew3jObQnhvKcZ1VgfXbcuvm802//f7WLPYbE6x38fqZvPZQt02KFZ9o/Cb
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
Quj5ZzjzTwviJOel69ljHWz5U/LsZuo5DJ2I/+l2Ff+0rz73wBjFuQfhjuce
HCJ+u9kqfgjxXZLzMlGdV5CwyOG8gsrEPxPjPP8XN4yF9vMBkufDGY7nA8wg
fmn4vyS+hxE+m+/xs11z+B4/I/Fn7lPxDxNfr5easg5ZJNZL3sw/wWK90Z75
pzXzj44znDgRYv7prf6+WzFivTSC+KOJP4z4JvHHivktE/PbChG/Z1UVf7GY
P28Rf4yIX5/4Y0R8fT9dZxF/MvEnifVYAPOnPreql/hesjPzRh/mh8vUIXzM
pr9zdOvBd47dHb9z1HURa5mHX7HvX8xYEW7/rjA5T7c6flfYifheV1X8QNoX
Nrp347vIWMfv+LIT//htFb/Gf/OnB9/fbXT8/m4J8b9ifs5DfE8j0xi+d6vg
+L1beeJvg39P6r08/vH278tKpuT9m9Tvy/T8fCve+XtVvW705LutumL+XMz+
bAbG6wfmn0rMPzXE+vMV849NrD/Xct9uX7H+3Mf8+RT/cxTx8xL/mJg/9xC/
ppjfzjI/TxDxw4lfRMzPRYm/V8yfeh3eRMSvyvozSKw/jx90vod9CvPGTOYN
b9Zdum58K/PPI9/Uuv3a2VXdfoUdDnX7vxCnJ+vDJaVS6+RD3l9OqZOPLe5Q
J6/Xh0uJ/y3rt+S8qWSvS0+ebzM61qU/IP7lGSr+1P/mz/X2enL7/LnYoZ48
M/EDmd+alk5dD39jr99O5vnCsX57j/6OAP7RxHc3QnZTL+1zxKFe+lwdFT9f
LN8FlE57/uwq1p/jmX86ifnzK+afwem8bw6W8yfrzzAxv8URvwPxeT+yGhF/
oYjf5YjzuRz6ffB5ZRU/RMxvpfo5xx9H/LexKn5t4mvfYx6+RyMRf22VtOfP
2sSvRHw9761j3njEvKTroDow//ycTdehJWT+U9WhbXWsQ3vL+s33jvP60N3w
N6n76uJY96XPKe142Xn9ltfoftxetybXn8eJP5f15zni5zJCrlIflbeOQ32U
nt+eiPVnQSOgoL0eyb7+dKxH0vwV4O9PfF8j9kfqf75yrP8xzqr4A1h/HhHr
zw3MG6Fi/gw57Dw/8PfR5O+v+VHMb+FiHavnn3bMP6PF/DaS+U3nG+9fpg/x
r4n57QU+z1gRfyLxN4n1YabfnO+j5/kyOxB/LfGljzRHxD/M+nOviP8j68+G
xP8/InWLKA==
     "]], GraphicsComplex3DBox[CompressedData["
1:eJx1nXm8ntPV/mMWY0LEUPNUYqw5whZTNKi+b6uttmgkqqgh5ogYy0MJVfSh
5hCHcBDKqeH0aVotaauaqiEIglJaihhq7u/3cdZ3nff+Pvfjn/PJ6u5+1nWt
fd3r3nuvve81xh75te/PP2DAgC8NGjBggf//99Ejv/rLky7tbfH343/Omzlr
2joz+PeiJ5y39xnr399aaJ+zFv/g4bXSvv0pD719zv33tjb7yz9eX/OpVdJ+
9FkL/OQnX7mntcO397ngX38cnPabJu+wYfP5ntZDbx06c7shA9L+3MUn/eHK
o+5uzR59yA2/2PHtX2Nf9opfHnT9Ane1tf/yde8scPPP7mx9Wf2fMm2TKdO/
eEdrI/nzgwOenHTEMbe3+d/3t7sNbx+uaW3t+/zvaq2v/od87ufU1q61/kxp
PSz/Z33+98o2vH39N9vwnvZ5Pz9tjazls9Hmz7Wf249vLSr/B8R/xhvti9tH
/8X9hz+l3p9m6YC3GO+kPn7Kb9U++Cw71/bf1ebPdn3xKo7XY33xLcZ7cN94
aGsf46cMU/8x3orH2zJ947PMqh/PbXhj/BfHN/RSrJfSp6+ylfwJPbb5H38T
L7rlf1945wnvXjRh9bTz9zs/32DA4+NWTTu6vvb2zR95Z+bQtKPrU65a48tf
GbRY2tH16UdPmHfSYe/8Gju63vqVuw7Yebkn0o6u75k933/WO+7NtKPrrtHT
pyyx7CLZP7q+c6GPJ3599+XSjq7/+svD1/zuCasIb3cbXnS9t/Ci6ynCi64b
wouuLxZedL278KLrx4QXXTeFF10bL7p+THjR9UDhRdf71OJtlC7hRdf18W0W
xxddHyG86Np40fW1tXi7SrfwomvHF10vKrzo2vFF18aLrn8qvOja8UXX69TG
t6e8Irzo2vFF1/cJL7qeXTueewvjGX2i69aqt3z65k7LpJ3/30brD17yvGcG
p52/b0647MvHXrlU2tH1chu9+LXB6y+SdnR9/YVzfn/SlgPSjq63uf6ISS8+
+sGvsaPr4098ohw//qO0o+vNhr731pyvzZ/9oOsBY295ZYcHB6YdXW976ux7
/7nvIOHtbvUIL7o2XnRtvOh6JeFF11OEF10fJLzo2njR9erCi64/PaCKF13v
ILzo2njR9ea1eBvFeNH14Nr4Novji64PFl50PVZ40fV6tXi7ivGia8cXXfcK
L7reUHjR9VvCi67XEV50fWX9eC6b1sa3pxwlvOh6TeFF1wM1ntH1NrXjubfM
CLzoEF0fechOO668xoppR9f/XHS5s9ZY5Atpp79hT166x+unrZp2/p5/yvCX
9lpljbSj63++e8W3/jNuzbSj6+lvvvqXaZf229H1vGv+u9GNU/v7QdfXHTXp
Zz/6y2ppR9d37DFlpUeXWznt6PrD/ed86fRzVhTe7ja86Np40fV6wouuJwsv
un5DeNG18aLrfwsvur5eeNH1L4QXXb8nvOj6KOFF16/V4m0UxxddX1Ab32Z5
rR5vMV50/ZbwomvHF107vuja8UXXPxRedP2G8OZ7uPCia8cXXf+rfjy34UXX
bwovujZedD1deNH1+7XjubcwntEbuj5n3s1jljx+/bSj6xu+/foD8zbbIO3o
+p47b7j0+NGbpJ3fueSn323+e8hmaefvf8976sWujzdPO7re+KHFVvn46i3S
jq6vWfbQH54zo789uh76g/NPH3X3l9KOru/fb+AR6567cdrR9UsHL/n43b3D
hLe7DS+6Nl50bbzo+iLhRdfGi66NF10bL7peQXjR9a+EF10bL7o2XnRdj7dR
fim86Lo+vs3SAW8xXnR9rfCia8cXXRsvun5FeNG18aJr40XXxouuLxZedN1h
PLfhRdeOL7peXnjzPVx40XX9eO5NvOgKXd9+6tzb9hy3adrR9bDRly557/9+
Ke3o+oD5Vt/n9d9snnZ0/exzD2wy8fdbpZ3fH3rpnhNv3XJ42vl74ZgFnlpx
7W3Tjq6XVXt0/bT6R9f2B13bf3RtvOh6A7VH1+PUP7p+ptafKa0h8h9dGy+6
Nj/oek4tn402f9C18aJr40XXbo+uD1T/6Lo+vs3SAW8xXnRtvOjafKLrsfIH
XTte6Np40bXxomuPH3Rtf9C1xye6ro9vTxtedG0+0fUY+YOu68dzb+JFP+j6
rNA7dnT9bDwfsKNrnifY0TXPH+zo+sp4XmHHr2HxfEs9x99P43nIv9H1T+P5
iR1d/yKet9jR9XXxfK7i7W7Di66fF150bbzoeojwomvjRdcbCi+6Nl50fbHw
5nu48KJr40XXxouuX6jF2yjGi67r49ssHfAW40XX/xVedO34ouu7hBdd3yi8
6LohvOjaeNG18aJrxxddX14/novHM7r+THjR9SXCi64dX3R9Te147i3EF52g
6+/G+zl2dP1SvM9jR9dXxfs/dnT9o5gvYEfXz8b8Aju6viLmI9jxd3bMX3J/
K/6eHPMd/o2uB8f8CDu6fiLmU1W83a39hBddvyy86Poy4UXXpwkvujZedG28
6Np40fUpwouujRddPym86Hof4UXXji+6Nl50XR/fZnmuHm+5XHjR9dPCi64n
1eLtKsaLrp8SXnRtvOjaeNG18aLr04UXXT9dP55LfXx7iuOLrh1fdG286Nrx
RdfoFz2g6wdiPQ07uh4d62/Y0fVysV6HHV0Pj/U97Oj6olgPxI6ux8X6IXZ0
fWesN2IHx4axPomdvwud2Leeyb/R9dax/lnF2936nfCi692EF10bL7reQXjR
tfGi6xOFF10bL7peR3jRtfGi622FF10/KLzoelQt3kYZKrzoeuva+DZLB7zl
eOFF17cJL7repBZvVzFedD1ceNG1xzO63kV40bXxousivOj62vrxXMbWxren
TBdedL2e8OZ6uPCi6+1rx3NvYTwz7tH1fLH/hR1d/yn2y7Cj66mxv4YdXTdi
Pw47ur469u+wo+t7Xu7b78OOrr8f+4PY0fWJsZ+IHXyXxf4jdv7uGfuVVbzd
rfmFF13PFF50fZPwouum8KJr40XXbwovujZedH2Y8KLry4UXXRsvujZedO34
omvjRden18a3WW6sx1vmCC+6Nl50fWot3q5ypfCi69HCi649ntH1g8KLrj2e
0fVFwouuH64fz8XjGV3vJ7zo+kjhRddThRdd71U7nnsL8WV8o+tPKvU53anr
aj1Sd+q6Wv/Tnbqu1gt1d6g3605dv1Cpz+lOXc9Se3S9l/pH15vIn+RD/vPX
eNG126PrDdU/ut6j1p8pbXjRtfGia+NF17vW8tloDZM/9fVm3alr462vN8v+
y0bqH12PqvXH9WaJtxgvum6pPbr+Sm3/XcV46+vNulPXxltfb5bjpw0vuv6q
/KmvN8vx3IYXXZsfdL2j+kfXw+UPuq4fz72Jl3HsfJ3jm7qbeD5gR9fNeJ5g
R9eHxPMHO7rmeYUdXfM8x46uz4jnIXZ0TX7Ejq674nmLHV3zfK7i7W7Dy9/R
wpvza+FF10cLL7o2XnRtvOj6auFF12cKL7qeKrzoeqbwomvjRdd71uJtlMuF
F10bL7rugLcYL7o+UXjR9Xm1eLvKdcKLrmcIr/M1dnTt8YyujRddnyq86PqE
+vHchhdd/0x40fXpwpv5WnjRdf147k28jFd0Tb0KdnTN/BQ7ul4g3v+xo+u1
Yr6Q76+ha+aP2NH1D2M+gh1dXxrzF+zomvk79pz3xPwIe75PxXyqire79Rvh
hafhwstf40XXw4QXXd8lvOj6YOFF18aLrrcSXnRtvOh6V+FF144vuq7H2yjG
i67XqY1vszi+6NrxRdcXCi+6dnzR9SDhRdfGi64dX3RtvOh6IeFF144vur6v
fjyX+vj2lIuFF11vKbzo2njR9U6147k38TIu0fXYWE/Djq6fj/U37Oh6lViv
y7wVuj4z1vew53p4rAdiR9fXxfohdnT9Yqw3YkfX58f6JHZ0PTXWM7Gj6zdj
/bOKt7t1kPCi67nCC39fEF7+/kh40fXzwouujRdd/1140fWFwpv5WnjR9evC
i66NF12/WIu3UYwXXdfHt1kcX3RtvOjaeNG144uujRddvyG86Hqc8KJr40XX
Hs/o2vFF13Pqx3MbXnTt8YyuHV90PUV40fVrteO5t4ytrIdPadu/xo6u2Q/F
jq7ZT8TuejPs6Jr9O+zomv1N7Oia/VDsuR8S+4nY0TX7j9jRNfuVVbzdbXjR
tfGi618IL7z+VHj5a7zev67232zDi66HCi+6Nl50PVd4vX+t9qUeb6MYL7q+
uDa+zdIBbzFedH2N8KJrxxddGy+6fkl40bXxut5M46cNb577EF50/Wn9eG7D
i64dX9ebYUfX9wovuq4fz/3714wz15thd70ZdnRNPRJ215thR9fUI2FH1xdE
fQ5215thd70ZdnQ9Vv6g6w3kv+vNqrimtbVH1+7f9WZVf6a04eWv8aJr43W9
WbV9o80f15thd72Z2he3R9fuH13X+9Nfbya8xXhdbyY+i/l0vRl215thd71Z
zn9C126Prsepf3Tt8eZ6M43nNrzo2u1db4YdXR8gf1xvJv0mXsaT8zX2fA+v
1KM22+rNsKPran1vs63eDLvzdY5v1Zthd70ZdtebYXe9WRVvdxtedP2C8KJr
43W9WdWfKW14na+r/Tfb8KLri4QXXd8lvOh6ivA6X6t9qcfbKMaLruvj219v
JrzFeF1vJj6L44uujRddO77O19hdb6bxk/lR4604vnmeq348t+FF158JL7p2
fPPch/Cia8fX+Zpx4/Nc2NH1B/E+jx1dc94EO7q+IeYL2NE151mwo+vbYj6C
HV1z/gs7uuZ8TdZjha45b4UdXXM+q4q3u3WU8KLrj4U338OFF11fJ7zo2njR
tfESH+Pl7/nCi643EN6cXwsvunZ80bXji67vEF50XR/fZumAt9wqvOjaeNG1
44uujRddvym86NrxRdcfCi+69nhG144vuu4wnkt9fHva8KJrxxddezyja8e3
/jxXI3VdXT9spK5HVdbfGqnr6npdI3VdXd9rpK7Pr6wHNlLXp1TWDxtt9WbY
XW+GHV1X128bqevq+mejw3p4I3W9i/Cia+NF18OFF11fKLzo+ofCi66nC6/r
zartG2140bXxomvjRde71uJtlGWEF13Xx7dZOuDV+nAjdT1NeNH1sFq8XcV4
XW+GvX49vJG69nhG18aLrkcIL7q+pH48lzNq49tTbhdedO34ouuFhRdd14/n
/vVwxgG6Xij2v7K+IXT9SOyXYUfX3F+BPdfDYz8OO7qeHvt32L1/jR1dHxP7
g9jR9Rmxn4gdXVOPhB1d/2/sV1bxdrcWFF50bbzoeprwoutLhBdd3yi83r+u
9t9sHSC8+VwXXuJpvPzdW3jRtfGi67/W4m0U40XX59XGt1kcX+9fY0fXXxVe
dH1SLd7+ejPs6Hov4UXXxouuHxZedG286PoK4UXXD9SP5/Kn2vj2lEOEF10f
Lrzo+nrhRdeOL7oGL/F2vRl2dL1Y1Ldgd70ZdtebYUfX1F9hd70ZdtebYUfX
o9U/ut5I/qDrheW/682quKa1tUfXw9S/682q/vTfb4bd9WbV/ptt7dH1jrV8
Ntrwut5sgP4zXtebqf/i/tF1vT/99WbCW4zX95uJz2I+0bX5d70ZdtebYXe9
GXbXm2FH1x5v6Pqp+vHchhdde/yja+sFXW8uf9C19eh6M+LaIV8XdK3nQ0HX
U6rPk4Kuj6w+fwq6PqL6vCroer5XKs+3gq4frj4PC7q+qvr8LOha7w8FXSv/
FnRtvOha+b2g66uFF13r/aGg6+8LL7o2XnR9j/Dm/Fp40bXxomvl30L8jZe/
ji+6Nl50fWJtfJulA95ivOh6svCi65/X4u2/3ww7ulb+LejaeNG144uujRdd
N4TX9WYaz34/YfwXxxddnyO86PpO4UXXjq/vNyN+6Pq31flI6npE9X0+dT1/
9f0/da35Qupa84vU9anV+UjqWvO1Ul9v1khda36Uutb8sXSYX5f6erNG6tp4
0fV6wouuNV9OXWu+mbq+SHjRteazqWvjRdeaP6auHd/6erPs3/PZ1PVatfF1
vVniLYcLL7o+W3jr682Sf89/U9c7Ca/Pc2FH19sKL7o23vp6s0bq+pf149nz
69T1T4S3vt6skboeKrzo2vH1/Jo4oevDquuHqWutJ6euv1hdr0tdaz0zdf1a
dT0wda310tT1W9X1xtT1NdX1ydT1bdX1zNT1e9X1z9S11odT128IL7rW+mTq
+jzhRdfGi66NF11rfTV1rfXY1LXWb1PXWt9OXTu+6NrxZbwYL3/r49t/v5nw
ej08dW286NrxRdfG6/vNsKNrxxddGy+69nhG144vuu4wntvwout/C6/vN8OO
rj2efb+Z9FuOqKyHN0uH/evUtfbLUtfaL05da/8xda39u9Jh/7q43gy7682w
o+tfVvcfU9fafy8d9q+L682q/ne14XW9WdWfKd6PTl0PE150bby5/yO86Np4
0bXxomvjRdeOL7o2XsZRfXybpQPeYrzo+mrhdb2Z+Pf+cup6rvB22L9OXTu+
6PoO4XW9GXbXm2k8e/86de34omvjRdc9wouu68dzb/lRtd6sdKg3Kx3qzUqH
erPSod4sda16m9Kh3ix1rfql1PVs9d+h3qx0qDcrHerNSod6s9S16n9Kh3qz
1LXxdqg3S127fYd6s9S18XaoN0tdG2+HerPUtfvvUG+Wuu6A1/VXpUO9Wer6
6dr+2+rNSod6s9Kh3qx0qDdLXbv/DvVmpUO9WelQb5a69njuUG9WOtSblQ71
ZsX1ZvCLrn8Sesee7+HxfMCOrn8XzxPs6HrleP5gR9dT43mFHV1vHs837Oh6
wcl9z0Ps6PrSeH5iR9eteN5iR9e3xfO5ire7DW/eMyy86PpB4c37w4UXXRsv
ujZedG286PrnwouujRdd3yy86Np4857hWryN4vii6/r4NksHvGUL4eXvQsKL
rh1fdG286PpW4UXXFwhv3jMsvOjaeNG144uur6sfz6U+vj1teNG144uu7xde
dG286Jr4wiO63rd6/iV1/XL1/Ejq+prqeZPU9XnV8ymp67nV8yyp62ur519S
109Xz8ukrk+vnq9JXS9fPY/T/x5ePb+TutZ5n9T1K8KLro0XXf9YeNH1S8Kb
ddnCi651Pih1bbzo2njR9bPCi651Xi91/Wot3kYx3ty/ro1v0+eVUtfGy3g0
Xv7W4+0qxouujRddf0940bXOQ6WujRddO77ousN4bsOLro0XXZ8hvOh6iPCi
66drx3Nv2bcyv+5KXbeq51VT1yOr5z1T10tUz4emrjetnidNXVfrzbpS12Or
51VT19X15K7UdXX9uSt1PaB6frbU15t1pa6NF13rfGvq2njRtc5Hp66NF10f
JLzo2njRtc6zp67/O6GKF13rvHzq2njR9S61eBtlaeFF15vXxrdZOuAtji+6
7hZexqnjy1/jra8360pdGy+6dnzRtfGia52PTl3/vH48l/r49uR9btJLWUN4
0bXxousta8dzb+KFl6xL2alv/ws7uu6N/TLs6Pry2F/Djq5PiP047Oj6B7F/
hx1d7x/7fdjR9ddjfxA7uua+L+zo+sLYf8Se90XFfmUVb3cbXnR9j/Ci6yuF
F12fKrx5TlR40fV44UXXOwovuv6e8KJr40XXOwovuv5IeNG144uurxDeXMet
jW+zfLMeb3F80fUmwpvvWbV4u4rx5l/hzboU4UXX9wtv3pcivOj6TOFF12fU
j+c2vOja8UXXji+6vkh40XX9eO5NvOBH13yPL79bpvvNsKNr6nOwo+tto34G
O7qmvgi7v6eJ3fVm2NH1buofXQ+TP643q+LtbsPrerOq//3f08SOrkfV+tNf
b4YdXRsvun5I7dH1zrV8Ntrwut4MO7o2Xtebqf+yofpH1/X+9NebCW8xXt9v
Jj7LrrX9939PE7vrzbD7e5r82/VmGj9teNG1xxu6frx+PLfhRdce/+h6hPpH
15vJH99vJv0mXnCi609D79jR9S7xfMCOrnl+YkfXPH+wo+ut43mFHV3vEc83
7Oh6fDwP816q0DX3nWLP+vB43mJH1+SjKt7+fF3FNS3zXdX/rtZFwouuDxNe
dP114XW+rvbfbMOLrk8QXnQ9RXjR9QzhRdeOb76H1+JtlJ8JL7quj2+z7F6P
t5whvOj6m8Kb8+tavF3lauFF144v4914+buD8KJrxxddHy686Hq/+vFctq2N
b0/ZQ3jR9dHC6/vNpMfy69rx3Jt4wYOudZ926nq76n3FqWvd55y61n3IqWvd
j526Pqh633Lq+pLq/cyp6+2r9zmnrnX/c+p65+p90alr3aedujZedL2w8KJr
3XedujZedK37w1PXFwsvutZ93alr483zCsKLrh1f15up/2K86Lo+vv31ZsLr
+8NT1+cLb64b1eLt8v3eqetdhRddG6/vN9P4acOLrnVffeq6t348F49ndO34
omvdt5+6/oLwomvH1/eH4ze6/l71+wip6znV7wukrleqfo8gdX1a9fsFqWt9
3yF1fVX1+wip67nV7yn05+vq9xdS11dUv9eQutb3O9rWw6u4puX6edX/rtYQ
4c37sYQXXRsvur5SeNG18aJr40XX+t5K6vpV4UXX+wovunZ80bXxZt1ZbXyb
/n5H6trxRdcvCC+6rsfbVRxfdP2a8Ho9HDu6flZ487kivHkfqfCi69n147nU
x7enOL7o+mzhRdfGi64dX3QNXvxD1xNi/ws7um7Gfhl2dH1D7K9hzzrS2I/D
jq7fj/oc7Oh6zdjvy/1+8nXsD2JH14vHfiJ2dH1L7D9iR9d/i/3KKt7uNrzo
+jLhRdc3CW/ucwkvun5PeNG18aJr40XXSwkvujZedG286Hqi8KLrS2rxNsqN
wpt1pLXxbZYOeIvxouum8KJrxxddG2+ukwkvuj5ReNG144uujRfdnCO8/H2n
fjy34UXXji+6dnzR9Y3Ci67rx3NvmVD9nmbqenr1+4Nt9WbYO3xPs63eDDu6
1vcEU9f6/mBbvRl2dK3vG7bVm2F3vVkVb3cb3g7f00xd6/uVbfVmVX/avqeZ
ujZedG1+0HU9n42WvnfZVm+GHV0bL7qux9v2Pc3Udb0/TX8vMnVtvB2+p5m6
Np/o2vx3+J5m6tp4XW+m8ePvdaau7U+H72mmruvj2/Y9zdT1c+rf9WbSo7+n
mbqeXrnfrCd1fV71e8Gp679Xv7ebum5Vv8+butb3mlPX+v5v6lrfC05d6/vC
qWt9j7i/Prz6/eLU9Y3V7x2nrn8svFmXIrzo2njRtb7XnLo2XnRtvOh6vslV
vOj6Z8KLro0XXRsvujZedF2Pt1GMF13Xx7fp7zunro0XXRsvunZ80bW+P566
Nt4O379OXXs8o2t9Xzt17fii66vrx3MbXv4ar7+niR1d3yW86PqG2vHcW4gv
/aLrQ+L9HDu6five57Gj61vi/T/X9ULXV8Z8ATu6fiPmF/mc0nku7L7fDDu6
PjfmO/k9wtD1OjE/wo6uX4n5VBVvd+uHwouu3xFedG286Np4fb8Zdp/nqvbf
bP1DeNH1ecKLro0XXb8kvD7PpfbF8UXXtwovur6mNr7N8no93mK86PpV4UXX
ji+6Xlt40fU/hBddHyS86NrxRdeOL7p2fNF1h/Hchhf9Ob78NV50vabwouuX
a8dzb0G//P/R9cxYT8Pu72li9/c0saPrYbG+hx1dj431QOzoeptYP8SOrrn/
Cju65nw3dtebYc+6lFj/rOLtbv1ReF1vVvW/qzVQeNH1xsKLrk8QXnS9m/Ci
62uEF12vLLzo2njR9QjhRdcPCi+63q0WbyO/NyF/yoa18W2WI+rxlh2FF13/
XHjR9Rq1eLvKRxOqeNH1NsLr9XDsuX8lvOjaeNH15sKLro+vH89l+9r49pRL
hRddriS8/F1A8fX3NKXfgn5p5/tScv87dP1k7Jdlv6Fr7oPCjq75/iB2dP1Y
7N9hR9fLxn0a2P09zVzf557h2E/Ejq75/iB2dP2t2K+s4u1uw4uu/yK86Lpb
eNH1FcKLrl8RXnS9u/Ci6xOEF12fJLzo+nrhRdf7CG/eoyO8ed9GLd5GmS68
6PqS2vg28/uSwlu2Fl50bbzo+qxavF15nwl2dL238KLrRYQXXTu+eR+p8KLr
LuFF12/Vj+fi8YyujRddnyi86HWa8PL3u7XjuTfvh+HfrjfDjq6r3x/sTV1v
VvneX2/qeofK9wF7U9fV70v2ttWbYc97kNQ+vzeu/l1vht31ZlW83W140bXx
ut4MO7reudYff0+zt63erNp/sw0vuh5Zy2ejzR/Xm2F3vZnaF7dH1+4fXdf7
0ywd8Bbj9f1m4rPsWtt/V5s/9d/T7G2rN8Ne/z3NHD/F4yf3u+RP/fc0e9vq
zTT+2/hB19YLut5K/qBj++96s9mnf3/k5AXvbR12zBsLnTr3/taef1j/xq+f
slzas450xWVHf/OooWm/buL615919H2tW6+b/titw/rbo/eHB87b+uJ/9Ld/
Mv4+dvyZE+9brL89z4E/qv0SP57y7EXNX7a61T/PB/uz04XPTvz5ej2tUfKf
58YSvzt+tYXv7LdPuHTFFa69767WY60HLr3n5X47z5OhRz793t3zhqT91qu/
cXfXnr9oHf/ydofuP7z/d3nOfPOUjxc+cVJ/+xdv+OnXbn3ujtbugw/53f9+
u789z5+vq/0Kt/75zV+Mn946Wv3zXLI/Vx687ErHLXRb63H5z/NqkPAu/Hkc
b2mLb36nUXz2xeWmtvjyfHO8nv2c5xva4stzz+37eLuuLb48D5eQPwd+zsM1
ra/K//z+hvBu+zmun7fFl+fnMuKzT6eXtA4X/zxXv6Z49f3u5Lb48rzdW+0n
fN7P6a3j1D/P4eXlz4Wf2w9q/U3+83weLLzk5SGyT+/rp/yPeON5vrh47sN7
eqnXXaNY17P7eCh/U9x5/jvuQ/t4LrfV9t8sHod9z7efF4/bPAcvvAf1jZPy
qHjL87XieXTfOCxHKS7kF+v0+b5xXurj3lU8To7p01GxrslH1vXAPp2W2fKf
POW4X9P3HCijxQ/5a6D4XKnvOdPGP3nN8f1733OszFZ8yXePqP1tfc/JcrP6
z31a+RPP4dLhuV383N6l7zlf6nXdU5YVn0v15ZFyhPgnnzpe8bd8RfElz35D
7af25cEyXv3n/EP+HNGXZ9viS15eLvAG75mXaY+dvLxy9I+dvHxS+IOdvLx/
+I/9ifj9vQMvdvLyGLUnL5+i/snLa8kf8vKL8p+8vKrwkpe/E+MBO3l5hRg/
2LsjL/fGeMOe97TE+MROXn4hxjN28vJjak9evkv9k5eXlD+XR17+qvwnLzu+
5OWnxQ952fEdH3l5Qi3/Xa19Fa85kZe/pviSlx3f3SIvn6b+ycuO79jIy44v
eXl14d0m8vK+4oe87PgOirz8K/FPXn5S8Xo48vJcxZe87PgeG3n5bvVPXl5a
/pwWeXkv+U9eHiK8zsvYZ0RedtzJy18Qz2dGXj6hNu6N0hb3yMvWdZ4XUPsV
Ii/X67pZ1pY/IyMvd4h7WU14D468vL94Iy+vJJ53j7x8n+JCXrau50ZefrE2
7l2lLe6Rl3vUP3l5kPxZLPKy457nioT32sjLfm6Tl1cSn+Tl42t1d0dbfMnL
ji952bomL09S/+TlNeXPiZGX/17/3C6rCC952c9t8rJ1TV72c5u87Pg+FXnZ
uiYvP6H25GXHl7zs+JKX/7f2ud1b0G/Eu/XX0PV/qufUMi8vWD3n1Vok7PPL
Tl5eq3peLMbhva2VZfe6Gfajwj5cdvKyzq+1bgy7zvFlXn6qeg4u5nd3t16U
3etv2GNctZ6Unby8h/zcLexfk73D+dDWyWHfRHbyss4Jtr5ff5408/IHiuOs
+Ov4kpcd3xFhd3zJy+vKz66wryY7eVnnFoPPqfn9gio/U9riG8/VtviSlx3f
h8Pu+Hq9EfvUsDu+5OWd5OeksH+5dnw2WuuIh2vD7riTlx3fC8Pu+JKXHV/y
su19rcePcNzJy4779LDXx71Rvij/p4d9ddnJy+btzLBvV8tbszwo/rvD/kB9
3Ivj/ljYHXfy8n3qJ8Zb+b3s5OXd5efQsP9Prf9dxXG/OeyOO3nZPJewLyA7
ednxfSLsji952f0fGvbPvlW15/268vPUsDu+5GU/90aHfVSt3u8qfxTP8bwt
D9U/t9vi+3zY63XdU2aqn2lh/5vsWfchP48J+y6yk5e3EA87hH247F6vxj4w
7PXP7d6Mb7z/5Xx5t8jj2DMvR97Hznz5pnhPwJ73EMZ7BXbmy3+M9xDs5OVe
tWe+fLX6z3MfK1T9Yb68pfwnL3/4QN97CHbmy7+O9zTs5OX54r0OO/Pl/eM9
EDt5eZd4b8TOfLnEeyZ28vKeas98+Qj1T15eTv4wX/6b/CcvL/27Kl7my7uL
n7z/QfFlvuz4kpcdX+bLji95uaX2zJcdX/LyB4ov8+Wt5D952fFlvuz4kpcX
EJ/Ml78n/snLoxQv5ss7KL7kZceX+fJh6j+/0yV/mC//Vf6Tl5dSfMnLS8jO
fNlxJy8vorgzX765Nu6N0hb3mC//QXEnLzvuzJfrdd0s1jXzZeuavOy4M19u
iTfy8vzimfnyGMWFvGxdM1/evjbuXWUPxz3my4573pcjf5gvPyr/yctLKr7X
ah27ysPtbfFlvuz4kpd/r3gxX35Y8SUvO77Ml69R/+Rlx5f58hb1z+22+DJf
rtd1TxkgPpkv7yf+ycvWNfNlP7fJy7urPfPlQ9Q/eXlp+cN8eVbtc7s34/tk
PNdmha6747wGdvLyunG+A/vCYV9PdvLy9+KcCPYRYR8rO3n5yThvgn182J+W
nby8VJxbwd7VwU5ePjvOv2CfE/aG7OTlJdTP4LAvJjt5+TH5OSrsf5WdvLyv
eJgU9u/ITl42/wd2sJOXb1YcH2H+ITt52f1sG/b1ZScv7yc/p4Z9jOzk5cfF
w6Cwz67lZ0pbHCd2sJOXHd8/xF/Hl7zs+E4Ju+NLXn5Cfp4Y9r/Vjs9GW3wv
D7vjS15eRzyfGfa1ZScvO77kZdv7Wk8a4biTlx333rBb1+Rlx70n7I47edm8
nR32p2p5axbH9/YOdvKy4x5/i+NOXl66Nr5TypKyk5c9blfgftZa/7uK494d
dsedvGz+R3awk5cd39lhd3zJy+7nsLBb1+Tl/WvjeEee+9Nzr/i5t3vY/Twn
L9fzfFdbfMnLju/csNfruqdY1zeH3bomL9vPYzn/ITt52fEdGfZvy05etq4X
C7t1TV4mvvG+m/Nl9nGwZ16OvI+d+fKP4j0BO3n5B/FegZ358oHxHoKdvDxe
7ZkvX6D+yctbyB/my+/Jf/LyFvEegp358vh4T8NOXh4W75nYmS//Kd4DsZOX
/xHvjdiZL78e75nYyctz1Z75ckv9k5dXkD/Ml78j/8nLqwov8+WXxE/mZfHJ
fPnMWv67WgcrXsyXxyq+5OUj1Z758oXqn7y8pfxhvvy+/Ccvbya8zJcPFz/k
ZceX+fLD4p+8/IrixXzZ8SUvv6D2zJd/rf7JyyvKH+bL35b/5OVVhJe8bDvz
ZeuavLyOeGa+bF2Tl9vi3ve3WNfkZeua+XK9rpvFcWe+/G593Mumwst8+TDx
Rl5eTzwzX56puJCXHXfmy/+ujXtXaYt7zJdnqH/y8kryh/mydU1etq6ZLzu+
mZfFJ/Nlxzfvb1O8mC+PU3zJy44v82Xrmry8lfxhvmxdk5f93Ga+7Oc2edm6
Zr5sXZOXHV/my/9UfMnLfm4zX3Z8ycvWNfNl65q8jH77VH7s/ewvv1/57vax
95OXq99VP/Z+7y9jJy+vWfn+9bH3s7+8ouzkZdb5sbO/vLXs5OUZle9xH3s/
+8u9spOXn6h81/vY+9lffkl28vIf1Q/7y7NlJy/vKj/ZX/6K7OTlL4oH9pc3
kp28bJ6ZLy8gu/eXsbO/7Phur31k7MyX2Yeq8t/VFl/2l1eS3fceV/mcmnUF
VX6mtH4vntlfdtzJy47vn8Lu+JKXH1Q/14f9MdnJy9vLz5PC7riTlx3fq8Pu
+JKXFxT/k7XvjH1A/Of4en+52v7YEY6795ex3xX2AfvUxb1R1pX/d4Z9Vdnz
+6Li56ywb1nLW7M47reGvUPci+P+eNgdd/Kynw/sL1vv5OXd5Cf7y1+t9b+r
rC0evL+Mnbw8n3gu2nfG7v1l7OwvO75576/6YX/5U+mavOz4sr/s+JKXdxEP
7C9bL3k/lnhmf/nP9c/ttviyv1yv6/57s7GzvzxLdp9vws7+suNOXrZ+2V/e
XPZFtY+Mnf3lRWqf2/37yzPjfRc752uw+/wUdvI1dfjYp8Q8elq8P2D3vjN2
5tEz4/0EO/m6pfbMo69U/953xs48erj8J19/8kAV7wnad8ae39eL9z3szKPH
xfshdvI1+xfYmUePjPdP7N53xr58zKMPV//k6yHyx/vO1fh2twYrvgvq/FQ1
XtNaiym+zKNvqeW/qy2+z2jfGbv3nbGPinm040u+/o/iO0b7ztjJ1x8pvlvF
PHqG+CFfO75LxTz6APFPvt5N8Yq/rZ0UX+87J58xjz5S/ZOvh8qf8TGPflz+
D4j/rF/yte2zYh69h3jL87CK+znadxau3JfEPhc+FHfy9a/UfqWYR19V23+z
fGBdxzx66/q4F8f9UO07Y/e+M/Y9Yh49VnEhX1vXL8Q82romXzvux8U82rrO
78nIn8VjHv2E/Heddj6HYx79FfGT97srvt531nOpWNfMo61r7ztjZx7t+JKv
Hd+JMY/etv65XT5VfL3vrLzQFl/m0WPEP/naun465tHWNfna8WUefYT69/kp
7MyjOf/15xjH5OVbY30bO/Po22RfVPvL2JlHry/79tpfxs48epzsR2t/GTvz
6Dmyk5cHxT4C9hs72MnL58U+BXbm0efKTl4erH6YR7t/8vLj8nM37UdjJy+P
EQ/Mo/eXnbxsng8Ku+NCXnZ8mUc7vttrf7kar2l5X2iV/66sK8DOPNq4hmh/
ucrn1La4k5fN86QOdvKy4xt/2+JLXnY/N4R9adnJy0/Jz5PDblzkZfNwXdgd
X/Ky43hJBzt52fElL9ve1/rgEY47edn9d4fd44G8bFy3hf0A2cnLju+POtjJ
y47LLR3s5GXH/W/x13HP71qrH+bRy8hOXn5SfjKPfqLW/642fphHO+7kZfPM
PNpxIS87vsyjHd+Dtb+MnXm0dU1etv/Mox1f8rLH/+gOdvKy47hsBzt52fFl
Hl2v657i5zbzaPdPXvY4ZB5tvZOXHccdOtjJy47jQNljPlN8fgo78+WnIo9j
97lm7MyXOb+GPfNyvFdgZ768b7yHYCcvH6L2zJfPUf/k5U3lD/PlefKfvLyh
8DJfPije07CTl9eO90zszJfZn8JOXn4x3huxM19m/wI7eXmO2jNf7lX/ed+I
/GG+/E35T15eQXgX1LnmarymtVYVn8yXT67lv6stvsyXHV/y8qFqz3x5svon
L28mf5gvO75577HwMl8+RPyQl9cVn8yXHV/ysuPLfPlVxZe8/IzaM1++T/2T
l4fIH+bLe8t/8vLywutzzclPzJefEW/k5dXFM/PlU2rj3ijjFEfmy/sp7uRl
x5358rm1/TeL4858uUPci3XNfPlg8UZeXkc876F9Z43b4rgzX7auycuOO/Nl
xz3ny/KH+bLjTl4eKrzMlx1f8vJq4pP5snVNXnZ8mS9b1+Rlx5f5sp/b5OUv
yR/my+/UP7eLdc18uV7XPaVN1zFf/oP4Jy87vsyXX1F8yctPqz3z5XvVP3l5
sPxhvsz9PzFfyrz8bqxvY6dO+23Zycvsj2CnTvvjb1Xt5OU1Yh0eO3XaQ2Qn
L38p1vmxU6e9ruzk5Z7YR8BOnfbtspOXZ8Y+BXbqtJ+Rnbz8kPqhTvs52cnL
I+Unddp7yU5eXl08UKe9gezk5QHif1zYHRfysuNLnbbjS17+r+I4POwfyk5e
XkV+Uqc9SHby8vbigTrtzWr56d9fxk6d9n2yk5cd35lhd3zJyy31c23YH5ed
vLyd/JwQ9t1rx2ejLb6Xhd3xJS/PrzieFvYFZCcvO77kZdv7Wp82wnEnL3v8
zAi7dU1eNq57wr6M7OTlbcXPOWHfpJa3/v1l7NPDfm993IvjPjvsjjt5+e7a
+E7J7yBr3Oa5V+zUae9Z639XWU08UKc9THby8mfimTpt65287PhSp+34Hqzz
y9ip0/5AdvKy40udtuOb31sTD9RpbyG7zzVXeb4r94v13G6LL3Xa9bruaRsn
1GnPkp28bD+p095JdvLyeuJhpPadlTeLdU2dNrqO+Vvx+SnszJe/HHkce9aD
Rd7HTp32jfGegN37y9h9rhk7efk+tWe+fLn6Jy/PW6HqD/PlL8l/8vK7D1Tx
Uqd9X7ynYScvf3ZE33sddubLnI/DTl7eKd4bsTNfHhHvmdjJy19We+q0f6D+
yctLHVn1h/nyLPnv+zmx+1xzNV7TWosovsyXp9Xy39X6jeJFnfZMxZe87PhS
p32Z+icvO77UaW8h/8nL7ym+1GnfK37Iy44vddrfFf9577HiRZ2240teHq32
1Gkfqv59rjl/d3L1XDN28vLiii952bqmTntX8Zb1YIo7ddrWNXm5Le4xX35Q
cScvO+7Uadfrulkcd+q0N6+Pe3lfcadO23EnL/9XcadOe3/FhbxsXVOnXR/3
rmJdU6d9sPrPe8AUd+q0HXefa844xnx5N/FDXnZ8mS/fVKu7O9riy3zZuiYv
O77Ml69U//ndRsWXOu1N6p/bZZ7iy3y5Xtc9xbpmvryv+CcvO77UaW+v+Ppc
M3afa1beLNY182XiG/PDzMu3cH4q7D7XjJ28zPks7D7XjJ28/N1Yb8fOfPl7
spOX2a/Bznz5KdnJy+wDYme+PEh28vI5sR+Bnfny2bL7XDN2n2vG7nPN2Jkv
z5Ld55qxM1/+tuw+14yd+fLaspOXHV+fa67Ga1pb/8O171zlv/9cM3bmywfI
Tl42P8yXn6zlZ0prSfHsc83VcXtlW3yZLzu+5GX3w3zZcfe5ZuzMlx+tHZ/9
+8jYmS9bF+Rlx/G0DnbysuNLXrad+bLj7nPN2Jkv18e9UYyL+fJY2X2uGTvz
5XpdN4t1zXzZuiYvO+7Mlx138rLjznzZcScve9wyX7auycvWhc81Y/e5ZuzM
lx138rLj63PN2H2uGbvPNeu5VPxcYr48Rnafa8buc83Yycv1PLfbycuOL/Pl
el33tMWX+bL797lm7D7XjJ28bP0yX95H9kV1fhm7zzXHfDXz8prx3oX9hzFf
fiXyOPb8vnPkfezXxnyZfSLs5GXOu2FnvnxEvIdgJy9PUPvFqcdW/+TlneTP
jjFfXvDXVf/JyyOF9/iYL0+K9zTs5OXt4j0TO/Pl2fEeiJ28/E68N2J/IebL
78d7Jnby8qtqz/7y79Q/eXk1+XNZzJe/J//Jy2sLL/vLrym+5OX1xOcRMV8+
u5b/rtbhitfTMV8+VPElL09U+11jvnyN+icvj5I/+8d8eRHFl7y8k/BuEfPl
k8QPeXkb8blEzJcdX/LyPMXrdzFfflfxJS87vofFfPm36p+8vLL8GRPz5f3l
P3l5LeElL1vXc2O+/LLinnVf4nlyzJeta/Kydf33mC9b1+Rlx33lmC/X67pZ
rOtdYr68cH3ci3V9WMyXHXfy8lbiec+YLz+muJCXHfcXY75cH/euPCebz5mY
Lzvu5GXHfYmYL39b/pOXVxPe62K+7Oc2ednP7S/EfNnxJS8fqXi9zHqq4kte
Pkntb4/58tXqn7y8i/xhf9m6Ji87vrvGfHlira572uK7dMyXHV/y8luKF/vL
8xRf8vI/1P6GmC/7uU1eXlX+HBnz5f3C//xeReTHoxYcddubo4fw/am0bz/k
2u0XeXT5tHPf9mayc9/nR7GvQf+0f+fD56/e+47+/vO+PfXDPSj/jP2Cv6r/
96vf/+J+g9aG6ofzYR/KH373eOGlbn1H9UPd3NzK/kW/n89UvwvWYj9/mPph
P+ED+YP/b4ifXI9XP7xnvSF+wPue+CH++MN7FfHdfIc1h5//6uAZ7ENg32bx
/WaO+eYS6Sf8TAje6Cfv4//Zay+/fsigGX8Vb9xzS3viqO9vZlyGyx/6v+/C
4975zTFLZXv4vyC+t4if8P/P4JP2ee9I+LmI/BkQ/sxSvNino588pyj/85yZ
/M/7/IJP2sPPZPlP3CeKZ3BtEf4vLB4ejn5maZw8I/6zHkT+5/qc/Ie3O8R/
zjPid3mPZ7z9Q/xj31L8w+f84Q/v8YzDBb/+qz//9sXFZvBduvxuWzwnqTeF
/xHBM/3k9yi2m/XDC5ZYOH8363bDf9ozHu6O7+Riz/sywx/mFfTP/Sq0Jy5H
xnd+8ZM4dgWftIfngeHnworXJztV+YG3u+RnnsuRn/hPXSLt4eGw8JO45zqx
+Mx6NPnJeOgVn/h/r/zM/SL5CQ/7i89cZw0/mQcyrqaJz5zPhZ/M9xg/g+4+
48wXN159Bvuj2G+87Mhfjd18vWyf3y96bqnZN89bZcZ24u2m8If2jJ8jq9+L
T/6X1u/S/+D7tlz0/vv6f5fxM736/ffk57bw5yj97hnxuyPEP9/1ph/Gz1Hy
k/FjfvJeavEDD/aTcXJr+DleuP4Y7UcovnPEZ9ZByE/Gj/nM+4HEZ663yU/G
ifmEn3Pjd5n/M05O2HL5tx+bs+kM9suxn/SH7U84/F+bpT/weUfwRj/E/ePF
Rs/Z8ORN83fh8/7wk/bE98fzbh6z5PHrp524HCd/6P+FUQf+YtRCm2d7+N/o
ocVW+fjqLdJP4rVC8EZ7+Pw0/LxR/lwQ/oxXvC4Wb/Bp//P8qPzPe5SDT9rD
z8byP+sLxDO48L9LPGwR/YzXOHlE/IPrXPnP7x4v//OeOfFP//DPehPjcA3x
j938w+eF4U9+dznG4apvvb3zL3becgb1GdifDn/wM8/FBs/0w/hZPfq5Ufxv
Gv7TPr+bEeu02InjKvInvyOn3yUuP4n1T/wkji+H/7SH5zWj/2flD+eVuhTH
n4k3+LT/8GP/wfWk/IGfC+U/4+Qk4QUX/s8RD6wPd2n8bCH+s/5O/vO7K8t/
eJsof+gf/lnfZBy+KrzY1xL/8Mm6PeubjMMPYzzzvV7s/7m3b/xzDgf+H4/f
pR/GD8/hZ8X/5PCf9oyHRsQdO3H8T/jDeiv9XxDPE9oTlw2Cf/wkjoxn2ud9
luHnMvLn5PBnjuJ4i3iDT/sPP/YfXP8KPmkPPxuG/4wHxsmT4jlxhf+DxcOq
0c8cjZ+zxX/Wk8p/ftf+w5v5p//143dZT2ccmv9c7xH/8Dkx/MnvUMY4/Em8
D1B/lt8rjvfSPPcV/L8SPNMP42fBeD9ZRvyvG/7n/nqMh/0jb2Injj+WP/RP
vRDt857pyF/4SRx/HHzSHp4XCj8HK17HiR94+478hIdz5Wd+HyN4oz082E/G
w7/EZ55Xk5+Mh5XEJ/5/V37Sv/2EB/NJ//aTcXWm+MS+cPjJvgvjZ1jMR6hT
xP6HmL/QPr+nGvOj3cTbReFPfg81xs/v4j0/77EN/jfR7+a6TczvaM/4OSne
w/NcYvDDfO1k/e7D8bujxP9ewT/9MH4elJ+Mn43lJ/7PFj/wcIL8zHNF4eck
4Toi2o9SfBviE/9/Kz8ZP+YTfrYUn/R/oPxknCwlPuFnVvwu+3CMk61j/YR9
O3h7NvihPfFdO9ZzThZvR4U/tCeO88U6DPZcp43fxQ6fa8Z8H3/y/GjwQHv4
WSP8mSSeHxNeeLA/eU+J/AHXvJf7/CEuWfcnfvBzbflDvL4hfvDzvztV/cn6
X/lDP/gDP8R9K/GDffXwh/3UzDuxfkv9cX6nOtYJqWOGn8U++r/ryd05HraK
fg4Sb0MijrRnPHxcWU/uzvGwi/yh/7c+rP4u4+SdWIfET/g/srIO353jZJPo
f5b84Xtw4xQX1jPph/HzkfzPe7nkf86j5Q/8vCb/sz5RPIML/x8RD3+PfsZp
nOwp/sH1ofznd+0/vL0m/un//fhd9u+z/kJ4sW8o/uGT/Rf27xmH68W4PTr2
772PQB1Azvfjd+kn95VCR7PEP9/Fo73X7bFnvgt/qL+n/zsr64TTMi6rB//4
medcg0/a535T+DlC/rBO+4jiOE+8waf9h58t5L/3EWgPPx/Fc4bxkOczxHPu
T4X/24qHMcHDIxo/fxf/fh5i53ftf65bin/6Hyb+GYcviX/sa8v/1Hv4Q70I
43Bo5FnOV2D/e7zv4Sf87xA800+uh0Te30788/ykPeNhRuQ17MRxZflD//vE
ezLtiQv5Gj+J4w3BJ+3hebXwc7ji9b74gbeW/IQH+5nf6QreaA8PR8pPxsOu
4hP/V5GfWacmPvHfftL/KvITHr4jPun/mPCTeiPG1ZXiE/sK4WfeJxXjZ2C8
53856oqwT4l5Ae2J7xUx7+gSb93hT9YTx/g5KN6fscP/IvG7nP+h/yVi/ZD2
jJ/r4v0WO/xcFf4so989MX53qvj/U/BPP4wf+8n4sZ/4f4P4yXuq5Cfj5Mrw
c5Bw9Ub7qYrvkKlVPvH/QPnJ+LGfeT+9+KR/+8k4uVp8ws+plXnQlBwnrBtz
7wm83Rz80J74fhTrJMuIt1sr85cpbetd2PM7gfG72L2uhT9570XwQHv4Yf9i
kHg+T3i9foUdvPbH61TEhXjdIH7w0/5k3bf4wc+z5U+eN5I/9AM/1BES91XE
j9ftqRck7qvFeum2US/o9Xnutcl7PWNdi368Pj9JvLE/Qnuvz2PPfBT9cN7P
6/O0Z5ycH+t7+On1edrnvC/6f1j+sD4/UXG5KOJCP16fz3sEyFPy3+vztIef
C8J/zkN6fZ72Xp//g3jg+1MTNU42E/9en8fu9Xn8z+9vyB/6h3/qU70+T3uv
z/9JfLI+T32q1+eXoT417B/Fuhz3KHl9nn68Pv9n8c/9abT38wq71+c5X0r/
zcp+X7PtOYafXp+nvdfnp8of1udnKo63iDc/37B7fR7/wTXv3v+739dse+4x
HvL8t3j2+vwU8cD6/EyNn7PEv5+H2L0+j//wZv79nKQemnF4gvjPdfvw/3rx
yfo89dCMw2mRZzk/jH33eN/Le7uC/9eDZ/rJuovI+zeIf9bnaZ/fV4+8hj2/
Byt/6P/ReE+mPXEhX+Mncfxp8En7/O5Z+Hmt4nWs+HFdB3Z4uFF+5vd1gzfa
53tp+EncGQ9vi8+8J09+Mh5WFp/pv/yk/y75md/hEZ/0D5/U0zOuzhWfed4i
/KRunvGzTrznT4i6eex/qcwLGhnfZSrrt/283VCpH2jk+PlNZf7SSP7ZF+B8
O/1X56GNHD+Hx3wBO/wsHf5cq9/9Y/zuBPH/g0qdRiPHj/1k/GwgP/H/CfED
D4fIT8YJfl4uXGOi/QTF9zLxmfffyE/Gz4byE362Fp/0f6b8zPqx8PNq8cN+
B+cocp021iW418/r87QnvqybXSfexlHnFu2J4wKxXoTd6/PY4XOpmEfjD/xv
GzzQHn5YD79MPD8qvPBgf/I+e/nj9XniQrxmi59875I/xOs48YOf88ufrKOW
P/SzIPW34Q9x31z8YF8t/BkQ/3l9fnqce8F+bKy/cW8j/CwZ68b047r6S8Qb
60u09/o8dsbDztEP91Z4fZ72Xp8/NvzMe+nCf9ozTjaO/vus40d4ff40xWVg
xGVA5b/+9Xksef+9/AfXBPnj9fkzw3/iPlA8g6vq/6QRXp8/TeNkjPj3+jz2
rJuV//D2uvj3+vyB4X+eKxJe1/MHjyPgk/V5zlkxDjeNcXtanLPKcRvjnPtA
vT5PP7l/FDrq+72DR3h9nvaMhwWresw4bhX+cE8K/d9TfQ4U4rIL9e3hJ3F8
NfikPTyzjzBd/gyojMPTRnh9nn7g0/7DzzbyH1y7Vp8b3ANfVg3/83ufMU5O
EM/gwv9e8XBmZRyeNsLr8/QDLj2f83e3lv/w1iP+vT7Pub48lyb+sW8U/t8l
Pj+rrD83itfnZwe/rvPn/ln437max4vX57vF/zaV9eRGqV+fb2QcV5I/9F9d
T24Ur8/jJ3G8vfpelDyvGn7OULw+Ej/wZj/h4Quse8e/s+6rsj7fKN73J+55
D434xH/7Wb8+3ygd3sey/5XlJzyME5+5vhF+ci6UcXWz+MzzheEn5z8ZP9SH
D43zn9inVucFGV/mlbeJN9bnae86f+zwv1T8Lvc00T/rybT3fBB7ftc6/DlT
v0ud/z3i/8/BP/0wfg6Tn/ndGPmJ/9PEj9eZsTNObgk/zxauh6L9PYrvxlOr
fOL/ePmZ9w/Jz5zviE/PB/OejhgnnEc4S/ycVZkHNfvf32Jdgvup8/s/1XWP
jC/rZj8Sb/dU5i/N0mG9q3h9Hjt8UveIP/A/tFI33kx+8Occ8Xyp8MKD/QHv
MfIHXMPCH+KS90iJH6/Pn6N4/Un8dFiPyv7tj9edOO9N3FcVP9g/rq7PF6/P
HxTnurE/S/18nA+HH60b53ign1vE24bV9eHSYX2+eH2ee9no37/r9Xn8zHqG
6vpw8fr8Y/KH9fnpiovW53P82H+vz+M/uJ6WP16f5966DuvziQv/nxQPrM9P
1zjR+nzisv9en8f//G65/PH6PPcI5LlI4fX6/OPik/V57hFgHH4W43Z03COA
/ZNYl+O+e/hnH4R+GD8nh47+Jv5Zn6c944HzJtiJI/tc3APo9XnaExf4x0/i
SHxpn98/r+7HpT88H2YrjreIN/i0//Dzifz3+jzt4YfzF4yHvPdOPOc9+uH/
aeJh7ehntsbPWeIfXPaf37X/Xp9PPjX+ubeCcWj+sZ8q/uHzzPCHeysYh5dE
nn0+8GPne3P5fYXg/417K/vsOX4WrdRR9/PP/mbeYxXjQfv7Gcefyh/6nxXv
yfm9pYjLNZGP8NPr87TP78mHn6cpXieLH3izn/CAn9yPif/ck0n7/I5W+Enc
GQ/zxGd+f0B+Mh7WFJ/4P1Z+0r/9hIeHxCf9wyf3nnh9nvbYB1bW57ty/DC/
OybuN8F+X7VuJ+PLOvNQ8VZdT+7K8aP6ouR/XdaT43fpf/NqXVOOn4Mr68ld
yc8S4c/N+l3q4VcQ/9+ovKd15fixn4yf9eUn/s8UP15nzu+URDzxs1u4vhvt
V1B8zxWf+P8r+cn4+aL8zLpK8Zn3vcnPPGchPuFnZvwu990wTjaOdQm+vwJv
jwQ/tCe+K8c6yc3ibb/wh/a5Hhvzd+zwz70N2LMuK9bD8SfXJ4MH2sPPiuFP
t3j+i/DCw4fyJ+tL5Q+4jmV9PvwhXg+KnzwvLH+I17fFj9c3sNP/lvIn933C
H+4zIu7ri5/c1wt/uLco65BjvfSauLcI+w9i/Y3v68DPwrFuTD+Mh02jnyLe
8JP2vg8Hu++94d5h+ufeEtr7Phz8hP/vh/+09/r8E/KH9eGRigvnLOgnx4/8
9/o8/oNrvPzx/Tncy0zcFxTPvj9ntnjgPpORGifvin/ft4Pd9+rgP7y9Iv59
3w73ZOV9acKLfV3xD5/cz8M9WYzDtWLccq809i1inPM9J/jnvib6YfysHzp6
QvxzDw/t/bzCThw3kD/0z/ob7YnLXcF/fncq4sj6MO3heb3w81D5Q33ybMXx
bfEGn5/If/jZUP6Di/NutM/3qPCf8ZD394tncK0T/h8mHhiHszV+nhH/4DL/
/K75z/VA8Z/3zsbvci8b43CO+M97BsR/7h+FP9zLxjhcMfIs95i7fh4/4X/r
6jm4HD9rR94/VPzfE/7TnvHw++r5u4zj6vKH/r8Z78m0Jy5nRD7Cz/xOV/Vc
Yf96SPh5mOI1T/zAm84JJg+ryU/8Z1+D9vAwUX7m+TLxmfvj8jPvDxaf+P8b
+Un/q8pPeDCf9M8+Avf6Zf2z+MxzbeFnfrc1xg/nZLnvHvul1XO1Gd+LY95x
qnjrCX/y3t4YP+Oq53+T/wX0u/Q/332Vc8c5fq6M91vs8MM8d7R+9/jKOnY/
/48E//TD+NlXfjJ+7Cf+XyV+4OEq+ck4wc/dhaunsk7eH99lplb5xP8x8pPx
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
U/tcyeeOas9f/P9/6YinWg==
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
ekr0SJ3j54m2V7qpwu2Ejyndm+Kfp/4Kfyl+E+E0bBXx07FluA8hZ1qEHxHu
rXQzxe8l7CL6lXlLuKdoBuOL9QrhW3W2kz4NGch6QvS46KOgjyMOmUuF+5T8
fL4v8lNPZN0t3FTXvuKeCjuWbBvQlneED9X5eb+Bwp9zz0uO49q73A+FX6JP
o6+Im1p1/LfitxVuVWc9P0I0XnSP6A3RRrr2bMjcXPR81IFrb0Za+vA5Ydso
v6pnYk00Tvys/8i6J8JdlW6BcH3h/iGLPqTsI+tcF3Dr4Jt07QrhCsIRddbJ
M0R3Bk8c9mF/4YXCqtINFF8TNitZ1krCFUVXBo9ODQ85w0MG/Pyi/9fPK3pP
E+s53UUDq5b3cOZxzR6zy6veu8W+L/aEXVl1HR9RmiXKf47ifi76vwJykHdH
neeW24PgqTdrX6S/TLiKZFwlflXhNVXjxMz2O+tjZ9d5rIwMHvucvsC2X11p
h4hfQ7hmyfvK4NnvNko0us79w/yVRPw5cY3/BdSP/wutKFt865LzMI+dV+f0
o4OnrOMizUbRT7Tz76L30b1T9L4v9tOx9+utovezzY71hq7ogOj1otchZgqP
qHqeYW6BZ13lwKrX6tiHdkCd+Q0iTF76f5Zw/cx76Ngvxzz27xxStR6hA8xr
R1a9RsLayMdF2xkfCY+pen8g+9zgkX+Q8I2i17JmRZ27RL2hblH/GUXPpTPD
xmGPIv/N2OPH3j/2Dx4ccT1CD9ibh168XfQ+QNYte1XdvlMZo9F36CHzMGtQ
3wo3UBvfE94jPL5qOeyHpG5ton4fFr0Pj3a9X/SewA+KLqtZ9D9ysMtYv0IO
9eb/LHXgXvYUXle1XvO8OEf3+DP0Tfh0nec05rZpRa818TxCZ5lzJ9b5/+Yr
pBOOr3ot94bguf5g1f8FWVdlTZX/0eyR5b/0A2FnYm+eX/Rzf0D8/74/rp1d
9HP/nKLLpOxB6GfRax3EZ1Wnb+CeV712xBoI8bPDTrig6PUD5DOeXo0xNrjO
dZ4U9GjE3Vf1WGGNeoJobJ2f7w/TX+JvCZ55necF8xZzM/Mx88zLdZ5rqCtz
Ec8n+onxOzXozkjzcPTnoKjXa1E3/tcznz+JfVG1bJ59L0d+8hKP/OurtqNo
732ilateG2Y9eU78t3gw7/UV/mdhn7L28kTe63eXFG3ns8b1UPyn4P/B6UWv
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
Sn/RaaKVasa1hCvUPA8xn7xcsm5P5XlZ8hhHV8+ot37uE3L2CFlJzWOfj7Gz
muPrhK+ErTY18u4d9SD+8HrPaaRHb1evuc7MkUdHGaQ/I+pJGxprvn51pLm2
5OfmEGG15rG+NHSS+jBfXCg6SHRgIOGLIoz+XFDv97A3C7cWtqnZhkmFNwlP
Cv27OfibIs+FIYP+u110h2iu6vGE8J2SecbhnJJ1+MaQMyrG2fLxRnh0vfv7
8nr3y7kRxxgdE0h4TdVpgHBD4fUxrtBx5qiBokNFbXVtmLBjzXz/6FvsM+Lp
a+Yu0m9ac55DQgbjeGik4b008x1zHX1Cn20U7/AZg/sHEqZON0R9qBfvqQlv
VXOd6eda6Fr/6K8boy/pk7dLHpOzhWND3nK5hO8WlZX/aV1/PfP7btrN+/0R
wjtDL98oeS6dJWxX81y7drxjpx2dRc+UfH8nC58qWSeQy14F7i/v4tFn0mN/
MlfzfHg+ZFLWDsIpJdusxD9b8jNoctggJ0dZyNs52nhm6PKIqOejwjdLruPI
ej8froj7jx7cFXFcW6x0jwinC99i7ou+er/kfn5POL/kvp8n3KZmfCvzWOgb
95axNzzqMVE0n7yiGSWHZ5ZcvzMi3esljzXiN6s5P3PFQ8KH6z3fEI/ub1/z
3HN4tOOakudxxmZdvW22jer9fMCeI26Xmp+r/I/YUfSZ0r6dWdfuEY0XfVyy
nnwk/LDkfRHwO7I3UTgnM49dwH+KTjX/90BX7xXeV+//IV+InhV9Lvqp5H0y
S0oex4zncfXOS5n4LVpQ8p6Qz0vOj0zkfVGyDUB8Xdn6mS87P3VGHm2hLPaT
TCu5r1oozR4KPyh+z2j3/fUedw8EEl5U8jhdSP+pXT9iw2Xua/qVvv9BcS/V
+9pDET8hyr8o6sD9fCTu8aclz1+flNzn9Mnuwu+Y38V/X7LOTQhZXyn8vPBr
4WeMD2Sgy5nbOj/zPpmnFLeP8DdsJfG/Cz+q9xz4OPcueOLQWXT+A/qZfbDC
g7BxRH8q3zzF/YG9W+8w6T8MOR+GDPjN9GzcVHRwg3mwZ4P1+H3RJNEfyGCM
iLZUfTNd36ps+XdFPbn2VqSdGOOAvD/r2lThUmzsksc7fKns/i0KC6JZwbNX
hz7qLXwy2sz+ob+xZ4X/YDuXPY/Dfxr9Sd99o/ALca/R6wWiyaLuktWoPO+p
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
JalxSPQ17Tg62jK64DPtxzC+C857rKhBea8WloR3CQ9VmpGRj/xXR5pjhD+l
znNMyOA/Jv8/fg97j/9J/G/qKdoMPQMz+8rEfyY8/o+fEL5ate8u/GjhWxuf
PfhMxu/0wvBjhp9AfFPhJxFff/jlxP8g/qXxL4WvP/wN4vsOP4H4GTtQODmz
bzR8eB9ash8zfDxz7ZCSfSMRz/ti3v/g0wTfI7znxBfKzqnXhlnz5Ds+vnvl
+8EtMvsyfCazny725OHbjbbgo/rpzD4P8feIf2nS44N5Sviaw28450Egn287
ak3284wfNXxr4z8Kv2j4O+qQ2T/TyzxDSvbviN9y/HHhT+oU4a9F+wbmDPul
RfvJxQcy/sPxVYyv8E2x+VifErbN7AOW85X+LNr/7R9F+/JC3guZ/a3hHwv/
YvjNw78BPqbw34XfLc6twGcXPt7wnYUvL/wucUYGfu3wvX16yb6n8IeETyp8
kRH3IuOmZH+Mx5fs0wmfXkeX7Jfp3eDxG4Z/Sfxm9w6fC6TnnT7vlXmnzj4i
9hfwTvmQzO/2K03e38K7HdbqedfAfzjeTxyX+X0fa93saWFNnX0v7NngXT17
CdjbgD2zR8X7/UqsLTV53wh7stiPwbcP7Bn7sez3KbyT4V0vexTZn0Ee3l/w
foH3L7z7GEJ9m/y+Zkj8d7ixYpvnporX8K8Pm+eaWDMiD++V+M83suL3PjcH
z3sr3tUOq/i9Fe+EeW87tGJbd1i0l7X2Fip3k9TvzHn3zd4n3nWzj2u1iv+P
sOeKfSPsmdq54vfj2wmzeF/Me3feiXSq2PYjDXs2OsZ/It7js2+F/S3cC/Yq
sZeJPRW8K2AvB/tP2AOD/x/ey7MvjDLYB9I7bEi+bWGf2rKyv0lhfzb7+tgT
xV4W9p+wB4z9iew3o13s/yo1+RsZ9uD9UrbO4x8b3858u8GeOfbm/RX787Dt
+Qbk+yiL727qJKfQ5O9E2PtAeGnZ/8uQydjBN/992BqSWy99nJDZr3XfOp8j
gL84fP2MK9lfHDhNae4v2VfTAyX7iVoveHxS8f0qPt/wB4XftYnMb1n4S8vs
DwqfbJwR80jJvmpIg58xfL1x/gs+4vDRgi88fALwvRrf1fMtPN/d8s37Hpm/
7f408/fp+G7gXJiNyv5mtm2kwd8Bfgz4zppv7vnmmu+++caU7/rwFbCy8MPM
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
           "]], Polygon3DBox[CompressedData["
1:eJxNnXfY1ETXxvfZlmx2k33EBnawi4IUC6CiolixAQoIiKKIAmIDFSyIYAGs
iF2wYwVFbAiCYhcVO/YOdsGCXb/7xz3fdb1/nGvPZCaTyWTmzOnb/Kjhh5yQ
z+Vyf0e5XFG/76a53PVC7qzkcivrudwDKh+u8hkqf6/yXRXX3yC4W3iHLJfb
oZTLdUxyuXpjLrezyjurvIZgO+E3q81wtT1BcJPwYk19NORyrwvqwscKRmoA
0wQXCx+hZzxRzuWu0Fjqwt/S86/SvVN17y8qjxQsVP2Vqu9VzeUeiXO5rQu5
XEvBw8KvV7sr1X4KYxReUZ8z9Kx3BGsLX0tjKmps2wg2FH612lyhtpMF1whv
oWurq26nMP6puucmje20MD76H6q2QwTXCT+94vnpIzhN+CYa72kaywGCpsI3
1T1L9OyZ4fnM3ylqe3KY41l6n/U07qPU/yWq30jwhtreHeanpnldqba/Ceaq
/b/q81Phnwj/T/d+qN9HVH5Y8IHwkYKxws8L46H+Y9oLPhJ+quDcotuMEP6p
4DHhj4Y+G/TOnwv/QnhO3/P9ivt+SPCe8HEa0xka6y2Cy4WfqWvjVXe+4Czh
jRpfL737E3qnVzS++wWrCR+v9pfWvB6uZq4FtzD3ujZBdQ8K7hbeXrBc7/6c
oBlzL7hVdaPC8x5Qf2urvwtVvkzlU1R+UOvhYg23q9bD/NTrjb5/Vd0Rmr8b
9C1vFAwQ3lT3PKu+fwz9T1G7y4teA1cJv0HXpqrvEYKLhC/UtbtVd5fgKeEz
dG226iaG8T6ma7eq7jbBnIrXYw+9f0/Bo8LvUZuZans+c1bzHDAXM0L5R41p
e41/B8Fy4ffq2iyeLZgufA1d66axHyBYU/hG+j6NwjsIthXeSdBR+GqhvJfm
YKTmopugi/A1da1BdVsJ1hX+iPp8Wn1fL7hZ+LWCa4Q/Kbix5jllbh8Iz58j
eCHvPXCX8OfVx8Ya6/6CxcJP1xy/LPxaPa+vnrc19YxHY421fo7VtZmqO1/Q
Xfgxun6a6kcKjhb+nNpvpPv3ESwSvoT3Eb5Sddvq/unq/wvRpuF6/ll6/lUq
j1J5ir5fY5i/TO1TwQ/CZ6o+1byfp/aTVP+o4Lm8v+ntwtdRm4P07IOZD+Gb
ab2M0rc6WLA+tK/muTlZMF54U7XZXG03E6wt/Cm1OVXf+l5969/0rLc1ll3V
trPgX+FLBLvlfe0d4WX1ca/G+pZgdeG/6P7Xw1r6U/e30LW3VXdfqGe9s7de
EtwnfL7a3an20wVPCC9rfr4pmkY1Ez5XbRblvUf+v/1i1b8mWFDx+hwtfBR7
HPqhNrvpXY8XRBrL1RrDGI3zGj1/TdXNq/hZdwi+FP644Myi+2B9837H6VnH
C96NTC+h9d8WPZ6H1OYM4acLZgu/X30+Am0TzBR+T2zaeKDg3tjtb2a/QsOE
P1jxvacJZoXyTUW3ob8r1cfF6uvh0N+tgtuEv8yaZa+pzVS1nSa4X3hrjWlL
jS/H9xN+rL7h6SWvwUGJyzcJv1kwOPH9I6GNghkV03/OpufD+h+qaz1V10Nw
pfATBIcWfW2Y8L3Uxy4ln4FdhR+la5uqbjPBQOFttKb/0vU1tF6f0niO5pto
Lv4puH6S4GK1vURwsfBY36ib6kaG84T+aPu34EjhHTWmP/XtXhNszt5Vmw10
b3fVLau7f569ueAYcLV5X21nCdYR/qK+wf3q6wHBS8I3qLmvOwVV4YN1zxa6
d0vBccJXY0+p7lPBJsKP0p6+U9N7jmA/4b3UZiO1bS7oLby/4C/1/aegn/B2
Gt+lwgcJ1hXeVnPRV3PVT9Au8f2/q+43wWHCJ6buD/wrvc++esbZetb08Lx1
NYaXNJZfBBsK31p99FZffTjjEz9/Y92/ieAI5jd1mbF8zdrX7xEq9xecI3wt
9bFAfX0taCN8D66pbm3BnsK7Cn7U2H4ouHy++ltXdd2EL1V/O+mevxt8hrcM
5zm8zl+h3ErwpfC5gi2F76v7mun+dQT7VTzfMGL/qf9jhR/PmVz0NeZ/guBo
1pLgoorvX6G2ywX7CN9Qc9JJzY8WbC28iZ7xuJ71RXjeKxrvpHDvco33IP2u
p/L6goMrLv+ivn5mjwpfA5qge5cKthaecAYLfy+sn9nqbwD8BvOi/s5LPV+7
q/yFytuqzTK1fSLcz3wyd98X3GYbXftMdY+F9cT7sta2Yk6EdxZ8p7bfCnZh
vpkD1U0UXCB8F93zX4NpaGvhrfXOB+ndNxe0qvp78e2aCvYS3gR+Vn09rbX+
qsa3vfZgW62V1loraaPpHWf57fB48Etq85j26rHqL4PXgGbr3mNEDybreUfo
/tG6/xDBfsKXVgL/JFgm/GRBL9av4CThf+v5HwVe6l/1tT7fRGO/XRDVvB4v
UP2FgnOhd2ozPPKeY+/tpnEO5OwU7C78N/X3jtouYp+p7TP6fUPlNwXPwgtW
3NdF4Rtxf6eSeYZdE/ODvYse4ynMVeq9ubPgv5rn+yjVHSkYL3wfvWN33Xsm
PElm+nc2e0cwPNC/Qao7VrC38O907QnVzRN8y1jU59nwFoJraq5fylwJvhc+
We8wRO/7sN43U/1XujZXdY+H+WR+wecEHpV65vpLwdd8O91zp/o+J/S/j9bA
GTmvib2rXh8HCj89lKfoeSMi7xH2yiaJZYOtBRsLf0N9vqe+32dOhXdQm98a
/M02rnk+eqhtc7VNtH5eU5sHOHsEiwM9P6boPTux4vp3i+7zddrG5j0OEcwS
XlR/X6nuR9Xl1d+tGt+zGl+m99kbWpKaX52s+p/qll+OhzYE/hV+FnxwaPOP
7tkFWiIo6N6y3lm35XYUpMLfUZsP1PZDwRLhs9jvetaVgqvhB3XtWNUNElwa
xrul+tpCcL/wF3TtPvghwfPCT9Q9h+rebQSD4NcEk4XPDf1xXt8u/EzBlJrX
6z1F89hPC98gMa/Kmb0+/GHFa/mt0D/jnS38QcHbwl+ueP0vEbzC3lGfo/Pm
Cej/Tr3s15q/fVTeSvj7mt8u2s/rCJ7OfAavLvzPxGfzx/otq1wSfCT8YPWx
IXMvOJSzU9e2Vt02gg+EP6G+26qunWB+5HIivCKYJ3xaxbLvsKJl2NsFJwk/
UXBbxf0V1VdB8J7wwfoms/RtLhIcJvyl1LLVTNZT6vuvFX4dPFrF422le1sL
PhF+ht7xDeGn6v49df9uGnMB3oixqO4KwTHCH9T6ranuXJWLKvdR+SW1ny1Y
T/iegpeFLxJ0gdYLnhc+Vu0TtW8Pvyh8lq41E757qH9N87mtnv8Z86T5nMQc
61veo/LGKo9VebbKHwquEP546vWL7P2z+lumPkaor/0Fi4VfqTavqe2fyHDC
b9WzN9X7bMY3Fv4KNF5t1w/jfVWwn/BTw/3v6rkty/5mzO8rmcvvsM40np/1
26hyXfCT8Mmqf0XP+k1wrfAvWReqaytYmrj9jsI7CH6Bf9Qc7qWxbCDoXrN8
M61knhL+8k3Blmq7leAt4Y9qzJHalgWPCB+ia7eo7a2CocK/1zP7qm07wRfC
vxX0En4ua1T465nHcnioX4x8InwLwWvwsrr2qfp6VHC18ONYEyXzvPC3tP9P
+L+CV4XfpzYrhb8smCL8aY0p1dhqgoVh/aJ/QWZHf0P9dqrbXvCM8EP0zi2E
7yfoI3wcMqb6+iQ8n/dv0Nhygjd4Nvyx8M6CmcI/1fefUbQO4WXhx+meSSWf
cQMyfz/2Rj58s+66dpTqJob6F1nj+tZNBc8Kfza1/IEs8YfW0wS1ma+2t+ve
Fvrel8DzRNZBoYu6Te27Fq0zeCT1/DH2ip73oPDf1edktT0eHjPoF9i7e4X2
C3Streoqggeq1gehexlXtM7sFrXpUrTOaJbwx9VnUvY3ov9nE6/tPwTPCD9f
49tA4xsEj63+zlJ5Bd8XHknlP6qWfYcKVgrfRjR4qeZ+maCV8M907TjVXRHG
O0n376X+zlR5PeGXCg6NLJMim16u8lEqX6Tyv2o/I7U8w1n+neq+1LUTVHe1
4E/h81LTsj3C+/SKLLuiY+sdecyM/VLB8qr5nzFF65zgL77QtSGquzKMH/m/
ud5vIbK4vs9vunaZ6o4N91+sMXRTv+ewx+vWb6Frg2dBf4V+D93a4WpzmerP
FqxkvyFPo39SH2sL3zWsD/jFf4XfofY3qv5MwdKyacYjVcvzg/OWcZHf79S1
VHXbCx4V/lTVtK8qeEj4GN3/n+4/DB5U5XEqr6H7jlT5Q5W/rXruuwuWCJ+q
9/1I3/qhQP/OU/u62h+h+rWEvwb/KvwMdAbCx+vaOqrfCZ0Y31/3nKTn7Q2N
FT5d1xLVtQvj6aX320pjv1f3TNW9M3VtDdXtLHhS+Dm69hfnFzKIyh+klq+R
tX+vW/5/tWgdAvqGF5gzaH24f1FqXnIW/JDwu/ScLfS8LdGHoUdQm59zPkMe
FH5PxbriG4vWmSzUtR3g7cJ8Uo8+BZ0o+mTOH2j5Lznff7/Wxdoab1PBA5y3
mfU96Mpas14S64s6CX5PXG4ifLWgQ+pSM639UH3uCC+kPo9X37sJ2gm/VGP+
WXU/CS7hXdTmA+GlvNsP15zcBL1V+/ZV62vQ5fwb5I0Wuraz6gYJthX+dWLa
3V7wjfCzBPfoW98rOBtc/f0eWYeKLvWjzN9yQ8ELwrdRH/urrxFBf/d54vOU
M+gLzlBd21V1x4Xxn6D+ppQtE7etWn+KbvNCvoXqTlOft5d8pp3F2tG1u9V+
gNrvoPbXqM/LVHcp9Fr4Hrp2EryxYCfWt+55UHUXq259zfdE9dtMY18H/Zrw
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
HqjyrmozNGcavV3V9hVySxCzNiiz/RNb59uCi5gPfeMj1La/YHrZNoJhiWkW
tOukzLEj2GBOzBxDuCJx/DexhYdn1lVfE+qHZdb9Dw7PIwZpeM4yA+PHhjk+
cfwStk3iE7BVMEenCL+m7Nw4YwTXlm2Pwjb1hmA8bXVtbM4xUdPKnl/2/rRw
PzF36NnZ86dmjk+HtmBDIZ6PmGbidIjXOT+zTeG6xHuavX2D+uytvnsJri87
np69jY2MeCnOP87OIWF+iXfpVnaMB/m9mqu/mxLTDGjHVYI3S7apMf5bypZF
kPluLjun1ZMV8zzwPr0yxzoRs3W88AOqzgVGjAuxLsT8EgcCzTy27ngxci+w
hu6F9ggOLDtG5I3wfOaOmJKbM9sv0BUdEfyZWH+sRWLOuJ+YnycSy6/EAhEP
/kTJPNstmfPHzS7bJxzfcPJL4a+Lrye5Xu6ARuQdcwD9npU5NuvN8Hy+Od9+
SaDP8IPwsvND/9jXiH1/R+XbWQ+Z1+p/oXxC5li7IWF+qKftjLCesVmOToI9
k7WZ+VtjcxmaOd4M2+SUUMY+j22YmFBiQ8m5QJwUa35i5pxqxMXCc7+ZOT8D
sUDfCKazfzLz7k+F8iaNjpsjfu4elR/OHIvPmXRXOJ94d2L8KeODcG7iPcne
PFXjeVLjuYY1Jry34GrhC0KZfCaXFZ2D8KPUOSfJi0h+xNdS5/Ajlx/5Ag+s
O+caccTwUAfVHeP/SMX5zYj9Z/2RW418fYfUHdP8QMU8PLw8OSTJw0EM+4uB
PyaPDPlketXNv71Vcb6XP1PHmxJbSownsZ7wa+TuIR/ioXXLI+TeIYdB9yB/
kEeRfIqH1S1PvFpxfpI/UtuEsQ1jLz4ws7zwTcU0HdqOvzO5FPBxxh+anJqd
Ep+xnLXocNHbor/tmFleIFfMfN3/e2qdJ7pP8vvsndmeja2bmFdiX9Eho0uG
pzm87pxH2ybmweDFkAew9T+l/v5BPqw5HgFfeWJh0Vmhu4LH6lO3/z3+8/js
44+PDQ9bHj7Qg2v230d/RcwC8QnoKNFVoh/tV7dNGts0NKJ/3fkIOZvxmSae
lPPhpMT2XGIH67HPOnIoNiKfx45lJWaK+Khzava1vi7v/H3Qf2zFxBceWfd+
wi6KffTouvsj1vfwvGOMeF98zW/MO/8jMWbEmpGvcEDdzyMWixyJa8WOceud
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
gNLHcw==
           "]], Polygon3DBox[CompressedData["
1:eJwV13m4jnUex/GbrNkTFdlKWbLEsRzZyU6WHDvHORzbsWYpNGgshRlMtriG
NMxkuTDZNXayS3YSWRLZd3Kkef3+eF+Xz8fnu9y/537u+zmFEvu16Js6iqId
SIvKWaOokn9Uez6KqqM+XR3VePXpBmhKr8BT3j56P3pki6IqmaMoJVUUzUsf
RV/hNd56uXTpouiczHnspB9liqLJcn1l+iGDuge8v/N60clIy2sjm2xGszAT
nfSrzU9r4dUya9CMriPXRC6nzAsoSQ/ld5UrmCGKCmEqfc+MCWZ0VZeEiNcZ
FeV20TvxphmV5BL891J7L0MW3u+8aWo/khmK7OrqmdPC3HxmvooY+o7cWLm2
Mu1QUO1ufmF99sjsxjr6OGJ5d+k76C13UG1jtVf4l7GW/k6ugH9vltmEb+j+
ZsfZObXreg4f09dkh6utY2ZdvKpfC/7rcnPpOahFV5Xr5trW6rkOWeUa8rPJ
7ZHZi070Hrmq+uWj8+MU3cTsDq63jD3eRk36f/xicvf1eoCc+h3iNefdpe9g
I11GtrjaAuoKoq1cDXMicxfrvwSv807ItlebLtwD2BfOALG8nPSLOEzfUlv4
uSha6PoX4SldzozSZhTTvzja6RfLK8eLocuhPa+tbElzV+q1AoV5d3hF9Fum
13KkyuJz4L3Mm0xPQSW55vol6FdFr8rowDtrnyT75dUrD17i/cYbyqsZzh15
wzmrba22iLo38Q59yZxVaaLoZEZnjFZhF95uXiqZ1MggV0O/ZMe1zXluRxP6
qtwGud/UXcVDuiN/jtxRmSPIod9l/lq5szI/ozUvRW6m/UbYbSRyudbrvBG8
RnRj5JP7We1CtVvUbUULXkv7dHMdde1WBx15Z+Tmy62TWYvmvAv69dLvjXDG
eJnXlDfefkvsthjV6Xtq96lNH64VWfR/zP9c7SB1g5HFfjvkhsj9V/9vcJLe
Jhcjl0EmY7iOcL2yuXxu431mExDLu8TLyRtLj0NF3gBea/dBOjo9RtBJqMk7
pdePKCq3xT7Z7Xrfbg9wlE4y+4J+JexREnXlfuTNtd8yeima8W7Zb7T94vRq
hQK8jXK95f4pMwd76Rtyo+Sahmda+M7Jvcvr76z2m30ALcN3V/aSuWXVxaCe
XAV+B7n5MguQOZwBb5B+FfWKDfclr4PaQ2ozq8uEWrwuvHO8onQx1OHdVfuZ
2s7qEvCMXhnuLTv/RWYEGsmd5neWyxGeh8jNKy83Rb/TzvMnVOUd581Su0Dd
fDTltVI71c5bwrMN2XiN5NapPaXuZPiM6LpYxMuqLhva0bGYzrsk8yuqhXcP
bzbvFn0b1Xm7eKPMHaCuP5bTCTgtl58ugHflOtvlX3Y5a48zeIG3VW6A2v/I
fI1D9Bqfeyr/f8w9cBw95eqpHaz2OP8E2tMNZFeacdAe36MMHY/jvNx65ULt
8C7jLeClodPifToOu3iP1T1CDbnu7sm67smLzvgXFAvPMHO+MHdveK8ge3jm
qF1v5wt6XUQbXi+1jdTeUHcTb4V7Um673COZx4jCe0y/Sf65Wq9VqBueN3LX
7VJDpiYaqm3D289LTacKPu8ib7l+39MH0ZK3hzeWN5wehtX0QLu0s0tm15UF
o+nz/KVye2X2hTNQ+wtvBe8ofQxxvH6yLdSmuIanKMXbZ+9i4TnnsziMzfRt
tTvV/qHuWThXXh/eHTs3ohuHfcJ3yPX1c++WDr3win4f8H+Xay/TAZ/SDeVG
OpeZ5sxAWfogf7IZk2UmYXs4E34t/YqEZwbOhXc5xqj9St08xNLVZb8044nr
T0Fjuh/u85qH5ytG0j1db33Xe1mvKyhuv/u8EnLr1K1HxnCP4iEvLrw78Ff6
GjbZ7wZ9M3zG4fmCrbx79H38QR92NjH2uuLsLiPZjG/53eX+IfM5moR73Nzn
7bLZHlvQmt7kWkq53mfq/8SL4T5Ve9kuFdRVRH1esmwTtXfU3UUJXry5w7w/
epvZBwm8I2qnmTtb3Sy8x0uUGyk3ROZDdOEl8cbwRtGfICnM5Y3jjaHHohvv
prmv2WWBc/o3ntAHwu8ku1Sgy4czpLugCu+Q3X5AEbXXePnUzpKZjcq8BDM+
NqO//gOQGL5vcnnkpspMwzu8tbzt+sWG3wsozeuhdrzaier+hkH0kfCbV66h
TAPsovugGe+RPR6jZPhNKFvK+Z5Vdwa9wnuL94V+i+jFmEjfU1vMLiv0Wok0
4TvOz6N2tcwqLKFvyBWQmyMzF1XCd4s/Xb/5Mgswjq6F2rwW9PtoFX77qS1r
v41224A3wvuD/4ncMJnh6MqLkysqt1DmazSg24ffrXLtwm8/xMt15A3mJYbP
Fp15H8omqM1jt7yYFO4fvMKboNd4lKebh3e/67ghcx116Ef8Mrxt9HbkCN+D
8LmrbUw3Cc/i8Nzg/corQb8VzovuLXtLbb1w3+Kj8EwLf6vYb6vdtqF7eC/I
HlbbWl2b8Hynk+UmyU2XmRHOgd6ITM7+Kn0NB8K1ynZQmz3sFn6H0IPNeWZu
kpndMDl893GVV4WuigbmDuSl8OLpzpgQnjmY4Dszlh6DDfRR38tWvpdPzU7B
DnoNP1HuU5nPwjMw/I1j9kO5Gc5zJgrxetpxouuYbN8pGELvlvvJzsn27R3e
6fR3OMFLoBNxjP4Wu3m16Np4W7/3zN1o54v0hfCeppvK5ZebZuZUVKYvIqvc
8PC3DCqo7Wv2VLt8aY95GE3/IHdbbY3wfscW+izSqO1J90A5ted5GXkD6Q/C
dz38NuP9qTae7oQYXh89p5gxS//ZGEEPkYuXyy3zEiaGa8UTXhzdEmXVPuCV
MmMDvRGZXdsp9VWd+VO9UsKzTe7//HMNQg==
           "]]}],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0zlMVFEYhuEfRoRhWNwAxYUZF1QsXUo1sREbE7BUChtRFGRQUQFXZNyF
xEosLMTOaCuxExMtxMoEWoydWFg4GtfnxmTevN9359xz7zlnJne4p627JCJm
MZKKeIa3FREzXLIgojEd0cLtGESXPsHTeCkXOVsW0Yrqyog8j6NDnuJ51C80
r76LOzGGUdxDpjbiLt/BbaT1W3wTFfINvo4CyvURvoYyeZiv4gpS+mW+hFL5
Il/AEEr0QR7A35qI83wOZ/Fb7+cz+CWf5lPow089z734IZ/kHnTjBI6j6HoX
H8NR7EYDZqz3i7W/xkMU9D7ehx1yjr/bu/f4ZB+f8BDuywd4C0qxR591Fs/x
1bkUuAPb8Uiv4o+lEfvlSR5DJ/6U22+ux1N53iFPYRwH9Ty3IiNnuej8pzGB
QUxaQzu3IPl9mCZSSc5EeK3w+mFIuD0qku9d96pRmYyTfaIK1clYxTZFbXKP
vIgXY0lyr76UlyEt13E9GpDRl/OKZC65kVdiFWr01bwmmVdu4ixyydz6Wl6X
PENezxvQnDxH38ibsBltGMCcxTzmd/iGJovei60W2MsPMCy/4s+osyEf9J18
BM02YZRfYA79esaGbcMb+VDq///rHx6VWmY=
        "]]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwNzr8rxHEcx/H3bcqPO8WF7cpgOOWEvwDlxHC7cLKeoijEbqAoxH4DRSF2
FEXd7cRgsBjJjyiP4fF9vXv2Gb6Z4kyhlIiIcRK1PjSTJkcpGdFt8wxTZIoV
Vtljn3OWvb2wFaq80qat8ev+o6UuopUedvVeO8Io03RoZRbdS2yzwwln+qm9
454X+rRLvtzfNNX7f7qo6jk7RJ5J+rUn5t0LbLLFEW/6sb3hlmcK2g/v7g9S
DRGNZKlJRXTaAQYZY8LbtD7rnmOdDQ5o1w/tFdc88Mgn/7x6Nhg=
        "]], 
       Line3DBox[{6, 47, 88, 1691, 129, 170, 211, 252, 293, 1772, 334, 375, 
        1853, 416, 457, 498, 1934, 539, 580, 2015, 621, 662, 703, 2096, 744, 
        785, 2177, 826, 867, 908, 2259, 949, 990, 2340, 1031, 1072, 1113, 
        2421, 1154, 1195, 2502, 1236, 1277, 1318, 2583, 1359, 1400, 2664, 
        1441, 1482, 1523, 2745, 1564, 1605, 1646}], Line3DBox[CompressedData["
1:eJwVzSFPglEUBuCrWJwKbgbYdGMGA8mAG25mZ4ANJj+AoWPOIslA+ALBZDIQ
CASTiUAgEEzOQCB8warTzWAwO0bA5wvP3nPfnd2zf9E+v1kJITRY3QhhjRx7
HNHOhHAsK9RocU2XOwY8MiGy+yxj3vhhV3fP0pza9CZPib7+RFapc0VB90Rk
7iY7DBgn9BM5I+Y7+Uf3wsK8JLvlBkVifUmWqXLJqe6DjjmiR58Rv/qxnDLj
k3ryN3/mBTtpNzhkfdsdeUaZBk27Wf2tucMDPYYc6EfylSnvfDHnH5M1Nlk=

        "]], Line3DBox[CompressedData["
1:eJwNzD0oxHEcx/HvdcMV56GkPMalDBYZ6AxWJblypExypcvgYTMISQZlu0FI
MiibQTFYlYEiDMYrxaDs4uI1vOr9/fz+/TOFpfxiIiJmSFZHpGihkwHSdRHL
5PQERRbYYodjTrmmwXfrPOtXPmlz75JI+zftdDFIxn7AuJ5inh73GRt6m0NO
uKLXfsmDfuGDrPuGik7WRDTTQT9D9ifGdJ45ht1lVvUmexxxwaj9izv9yBuT
7l++9R+NtRGt9DFtr6qPGNE5ZinYmmwreo0S+5xT9Nbt7VbfU+adH/4Bj64z
MQ==
        "]], Line3DBox[CompressedData["
1:eJwVzz8oxHEYx/EHSfn5NymERN1gM5AbKIsyUL9CWdQpyUA2g0IxGG4zKBSD
4TaDcsMNBspguHKDwXJlkJRdR16GV5+nd9/lO5DbTDfqImKZxiSimR6GGGOr
PWLSzrHI2n/jgDwXFCix6+29rfDKJ71anvqWiIQ+MmQ51adsyhLrDGsF9txH
nHFFkVv9zpZ54Z1x7YFfd1NrRDeDjPKsT9hZFlhlWquy4z7khEtu+NJL9okK
b8xrP3y7G9oiOulnhKTDP+wMKTlWvO3St937HHPONRm9aB8pU+WDGn+YazT9

        "]], Line3DBox[CompressedData["
1:eJwVy78rxHEcx/G3EsPdOYNB4vJjcMVgMCDdbDAcoe5KCkUUpSwGSVEG6haD
pCgDZTFIBqPBYEAMBkUGA/kDkIfhUc/36/P9No3PD86VRcQYFYmIFA1k6f6/
0xELDOgiMyyyTokDTrikxncrPOhnPsi4tyhPRqRppI1emu27DOlRZml3H7Oq
N9njiAs67Ofc6ife6XFfEamIBPW00kXOfk9eF5iiz/3Cst5gh0PO6Ld/caMf
eWPE/cu3rqyKqKWFTor2ZLX/9DATTNrqbEt6jW32OWXaW9bbtb7jlU9++AOH
lDKd
        "]], Line3DBox[CompressedData["
1:eJwVzL8rxHEcx/E3g9Q5d2WjiEVCNoMrZTh1g8GVZECUQfkxmJSBMjBIBnUD
ZWCQDMpAKcpguMEg3WAwXDIYxB/gPL7Do9e7Z58+nfOrxZW6iJilMRWRpYM+
cqxlIkZtkRmWWGeHQ0654oEtb8u2QpXv5C9tn4amiBa6GGCYY71gJ5hjmX7t
gm33ASdccset/mRfeOeLXNKoT0dkaKeXIV71vB1nmkUKWpVN9x5HnHPDj/5o
n3njk0mtxp871RzRSjeDpLMRI3aMKRYS3rbpG+5dSpxxTY9+b8tU+OCXGv8n
pTW4
        "]], Line3DBox[CompressedData["
1:eJwVzj8ohHEcBvDvOxguvKckC+XIQvmTxXBiVkqirih/Ekl5F6sUg0FXDAYp
BoMUg4HhBoPJZDAYbjBIYriBwexj+NTzPN/f8CssZVMbSUTMk6uPaKaTAUZI
8xGbzMiLZGyxzzEX3PJAi3c7VOUPvunQD8g1RLTSzRBjdNlPKcnLZPTpV+zJ
R5xzwz2D9gov8hs1ivojdY3+ToF+ioz+v2VaXmCdcf2dXfmQM66pMGH/4Vl+
5YuSHk0RSRqRp51ehpl1S90m5TlWWbG12bblMidccseaW4/bk1zlk18S+x8C
BDFK
        "]], Line3DBox[CompressedData["
1:eJwNzb8rxHEcx/H33WBwzlcGSrnyI4synFIGcv+Aoigl6pIkcQNlMFwxGAyU
wXDFYDBQBkXdYDCZDIYbpAwUBgMlGeQxPPq8evauT0dxZXw5FRGzZDIRrXTR
zzBrSUTCpD1HiTI7VDjhihs23bXwYL/yyR97Wn1DRBs9DFDgUO9myp6nxAZn
2rb3gGMuuKaq56nZz3zwy61Wl/U3neQZoqaPMGEXWWKdF23Lu88R51T50ke5
t59455tUU0S6MaKZHH0MkujT7sfsGRZYpV0ve3epcMolvfqi+zv7kTd+SGv/
qVk0hw==
        "]], Line3DBox[CompressedData["
1:eJwVzT8oxHEcx+GPP4O6ww0GShdFGQwGShkoyw3UxUAZSBIDYrjBYLhkMBhu
MBguGQyGGwyKGAwMNyhKMUgZbnCDgUEyeAxPr/q8v/1+nfNrE6s1ETFLMhHR
RjcDjDBOrjliWhfZIM8eRU644IYHtr190Xc+E/8fjSi4JbWdHgYZJcuhbUaX
WGeLktuuHnDMGdfccWl71gof/FJ2a2iMaKWLfoYZ48k2pQussEnFbUf3OeKU
K8p82R71jSrf1KYi6psiWuigjyEypGyTOscyOdJueS1QpMQ5t/Ta7vWVKj/U
+ecfE7o2ng==
        "]], Line3DBox[CompressedData["
1:eJwNyj8oxAEYx+H30hn8+TmTDOgUSplkoG64K7OSgSIlg/rJDZTBYEAMBmUw
GBCDQRkMhks3GAw2g2IwiVKnDDeSZ3h6v3168wvlyZVMRMyTNEd0M8AYJdbb
InLM2Clr7HLAOVdUeWDHXwdv9jd1si0Rh1ri5hmkwDhneh+z9jKrbHGt7bsn
XFLhnjt9mFf7ix8yrRGPWpPbRT+jFHnRi0zbS5TZ5FPbc4+54JYqdX2CZ/uD
Gr805CIak4hOehmhQLs+53/KXiRlgx592z3ilBsqDOmp/yf7nRp/ZLV/6qA0
Gg==
        "]], Line3DBox[CompressedData["
1:eJwV0D8ohHEcx/GvUsj9wWy4KwaK1UDdQBkV6gbqymBQHhnEZDCcYjAwGQwU
g4HFYLirGwyKwXDDKYOJQblSrF7P8Opd38+vnnqKKxvzSUdEVMj3RhQZZYoZ
FtnJRyxrwjYHHHPJDQ0eaVH19l3b/NGdiThx69chxigxS5lzW0UTtqhy63aU
blxT44EmddubfvFDZzbiyS2rBUaYZJoFXm1LusYme3y6HeoZV9zT4IVfWyt9
wzeR842+iB4dZJgJSswxYCvrKuvsUnDb11MuuKPGM+O2pn7QzqU/PaKLf1WT
NZM=
        "]], Line3DBox[CompressedData["
1:eJwVyj8oxHEcx+GPonDu/FtuvcGvUCxGw9FdGWUy+JdR+qlTYjacohiYDaco
BlbDqRtuUFYDZbCpG05dMXoMT5/399W3sLmzlHZFxDrDmYiESeYoczCos2rv
ss8p59xyT5Nnqv7l+bQ7/JIdiLjQRtxxpiixQE1P2LAr7HHMg3bmXnNHgyZP
+gwfdpsOfdmIFy3njjFBkRLv+jwrdkqFKl/aiVvjhjoNfvRF3uwWbXpyDEX0
uwUSZikyqq/5v2xvkXL4/08/ci+54pE60/q2/692i2+6vXv5A7ehM74=
        "]], Line3DBox[CompressedData["
1:eJwVzSFLAwEYx+HXIopTD9kXUAwTJuwTGCZMMBoMEzZYFicoCn4AkYWFBT+A
yMLCwrLhwsKCLBkWLiyYDIqKom3PwsPveP/H3WajeXS2EBF1NlYidthlnwNO
uFm369X8mQ739Bkw4pkpd9591V/+SXLedctrkRIVDqnxaGvoJde0Gbh1tEef
ISMyUttUv/ghtxoxdku0QJEyFapktpqec0GLN7e2dumRMmTCny3Tdz5ZWotY
TPxHtymwR5lj8raqntLkli23lj7Q5YmUF0q2iX7wPf+2/y0zA592N0U=
        "]], Line3DBox[CompressedData["
1:eJwVzs0qhGEYBuDHShkzfjLKcrIQZTTKEYwyE5uxtfjE2l9RxAmIoihOQBRF
jRMYRVFYW8zCwsrOb9i4ZnF13+/ds3hzMwuT800RkdCVisgzRIky620RnUw3
OhsccEiVS+55YNNdDy/6L39kW93bumWBYcaZ4Mjex6y+yhp7VG378pwLbrmj
Zh/hWf/im450xGPjj3KQPGOUqNuLJPoyK+zwatuVp5xxzQ0/9gp1/Y130pmI
5vaIjOxngCKjZO2J+yl9kSW26LVvy2NOqHFFwT7n/kn/4JMW7xT/9JQ1YA==

        "]]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwNylcyA2AAhdHfi1drsCUbMGMBCQmi7EKLiBYteu+E6L1FEIRgJc7DmW/m
zq1tiNZFqkII9exWh9BFNz30EqkJoU+T9JNigDSDDDHMCFHfUc0wxjgTNNon
dYos08zQZJ/VOeZZYJGYfUmXWWGVNeL2dd1gky22abbv6B775DigxX6oeY44
5oRW+6mecc4FlyTsV3rNDbfc0Wa/1wceeaJAu/1Zi7zwyhsd9pK+88EnZTrt
X/pNhR9++eMf849GBA==
        "]], 
       Line3DBox[{206, 207, 208, 2942, 209, 210, 211, 212, 213, 2945, 214, 
        215, 2947, 216, 217, 218, 2948, 219, 220, 2950, 221, 222, 223, 2952, 
        224, 225, 2955, 226, 227, 228, 2956, 229, 230, 2958, 231, 232, 233, 
        2960, 234, 235, 2963, 236, 237, 238, 2964, 239, 240, 2966, 241, 242, 
        243, 2968, 244, 245, 246}], Line3DBox[CompressedData["
1:eJwNzlVSAgAUhtGLATZ2YCB2507cgDMuQDYgdq7TbkVFsc/DmW/mn/twc2v5
lfVERKxSn4o4TUaccc4FG+mIS73imhtuueOeBx55ouD2WYu88Mobm/aSvvNB
mU+27F/6zQ+//LFtD78kqKCSKnbs1ZokRQ217NrrtIFGmkizZ2/WFlppo519
e4d20kU3PRzYM9pLH/0McGjP6iA5hhjmyD6io4wxzgTH9kmdYpoZZjmxz+k8
CyyyxDL/OJwsnQ==
        "]], Line3DBox[CompressedData["
1:eJwNytk2AmAYhtHfkUPX4B7MkswiRTJliMxTySwzHZlFuV37YK9nre/9mvPF
dKEhhJBjqTGEFlppo50OXppC6NQuuonQQ5ReYvTRz6vfAR1kiGHe3EZ0lDhj
jJPg3TahSVJM8uE2pWmmyTDDLJ+2OZ1ngSxfbou6zAo5Vlnj25bXdTbYpOq2
pdvssMse+/zYDvSQAkV+3Y60xDEnnHJGzXauF1xyRd2trNfccMsd9/zZHvSR
J56p8A/TMyof
        "]], Line3DBox[CompressedData["
1:eJwVz1c2Q2EYhtHflUtjMCUTsJYBMAohotcERwkSvfceovc2H/u72Os56z29
ua2jpb0hpdTKRmNKneTooptiU0p57aFAL330M8AgQwxTcu2IjjLGOBNM2otx
Po6ZYjpqz3SGWeaYj3P2si6wyBIVMntVl1lhlbW4376um2yxzU48076re+xz
wGG8x36kx5xwylm8236uF1xyxTVle01vuKXOXXyf/V4feOSJ5/hm+4u+8sY7
H/Ef9k/94psffvnjH7/HRIQ=
        "]], Line3DBox[CompressedData["
1:eJwNylcyAwAUhtEbLVEieokS0RZkA2YsgF0p0dmL6J3oRO+chzPfzP1vfmJq
bDIREeP8JiM2KLLJFttMZyJ2dJc99jngkCOOOeGUGb9nek6JC2bdLvWKa264
5Y45270+UOaRgtuTPvPCK2+8M2/70E+++GbB7Uf/iFREggoqWbRVaTU1JFly
S2ktddTTQJplW6NmaKKZFbcWbaWNdjroZNXWpd1k6WHNrVf76CfHAHnWbYM6
xDAjjPIPgzI4EA==
        "]], Line3DBox[CompressedData["
1:eJwNylc3AnAAxuG/O3c+gyszIXslK1RGtlAiW5H1xczI+Gaei+f8znnP21ys
ZMsNIYQ8y40htNBKG+08N4XQoZ1E6CJKNz30EqOPF99+HWCQIYZ5tY/oKGOM
M8GbPa6TJJhimnf7jM4yR5J5PuwLukiKNBlq9iVdYZUsa3za13WDTbbY5su+
o7vk2GOfuv1A8xQ4pMi3/UiPKXHCKT/2Mz3ngkuu+LVfa5kKN9zyZ6/qHfc8
8MgT/6b/KJ8=
        "]], Line3DBox[CompressedData["
1:eJwV0EdSQlEQQNHnzJlrcEtuwCoWoFMVxIBZMOecMGDCnDOYEN2S5w1O3aru
P/j96hPNDU01IYRG1mpDaKGVNpKkeK0LoV3TdNBJF91k6KGXPt58268DDDJE
yWxYs+QYYZQxynbjOsEkU7ybTesMs8wxzwIfdou6xDIrfJqt6jobbLJFni+7
bd1hlz2+zQq6zwGHHHFMxa6oJ5xyxo/ZuV5wyRXX3FC1u9U77nng1+xRn3jm
Jb5hfBv+7Erx7nhnvCf+P/+GC0ME
        "]], Line3DBox[CompressedData["
1:eJwVzldSAkEYhdEfI2DAiProltyAVS5A1mnOIkkBc84B8+mHU9/Una7pmV0o
zS1mImKepWzETC5imimKTNIoREzoOGOMMkLdXtBhhhhkgJo9rzmy9NNH1d6r
PXTTRYaKPfTP/b/88M2B/Us/6fDBO2X7m77ywjOP7Nsf9J47brlhz36tV1xy
wTm79jM95YRj2uzYW9rkiEMabNvrWqNKJf0jW/Zyuj/dlb6bvpHOp3dsssF6
enZ2TVdZYZkn/gGDz0OD
        "]], Line3DBox[CompressedData["
1:eJwNylc7AnAYxuG/Q0fO7YRsGVkZZa+MQmREtgO+cWRFvoT74L5+1/U+b6T0
kn2uCyEUaawP4YlHHrjnryGEO73lhmtKXFGzXWqRC875dTvTUwqccEyeH9uR
HnJAjqpbVvfZY5cdMnzbtnWLTTb4clvXNVZZYZlFPm1pTbHAPB9uczpLkhmm
meLdNqkTJBin4jamo4wQZ5gh3myDOkA/fby69WoPMbrpopMoHURop+y3TVtp
oZkmlvgHQ+QnHw==
        "]], Line3DBox[CompressedData["
1:eJwNyscyA2AAhdHf0sozeKW8gBlbJEH0FtGiJEr0XkJ0opdXEjWEnbM4883c
ubX1sUi0KoRQR0N1CM888cgD9/zVhHCnt9xwzRW/9qJecsE5Z1Tsp3rCMUcc
8mMv6AH75Nnj276rO2yzxSZl+4aus8YqK3zZl3WJRRbI8Wmf01lmmCbLhz2j
U0wywTjv9rSOMcoIw7zZhzTFIEkGeLX3ax+99NBNyd6lnXTQThsJWmmhmTgv
vjGN0kQj8/wD47lBhA==
        "]], Line3DBox[CompressedData["
1:eJwV0OdNA0EQgNE5B7ANErRASzSARAHQIDkHY3LOOWdMxubtj6dPN3Mn7V5X
b393XxYRPQyUI9orEW1UKNPaGVFKpYUiBfLp2S6nGUHT90Wzhv7xyw/ffFGw
+9QP3qmTN3vTV1545olHcnYPes8dt2RmN3rNFZdccEbYneoJxxzR7Ig41AP2
2WOXHRp227rFJhvp3GbrusYqKyyzlO5jt6g1Fqim+5nN6xyzzDDNFJNMMM5Y
+g/eHdURhhlikHP+AXVqRv4=
        "]], Line3DBox[CompressedData["
1:eJwV0FkzgmEcxuHHGZHKErJmLXu2FLJmjcgexowPwPc/cz0H1/xm7nkP3uef
//lr/XaEEL5JJkL44pMP2rwzmA7hTV954ZknBuyP2uKBe5r02+/0lgY3XNNn
v9JLLjinTsZ+pqeccMwRafuh1jhgnz1S9qpW2KXMNr32Ld1kgxLrJO1rusoK
yyzRY1/UIgUWmKfbPqezzDBNnoR9SieZYJwxuuyjmmOEYYbIxtvFO8WbxPfT
6dtMfFt8R/xndvgHUCEXrQ==
        "]], Line3DBox[CompressedData["
1:eJwNytk2AmAYhtHfqSNHZiXdkQsQEQkVknmeRebM8xjlGu2DvZ61vveLJXO9
2YYQQoK+xhD+qFPjl3hTCD9a5ZsvPvmgx/aub7zyQsztWZ945IF77ui23eoN
11wRdavoJRecc8YpEduJHlPmiC63Qy1xwD577NBp29YtNtmgw21d11hlhWWW
aLct6gLzzNHmNqtFZigwzRSttknNkyNLi9uEjjNGhlHSjDBMiiGa/Q5qkgH6
SbDLP/heMhI=
        "]], Line3DBox[CompressedData["
1:eJwNylcyA2AAhdHfqydbMKMniK3YgBkLYGmIiBYl0XsnRO+dIAhRzsOZb+bO
rWzvbO0oCyG00VUewh+//FDim5aKEL60yCcfvBOzF/SNV17I02x/1iceeeCe
Jvud3nLDNVc02i/1gnPOOCVqP9FjjjjkgIh9X3PsscsODfZt3WKTDdapt6/p
Kisss0SdfVEXmGeOWWrtMzrNFJNMUGPPaJpxxhil2j6iKYYZYpAB+knSR4Iq
316N00M3Wf4BucJMdw==
        "]]}, {}, {}}},
    VertexNormals->CompressedData["
1:eJyMnXV0FMn7dwd3d3cITnCdDu4sEggaCO7uLO4uiy7u7i5JYYHg7q5BE3Rx
eLOpW2zm+U2f77v/cLbOnEndvl093fV8qjpTy25120R2OByeCR2OKGH/5h8T
JfRG+hA1veiVPnUWXFFDL1fN/mNWC+eVtks7N+n7Sm2o2bhjcq87Knnn4vO3
vW3hVCl+9Xif7LHam9RrX5nnz9Qtv+R9H/k3c7bxG7Dry6g76vTWlxmntH6l
TqUoe65sqebOgqmnDL9U6Z4qXevb7swvX6pFL3IVPFWpg/O756qdeW6+VlNX
vW1SMN41NXpd9g/J6/zp3B5jcaVvPR6rNuUWrn298Jnl1X/8lCyZujvPD0h2
L8uTe6pe9Z4TigW8tC689q47dkYLZ+UMMeY1SPNIvX0fbW+X9c+t+v2aFery
qYkz0r7YyYs9fa5yDWiWr/Gph9attPWutd7j62z3vnXasSdD1d10m6f5F/K3
svTLsjr9Kj/nCXivwRsN3gPw7oc3BN5O8J6E96oN71J4f9jwroG3K7wWvCfh
rQ/vGXhrwvsK3vbwRoc3i+BtD+8JeHPAewbeQHhjwbsHXn94I7XUvK3gPQPv
FXh94C0I7zJ4oxTUvD3hHQfvCnh7wFsJ3qPw+sB70cZvXXgjw+sB7xXh9zO8
HvCegvccvHFseH/gtzi81+DdCm9+eMvAOxfen/gdA29veKfDOxzegvDuhrcx
vEfgrQvvc3jbCL+Z4X0G75Kll2pM9gxRpy8Vffm64BVr7dUWJbtebuGsEM2/
/5XgELU6f97XeeaeV0uCylbKGKeFc9vZNCtHvXylsq/sP7txm1tqfbxHa4P9
mjsPdtyiXjV9qkY/j3J77KOn6l7HK/Vm/2zh/DJ3bQPn7huqXs/RKefXfK1K
Zil2tFHads5vI/bFWVV+j1rfsvzm9LdC1Z5FtVpFidPb+fLiu5WpvUOteG1z
1xyY7KS6sePWjO6XtzoPvUicrmLbXVaOP9cfn3k/1JrR8t20DVEGOsfvf3Pt
0IObyqPBuD31Yr+2nr3c5ps6dgdn/KmDkm9//0RVyj06+pgqwVa5rT7LUy5o
4Yz646ljz4dXameaaGmbO29ZT3cnTpbzoK+zSf7yq+v/ClXdh3/p5516gkoc
pfTnc1Zz53p4K8C7DF5/eMfB+wRexzzNWxfeovAmGunKq+BNcknzpm2lebfC
m+ulK+9pwZsT3jvwpoC3NLzV4f35XfMGwXtf8C6DNzW8m+AtCu8qePfCOwne
R/BGh7cOvHng9RC8++DNBu8NP817HN59+PWAN0orzfsXvNnhvQ5vHHgrw1sB
3h/wnoX3oeBtP8yVdyO8Frwr4T0A70R4H8P7c66r31Lw1oN3Hby74U0B77GW
mvcxvPfF+bwDv3ME7214E8PrBW8lcT5vgfcmvL9SZc8WLU2oejv/+Lbq8c5a
Vd5u6h53QFPnPv/LOdO/DlEn2+ZovLD7edV725DOBz0HOn90Lv71zclD1tdb
Ld/12xKqZqyOVunChknOYhuPfpwV54a1uVP7lJt7vlapDvYc2O5jf+ed05e3
1uwWbE1rUe5X5ZNP1OsqJ4uu3dvNuftA8TetIoVYwyut3/+4zFXV+EjDOqsX
tHMu+HIu1oKvoVaDZY8jZZ2xzDpwfKl/nSUdndkX5CwQ/89XVpcsW57cyXnH
inS59ZTrR3s5l5w+NNfH5441NFfrl77dX1lROy6fmGpfX2d87zkvL58/ZS1J
W6JxqdKhVsbQ6eNXxR/ojJc1dsVW8UeqD20WFF35K9SqWnlZqi8ZJznvxcnW
rbLaolbFmrytV0ioNazt6dmfF310pumieb/AuwbetPDuhDc2vE/gHQtvvKqa
NwDe5vC2gHchvDWWat4j8BaDNx+8aeBdBe8QeF910Lyf62ne5fBeD9G8QWk1
7z/wqkqat3VMzbsR3hi+mjed4B0Fb0rB+01p3tfwDoY3BL8K3sbw/iF4E8J7
F97K8L7JrHmLwrsS3sHwPod3In7nwevA781MrrzGb9vcmrc1vI16ad5oXVzP
50B4veDdCG9l/N6Fdwq8CfC7Hd758LaHdz68vpzPD+H1gLeD8DsV3lHw+sOb
WJzPkeEtldGVdw9+1diswXWvh1htakWvmjT2BcvXb9ORp/P+dM45UGhy4Reh
VrN7N/M1XLvN6vht+5As1/ycv/r1/7jpcdj1x6fbgqGPdlgxQvuVrPbGxzmw
f4k5G86HWoXq3wyoMXC/dSFvmbpvltR2Lmxc9dake6HW5n+2p2p/ZJf1ZG/G
/XmzVnVO9TuXfOM/oVb6gKETTnZaY5V9m3xhgqoVnUOHnaz2Oax/+bwe/rhV
pK0qsfVVvJ0+FZzO2a1S/vU+1FqVqFeJtgU2qGjVZn5Nmb6Sc/ODWyHlr4Ra
8z02dvZOt0+tGeE17efi6s5PKrjhehVqtQvxGTA08kGVIeCsz/mt9ZxvqsYc
XuZJqNWt7IGhZzfsUA+//d1oaNWmzj5/nCp+OOzvXm21tuef3Ydas28Gtvao
1fw37zB4YwnezPBeg/dveNd+0rwv4J0G711/97xn4C0Dbxl4byTWvFEF79/w
/g3vN3jfvda82eANhXcevE8Fb7+WrryO/prXE9748A6AtxO8V+FdAG+OT+79
ZsSvJXgnVHX1a3jbwhtJ8M6GdyG8/8A7Cr+pBO9MeIPh7QtvzGaad7Xwewne
SMJveXhvCN4o8L4Sfo/i1yl4R1XUvEXF+VwMXge8W+AdA+9yeD/D2xbe3IJ3
Obwf4K3zOP3Q6e9Crag/egdvqrVRxet8a+mbC42dZ4f09r24LmxcZF39NF6H
w1afkD5/Za9Wx1l9eJz962OEWifSpez+odI5K3rsPgNLxqzrzJ3u/bCVj19b
j3tfm7v26lWrx87AwS1CajnP3ImcfliFEOuCI+hBQOBlq3TC2O1ed6zuPOK7
ZOw2v1Ar1ZpeJXfEPmFdbD/jku+Bqs6Ok0MeDww7DtNypj75KvFYq179fnnT
RKvqfLLj3a5mI0OtakP97uR0HlNxrx9cuz+kirNd+jwb/YaGWDOnni1Y2++S
6tPhiU+tqNWcKZ5k29o+bdjvRZru3V6svaLmOPbFvpitpnNdmuNZV0UNG9f1
26UP7HtOLT25YUKMHHWcS98NqtQk7O8+LRPne5b145Wvf/QM/VPXc9aEdw28
keHNBW+I4D0L7zl4y8J7FN6o8F4RvM1zaN4/4H0A71x4Y8LbGd5+8PaANxm8
beGdAe8qeLfDu1jwTnBq3ubw/gHvSHhjwJsP3uvw9oX3Irw74S0H72F4M9rw
ZvXQvLXgfQpvCXgTwNsK3vXwdoQ3Cbzd4Z0J71p4R8G7RPD64LcZvLXgXQBv
TOH3KbwD4T0F7114ywje3Da8E7Nr3rrwPoa3Drzx4G0P71R4Wwu/neGdDe8a
eJfB+ze8lS7WbHh2QqiVpeWr8rdmBKrbfpv9F/T0drZ99/nKuj3Prfo35vUf
FuuRVbfQuro/H3dxVvj5OUbqgNXq5JlPb/N/CrUGfJlweXD1rs6PU1LvSp9q
ojoWvUjHKv/eD/QePipStpbOvB9PLftYcKo1JN7X5XHD2hPdiB8yOH5L51/1
hx6/+2OZVf3E6KNNw+5TUpTvMiJ9/y7OQSXzRTsxpF5AOnX0fcKC5Zw/f/37
X9jzh3f45xWfV3n5/OyQ8O9XQ/X3q9x8/+Op4f2x6I86QX+K/gjvv0X/VUv6
33t8rP51K9ZwXvDNl7zWw5bOb/zdAj9ceSvxeT/Be4zvj/tO89IfKwf98RK8
Jej/lZ1zkg8/VdjZq8Ijn0LrGwV85++Wqe/K6+Dzzd9qXo6nysz3l5ziyruL
/tT56crbhv4//RhtYr31ns6FBYbmKV+7jfMLf3ek4DWfbzDZlfck37/7vavf
7PRnr7crbz767+C/S+HcUfn/N1YCwZuBz2d/58qbke//JngP0J+p8J6AtzX9
j5t5wuLVsWoFnL5ZqdKlOhWcv+AtLM7ndny+3zRXXvP9o964+k1Df/YI3vr0
/1Q4Z1Zn2oMJV1xv3C3gDX+3teDNwuebCd4MfH+ySa68AfSnqzif65r+6/Gr
nHr8qk6M38p6vKtUerxbzxnvXA/VNH19sFZzfeD6qXrp64m1kOtJa339USv0
9cfqzPUnWF+vVCZ9vbKSc73i+qbuZQm/vilvrm/8vqvU+nqo7nI9PK2vn+qq
vn6qGlw/8+jrrbqnr7dqBNdbfo/UJH19VnG5PnM9V6u9wq/nVguu5+vh7SZ4
08LrBe8SeLnequnwdoWX67P6A95kgje3vp6rBoI3Bbw34OV+QJ2Ht6LgvQPv
EHhrwzsM3niCt7mleVvDy/VfzYF3Gbz8Xqh28M6Hl/slxf2SZe6XuL9S5eBN
Inhj699r1Qhefu9UVnjvwHseXgVvZXhzwhsK7zB4+f1Vi+BNKHj/Ka15W8K7
Gt7N8C6HNym8PQVvB3gnwttN8NaAN5HgvZXD9Xzm/k0lELzG72l4q8KbF96b
8E4WvAvhjQ3veX2/rbLq+201iftt7s9V1O/h9+dWLu7PuZ9XPL9YBb7r+3nu
/1VTff9vFeP+n+cF1UU/L1ibeF7g+UKN18/LVhKeL3geUeNrhD+PWFV4HuH5
Rb3Tzy+qBs8vPO+o9/r5XUXZp593BunnI/XYO/z5SAXzfBRJPz+qmPp5Snny
PMXzl8rRNPz5S73i+YvncdUE3lzwfoG3CLwWvDwPqlnwHhC8Thvervp506ok
eDfAWx1e5ivUUXi/8nz3J7xr4H0BL8/LqjK8+eHl+VqV0M/X6ie8xu924dfw
Foa3jOBdBe82wXsO3oSCt3slzVtO8EbWz+OqmvCbSj/Pqu/w8vyr0unnX/VM
8PaFN7fgndVC834WvJPgzQPvV3hzwOsleM/Au0/wPoA3qeD1Lube72r8VhV+
j+D3i/Cr8BsqeDPDWxhe5sdUJT0/pmYwP7ZBz6ep13o+TQ1mPu1K5vD5N4v5
NzWP+beaer5OLdLzdeqwmY/V83uqj57fU8eZ38ur5wOVj54PVLcu6flA5sPV
KD1fqlozf3hMzzeqwnq+0UrKfONnPT+peun5SesE87H19XymWqPnMy0H85kp
9PynYr7XasD8Z9UvWf+dL7XO6PlStbajni+9kcGV9wa8leFdAG8c5ievwdsd
3uvwFoTXC96b8DI/rG4u0bwd4D0Nb3J4M8PrOKN5O8J7EN5u8C4XvFHhZb7X
OgdvM8F7taXmLZ/FlTcI3mjwLoX3CX7vw9sN3kvwFoLXgjdE8G6Ftxu8x+HN
A28GeN/jtz+8Z+FtCO9qeOPDm0b4DYJ3Uvbw+XCrK7zezTTvRsHbB97y8C6E
9wO81+HtAW8ovPnhrQXvS3E+d+R87gXvEXgrwpsO3neCdzu8leHdAO8P6hGh
nV39toB3p65nWcG6nmX9RT0rcurw+pd1XNe/wn4vdP2Leqh1StfL1HPqZZF0
fc2qo+tr6g/qa010Pc4qpOtx6gf1uFq6Pquo36nh1O+S6XqfeqvrfdZY6n0b
dL3b2qDrg9Y26oPBup5o+eh6olWWeqLS9UeL+rL1gvrjZl2vtArreqW1mnol
9U1r3ZDw+qaVhPqm4aX+q17AmwDeioK3BbwF4X0B72R4s8G7FN7k8P6Atxa8
fvBuhPcgvNfgbQJvCXgPwUt+wAoRvEVseFPo+rWVBt7Iuh5q7YX3Jbwx4a0G
bx1468FbFN6v8OYWftfCmwbe/vD2h3eC4PWH9x68jeA19eIA4fcdvBvgLQvv
OsHbAL8p4P2C3zvwBsMbG96qgrcLvPng/QZvbcE7AN688ObR9XprLryTBe8u
eC/B2xTeIvCSD7HGwhsM7xZ4C8Br8gaWzp9Yp3T+xBpP/uRicHC0Zt+fWDMq
/rrt4xWsnlbYmXmgV09n95fdcsz9slVtLPYsStDLULXrS+wdJ690daY/VnRM
/UIzVeopeZ+2+xmqrrRINrGFV0vnPw36FZmg/rIKLX/0eUBYu9++IiX3+7R0
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
vMvhNfMncQRvT3iLw7sJ3u/wMp9j9Rd+eV62eF5W2QTvHngHiPM5B7yf4L0m
8oRX4M0HL+slrSjkzZ4Kv0/E/mbtyJt1EXmzhOTN+ou8WRPyORlF/uol+Zxb
Ip9TknxOqMjn3COfU03kc9Lr+UNVTuRzAsjnxBb5K3/yOTtE/qqeyF+ZfM4g
8jkOkUfq76fzSHtE/srk69IL3jsiX2d4K39yn7/aYpOve2C5z1+dseHdJfJm
Jl9XA978gnc0vFFFvq41+30dE7y94U0teL/D+0DwOuF9K3gPwFtB8HYV+7kZ
3sk2vIvF/nWGl/qLymWzn9s3sb9Zaz0fbh0SvA1s/P604a0H7zvBq2zydevx
awneF/DGErw74N1o47eU4J0s8oRmf7MPup6lkom8WQXyZqb+xf4b1p9if7P8
5HOukc9pRX2N/S6sg+RzCoo8EvuBWJdEPqcJeaRmNvubxRL5q8Xkc7rZ5JGm
i/2g/hL7QZk8UhHyV01EHmkUvFHhpZ5o3YW3u03+qqTI10WB97LgzQCvt8hf
1YM3vs1+bm3gTQ1vTXhnif2+JsG7UPCmseEd+T/89oOXeroVBG8Jmzyh9DvY
w3W/L7O/WUHh1+Sv5ov9zZKLfN10kb8ib6DmC96m5M0aCd5hYv86ma/rKfxS
X7aKifM5GbwXBG808mY+wq/v/9jfzPglH2L9Ae9f4nxeBO9f8FYgb1aXvNkl
8ie9yJtVIm9W3+xvJvJIJs/D/ku/8zlm/6X1Yv8rs/9YnAau+Zz05G2m67yZ
s1bkpvP/3NHVafaDiifyOSbPUy7UNY9k8jnlprvmc8z+Y5XE/ldt6f8T9vta
dfhG23chTX/ngraIPFJ/Pt9E8B7k+/ML3qz054nII+Wm/4Hsf5Xi88N42bJV
+D1/1cRm/ysV6ppHMvmu5NPd56/s9jer0DBmzjUHijsXrK34yeOE1++/u0jw
9uXz5ye68pq8U1PBa/rzQvCa/co2sp9b3c+rqiQe1995g+P8RuxfV4bPT7Xh
nTnNlfcw/Wkv/DZy2b+utPOKzhMGmHzdBMFrjk9sm/3rFr5z5TX7y62y8XsY
v4M2dCzxtnWO3/NmXwVvAT6/O8R9fvK14DV5v4qCtzb9707erAp5M5MXLU/e
rD15s1eM95Xkc06Sz1kh8jlcP62/uZ60JJ+zjXzOYK4/5J9Vb/I52UQ+5xL5
nG5c3w6Sz6lLPsfkq9kfUt0nn9OQ66cH+Zx35HPGcr0l761Wk89JKfJI5Iet
jiKPRL7aWi/2v+oE72qxn9tqeAcK3o7w5hC88fT+q6oLvIfg9YT3ueB9AO8f
8JJXVyGC1+x/NRvepIK3KfmrroJ3ObxrxP5mHeFdDy/7harN8P4peHvBm13w
LiFf10nwFoD3ieC9JXhzwPvZxi95fpVE8Eb1cvVrzuczwq/JE7aCd604n7cL
vyZv1hbeTIK3t835XEHwsr5AsX+vqi78sh5BjRN+58GbSOTNGpM3G2nut8mb
LdbrQaxMIm82m3xOapE3K0c+p4jI58yxyV9tJZ8TW+RzNpM3qyjyOf42+SvW
EymH2N/sLPmchyKfU5Z8TlaRR/pD7x+uzor9zTrBm0jw1hL5OrOfG+vLrB2C
d5hNHmljSc1bVvBuFHkkw5uaPNI/Yv+ro/A+EbzF4M0seP3Y7+uc4K0Ob1Kx
f11d4dfwToJ3i+CdC29cwXuujOa1BO8qG16TN5P7ue2D97HgLST8mjxh7Caa
947Im82FN4HgbWBzPm+04TX7uSWWfktr3sqCl/kWVVnwJrLJE/6y8dsV3gwi
b7abvNko5seOkDerTN5sCPNpuUQeKTHvU+gl8kjPxP5XJm8Wwvwe77NQecjn
XBX5nH/I51Ri/pD12ioF+ZxYzDeyvlu1IZ9znPnJNuRzVpDPiUTeLL3I5+xn
/jNfIp1Hmk8eaRb7Xz0TeaQvYj83k0f6KvJ1neG9Z5OvOyN4a8PrhPcMvHHh
jQxvXHh9xf5XveFdCq95H0cmwTsf3tSZNO9AeIs31rxDhN80+O0n/Bre9/B2
FHkz5rcV89vqsOC9B28+eM/BGwXeX4c1b1ThdxW8nYTf1/AWF3mzKfAWzqF5
u8CbhP3reqV15b2OXz/B+xzeE/AyP69eiHxdVXjPiXydN/m6MmL/ugTwRsNv
bHibw3sI3l7wLoM3AedzMuF3vNjf7DV5s3nUs6KQN9tG3qwV9S+TRzoq9vuK
LfJIJp9jkc8pST4nNvt77Bb7fQ2jfpeOfE4H9r/qTb2vhs1+UDKfU81m/6tQ
6o/UZ60S5HPWiDzS/qE6j5TaJn/1RvBST1T14a0Ob3F4Y8C7XPBOgTcDvGXg
rQHvj+GadxO8gfAGwesLbzmx/xX7mVjv4d0Kb34b3srkr1LBa/KEB+B9bZOv
84G3JrzF4I3/yv3+dUPhLQrvWPJm5eD1En5Pw3saXvIPVmV498HL+8Kstzb5
qw2Ct7VN3uwuvG/hjSfyZg3hbQBvEbFfX2XB2wfejPB64rcOvA/wuxlek984
DG9zeKsKvyZv9kbwFhN5Myd5s0vkzaaQP7lC3mwqeTOTV8ks8jlnybekOe4+
bxb2vOg2fzWKPNJZ8jldydt0D8/lNA4ox35fP5jfqMN+UKfJ5zTh80sauuZz
WvL9l4645pFMPucc+1+xn5Vl+v8wfJ8vr4DXYv8rH8F7jM/7iP3czP5piXzc
73+1R/CafN0nvZ+bf69w7ly/56+eiTxSSz7fVex/1cLsr3XUlfcy/dkjeO/R
/8F/Zerae4Yz4MjMm8PfFir+ez6nruC9bPb7Ouaav7rO938V+9fVpz8zBG9T
+p8jPGdWOKBPOG9J2/2+eps8YSP3fteJ/c3M8Y8t8ldH6H/xzX1uzwqoF/DC
wz92jQqtAsw6zeXwrod3u8kT2vi1279O7udm8oG3A2/tTHmqYcCzkTPOthlb
IMCcz8PE+Wz2N1sg/Jr94r7Z8B4Xfs3+Zq/Imw0kb/aO8VuOvNke8mbDGO/s
f6g8yefM5PpwWOxv9ozryVHyOVx/VC2uP41EHsnkY8mHW3fIXw3m+lZa5HP6
cj3k+qm4flqfxH5QZcX+V+b9gxvJ5zwTeaS++vdaxeF6Lt8fukjwjhL5q8ti
PzeTV18p8kjmfYsF4P1AHqkDvJ0F7yx4a8PL/p9WXH4f44n3h5r7h2jifYvy
/ZJr2d8sJrzb4c0K73x4g+AdIniPw8v9g/Ky2d/M8CaGNz/vD/WDd6jgnQtv
NXi5/7Ecr1zzZiZfVw/eKPBug/ex4I1C3iwWvNzPqDzwzrbx+9pmv77S8G4V
fteJ98PG4v2wF+H9Q/Ca+9XC8JaBN9or1zxhFbG/WWTxfthL8HK/rbjftupz
v839ueL+XM3k/jy12O9rOPfzI8nnLBb5nDjs98XzoFrL8wLPF1ZC8jkfDrvm
czaRz8kn8jlZyOfs4fnlOfmcLuRzzvO8003sf2X2f16UwTWf85XnqbFxdR5p
JXmkhez3lUTwdoF3ILxLBC/7e1sd4F0J7xnBG03kkQbDm1/s55Yd3rPwfoS3
g8ib+Qpek6+rnNn9+xavFtW8NeBt0tV1P7dP8B6FdzK8C+CNarN/nXn+vQDv
l4qaN7LgTbXUlde8PzQ3vAHwvhG8V+HtLnhNvm6lyF8lYH4gMIXmnQxvFvY3
iy7yZtPh7QjvCpEnlLxbbPbr+yLO56n4zSl4mV+ydsEb/YzmbQPvIXgbCd5o
5M1iZHa/X99B8mb1yJuNYn6M+TTrH96nOUbkzbqTz8kn8jnvbPY3u8H+V19E
PqeLTd5sHfmcSiKfs5J8jplf3Uo+Jx35HH/xfsk45HNKM5/5lnzOfS+dz8kh
8maH9Xpk65HII5l8XX7B+xbeYPH+0OPw/hK83w5o3uoyj1RB81a02e/L7H+1
Cd538G4TeaTiNnmkoeSRPETerLmeH7ZCxX5fs+DNKXivw/vM5v2Scr+vOAHu
9/tKV8H9fl8NBK/xmx3eA8JvXHiLi/3c8sCbUfhtIvwa3onw5ha8rHe2ngve
ePD+ELzLOJ9rCd7X7G9m3l9jwfspoeZNbJOv2y3yk43hLSN4i8CbWuxvVpz9
zdJRzzpD3myQyJuZfM408jlRqJcVIJ9zlnyO2c/hAvmc/eRzvKjHBZLP+bJa
53POiHzOxpyu+SuTRypDPieqyF/NsMkjsZ+JmijeL7nRJn/1hfxVfbG/2Sp4
HYL3tHi/pMlfsZ+JVUrwflrt/v2hWchfVbV536ID3k7wDoDX7MeSAV5PeOfZ
5M0WCN7T7OfWEF6ZJ4xk8z7NjoL3CLzFBe87eE8K3pnkryrCy/varFzwxhb7
my2Dt53w2wHeScJvALxzBG+CUpq3gcibjRV5woLwHoV3gM357BT5Ogd5syCb
PGEVcT6XhPf7Ndd8ndm/rplNfnKayNetFeez2d+sEnmzm+RPupE3q07ezIe8
ygaRzxlMviWvzfsWy75zn0eaKvY3q2D27yJvtiS0zKpuo5o7Te7LQ+Sv4vN5
3l/5f/a/mi/2g9pPf9aJ/aAa0v9v4XmzsgEDex3v4pG86H/784t8XU8+P0Tw
HuX7g8R+X6Y/GUUeKSf9v6T3N3M2Cd8HK+fvv3tI5JGS8fmnIl9n8mwfxf5m
++hPoOA1eaSx7G+WPUeMmz8KRfv9d999d+U1ebwMgte8nzS3zf5mQTbv0/TS
+305M/ss3nxibV/nA/zmF34L8vnOYr+vFHz/0omuvHtN3k/krwbS/16aN+Bg
vII3HO96OF/xd1eI89nk0yJPcp83Syzel2ryZpmEXw+TlwvPmVV2zu346M+S
XTs73/F3L3i736+vsHg/bBa+P8Tm/bDrBa85P8eQN8sl3qdp9jfzJG92W+xv
Rh7VWiz2N2sk9oPqSD5nNPmcTiKfY/JXsUQ+J302nc8x74Pm+q/4fVcXRD7n
EvmcsuJ9ix/J55h8bx3yOT3I58QSeaRg8maNxX5fC8R+XzKPNFXs9zXHZv8r
X5v9zUqQR6ptk7+6YPM+TZPHzg7vV7H/leHtbbOf24gyrvt98XuntsG7QPCy
H6Y1WfgdKXhN3qyDjd+h+K0l3i8Zx+b9oWZ/M3O/x/2DugVvL/H+0F42+5tV
Yz+3RiJvdtyGtyW8Jm/P/ZIaIM5nw/unjd/YYv868/7QjMIv9wNqL7wmf04+
X5HPV/1E3uxvsb/ZBfJmv7LovFlfsb9ZbPY3K8j9uckjWeRz8or8lSXyOTwP
qrfkc8zzQhnyOU0Tu89f/WL/q6oin5NG5M3+Jp/zhHzON5HPyVLf/X5Q1cX7
NE3+ajr7fb0W+asy8GaC9x94R9ns56bg3SnySJvIIyUQvA2Lu+7nNhXePAGu
vGb/q1af3L9vcY1NHqmODW8d8mYPRf7qPLxZbN6nWUrkzcbZvE/zsA1vhdLu
9/vi+VRVsdnv66vw+9Jmv68aIl9n8mYFeF+qmU8IgTcE3nyCt6QN70RxPhve
mTZ5wj7kJ8sLvxXw6yXyZpfJT34S7w+tWt+9X7OfW0F455I3u3tX581mMz+2
m7zZQvJmfzGfFim/zud8IJ/Tl/nGGeRz5pHPucP85HLyOUPE+yU9yOd0IJ+T
9rJrHuk2eaRHzB8GkM9pSj6nBPOrL9gPahj5nGDmJ69u0PmcI+L9ksN4/+BP
8jnjmP9sH0nnkQ6QRypZX8+X/p3TNY90kfnGn/Vc3y9p3qf5N7zD4D0LL+/v
UM3gjXnZ/f5XpwSvL7wN4H0C71h4zXrndOSRtov9zYLh/QbvMHi7ivyVL/PD
H7O58kbGbwnxvtRE8B6Dl/Xv6qbgbQTvT5G/ir5M8x6F1x/edvB6w3sP3snw
3oc3Aby74U2G3z3w/oC3PrzrS2reivDWa6d5W3u4368vMbyL4b1u5tvhHQzv
Lnizw9tN7G82H97qy1z97oZ3uOC9Cu9seHfCmxzeXfCG4HeEOJ+7wbubvNlt
8maTqWfFIm9WkbyZN/Uv9mewDon9oBzkc+qSzylLfW0o+Zzc5HPuUl/OIvI5
e6jfeZLPeU0eaRT1vr1iPyiz/0aUeTqfU4d8jofII00kn/NA5M0Kkc/ZLvJI
M8kjmf00HGI/t7s2+aty8I6DNye8j+H99MKV9xS8ceDdx/5mE+E9KnhN/uof
8kjeglfu5/Zc8Ja22c9t6mDNm1bs53YM3vvw8j4sq5LYv24AvHngvQLvxxfu
96/LA28+8X7JeiM17zp4zX4jv+CtK/b72ivyZg/hXQVvU3jnCd6kw13zhOZ9
mvdteM37Us1+LMPE+XwQ3lHwesC7Dt4o8NbU+8NYh81+OPCuh9fU91+I/fqy
2uxfdw9e8hVWHuG3JHmz9+TNZpI/Wb30Uo3JniHWwktFX74ueEVtuNqiZNfL
LZw/98ZOXuzpcyv/gGb5Gp96qC6nrXet9R5fp2+GGPMapHlkPXgfbW+X9c9V
lX7NCnX51MS5dkCye1me3LOaV+85oVjAS+X/2rvu2BktnAtiLK70rcdja0C5
hWtfL3ymCvYfPyVLpu7OeAVX7cxz87VVZNXbJgXjXbMarcv+IXmdP51dUk8Z
fqnSPStvrW+7M798aY18kavgqUodnPX8Buz6MuqOdX7ry4xTWr+yTqYoe65s
qebOfSl+9Xif7LF1IKnXvjLPn1nv/ZL3feTfzHmu7dLOTfq+sg7UbNwxudcd
K0Hn4vO3vW3h7Pi+ddqxJ0Ot0uk2T/Mv5K8y9cuyOv0qP2fkfZrXA96L8NaE
9xW83vA+hrcWvDfgnS94LXijwdsK3j7wtoE3H7wL4fWB9xy8h+DdAe8heP+B
9wK8e+GNA28HeKfDmx3eWPBmgPcmvHXgfQFvW3iPwtsA3kB4F8LbV/iNDG8f
eAfDWwveIvBuhbcNvKfhPQbvFngD4b0N73F478MbHd728J6GNzO8P2zO52rw
hsLbBN7t8DaFNwDelfD2gLcovJHg7QdvB3j/ELwr4fWD9wy8gfAeh3cbvN/h
PQ3vCXhjwpt2TJTQG+lDrK9Fr/Sps+CK1ely1ew/ZrVwznxfvFy8p8+sb7Wz
dApO9VhleJggUpktY5yPrxyr2uP7M8tj7uu/4vx8pAJaN/7rcOBop+PQYs9h
rV5aFYMSLB4w6b56GPvU3R1JezlTb12ecdO8l9aLmIfnDPK8r1a2qVn3aYae
zlyJP/l6+oZYa0d8jfpX3svKL0//re8jtXWu8PjV/5+KIdaz2QliFPO/rCLV
ypMl39nWznVDKvXfuTvUOpu4XdDiTwdVk6newSVW+TrTx+9/aMLiUCt7rGjn
N806osa0edr877HNnHnnr7tw7HOotWdg9Vrxh660Iu87em/3u+bOlD4JF1//
GWolLjG/yoL80636iT45Tu5u7qwd4D+pa/pQq0D0tKtnXD5jba1W4XWLj22d
pb26Nt9SM9TaW73GrDlTT1oXj/feesGnnbP92L2BVY69tGbf6Hkj0ol7VupG
F051aN7V6Z/y7JQMWV9Zywfnq3+n311r/uHPX/02d3O2H1r0yp8fnltdN67p
sHj3Q6t2/cUXvFUv54nyefqszf3Cij5hY8vcHR9aUW844n9919s58ufrLyFP
g61EvdtkPlnpiVWl8pg/JltjnVe9/VSyzsHWmwuzF/mfCbsPX3eg4Kn+Y519
b2avGunMU6vQyKaBj3o9tWaXLp0zybQ3zrHHiib/EPTEito73abx3YOtVRm9
7zafGOr8tbHnip0ln1m7m3Yr6hn8WC28OqTf57WjnY/wmxO/Qfj9elD7rY3f
W/hNht+3+F2M39z4XYzfnvhdj1+F3+T43YjfLvhthd+M+I2N3wn4zYffJPiN
hd9U+P1ZTPtthl9v/D6Lpv2ewG95/NbC70v8dsPvSPxGFn6X4ncQflvjtwd+
M+BX4TcZfs9c136H4zcJfo9X0n4f4PcxfmvjdxF+Y+H3axHtdyt+b/fSfpMl
1X5DR/lHXVAw0Jp+OEWeh1PCnuN/XU5Za+xq50/hfSTeH+A9D9434v0z3r3x
fgHvKfEeivd5eM+P9wl4b473dXg/iPdfNbX3DXgfi/dawvuPmNr7AOE9Bd6z
Ce9F8d4P743wPhPvD/BeEe+p8B45SHvvgvfxeP/e0L33AXjvjveWePfE+2W8
/zNee3+K97F4j4v3SozrG3h/hfcAvCe9ob3/PUp7/7uy9p46UHtv2Ed771NE
e/+C3wD8bsHvU/xmx+99/Ebhul0evz/xmxa/z/B7RIzrlfjti9+V+L0lxvUa
/F7Gb2f8psNvDcb1THHdnopfD3HdDiyu/Q7Cbx38ZuS6fQq/Fn6X4/e1uG7P
we9J/O7D7yb8VsZvO/x2w29Jcd2Oxrh+K/zGw+9lxvVt/D7Hbx383qlQp+/s
sPv1BXEqjiySdo/VP/OvqanS9XS2ylox2usLoda1/RvmvUy73zo/P2ryAo97
OG/qz6vmccM/r/7k87Hrh3+/2q2/X6Xj+3fq/qjrvcL7o+bQn1Ddf3VOn59q
Bf2fpHlVSc2rXnpr3qv6+KgK+vioVByfEfp4qhL6eKp5HM9y+vir5vr4qzEc
/wbalzqox6Nqiy/Gr6qjx6+6nFD7ZbwrL30+qOF79fmQVZ8/aoW+PljJOH82
6/NNFdDnm/Vuij7fdurzUw3T56d1jutPcX0+q3r6fLbycz4X0ee/8tfnvzWA
8z+lHi8qvR4v1l7GS4yr4eNL/ZgTPr6sjoyvTJvCx6OaqsejVZHxuOB4+PhV
UfR1W1XIpsfvn7fCx7vyGBE+3lWIU4/3uPjdhd8KNn4Vfl/h9xJ+L+F3Kn6L
4zcj5/NN/BbHb378jsJvYfyuwy+/m+oP/I7Crw9+N+C3pfB7vaj2e0P4DRqg
/Y7Bbzb8TsFvRvxuwW9a/H7H7y78DsJvEH5L4LcWfnPityh+9+G3D37T4zc5
fnfhNyZ+v+H3EH4z43cKfhfhdw5+Y+D3eirtt7ke1+rmgfBxrc4xrofhPRve
/ymuvccR3svhfQve7+B9N96D8X4L7wfxPgHvTrzHFt498Z4V72Px7oH35Xiv
gPdSeJ8rvG/Be1/h/R7e7wjv9/A+UYzreXhPL8Z1Orx/E+N6JN4v2ozrIngv
JryPwns6vKfE+xG8x8H7P3g/gPeseJ+E91l4H61/l9V7fb+tgrgfG65/x1Vu
/TuuuhXVfmPidy9+I+N3M37v4refGNeX8XsUv9PwWwS/ifF7S/itgd8x+M2D
3+NiXFfD72z8cv+s7uG3l/A7Xv8uq0fCb3yu29PwmwW/SvjdhN8/8PsVv9vx
Owm/h/FbDL+++M2BX0/8HsZvf/ymwG8mcd2Oit9f+O2D3736+Ved0s+/1qMH
+vnXa1r4fbVKoe+rrdjcV19n3eVk1l3eZ93Web3OS21indpes85LtJv1a1mP
ul+v90603zbrFhu6ruNrx7qzjWK92yDa/cX6PrNeLzft52m3Nuv2uA7HsJ5L
35ZJ4HAsuRMr+e/cVFj7wSG6/f69CO0nWP94VuzHPof2c2If/h71XdcJmnWR
K7zdv4/g6HH36yWrBLm2X6Ndsa5wA+vs7nKcL4v2p7THD+Nd6Bc1IInDkdQr
ep7fXGHtjkW6vb8VoX0LHlnHp07yPaeFX7OffFQbvxdt/Jb1cf/eh8tifW5n
2sfikeOsBnGc352x9ftmfL5yAWEeHR+zVP793s+w9im0V4nYPkh4bM/3VxXt
rWiv28DVY1v6OVp4b2O8C7+3OA4ewu9ds45SeLzOcb4t2u/THi+Mp9sVzzDu
+229p9b+zXWL8TtBjN+wzxfXn3fUi/j5ucL7Rb5/h/B+mvYKR9z7jSy836f9
UCPXcd2K41NDjPe+5r0GYlybdalpbMZ1Qocjz/PZDQKSORwN599M/3vddELH
sO/PdHvGeRHaU4t1viP4/hdivA+hfWkDm/ErvJt15SuOufo148LD5nyYI/ya
cbdBtF/8b1wfXOmX1JnA8Xl2xHXi/4533e5YH7G9svB73KynFu2HaG992NXj
HfpZUHh/QHsk4dGc/3PFddv4XS/8trfxWwC/yR2OhNs/WP+ety0GL830e712
WPtl2mv/GaH9sfDYi+/fJtrNev/M4v0afvSzYgP31/Osx91fn9eI9ps2123j
8bxov0T7HtZNr2fd9AvG71TmsSPV0fPYNZnHvsJ8SAnmQ+7xu/+d+a5azIfc
F/Oc75kPWcJ9RV7mQ2YxH+LNfcgG5kP2Mx/ypabrPKcf8yH5mA/JzHzITea7
Gor5ruX6Ptlasdd1vqs5812fuO+qx3zIZ+a7RnGf5sV8yATmQ1ZwX9eO+ZBF
zIckbeQ6H7KZ+ZCZ3Dc2Yz5kEPMh+bjP9Gc+JCXzIQ+4L+3BfEg25kNecR97
ivmQb8yH9OC+Ny7zXUuZ73pYSd8nJ2G+qznzXSkKM8/JfNcJ5ruGcB9u/JbC
71oxn1kXv1ds/M7Fbz78zsBvTTGfGYDfEOG3HX6z4jcTfoPxW034vYPfAOE3
GvNdiUSdIi/zXXNFneIQfvfY1ClCxXzmSvz2wG9L/PbBb178HsZvIvzex29X
/ObAbxTmM4/hN/JF7Xc4fpMwjz2HeexLhbXfzMxj+1GnuJJI+208XM9j72Ye
+xH322/xHoT3dTbeL+H9E97r4/083hPi/TveZ4h5zuV4ryK8H8P7S+G9B96z
Ce+v8F5TeK+F9x3C+2f9vGzFwHtdvEfC+zQxzzkN71ts5jl/4f0A3lfhfRje
/fDeD+8Fxbg29YuHYlxnwfsPxvVpMa5H4H0i3tPhvQL1qSV4f0X9IgH1qTfC
7wr8XsNvcfyeE34b4PcSfhMIv7OE32X4rSbqU4dsxnVz/OYQft/i9w/h9wZ+
dwu/57luxxbjOjt+J+C3DH4D8Lsevx3wOwO/j4TfZfj1w28r/PbEb0X8BuI3
Ln6/47c7frPi920l13EdiXHdDb/MS1vD9Ly0NZJ56RbMY6/Q813WLea7RrDe
qgDrreqwXqPBN70+5RTrU/zMehbR3oz2WWNd162YdTGzbdpTfXVdn5WD9SaL
RLvZx7uuj17nUo11LsVZt9JOtFu0Z3c42nt5WmH3z0vuN3zi9fv+Kqy9u253
/IjYXqGeXhdTg3UxmfmeOqLd7F89/5nrepn89POmTXv9OXodTSDraII4DnNF
+2naL//S62uCWF/TnOP8UrS3pz1z2H1m7Yp5AtI5uldt36Hy7+fisPaMut3R
I2L7cRuPl0V7Y9M+2v0+51dt2ud+ce8xnfCbh/YRwqOT4zxHtFekPYfDUcDy
zB+Q2VG8S6rqnQI+8rwQ1u6l24f1jtj+uK72WBOPhfieB6Ld7L/dWHg0+2/P
E+35aE9m47ehjd9oji8uHs1+42lEe9f//LbwqZjWmdVxP9bgHDV/P/+OYvzm
ZfzWY/yGfd5Lf95RMOLn5wi/Lfn+FaLd7OeffIyrX7OfvGw/ajOuzTrEhaLd
g/aewq/xMla0l6Q9lcNxf+ipwgEpHd2jFKzfyvkVrrD2Z7rd67tnhHZvMX5L
8T1+or2ojfccNt5N/5PNdfVr1us1FO1mXWpW4dcc51Kivd1/3r3qVCwdkNbx
qlr7Du2cn+AKa6+i2x31I7a3Ex7NusJRor0B7VeFR7OfvGw3++rPE+M6i824
NutDDwuP5n0N10S7WYeY0eHwaPGzREAOx561C681//3+hbD2ArrdsSdiuxzX
xm+keq7txWi/JTya91Ckfu6+vf5sm+v2bPfjeoe4PrfmOB+zuW53Zr1kLdZL
zmH83qW+3EDXo1UHfsfjU6fYQZ2iJr/7e6hTXKVOcYL7hBDqFOepU5wS9cdi
1CmScR9ymzpFfuoUmblvGWdThyK/oXJQp5gv6lDLqVMMFHWKEtSXn4g6xWXq
UNNFHWqhTR0qCXWKH6L+OJg6xSVRf6xLnaKgqC8HUKf4U9SXM1Cn2Md9bGzq
FF+pU4zhvjeLqD825T45nb6vVm2oQw1Lr++rE+n7cDVP34erYaX0fXg84VfW
l6+J+vIb4deuDpVA1BlL4rcofkfj1xO/20SdsTR+p9rkB7oIvwuLua9D3Rzg
WoeS+YEswm9G4Xc3fvvh9xh+S+K3Jn6ziTrjHvz2FnVGU1/egd+4+P2E3+nC
72T8dsRvI/wWwG/t1Npva+rLU3VuRAVwv10N783xXrmEa/1xH96b4H0b3m/h
/Rbe3+L9DN4PC++F8R4X7zfwXgLvxW287xL1x+p4nyO8n8B7H+E9NvXHl8J7
euqPc23GtfSeAu8/bXIFx8S4riO8m3G9H+898Z4a72nxvk14N/XlsXjPjveJ
eG+B9554T4H3k2m091b4rYTfeCW1X3ndLoXf3fi9gt89YlyfFfmBGcJvPBu/
xYTfwsKvuW7nwu8Scd3eiN8hwm9HxnWw8HuOcT1b+F2E3xw21+1fYlz3x+9J
G7+58VsYvwfw2xe/afGb6n+M65n4DaS+HEB9OQrz0oWoL6ekvryB+a6ror78
nPntlqIeYd5LPlm0B9L+VNQpzPvcLx1x/57uHqIOZebzN4i6ZH9T3xF1ij7U
C2KJOkUf6hRh988NO60q7UzhcBQvE+E99WHtVTrrdodXhPaNoh7Rju/vJOqP
5r3hh0S9ydTRAr3d70+bNcj9/sMvRPsl2p+LeoQ5/jFeua9LJnY4tqzwy+pM
7hh2IM7AVL+5wtqH6XZHgdgR2uva1JsGi/b9tI8Sfk0/Wx5xX3eeblNnPC38
DqT9jPBr6kSZhN/e+E0TxjX3ZnpnUocj7ccsxX5zhbWXXqDbz0dsXyj8duD7
m9jUlw/Xd1+HOib8mv2cowa5zw+cCHJff/ws/Jp9p1Pgl/2HrRvCbwqH16Ns
B0v+5rrJ+J3I+H3J+DXew87zYRE/31j4NXXk0TbjepXwbriW23gvKLy35vh0
8XGfGzklvHfh+CcU3lvjPUGY38FLy/7LlzkwtMLv+a4EjmHbaQ86GqF9nfA+
gO9vJ7yb8+1iffd+nwrvZh/mJ6LOaPZhXie8X7HxftjGuxnvqcI5XpVO5ngT
t//ohr/ryMnD25+HtTuyR2wvJzz68z1dRPvu/zGue9r49RR+zfHp7OO+vnxH
+DXjzsPe77AhSz0Dws7bhKV6xo7g1zFzsG4fViRC+zKbOnJzmzzJhfo2Hr3d
5wfkuL5oM66v0u4Q12eTz0ki/J6g3Z/68krqy5Eq6vHrx/x2Kua3n5n5berO
iag7V+P3PYj6RU3qF7e5H3hH/cKX+sUNc/9A/cIRS9cvFnC/kZP6xTbqF425
P1lN/eKazTqLgdQvqol1Fl+pX/QW9Yvz1C+eifrFbuoXpUQOPxH1i0OiPrWA
+sVD7vdaUL/YSf0iLXXnHdQvjlC/WML9pA/1izHUL6px/7mD+kVW6hffuF/1
o35RjPpFAuqSe6lfJKB+MYn74VjUp5ZRnyrO/XNq6lPtqUumSavvt59Qn7pK
fWot9+fGbzVRf3yN37b4fWByxfiNjd8V+M2B3734bYTfVWKdxU/htx9+K+E3
A34drLPoKvx+we9r4TcndWcv/P6B36L43S3qU4fxex2/LfG7Eb/x8LsTvwfw
Oxm/9fE7Fr+V8btN+P2M3xbCbwz87hF+R+O3CrmCNuQKlljarze5gszkCmpn
137PDtZ157vUne9zH/4Q7zfxvgbvJ/BeFe+X8R6K95ZiXWRsvEfD+2oxrrfi
vYEY1zfw/lV4H4J3S3iPgvf2wvsIvN8X3j0Y14XEuE6J9w14d+J9A95Pi3G9
A+/Rbcb1WLw3wPs4vFe1Gddf8O6L9xJ4d4hxnVDkDcoxrtszrssz3+XDuGb+
xMrI/NgD4XeGGNc1xbrXV/htL/zGwm8s4deM6134bWgzrr+LunM3/JYRdefP
XLfbCr878XtP+J2L34LCbzz8HhDX7Zn4vYPfVvhdJ9bH7cLvHvwOxK83fseL
da9mXHuIda9yXCe0uW5Pxe9t6s4vWT81nfnqDsxv12V+uz/z232pW3lRt6pG
e67vrnWKFsyTl/zuvj4Va5yuUwSK903HtGk/9cn9e6jPinZT70sp6hTm/dSp
bOoXYffTHuU8LWcix6Tw91a/5T7zv3avuRHbv4g6VDq+J4a3a3sq2qu/dP+e
a9mei/Yqs9zXp6rNcl/XqCrqFKYuWUO0dzDvRw677/Re7+lM6KjS7t/3ZZv3
s4S1x9Ttw3wjtv8t9vk0+2SuFe39aK8iPJr6smxXhuuT+zpUrU/u65LPGrh6
NO9rfi7azT6icRyOjCNOZQ37d0n8iO/p/q/dETlie1XhMTvf01C0m/d6n3np
fl/ZUzbtMYVHU4eNLdrNe7obCo+m/tvEpj4VL+w5+t/3g8dytPgn4vvB+zN+
LcZvDcZv2OfX6M87YuaM8PmBwq95f/o80d6H9hNjXf2a/gfZtFf/5H6/X+nd
1HM/C78m1/GlgftxHdfhWPLv+8oTOALC31d+6798Pu0ZK0dsPyHGtRffE2xT
j55s43fSS/f16HEzXf2a+uyEme7PhwHCr6kL/ynaTQ4kYZi1ehVLh/n0qvHv
e9KNx7D2z3XD2x0lI7ZLv6Z+PV60tzLX7QmuHs11KaZN+8R/3L9vfco/7sf7
GptxvfZ/jOu4jmFFI76f/b92R/uI7c+ER0++55Noz2/G9Qv3uRG79lhi/Jq6
fBzRHmhz3f6D41xNtNeh/cVfen77zSE9v52b++p71J2fxdZ15678jqemfrGK
+kUHfvePUL8Ion7xiPrFd+oXAdQvtnDfuJD6RVbqF19Y1/yQ+kVK6heFuG+Z
Sv0iMfWLHdznVKJ+kZT6RU/ui9hnQE2jflFb1C9aUr9YJeoXD6hf1BXrXgdR
v/jSWt/XbaV+8T2Rrl/coH5xgPpFM+oXR7hvdFK/KED9IjP3mU7qFxuoX3Th
vjQb9YvY1C82m1w09YsX1C+Wc99biPrUYOpTw7hPnkp96jvrXlcn0ffVI6hP
ZaM+dZz9K9LgdyV+zX4XQfg9gt/T+P2K34P4Vfidh18P/Mas795vJvxOwW8i
/C4SflPitx1+G+J3AX4rCb958LtI+B2D3xr4zY7fHvh9L/w+x+9Z/AbgtxZ+
d+LXwm92/CbFr4Xftfhth9/s+I2B37U2fqfg1xO/Q/DbHr9XWd+6hvrj2QTa
b1vqzg7qzkeZBzvDute7eD9dSHtPjvd1eO+E96N4P473V2Jc78f7ATGus+A9
Kt4f4T2R8D4d73HwvkTUJdPhvanwvgTvpeW6V7xPEt5P4r208N4B72/wvg3v
9/B+WoxrH7xvEePaE+8JxbjeiPfmNuN6Kd5T4T0Y7yPxnh/vQ0WeZAbeg/Fe
N4f2Pgm/GVnXnMdL+82K3wX4LYTfM/g9gN+N+P2BX3/8bre5bn/nun0fv5lF
nmQSftOI67bxmx+/XUSuYB9+qwu/CYu7H9exyBVUE9ftXvj9KMZ1CH4v4Ncf
v3Xwux+/XvjNjN/0+C2L39Viv4Kc+I0m9itIid9n+B2F37PUnbdTd37PuuZz
zG/PYn47NvPbD6hbjaJu9ZS61YXnuk6xlTrFFebJU1K/2EJ7EO0eok5xxtSn
xPpHU3/Z5uNav2hv1r16u9YvJtFexWbda37WvV6iPeEW3Z7N4bj67/tqMzkc
ST5GeF9tNodXH9pXRGxPJNY/tuD7V4i6RgPay4l1cJ3MOk1RvzDrtYNs1jW/
CXK/Pi6eqFOYumRR0W7eG5vC4dhRb6pXQHpHC5f1j2HtR3W7IyBie0zh8RTf
U1vUpxTt7UV96ppNruAe7XVFfaojx6G/WP84jfY/hV9TH/TF70XaE2z5nSsY
9tfSt/5hnhOWifB+3rD2aYN0e20rQvsam1xBGdqpf1m+tCcRfk3/Owi/Zr3z
GuHxBsfh/AnXdnN8Poj6o/GYXvh9S3vusOfeXjOcAZkdXoMjvhc4mPE7hPEb
zPgN+7yH/rwj5bsIn3cI7zf5/io2ORPp3ax7fSS8P6a9nE2exE94H0t7feHd
1CWLiXHtwHs6h2PusdDCAWF+C0d8T3FYe4pA3Z6yVIT2QJu6c0NRl+xG+0Ob
cV2lvvtxPc5mX4ItwrtZD15R+DX1/e6i/SrtaR2OEf++HzmtwyP8/chfGL9h
7RN0+7B0Edvr2ORG5on2TbTHPOJ+XPc66n5ct2zo3u84sV/BKNMu/Jr6fjsx
ro3frA5H/FSnGgakdDhG/fteZnO9yurw2phSt7dvHaHdS1y3TR7pss0+FeUb
uPe41tt9juiZjd8EJ937jSrqzufM76bwe412sw9YIPuAhXBfLdc1e1BfvibW
Nfvzu/+LOkUV6hSXxf6cL1kfN5P7Ck/qFCOpU5QW65p3Uqe4Z7Ou2eRmzbrm
69Qpsos6xXjqFKNFnWIYdYqbYl3zB9Y1dxPrmodTp5jGfV0n6hQTqVPcF/u8
raVO4WuzrrmQWP+YYoLrPn5dqFN4UKeITZ3iKHWKKNQpJnLfW586lDd1qFqs
e+1BHSoVdaiQhPq+OkSsax5js751C35/4reaWNds9ml8jd85NuuanfhdK9a3
3hd+2+A3gahDPcVvMeG3OH7HCr+/irr3G4LfscLvOPyuPu66T+MY/H7C7xH8
ThL7c7YR+3OWxW8AfpPiN1SsazZ+H/Ccchy/Dvy2xe+w69pvgdHab9kK2u/I
o9rvY+rL0fNrv4dZ17yd+nIX5sHkevb9eL+J98J4fyH2b6wgciNmXD8X+3Ma
79PxbtnsV2C8k5u1nHiPg3f2cbI24L2w8M6+T//H+wqbcf0R731t6o9mH6rO
Ylw/beh+3902ePfF+0C8F7MZ18/w3hnvufCelnEdKNa9Lsb7DXIFFxjXJ1nX
/JpcwQzG9a+MruP6FH4Xm3kVMa5P4vcH47oGfq+J/Qre2YzrafitIPzuxe9T
Ma6b4TeqzX4UeYXfmYzr4cJvXvxeSei6bv0TfruK/MBS/E4W43osfo/ZjOtq
Yt16X7Gu+RB+E4r8gNyP4l0l99ftzqK+fJ768hzmpXtRX65AfXkWdShTnypD
faoM7S+/6nrEaeoRI5kPj/nNtX2QqU+NcF0HZ9Z5yfZTtN/57r7OmOWH+/Ww
FUUd2byPsrFor057nrDni/KeVti/XqsjvqcyrN2h24fNjtjuI9bHJeJ7eov2
uLSnD3Zfb/INdr/+MZVY52jed9lUtB+ivb1Y52jegzlUtJt1c2HPidfrri8b
kMHh1SHi+zHD2m/rdsexiO2nhN++fM8n0d6N9hvCo6k3yXZTZ2li43eZaDf1
9yvCo3k/4wvRXuA/v90reOZ3ZnN4tY74Xs6w9ha63XG/RYT2T3VcPabke6IK
v0mM3yeuHk2d1PeJ+/rjvHnu/d4W7ab+3l94NHWoqaK9Ce0eDkfGhhXTOtM7
HLsivg90EOO3BOPXyfgN+7yDzy9xFP7v86WE3458f2XRbuqPjYRfsz7Xrv3W
N/f15Szf3a9rHi38mjrgBNFehPaw56mglj9LODM47oe/n/T+7+cpx0HdfnB9
xPZ2wm9Rm3FtzqvFYvymop93bdobifWt5r2uC2a79x6M3+P4NfmNX6J99H/e
79eomDYglePF9YjvRf3Xb83w9oN3I7bL67bJ/3wW7T7G73BXjybfIttNfmD+
d/f15Yc24/3/d1wb75kdjlf/vo81p6P14H/fx/r+v3Xcz3S7V5+I7SmEx6x8
T1LRbnILvo/cv5934SP3433e3+7Xp9+i/SjtZ811O5KrR/O+146R3HtvNEfX
l09RX77xU99Xs8+2WsW65j78jqekTrGGOsVufvcDqVMco05RlPvAOBV0nWIN
dYr53Fdspk4RlzrFc2/3dajUor4clzrFLFGnyEmdYpuoUwRQp5gm6hQVqUMV
TuRapxhNHeq+2H81kDpFJrGv8kfqFI6p7usUZn/dMtQpCot1zUXF+kezPi6V
2Dd7v02dQtahTP3Rl/vkpuyrXIb6cvPo+r66Ivsnt2D/ZP98+j48PX6XijrU
BfzuFfsnR8PvVrFufRl+0+I3IfeZD/CbGr/xRB0qFX7HiXXNBcS6deP3CH4H
CL+H8Zta+I1OHSpIrH9chV8vm/Wt6fC7D7/t8XvAZl1zWvyWxu9W/HbCbxb8
xsPvVvxmwO8d/PbCbwn89sFvHfwupM54hzrj5Uzab0vqy5+oL59gHmwx9cd4
1B9rltHec+N9Ft4b4f0c3veJXEFkvO/AeyDeV+A9Nd7j4/0p3uPiPSHe/8J7
NLxPE97z4H26WPe6G+9mXov3Hah91B+TCO/N8H5YjOuDeHcK73nwnmaq67rX
vng/K7zXwHsB4X0L3gfhPRPeE+Ld37w/Au8P8d5Y5Eb+xHtRvCs9T6I26nkS
NTyr9h6k51VUMH6Psh9+DvzOwW81UV/2x+8B/EbC7y78LrMZ1+Z9B2Zcp8Hv
60Pa72T8JsNvJ7FuvQp+J4hxHYjfjsLvhuKu45r3X6gL+D2OX57HVZDwy/O7
Yt7VSo3fHfidjN9dNuM6jciNrMNva+E3AX7XiOt2sBjXx6gvH6C+fIv68ocp
72utOvJQTcn3oMLpl89Vofdf9x0Y1MLZa1Y8/y4jHiinr3+Ne0EvVKGe5f26
Lfd1BiZefurUlAeqcJ9VYwIPvrCu+P7c8Xy+r7Otfj+XKpY+/P1cVhbez9Vw
76qDrZreVwfftVjtPeyl9dr3bvHFC1s5e4vvL8/3f/AMf9+WCtDv21IDed9W
O74/Od9v3v91nP4Uoj+3bPqTg89/gncSvCXg7Ul/LPpTnf78oj9j6M9I+vOW
9vO0T6H9EP0pRn+u0p829Gct/fGgP004PgEcn1ccn3b0pxL9KS6OzwH+bntx
fOLx/eZ9cEfoT1H6c5n+3Mx9N2OXpw/UhPxZFvUa80I963fiYLBfa+eS7d/v
bW/eT2UrPOnmnbD7vSmjMzgrPOrl/Mhxm8xxK8ZxOzT/xuzLrx+oY0Ov/eg5
/IXlTLB1cK5UbZw/6OcU+jmJfvJ+RhV5aPj7GVVS3s94l/6Moz/B9GdcyWHz
vlw7pHo/uLA58pZQy5E/481PkXuZ92laO/T7NNUW3rcoz7dnHM8g+nmEflr0
syn9SfKn7s8m+mN8dRTH0/R/xBD9+XR8/j79H0v/79L/JBzP7BzPcRzPTPQ/
RUvd/2P0/wXHeRbHOT/H+SD9D6L/peh/Er6nMMdhId/zhuN/ieM/lONveEcN
0v1PT/9v0//x4nz4Wxz/T/n08U/A3x3A333E323G8ffn+L/n+MvzpKw4/nMH
6v7cpj/jru1ofdTvofUza/ov0zxfqMp1/vCrcbf37/rXGOZR63CdPLfZ9TiP
4Dg3CVz04POZK1bLV8saPU0WYs3M8zaR79z+zqz0/5F+P6kKoP9X44S/F1it
1u8FtnryHuSR9CdyNt2fmvRnIvOcZZjnLMB9CO9xthrp9zhbh3jPb3mOZ39x
PBuKfrain+b4ZO+jj0/9qPr4NIqp+7mJfn5s5r6fZelnEY5bR45bE46b6eda
+nmHfj7f6Ho8N3E8R9DPxvSzF/1MwfF8yPl8xrzvNbfuZxv6WbqX7udY+umg
n53o51COZy2OZ0xxPKsv1f18SD9ziuP5gOPpSz/96Kcv/TzSrmmCvtdDrfFx
xz7JmGGvdTZqu9SNCtV0+jQ82yc4b6j14kqqMxPOnLbKeFfvmrJWDefWcYei
Rz0Var1v+UecdYn8VUPfPqc8D9X+3Z8k9Oci/eF98daFluHvi7dm8b74Q/zd
X/zdG/zdRv5Ph+z2CrWazcrd7OjQU+rH967POnWqbd7/bt13hr//XTl5//t2
+jNE9Mf83cx++u9O4e9WyamPfweOfwuOv/m8J5+fyecP08/Hop/1OD6lr+rj
48XxMf3cUkX3syT9NMctbivdzzr003w+Ugn9+Yp8nveAW+30e7GtQHE8HU10
P5eLfh6gn7fppy/HMyrH85c4nl7l9d8tJvr5yOZ4PvTVf3cSf/fqoKGddoad
TyMbTwqOfu6KVeX82TMH89Z03m317lKXzg+tr92GVk+c64Xl2f9su253fJ31
OW6JOW7lOG7bfFLNrPhHiFWhzfsPE8dcVs/OpwutPbv6f/2spPtZmn4uezeo
UpOw9oJWnO9Z1o9Xvv7RM/RPXc95hf6Moz/V6c/4wTsepC/80Jozr2x33zov
VOTkHv7rszV3dpoc8njgv95zpj75KvFYq279fnnTRPt/hZ1nYFbFtoY3yAEi
RZp0NIFA6EgvIdkJJKFDAqEXEwi9B6QJGJqACAKidJSAgOKhiQqKbECQrkGK
IEWKgiBKOTY4Kvf7Ms+EPevu795f/mBc8+Td65s9+501My0iO6PbHHT7Dd0+
gLMxnFfh1DwLmyqemfBo3aI7m3mVxR9l8p+DfyT87eA/gZ7ZRyg9W6Gn5r9X
UfG3g1/rnA+dm6HzJvi7w38F/kHEKVVTxblEHK3/lMZKf1vofx/9u8N/Cv45
8LeFfyr6r0D/P5429V8Nf0f61eNAf/R/iP5b4W8B/wWh/5uxiud1eHK0X7b0
UP94u8PpC/f/8f37W+t+u1a/ZO/IdMXjzFI89lfwHEPnXOichM4n62bGcYjj
bCeO5n+1quKfC39hy5rYPra1f1+M1fZq76zzNss1M3m2ECd7Sma/zhX1e3Gq
0W8pyyrr3z8VYllP1t7YNateaBR6rkfPR/CvaWZyriO+jydU8ewp4ObRuvVp
rnTbgm5PWWlvdNhY0///FWga3zdS12X1SDD5txHfQc9R6HkdnjyZ6w+LGvv+
GzXjaI7H61DonBudbf7e7s1N/g3EL6XOL/XpkNbSrYPO27fJ24foX9mKWrw+
qK3/XN9FXyfEZJ3vuq2Byf8O8XOh/0X0LwTPM5ZVa8rR0MhqljX2bLfhu/W+
1H7ovxX9czOejO7ozf+UZW1pn6nnnvJuPfk9Ovwe7VvkczeV/047lf92/r9V
/u9F55HofBqdGYedKep35yTyuwvK1PvKLp/+GVNc+vPcnSbq92sn8dy3w9MQ
ntvwdFXjiXNCzQectown5L+THJqpv9MF/Yui50n0LIqe38A5CU49vmmeEDUe
2inwVLas+A3qOZY86XqOun16hNl+C/zt4P8F/p7oGYKeT6On5o8OU/zd4P8Y
ncej82F0lvzx8Os4U8qrOB2I48uf+MmZ+RO1wp0/mr9sI8WfHIA/Kx/Q/3P0
by70P0G/nei3PPofRP+cQv9x8HcU+u+MVDwD4dmm5gPON2o+YA9hPjAIP2oQ
flQe5qVa51LoXBydmWc6k9X8xLnF/ETzH0D/rvDz3nTu9sh8bzo3eG9qnoPw
jIGH+02c5fhF8czneX85aa0y3192c95fXdDzEnrq9+N+OFvA+SOcWp+b4Uqf
Qeb73UnoozgfCM4MOEfDOQTdBqBbFLppzvhmirMpnFrPQiJvme8578P5g9Cz
DHomCD2j1TzcuSM4Tws9uR/ZeRM9Wwo9tzQ09eyOnuvQs6XQMx7OG3AOV98j
Ti/1PeK04Hvkofp+sUeo7xfnON8vG9X3kXNdff/alfT3ETxT1HeBPReeyAeh
/nm+/aWa5zs7Bql5/gjR73j6nfVp5vedzfed/QLfd8zDnavqu8aZwDz8I3gu
wRMGz4/0e5x+N9PvWPQv3lTp/9YFpX8rwXmzt2r/PJx8rzl94WwXrvQZjj7f
oA/fX04InOPgfB/OH+CsBqf+u2LWqPbv0F7rma2s0jPfNqXnyAqZ3032cDhH
9fTWcxycGR+aeqYKPZer7xpndgDOUnBWfaj0OUa/F9Fnp/JP7GPKP3Ga4Z8M
Rp+h6PMl+hxRfo79hvJz7Af4OVq3natNHnwt+2paps9gP40Pc4B+99NvI/ot
o773nf7qe99uz/f+y7u98+qw4PkDnsthSuch/L1J6Kx5sk9XPNqn2gfPQXia
wBMMTx14JsATiT7D0Od79DkAzxJ4/oJnOfrUX6v02SH0eWKa4ikVQJ8YeOrB
MylJ8WhfLny/qU9v9NkLzwp4fofnxs6mDSJ+reokrrt+/5F//T3x78L3W/vm
b0fL9Yt4/RunRcUf5/zm/Ow0OT79wPqwPpF3Xhg3e2XLI/aBAXXPdEi44yzd
OO6PlfX6RfbbnBnHJo59mDhat3B0mwhnfstakq7uVRwR7bpXceDPJs8XxBk8
JrNfx1H92m/Rb1Erbbb/vkLffDbxV9d9hduPZPLb3RS/bcN/bbDJ+RXx/fc8
blA8G9z3P+rnkjxbPZdBPJcClrVu2Oma/nnoKvf9gJfLeetZAj1j0bM2PL7v
mX/89+75zz9Y5bp3r5r6e+196LyKv/diPpP/CPF9OrzjpYPOk5nkydvo75v/
dVmTXMQ/n4p07/+6kujNnyL0fw8e3zz+iv9eOf++qzTXvXLp6N8T/Rvz917K
afIfJb7v788YqvSc7Nbza3zj+fjGD8nb19aZ/uGr5HkZdI5D5wj63YU/fAR/
uDm/I5/+OW566K99+PRJyhctwHM/Dc9ceG7D0wufcCw+4SPGgTB8y9X4wPPQ
fwF6foae69HzIzi/gjNR+NivTzDXEXzP8fJK9RxT3c9Rt5+GD6/Hk3Pwz4H/
Jvzr15p6TkPPP79W/DX6Kv7l8BcVOkeiM+8Rh/eI3QH+6ugQgg56/PTlz2qv
/NH8oayblA7Afwv+RsKnvYP+/8D/YYrqV+f/fKG/zucP4c+Av7NcRxhrriPw
nrV5zzqRvGdZb7Xb4YfXYb43Lt3UeQo6j8FP7omfPJT3/n/hfwj/IvjnVFa+
a398146p6r22Fp6f4KkFzxR875b43vmF7z0Ifz6F91ER9Bwv1sXmwNkVziSx
jrBOrCP8VUhxLoHzcnfFuQTO/8Cp51Hh6EYdglMV3VbBufUtxdlDryO8Z+o5
Hj1fhbMLnAPhzKnzED1fQc9E1js2w1mYdZnFcP4KZxU4Z6BnDHrmE3oWQs+e
cJ5oqPR8ET0fkJ+r4ewI53CxjjAc//kq8/xO+JAWPqT+LuC7w96Hz9yb7w6t
W0l42gfwvQ/z/aL7nUO/v4h1hO74h7n+Fr53lPIzo/le0DyX4UkWvndIV9Xv
53odIafS/wP0r9/PXEdY/bxqf0Bw9oXzDpzap82PPu3EOsLlCMUZJTg/EJxZ
Pm0j1b4Z7fXzrcm6TLTQsyZ+/jGxjrARztsB9Mwp9CwQZa5fyHWEXkLP3j1V
v7voV/v20/GNE/AltD4F0Kc9+uCT2G3xge+I9YK0cMXTVPjVV/Hbk8V6wUz6
7Wj6OfYVfOl+fEfjy9ld0SHH36Yv3Rqe+/Bk/b3d1N/7mfD/28PTFx69npIG
TxfBM4V1ihTh8z+LPvF6nQ6elvDcEvpEs97URujTG54koc8MeDoJnq2Cpwv6
jEKfbAH00b7iiw1NP/Zd/NLN+G+T8N8u4799im9cGN+4J77Wmpbe/rz2h/NW
U5yrH/vzA9rHVvXPo37t77r3rXukyfNv4uQW/nAF+g2zrDnRmfepWc3c96kN
xR/eiD9cFH/4pxYm5weP/fmMDoqnrvseOv1cruHPf8Rz8c0/0tvHlo4saVkr
JrruLytne/PvRM8x6Hkuy59PKzjlaJ3dT1pWEfd9YfvQOT86t+fvrRJn8m8m
vk8HK0bp0N+tg9b/u1pK/5ydlP5hVlr/9rGNdwdb1jPu+7lqNTL53yN+EPpf
QP/y8JS30tom/9Nwt29eFu++96oH+n+M/uXQv3W8ya/XL3x6BrdTet5z68m6
pBOHH3uRvO2OL9cQXy4PeX4InYeic4bwjSfiu9r8jvKo8/H8+ud06y/97R48
d35HDr8jW68/aj/zOv5buPCHQyooP7Czzn/0PIWeJYU/PB7OOOEPD4w01wt8
z/1sh8znmBblfo66fWpj1b6X4G8F/w34e6BnGHoGCX/+Cv52Ivy7RD5/HUDn
aOHPtwgz/fnyav+IP3+Wu/NH87eHv7vw53nv2NfE+sg36G/L9RH0f55+Q9H/
MPrnC6B/uNB/KfnQR/jzV/BvBwifuT8+c13me1rnGuicT/jJn+DTnhd+ct8K
pm5Z/rx6jzvvCj/5O3j6w8N+T2cpfnKi8JP3qPmDrec5Ws8M9GyEnnodYSGc
3wp/PiTSXA/SnCFJinMznMxPnJ/hHAjnMHTri241pD8frTj1OrgeByLEOKA5
l8H5jdBzp1hv0pzJcK4XnH+L56v9ee5zt+OEnpfhjIFTrx8dQM86Qs/lcJ6B
czK+bnd8XT3Pv40/n4p/+C3fBe/g397Cv60q/fkGimc2PB+WUD7nK/icb6d4
+8kj6ffqLuUTUodpjxZ+8kP825eZ326F5yo8ofAklVT9zqbfJSnCn49W+nfG
n59VRLV/g/bZ8J/l+oWu+2om/FXtz2vOe4JzM5zfw1la+POJ+PNbhT8fXVnp
GYQ/H6e+W+1lcFbuoziHCE79nd79o//bn8+OPz+Pfj+E8zs4g+FMeVr1+zr9
/pqs+sW/so8IH3gS+gxGn1MB/Hntm2me2fAsFv5zb/znZwP4z7r+tiS+4mJ8
3aV8R19zTB36o8N+eJYKf35rYfX3LubvLdbH9OfT/x8/PAoeG56fnlc82qfq
JPLnXAB//nfhzy8mTz4T+lybbupzEB7qfp2G8FSFJ075XfZMvV6w1/zd9Qvg
z+vndSXW9GP34Zf+qfxVpxX+Wz38tyfwjffjGy/C17o6wfRdDxJH6rbysT+f
d01yaOY9Rfld91J9F2byHCLOC8If1n51Bd880n/fU2nL2vEf131PO/GHu+IP
h8PfZ7TJeeixP79lteK5nNfFk5W3c9RzGc5z8bUrskbdr7Sngut+pd6dTH69
ThGEn9kcPTVPkJW2yX9vkW9eOdF9n1EV4c/P4+/t3dPk1+sX/nvAl3vooPOk
GXmi/ahymf++s7Fv/r99rOv+oCtNvddH+qD/HvRfDY9vHj7Hfy+Pf17WzHUv
z2b07y78+eTe3vw+PZNWKz2j3Hp+iR+7ED/2F/L21nqzzn8CeR6MzjHorPv9
TPjzrfkd+fRP99I/y5+nTr44z/0sPK+KOn/pzz8U/vxKfOm56P8Seu5GzxXo
+TGcX8IZL/15/PaPHvvzvl/Qr7v8+27dzzGrzp/1hRDay30T2p+33jd9zpfQ
8xH+8Fr8zDnw5xX53ACdPxTrCy2EP18KHcYTx5c/R73yR/M/AX/ZAP78dfib
BahLr0S/L9CvHifnCH9e5/NW+L8OoP/i8YrnGjzp+Le3hc+s69UH4zM3Yr43
b42ZtzPReSI+bQ982rG897PDPxL9p8PfEt+b+YP9E/Oc1+H5Q/jzE/CTO+In
VxZ+cjf82+m8jwoJf/439NT188wz7RHSnx+j9OmJPz+0nOIcA+ezAxXnIjh/
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
t1HCn08JcL5NcIS5jqD1fFKsK2nOdDgvCz1biN+j5rzMfoQfApwXlApnRfT8
GD1bCz0z1LzRjhPn22wIoOcqOHVdzVDh6+rzNssI/1mfT/Iy/u0j/Ns6wp+P
rqN4FsDTI5vyOT/D52zRUc2fbfrtJ+rSd2WYdbx9hZ/8Lf7tBea31FM51H3Z
FeAJyq763UW/0R2FPx+p9F+MP98T33so7Ucyz+8lzreZBOcU9BmCPp+L+vnx
+N7H4VwA5wM46wt/vg510bkOifr5qub5NgsaKc5YOFP7K84WcPaFsw2c+Q6Y
vusgoeeL9KvPZZ0P559iHSFc+NUp6LNX+MA18CUGqPOE7Y/VecLOt5wnvEzU
1eu8wk+z8dPsG6KuPgjOS/LcG3x7Xed5BJ498DwHzw/qfGZ7qTqf2a7F+cyc
w+xUVD6GPZ/v7vvHTN3GoNtxOBfB+ROc0rcvB88f4Uq3JujWq7/p8/dOM331
4/A78FeBvzd6foKeF9CTuj7nNj72Mvini/OFdon9C2/Cr33CgsTphQ6riKPX
BYq/o/QveMjU//MZ5jk/x4T+ofDfQP/F6F8H/fPSbzr9HqTfXF+a+iei/+fw
L4P/R6F/epqZD0fVOep2TXWOuvMR56j3Qc+d6HnKPL/d5vx2uwnnt+MTOrnw
q1fDOUSdN25fKJ153rijz7f/mn6r0a8+v71wrczzve0y6nxvezLne19HnyXo
8xz6pMDTHB4bHv33hr5s5ttgeEqUUTz6vPrj8NSA5zA8ueHpCM8UeJ5Hn13o
cxR9NE8LeOrAE4Q+F3mO36CP5skFT3l49sNTF57d8BSEpyI8o+D5Xvx+q6PP
UHiawBMHz4knzbrK6YxX2ifpgO/0LuNJnlyq/Vba5+2l2jfG94sR97q+js9W
E5+tIPOHBrR/nvadaP8K7SNpX5L2ej6Qp416H316Xr2Pss43q6/G/we8T3X7
ee1U+5y8v7iX0+FeTqcm8Sszf3if+cPz8Mj6hFq0L0/7Q7TvQvvCYv+LXufK
YD0lkfUUva6h8zOBfT0R5Oe/RJyFxClN/oxg35P24Y8Tv6NYr9Hxi8xS8dsS
f4o4N7t/qvnc+/Dc2/Dct6l1fId1fPsP/Gp9zkwrnmMwOszlOTbiOT4pnnsP
2lem/RLaV6Z9Mdrr7+5/8d0dyXfBeL5n14r9+NofKMS5wbOZ9+4nTl7itCWO
/h4//5z6Hr/P/PNF4q8mfgER/wzxl4t5dZ62Kt+mifzU85OfyU89v3qttWrv
0J77gh3uC3bqiPx8l3xri27Dxfy8Gu31fPhT2vekfTB59Tl59SZ59aXInwiR
P/MZP+PInyoizhvE0fvylpCfK8jPgyJ+YxH/9EwVvzXxo8g36lXsv3ub+ZlI
fg4lP8uVVe2pi7DrsY9Ar0c0J9/Ko4P2/23yTddr1aH9CNo3pP1S2lcU49h3
5NUDzkVvQF5NE+dj5xD58zXnik8jf3Se5yA/Y2R+ch7yVfJzJvGXEt8S8YuS
nwtEfr6aqPJtrczPiio/74nxMz/5fIb2A8m3IeSbvq9cntcajW6yLq407SvR
fgvtk2j/g1g3X0le7SJ/ugQY3+KZXzUlf26JOHoc1nUp25LN8XMv8TsTP0bE
70h+tiH+OPYjbCDfVnc383M66wtPk59T66r28fqeAtbR9DpjQ/KtWID3oL73
TedzS9qH0v5N2lenfVHaXyCv/jvcrCvW4+ca8ucJkT8LY1T+TCJ/jopz1OX4
WYp64zPk5yziLyP+k3L8xL+dK/MzXuXbfpGfe8v/3/l5nfb9ybfh5FtsgPf1
IPF+TxH5WZb234rxk3HVZlx1xphx7BRxH/SsL9R93E9wH/cG7uPWcT4hzkLi
6PusI9T9XHYv7ufifGZ7MPGLE3878c+rewntEkVUfN4X9ibizxbxE7gveyzx
xxK/K/HDiF+G+8Q7co/8+LoqPnrah4n/loj/VEMVfxLxhxKfeZStz2GYh/7M
E5w7icY8wemI/voctl3cw/h9qrqvrUl5xTOfOPWJU474+h7De9x39g/3g+v7
yBKIH0b8vcS/QvyzJVR87R9GiPv4dPzD3JP4M/Elv96ndpB7Bj/mnsEDPK8F
xK9D/KdF/AeNVPx86Fmf+EnEL0v8y9XN+qWT1OfcWx7jWd+V37KCV3qcg3o1
2YxzLOucT+ua/5zP0paV4j7nkzq0rPhfPz5Xs8vw0zX9/RjnlJ5d1MSTM68V
VYnzMNNWus7DvJUjxrNuqoxlha5T5082dtd9nT9sxj9N+2qWVZ3zHp9zn/c4
6G9z37E+d1T+TiejM/M0O5V8DuV5FeH30ovfS4k66vnyvrM/Is5Y8XuJ4fde
iOfLe9bmPWvrfC7P7z2J8eRcQRU/lPgZxJ8o4hfm955LxB8s+NcS/xbjSRHG
qwrE/4L4o0X8EvDnIf4w8XuvT/yfp3ifB9U7u7kO9eHjc7SseHWO1l33uV4R
L3vvY6pgWSXsmjV2h1hWnPvcqkYB4vvy4JXO6pyoJe5zoo4HiJ/Hss6/5HG+
VrZHSz33Q1W00mokxDb28xjnYsVO9V7XK2+llUzyOP8qPbf3OWN63KvHuKHf
Cw0ZHxIZH2rwvCLV83WaM/689Iz3+FNIjD871Xju5C5ojp/txPgzlfhBxG9X
UsVfKOIXDDA+/5fxU/N3IH4I8XnfObzvnEOlVHx8Bqe2uCdXxz8Hf8GC3vEr
EL/La00861dTNwYcPw+t9Tin4sxIM85Xj89h+HGJOofhR/c5DKmrvcc3X9yM
tR7nSJxLN+Nn6HMkrLRozisY4D6v4N6rMZ51m1X9/xx8x3/Owzb3+QBn55rx
j+tzpC2r92S1Hz8qzrUff+RcM74+16Ic48Zpxo1p6NyT8WEi44PN8yrN+DOA
8e3Z0ur5hhDnBnHmifFnAONPNM+3l4jfiPidGJ+DGZ87VPCO/4aI35Txszbx
nyf+eOI31Pt94K8Of3l+X1qH80IHHf+KiJ9M/LHEDyf+3LHe49K2wt777PJa
VvHEjTUji1jWIvc+x+9Hee+79D3f+lPVvsL33fsKXynqvY+yqJX2ide+yKEv
eNdd+PLyHf/+x3xi/2Pv4mb8TY/HzwIdYhv794sZ+xZvD/SuS/HNB8Knqv1l
Se79idmLeOuzinGjHOPGX8w/IxkfajE+PMvz2sr4c4nxZ31h9XyXESeMOHnF
+NOC8Wcf41sU8SsRvyDxHzE/nMr4efwpFV9zliV+kIg/kvFzBfE1f23i5yH+
KeJvJH58mBlf6/Ao0Yw/hfnnIcFfgfjFiZ/UqKnnuHRvkTk+ZDyu29/UQdXt
D3LP37q+Y44/Zx7XyV9eoOrk33bXyY++4D3/LGVZf6Z61Pl3227GP/WYZ+4X
qp58T2NXPfm9N8z4J2hf2trzor8O39fPRXf9dq8gUwfdvpyVlrPE0S67feP5
3X6ueunRX5rx9fuiCuPGesaNvgHmn5XIh1TGn+KMP3cLeM8/B4jxJ5Lx5zzP
l/MG7QFi/jZD3ZdtX2X8DKqh4ocRfzfxR4n4DvG/JT7f6fZwcd7IPcbn+fDn
CDH5txN/mIg/hvhnAvDXI/4vb5vjhp5HJT8w528bH4+fp9qrOrQd7rq4yJXe
45vv/T4zxqP+LfmnpZ71eL5xtmUXj7q1VSu86wB9eXm89z8N/fvIjfq07E+Y
49uarPHTWtXao64scq33eyTE2nPfXz9WUdSPrb7iPb/dwriRh3Hjthg/6zM+
VOd5TeL7Opjxs1dO9XzXEKdUgO9fPX+LDDD/1L7ZF+L7+iT58w7xSxC/iIi/
mvihAeLrdYpsxB/OffGTQ73574rxs2S4ih9b0Nt/eJr4/wMNZ7fc
     "]]},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{635.3508783913393, 567.},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->All,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.36013784901547524`, -1.1851162261892167`, 3.1489363696539603`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.7651665388798246`*^9, 3.765166557949825*^9}, 
   3.765166592712825*^9, 3.7651667458228245`*^9, {3.765166776545825*^9, 
   3.7651668049858246`*^9}, 3.7651688748656235`*^9, 3.7651689874241304`*^9, {
   3.765169017543984*^9, 3.7651690225014796`*^9}, 3.7651690570809374`*^9, {
   3.7651691600832367`*^9, 3.765169212901518*^9}, 3.765169285159743*^9, {
   3.765169353812608*^9, 3.7651694584320683`*^9}, 3.765169543901614*^9, {
   3.765169590319256*^9, 3.7651696115203753`*^9}, {3.765169652180441*^9, 
   3.7651697187821007`*^9}, 3.765169790307253*^9, 3.7651698508643074`*^9, {
   3.765169926205841*^9, 3.7651699500792284`*^9}, {3.765170147902008*^9, 
   3.7651701688351016`*^9}, 3.765182954243435*^9, {3.765185231151444*^9, 
   3.7651852431396427`*^9}, 3.765185375486876*^9, 3.7651854432296495`*^9, 
   3.7651854791402407`*^9, 3.765185552101536*^9, 3.7651856157589006`*^9, {
   3.7651857410064244`*^9, 3.765185764986822*^9}, 
   3.7651858155388765`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJycfQd4VNfxvf7CmI4aEk10gwHTJNEk1HtFHdEkRBHqvffee0EgkJDoIPoD
vKZK2MgFO5bt2A645JeQ2CQOCTFpDrF9/jP3vV0tBCd2+L6rFft2pX13zpk5
M/fekc/WtKiI+K1p0du3znRL2ZoUFb09daZrYgo9Nez/6ejo5tJYNVPnOfoe
OjrP/pKvo6P5/h3+8hx27tx5SuvZt/jLMH52GH+ny9+d1Lr+uub6CB3Ntzrq
fye0Xvmq5ueP1vykXq3rfZq3j3/m9Wua64aa69o//xXNzzd+5vVLmvdPfvKT
isfjWq+UNJdN/8srz2h+58xnvPKY1itPai6/8F9eeVxz+UUdzY9XTyh/f1Tr
xYc1r1j43198QPOTlz77xUe0Xrxf82Lz//7ivZpXrBBPDn8CBeq7PKz1jt2a
H2/5I9/RpnmHzX94xyGtdzRr3mH/I99Rr7kPJx3NmzUv133Gcz1a767RXHb/
D7/voNY7KjXv8PqRv69b692lmk+79n94d5HmcsAzXjnsGc/t13p3vubyuh/5
u7Xfna355Bt+5O/u0np3xtO/W5++2NPQFz/2f/iJqU/9xOfVP7HZbN58yc/G
/sMIL3/7H/jhz3quU+uHJ2puNkQ8OXIZfdk02chE8rdzGmhJylbdaj8kfXTo
fH93Zgk9bzT8R96B9i+J01xeL54cK36JqYnJqdWLlvbl74jvP1RYK905oZLu
HLso3Tl6gX7hOemDjmOfzZ8+c9lPuLN9Wr80WnNZvjN99bQpv9i8rygqqf9Q
aaP06enr0p3TV6U7vSrtD6Hqb+m6l+q54vHxzYbdXguG/S8fIuKp6TVapnyI
5sVzFkqeNq4DDanF9CFapM8u3JQ+PU/j3I1nfaDb7YlxXxd5T8Pvi/Txz2qD
vmznkc/87c+yz16tT7TtqWmZpPlE82bMO7Vo7qK+6OCIgaLIbJXUclx6++hV
6YPTN6Q7/Mm0PuGdoU+ourX32L00b8vHl3ZOwD+qDPANDXp8+FrM2J9iO+0P
ueWpDzlVAEZ/vNGpeTMW9G32CB1IXJ+k2pvfKZ1rPC2pWi9INzovSrd6rkhv
n7hBH/im9NH5W/KH1v7AvVcZaPcrQ5bhywJ9/L2SPmil+LD4Gz0OxI0Pf9FY
90dPa4fWJ970lKEny594jP6pOVPm9fnbr++PXZchtaf3SF0Fh6RDJSek3upe
6XzTOUnVflG60aWSbh26Lr3dS5/+3C369De1P73qja6Tg5U7dz4+vNEQv83X
w18r6BNXGJCOoHugT/WXcgP8ucygz2fR8P/p06/XXJYJOlt8+vH06WdMnPPZ
0vkW/ds8Y6WKqFapLrZDakrpktqz6E4Kj0qHKnql3rrT0gWygaqD7oRs8MbR
G9K7vTflOzlHd3JO3AVz7X5FiBluxY7DozJ9+tT64pMrdyMevy4zwJ9K9Acv
bRur/wNAedbN7NG6meCnbmaufDMjx58yNZrR57DYoz/EdruUtbH6w2D3zaq8
8CqpIqZdqk6gG0vrltpzD0ndZJ6jVael3sZzdGMXpSudKulmz3XpjWM3pXdP
35Lep/Eh3RTd3O329PTHh8gsv87Rw59L9ekG9JWboxtSbu4RPT6ka38o1seZ
8LH2P0QB8ZzQhtpk8NdAS76faeJ+XjR58dQUfdM+m7kO/f7mIVKCZ66U4lco
pQeVS1mbqge2+ycNRAanKffWKTUR9Nrz+N56paPVp6XTTReki+0q6WrXFenm
oRvSm71D90YEut1K93UpcoIw0sMSffpYdHc6o+T7UwynwA5/LNEXfulOhl63
05xhz743/t+zQu9urVtdq7ksi5RhfKvdc6aO6fZaSe5OTJwIqJp/srCfIabk
BZMXTs2fOL/PY4FH/8aVW6Qo+wQaKVKsazpNT56U4s/TU8HT0x8bnHl7W0Ci
VEF4rk7oEtPTUXBM6invlY7VnZdOk9kvdtD0dF+Xbh69SdNzS3qbpoam6HZL
WsbjV6KN8W2tIfsPmhqeoNEa88tTpGBZMfv9Qn1irn5fks3I5zQ3+fx/mQ4v
zWVP8eQ4P4s5zz88nmeAQwWz8bB3IvoKDdCXoY8b8eNxace4wchVI/ocXniu
z3rmc30rTP9f+MRxujrDxLQt3vSCEU2Pybw+9wUu/RsJMVE2MVKUXawyTclS
lFOaFOuWpUxViZQeQlMVWicVbG25E+CxWZ6q5G6pJeuQ1FF4QuqpOC2daLxA
U6WiqboqXe+5Id08ppmq2800TVdijfF9gxFAg6KWmCKit2DD0HTJ7HhQLKPo
C3LN9/L0HkrbRivCXugLzSz9t1lz08DNWzxpQbM27OHlMkPgymQ8ujAVj05N
BU5MBLro0zUb4c9krM+y9fAmzeKJzWOQaT8CaxfqYep4fUwZx2Pc5yunLuz3
WegpRVrukKKsI/9t9mKc0uXZ8ymQUgJ59qrUs3d7W2Bif8qWEqk6pUeZvV6p
p/qcdKLponSOOKjqui5dP3RTunXilurlTulekr/t4yvxJkDzBKCFBn3GfxHY
aLYIbDR/Os9rZvDPNIPMv69o5u4X6MvTMix8rqGuZnKexbpnOVHtSXTWXJbl
+0pmXfjCKboPL+fqA+cnAS/TZJ7lyZwCHKfJ7DTGuxl6eGWnPlJsjRGwyAjb
li/EhiXLELHcGnGrHRC10hGRK+0RvMj0sdsLY++tmDZ9wG2BmyrUcqvWZKbI
k+mRK8X6FErJgeU0mdVSVhhN5o7W/oRNhbe3h6RJ1Wk0mblHpY4Snszz0okW
lXSOYKjqviHdOHpTJe29dL9i0yo8rCH4tdEk7qKxe4L4/rt6Q+GY/1isL8/n
MDGfTFaeEOGCCUK/ztXDL8mvf5ql1+c+f/iz3NqzwNiuNY8Omst+4kkznsez
ac4jMFhiQPNGRj5LcydNwiAZOm/zTETYmSDB3hTptsuQZLUc5S72KKWR72CP
TFt7pKyxR7ylA6JX0VyuckbkaldErbbA9uWj4Lfgua8tp+kN2s+z7l9rFkzz
mCbFkPeLJUqLuQxSz2Ujz6VUEtNxJ9grTKpLPyS15p2QOspPS4fqLki9ROnz
HdclVc9N1ZkO6X45z2M9zd0eY6DDmCYIe41pgtA+Ad83GuHvVSIIyGwdKVj8
pcxi/B/N32dZeribqTd4ZP0Yvv1npQv/bR5tNZflhHCFPI8OI/CwgYi9fwIe
7puAW2XGKAqahDiHBQh3XImGQDu0Bdijda09Gr3sUe0+NJdZdg5ItXZAopUD
YlY70Vy60Fy6IdLSHdGWyxGzahSN4QhZ/Nxjj7kjHyw1NRl0mO+g2upMEcWv
REqgSJK2sY7msknKo7ksjOlgXPZnRlZKrQW9UmfFOZrLizSXV1SHGs8M5CeU
3S/bTPPYRHO4j+zeSaOLxn7lcbexcv9jhStkUmuILUcP/IoA+Xm2ACQHW3SH
jLHX+fEqSXtCrfiLMFiQeNLCb+nkYYMpNjShFN0H6Zecj52IbLcFSHU0R2OA
LdrW2SHPxxp53tbPnNRCRwdk06Sm2zgQcB0QZ+mEKM2keiDKygvRVitpso0Q
SxMbu3o4OYXhWL9k+NdWMybcW/XCiwPeVhsHfNaEDfjbbRsIct45EOwe+aGf
nd/X3sumPVi3es6D9WteeBBmM+/BNvsFX+f5zUJfKsWOVp5EIlE3jR4aByYq
900AbVF7TgMOw7o8syRifkfz+UW+FkCzBUDxC5rTgbhx3bazni1i/tukrtJc
VrJpv0Umwx7uCxyJgyHjEG81hVi9BMWuq9EWaIO2IBtd+mKrM4+AaosYVyu0
+fO82ol5rfGwR7mrPYqcHJBr74AMmtfkNQ5EfppXIj0DNdLKE1FraF6tfRBt
44kYy2lac/s8vfZ57FzxPAJfeg4blw5HxMrnkWw7AgUuo9AeNAYnd5jglbiJ
+FWhIb4qN8LfaonQLQxQnsdJMqHJfx4lf3+QntpnrPGffyH/yTj9gxK2mfC/
oflkjP5SjVGa04/S9fB+yvjBUHNRuPjR7N+lNa/LNZdlCTxSRKPRw0c8XDyR
oo3VPKSvMUMrA3MtDT+e1wD+EmijY8JTjO1OlmJy2wi0TTS5tR4OqHB1QDFN
bp6DA3lWB6RYOyLBypkmUZ7cKDG53oiyXkuT64toW2/EWE1TA1eXZ1dnDL3l
ecL88yhzG0m/YjQObxzDWgzHt5ngZeLQL/MN8bsyIzyqmaDc4jCa0MnAMRrH
J7MzPTFZh5zY4YmyI9Byqg+ecgBqwLIT+EQB7IdpehhMGY+OoNH2/+P8LtM4
A+0CzUKj6adMxxndXGg8CwHzX0C5oxXq3KzQ6LEGrV5r0OZDw5fn25qm2t9a
ZxbNOvsGG2TQS0q8yGf42qPZ2x51ng6odHNAibMDOV9H8hOOSLNxQtIaZ8Ra
uWr8g3q6o2z8EG0XgBh7X8SumS78BGM5gQfNd4r18yhyHommtaPQs34Mzm8b
h5tx47Fr8zTlNqfg+zb2C5N4joFeEiksVE7TOEP/PzVZBnW3iRzUSGH9s8ZQ
KIDfFypgpvnWUgDCQXxMYP4gdTzeTR6P65HjutfMfGZZ6Fl+Qnu+Fz+FZ31R
hDEao9c8x8D01CKT2X1+c637tyzxUG1d6n4/wmIimjyWoNrZCrUuNP/uVmjx
VOZ/rbDBMDaCjilZwQYl3jT/btYC6i009/U091XuDuSjHchHOyKH5j7d1gnJ
1s6IW+NG8+4hfEgU+ZAognmUrT9ieO4dghDjGIA4K2PN3CfS3CeveR55jiNQ
5z1K9g/TMZhhhC+KDfG3OoJuO01pzyR5ys/SOEfjPA2Jp5614iR20awghLhl
98xJ5JBPHopznyhxTvEheCdpPIv0wU1mz/8UIdGmNfULNZdlF71MUxZcOnnW
qZn6E/s85q4Y2LjYUZVutU5KtwySUlYGSQkr/e/5z5+K1yKN0ei2EtVOVqgh
czQQHZo9yG970fCm4UNjrZViljXsisgmdtjuYKlxPXUeQ1wo4Jhp74gMtoeN
C+LZHms8tXig2MM+kOwRjFjn9YhzJAFoNUZtD7Vm2BM4GsdDx+Jy5HgcCJ+E
c9FTcL/UCP9g3babbHJwkkwBiZKfi1PJ61yaqjNBNs+JyYp7NxHu/V91RnhI
JlF7HWbB02Hy54rXeTtxPF6PG4cWv5/kfbRNMk/jfeQC90SNSYzGjD81b+IM
aeX0BQNh5s79KVYBUqF9qFRgt0nKtQmRsixDFBMF3g5ZYP74GEXZt2MnkWks
yUQ06LHe1RJNxJg2T2Em+hxkKJ2Jspl8yTy+FHrJs9V7cdh1oLA7FBnyKTJk
qV2VtQvirEkbPmEeclO2AbJ5HMk8LhsQ775Zude55N4oNNj+e2i4FmuAawmT
RMj9ZyNrapr8Q5NlfrxsCrxC47LyyLw5SdcOT5LDA+Uxj8lAf1IM9Ju8p3Sh
lpv6GbmptxLGs6bBxW1jw7eY//j6oLaF5jxFGrm6aTJe/9SiaXOvLZ3z4h3/
Nc79GZ5hUvumdKklKEGq84yUyp3CyFqbpDy7jVKWtWyptJWB/esW2DzeHzgO
v8sbj1Pr56PWebXGYnVkrUZ3S/JvVhQYW+mrMVmNyONtqZCLHZsN8sjB5bjY
oIGcGwvQcnJuRY6yUMq0HbJYPFkshiwWqXFuIrAohYX5SPDcSNnWHOHY2Fqp
zwgst5P1ULdpDv5K4ujbZkUcHSGLUPaLy9OAazSu07hqysyiIKMEly6ZTv8k
D6e2Fns3NZXYu4kATtZ6T/Fub8SPx2ux49AXNa7PZtZz/4uxZmouy3Qy06wX
LZwx59TS2fP7oj3W95duSpBOp9dJJ5Kr74R7BkjdO/KkDjJeKxvPh4znysbb
KOUxzayD2HiqKAuv+4lWk/Hr7PH4MpfcjP9ixXiryXirKTitJu+4muhmSV6R
jEij1dNSMSB7RzIeRad6UgZR9iQmSOFWuVH2QJ6wkKiWazdkvGQbVyTYuCPW
WkQm5X4XE9UoKjmFIM51I+I9QpHgvRWJ3gFIXDNWGFArOqEzeAwubB+Hn2ca
YDBnCh41TpKpxtkCK7DzZKyrZLj+6cDN6bIRX54q05ANyCla6wR8Q8pA7Q//
TRGofSFR7bbwheNxM2Ycq4OHOU4jhLL6sU6xVcuKpk85xanaVpRcLawH8kNj
Vb35LZKqvEO6WNgunc9tERbtTa66nR20rb8iJEbqCB2yaAVb1E6xqCVbNPDe
+sWm+KpADw+LKMgmG6PZfTlZdBV9LrIpadJ6smYDjUb31bJF1dbkeEcSsMXL
Bs3kOLfaWqKWaFhB+UqJk73GmllCazjLbJuESPKXHM6i7chf2ivhzG0T4j3D
kOCzDYn+EUjydNIYMstuBKo8RpIhR+Nq1Hh8TlL65wVTcbeODHV4siztOKZd
mMrGo5h2awYJftygyypT2Y5HJom49j1JjX+wHctJahSxHfX/TWJ8kKqncZm3
yGX2R4/D1Z3jsMt/dPg0Pd3/xYyTn/KcM7TMOE9ysrAhMyaQGXdJV6oPSVfF
6JaukElVZNILuU1qkw4Ub4gcyA/aJnWFpkntQbFSI5vUjUkaIuURQbMsA29v
Xmz++OVtevimQh9/LByPwfhJqHdZhTrnVcKsumTWVTrkzei5etdVRNZVRNbV
RNTVRFQesrJs8rAhlW+DZMc1yHG2FfGw1Fmk+Mq9miLV1g1Jth6It/VCjM1a
RJJnjSLZGE0EjXZYR7bdQLbdTLbdgsS125DkvxPJgduR7DxP2JbjYoU7ZcYb
xuBWgh6+JK3y3Z6JkPLmyJ6VbcqxkD1sH9v2DWHbPoWjrOQ5JO4l2zarbUuZ
VpEBfk1OVq1VPlYypKcd7I2ocbhCtn15+1iulv9YR6ttW5OnbDvy32ybF5qo
OpbfLqnIrlfqDulKV+sO6cyTrtfJZr4qzNwqXSQznyMzn06uUHVF5nwY6Rks
dYeRmUPYzDukKsXMudZB/RsX2j4+HqqH72sN8PdyfTwoGI+zG14kM68ks64U
piYjkz+WH9nUDYqpmxVTM5MbSbU2uFuj3p2yBSdrpDvZyHe6GvkkSHPsnZBp
74I0Ozck23kggXLfWNu1gr1RxN4nrOweinivcLLydmHllOAYpIZEIsX1RXLl
z6PacxR6w8binVR9/KmKJGfXJEjFLwzFTna/r81gAwO3ZwJvzpDNfGmqzO5D
ipmb2MxcriczF8tm1q4y/IAbxisRY1n9PMywF+74WTT+b6Y2fMobj1Svmm8y
0Tc6tXTOAmHurLAk1WFh7mO6kqruqM5ssvpRMvpRMjmNxqPC9Ne1TZ/XJJ1P
r2bTS72xhXfC3f2kHsX0TX47pGoPYXpV4kqv++kOU/CwygDf1xjgb2V6+Cp/
PA4HLEIDmV2Y33klap1WosaJExT63ll+vsF1pS6a3Nirc3Sup5xFrkLw1zWo
plyE5VMJCd4Cys1zyfRZ9q5IJ9On2Hki0Y5Mb6dt+mBEO4aQ2N0om54jsO8O
JAWQydfFIm1TItLXhyHFdpwQvsc2j8Vbyfr4qsII3++diLvtM3D34Czy0mT2
V2kMzJBNzqZnCLD3ZhnFopeTlg7F9LVk+gpD/J5NT1mJtnx6/wc89ys7xuLS
9rFo9hUe/EdH4hYt2+tpLsu2H63ZMbFwFumpuQv64v3DB/LDEvtrInOli0T1
i1U0qo8NIwyc0BlGGDgmXW08RvY/pqMr3Wg6pjNDuiFw0CVwcIVwoMprlC4w
DlLKGQe3cwJD+ysCtksdhIMWBQcl9iGD6xYtFsVZNBniu2p9/KWU3FyqMXZ5
mBMOVpC9VwzhwJFwQKPGWXYNjIVG15XKrdqh1nWNoH+Dhy22WK9BgZOD4unl
QkG+ozNyHFyR4eCOVHtPJNl7I86O62AMhCBEUUIa7bQeMa6bEOcRRkCgCO4X
geSgaKSuj0f65mRkhqchPdBLSLKudWPQF6uHXxcZ4ttdJnh0YCoenVdkF8uv
W2T81xU/wKDg5zkK9E6WKwZ7ZCB8owZCiQHuKUBQy7D3UvTw9lNunoFwOWIc
VJR5ERj6LGc+9z8BYexTQBjHQGifM3X6+fkzZvcl+4cOFG9NUJ0p2kUs76F4
3kOOoIfAQKOiR7pA42IdI0DV2MuoaOyVrjb1StebehkVLSd0TBgbhIwegYzr
hIyrCjIuEjLOETJOxxb2126MvF0SECYjw39Hf+RK13ubV01/rEoyoNzQCGg0
wL+q9PGohGYkcRKaXFfoMjR0hqPeeQUBYwUBYwWqaJCTUG73RQGQGqHlSZcT
MDj8V7nakbHtKEGyQ7GzEyVTbsi2dxZBIcvBDZmO7khz8ESygw/i7X1J0gXI
wLBfR8DYgFjXzQSMLYj34cAge4fUjQnICEtB1tZ0GonIcJmKFt/RuEQG+kWO
Af7B6TBJO6l8rjo4cIX01ek6FAheUzzGNQUYXLfgiv9uYw0wvq4cAsan2fqy
riNgvKsEhgEKDK9SYOiLlsFxLVLWAaodYwcDFg/7obLSswKENjZGPhUg9JV9
dEanzOcv6ksP3nq7KjJtoDUpX7pJ9mUb3yBsXKVxhfChquiWLpZ3SxdosPNQ
1VEAudLEMLnaQhChcaNVwIS+TtbA5IaASbsCkzrpYla1dD6lhGBSIJ3YkXUn
1jOgP9Ux4N42+xcen8iYgIfdNLddvARqCDQY4HGlPv5crAdp0zyCyXJyDsvR
4LycHMgKJUF+iYIJOxTCjbPAC6qVZL3RXS0TbZHvbIMkRxuKJI4USRxR6ORE
0cMd2YSPOFsfchwyPhLs/RD7FEZiXEMR57UVCRxBAqOQEhKHtM1JyCDHkbU9
A9k7MpG1IRhV3vpCRPwsTR8PqyeIyu7djpl4dGG6HDFuTOe6et90SjNETsdl
Lk4PeFWo3VhoxG/qZHx8VWqIewUGAh/a0ePNBBkft2IJI+Q8+hWcXI+SHUil
5yj7H8DH0NYd7VR8uOaFskI0Ue+uPLViwaK+rNCI/n0ZJdLbHb3Sm+3H+g/m
VN6ujkyTbpI+uEGDvcCVqi5CRxehg0ZJl3SBhoIQgsZp6Wrrael662lGxmmd
SdJN+u/NVkJL01EFIZ0CIdcLW6QrhBAVIeSCjBDV3tC4B+udZz8+UTYJD1lR
v8I18kliMRWthJB6A/yTEok/UW54LGghI0SdhNc4LqfIspyciDyq2anQkJ9b
KYoBXMmpVwQmg6TBww7htlYCJBUEklJyKEVOLshzIqfi5IE0R28kOPghziEA
EfYh2Ekj0iEEMc4bEeuuRBfOIVhdbkhAeihFF3IiDJCcnVnIjcpG2bYQdG80
wqvxeviiRM4n3qmbiXf2zGYncoWziKvTdCbLHoTlJ1cAeB1m/xBK/lk3AV9X
GQmU/IZRkqOvlGj0RAbBXoSR8nq8jJbXCC03aTBSrpI3ORk2tnvl9GEKTJ7Y
mq6Bw7O2ZDRrAUf3KeBM0RfAUXbM5m2N6+/OrZE+OHRBerfnnPRu12k1iG7n
bN75N5/V0x5Eus5+EOkw+0GE7awHW61n3dvusGwgm1LIrPU0NsQOZIcmkGZJ
GsjfljZQtD1NdYbc0I12AtLN9tM6EwSIbmqB6IYCoqsFDKIq1eGojMFkd9ev
c7eZ4uNLs4FBEm8DXAPj8gkvrBgLEH1fRy69XNmWMhJNLhbkYSxQ57RcAZEF
AcYClQ78uFyX/0PBiIOTSF5crZBHwUeNoXp3O8pJrSkntUOlqyPKXAhDzi7k
gNyR4+SJTCcvwtFackZ+iHcIJPysx3bHUES6bkGcZzgS1rJMZScjy9SMLank
ZDKRHZGFnMhs5EbnoDg+D23xm3Ex/gV8kmeIfzYb41HnFOFscMmUcaQy1eXS
LONIRbd8TsFQF2OIs1Fj/LN+Ah6pMVRogM9y5Ej0HnmadxlH5G1YprxFWHpD
wdKtOBlH7G1eiRhH0UheMH0WVp4lVRT8fPdUJBpa4JDhYy75O3mIfc+8J/aj
3ivSh0dVBKWLBKXzDCXV5drOe0n+qx6fyaG7bp8u51+kvXgl4YsSQ7yepIcm
/zEocR+NNPuRiFw9AhuWDUfQouHYbDb8a99lUx94mc1+sNZizmB6SOhA2fbU
geJtSaqzRS2EpQ41llQnU4oGM328vs4LMcUgL9QRhqS984Gf00y/xW6dsv9z
yiL0KHycPBEtruZoJgwxjuoFjiwIRxaEI3NUOVjQjFTaW+gsRKXA1QoRrXLt
bCjnIUVDzqjO3RZ1bnbIpIiV5UIS2N0JlW7OKHV1RYGLO3KdPZHl5I00p7VI
dvJHolMQEpxDEOdCkYqcUIz3DsT7RQ5JXMUJZe0gAO0kAEXlIC8mF4UEorrM
YuwvLsAbBatE2vvdbhNI2XPkygVHpwsMo4sCRpdM5ZrHUS0YtQzB6A9lMow+
z9XHnSx9oXQ5aA0SlH4m4KSH27w2psDptTjZHUnb9ZDhPtF+4sSJP1rVKDB6
/JQHkrcEm+ibnFo6f5Hkae00UJ2Y37+/sFGzN/yOss1aQOqYgJTqesuBwZKt
4V8Xh8zEQ87lzk6BVDCH9xaIm+SS+j1KBwbT9XE9Zjz7TrGQVeE+SuzCS+Qi
ID2Wu4/kFSZ0rx+ji1qf0TpjsStwzNex9lMfhK+Z9WC79aw7KZ62X+f7TsVg
5QRZHPYTNd+ZibuvzMVd1QvyTY6jjNJE6J/vavTxV0qeLm2eq6DKHI3O5qh3
MketI6PKXEaVvTlNQwV9fUl4qUoKbzm2a0R449W/Oldr1LjZCFTxjo0oB2s0
ejmh1sMFlR5uKHHzQKGbF3JcfJDp6ot01wCkugYj2W09EpTSJ5fHEsktJaxL
JH1Mbik0BZnbSPsQonIUROXH5qEgPh9VGUXoKKnAmapU3Mmfgj+TFvq6eRIe
7eN1PF5incoeid3U+amshU5PlRcrOifKy4AEq8cNBKtqIzwgWH1ZbIhfU5T7
jKD1caYc6Vgvv6eGF0HrbRpvJephgLzU/tCJKPKbjrZgI45yPzaPapIf/qG5
IjunCZpceo7pvFML5izqi/CP6K9JLJWud/CGfpX09rHrYkO/5gSCFso+Oqbq
359beb8q1AyD5Ua8tKzLZQOdqbjbMh13a0zxfZsxvqYp+mWBoag/XYkcLwoS
u/xHo4xAleMwQl73sRmBYpeRaPAZhX3BY8RKKqckrCQYnJ/lG+D3ZUa4SxFB
LCFw6fGcqDord6onx8CbvGLHq3UmIhv7lnN0ysR6g+ej1dXsKZiZE8zMUO1g
TuaqtDfXFThzZU+mFHBWi+VLXvSvcSGcuRLOKAQ2ezsgmsJgvbcTGr1dUevl
hgpPT5R6eqPIcy0KPAOQ6xmEbK8QZHhuRIoXr5OEU3K+HSlBkUgNiUfKphSk
bcmg8EcYi8yl0JeLPMJYPmGsIKEA5WlFaCsqx4GaGvRnLcWndONvZ03BnTJT
UcAT5fdeZUfFaaVQd1gLZ60yzv5aY4SHlbILU2Ptk2wZax9x0s76O20oMp6N
MEHH5ik4H2GEG9EiNxsMliPhjw2ECtb++hTWlmkOkcydNr8v2GXzQExQgqol
o106UdWrdZCEj2Jc1TpIomBPxp3qVmfvYMXObY9PxRrj4S4SOYfofo9NknNR
erzbMA13q0zxHfHsj3Tfn+YZ4E0KmC8TmA5vHCu8GHu3PMeRYhcLgy/PaSRq
vEZhN3m+w5vGikXHG+QN304hd085MS/jP240lgOhoVwf+fksdFQsBN4nzL3G
BTNe6uDNQ0b4F2Hu15nG2Ou5FC0ujDkzEl1mCuYYbzTszRhyZjruKLczI9yZ
CS3GmR5XjOUVPRLrCupYeLUQ6vLoMY+8XKuvKxp9PVC31gs1vmtR6euPct9A
lPiuQ6HvBuT6bkL62i1IWruVBFcEUoKjkbYhnjwbx8sMpEfkIzsqnzxbPvLj
ZMQVJRWiJLUIDXll2FtRjdOpNhggr/NpviF6Y2biXy0mMvV4c8lRBX0nlPJw
p1weYtR912SMb+oZeRM0yPuCYswvyRJ3CXm/yFI8XYY+3kw2RO36GegKm4L+
OAPh4fpp5rkqUOP9gzsanhU3FdT9+Znya+lLFs3zTRf2+VgH90f6p0hNyZ1S
a3qP1Kk5DHRaOt90Xj4M1K2S3hCHgW5KHz5xGIiP0DTcr9tojkHSk2IDDW8e
5Z0bvMrFKOS5oIxXSp2FxzQPvMHgF9l0XwmU5W8fJ5a0GYFVnqNQ4DwSabYj
xH4qOcaOQitd49ecDifmRZGYSNKT7zJc3krFIOfSLCfcb8kovHttHh69OQu4
xRV7XjhlU0wQKPwkdSLaXJcJFDYRAhuczFBHCKxxXIYah2UUXM0YhKgkCJbY
mqPUjoIuOT+RS5IDrHJaRYNg6LxGwLCRcshWHweUeNkjg2DYHuhOwxOtgT5o
CvRDfWAgagKDURGwHqUBG1EYEIps/3Ck+JPjC2THF4P0TQnI3JKC7O0ZyI3M
QVZMEXJii8jxFaIwsRBFyUUoTi1GTU4Z2kurcLAoDhd3jMNbRMY30kzwgPTF
PxoIZrtMZNgdnCzDkeUNa7cOWb+pofhPLSj+Xp0OULBlJ3iHxpmdk9GwYQbe
IigOpsrBljXcq5QKsAM8Ez72hwLtf4DhH5+SbzIMjcZMbJ4zab7kuTLonvsa
L1V+eK041VX9H051XelQSTd6rkpvHLshvXtac6pLdavn7GBlVOTjU+F0b9WG
8v76DmN510OPEiEPKdty903EFzWT8Q0FhC8pL/8w0wA348jZbx3Hkk7sjWEH
yBE4006GJEOz2JUi8tpR6Fw3Rr7LHaJGyH71O97dd0DZ0sRrvVxAJrmHj2fj
7vV5LPnIUdJzr0yVjyd0TMC3NQZ4JfQFBZLLCJLLCJLLCJIyHGvsGZLLCJLL
UGG3DPnWFgKWVQ7mosxRSRlFpYCkpYBkLUGy2dMOu9Y6oD3ACRGUVXSEeGJf
iDf2hPhi17oANK8LQsO6ENQGb0BV8GaUBm9BXtA2pAdFIDU4irxiHHnFJGRt
TUNORKaIw/mx+QKOOQmlKEgqQXFKMUrSSlBFkGwrqUJPVSlOx8wVU3gpdiJu
pU0WGQbDUux63Kt4SYZkt+IdnwHLvxAs/1hhhPuU1P2K4vIHmUZo3jQDZyMn
Cy/JHvI9is3vUFx+kzzxLcU7Xo38yTG5UX746ilYLlVgadQ8y3iO5LTIcyDI
KlSVElDE5/Nuh/nE9CeG5P6H83nnh87nkcd884TmDJuqv+fs/coNFqJa8309
wbNJOQbCuz15Xwfv/DyghqeJ0Cx3i6eKfSK/oWjxHok+jsGnwscKj8ixuZ7E
YanbSGQ7iMxEqe1E4gjFbPauIlqRTmJNLrZBHpIzHrGV6xZh8V3C553ZwOdz
IO2jRPcdcqHX6NrpSeIs0nf1BjgT8iLhc+kT+KwlfNY6LKWgvVTGJ2Gz1NYM
+WvMlehtTmM5KhwIn46ET1GjXSPWd9u87LDb14E+vxOyyXVWB7lh/6a16Nrk
j46NQWjfsA4tGzagccMm1G0IQ+X6cBSF7ED2ukikk7vM2BRP7jKZ3GU6ucts
RSMWUMQmd5lEbjOlDIWp5ShJL0NldhlaiivRXVuLk4WhIoK8lmSIj3IniEj0
F/UGqnbFdTJGDzwLoyb4jl7HBQeuxL2ZPgm7w2aibfNMgdFPc+RIzlH8A7LT
u6mc/uqJKoq6gkJJIkfvnwrQLzXh21V2sQzQorlz5/IP4yE29IiVIJ1ZmoOl
U/RNJfv5rgPeS4JUkQ4pP3wYM7ZdqtMcxjz674cxu68qhzHFScP+faWt96sI
xF8V64tj1d/VEpAbjcSmJF704FM4uiwCKB/mFXK18H5YbYKfkVj/P8p6fkZZ
D++d4ZB+iARoR9AYNK4dLd99LOLJ1TKeKzwo+pMbPrBhDC5QuHszWV8kTWwz
oayOKPuluHLKAvR9Cvl3CcufEZY7FwDvcfLDFVVekyH7NRriXMh87BJYXoom
p6VocGRfu1RgucZexnOl3VIUWJsLPJfbsd81J/9LvtaBy8myEq1z4V221mj3
sUOHnz32BjmhxN8JZevccWCrHw6GB6InLBj7Qtdjd+hGtG4ORdPmcNRu2obS
TRHI2xiNzA2xyNiciKzwVOTsyERedA4KhPKUcSyHffK1hOPCzCqU5VSgubgC
+yn/OVGVjgtRxqSG9LEvfDq+ID3+kPztN2p/K/aUTZLxzI9dWngmkzyqn4hr
KdNxKmYG3smajM8LJoj1h/+jpPLzPAOBZ/a3Pyd/qy0B5DLOeAqTY7tXayrK
/10DKFj+jeaKh/j/KMbr2bSQMbjcaAqpxBh9RQYPj0eN7QtaPLzPZ8FwcWpQ
V9DG/IlTtgruxQnbKeOm9NnMsulfu8T/yTN7/3bKtq4/dl0mH34UR0frkruU
w4/HxNHRoVO2V8TR0Vvy0dHbDWnZj3u3TBA7JvmELZ/S/1eNoXyMtMVoSGew
E2fMtxsLzP+rcYI4vtK4eQ4+o0nlLQfkgGQfnfCE4o2zlOVFCckLooLA/Ms7
x4sCAS9O/73eWI6hxxS52zckdwXmP50ja4xLpDEGyK9fIB9/gBenDXFhg4z5
VsJ8s/NSNBLe6x2XoM5hCPcVtstQaG0msM++nFJ/Oed3WCE2b3De3+hqhV2e
1uhYa4t9/vboDHbGns0eSPZzwuHIQByNCMaxHetxaPtG7N8Wir1bt2BX+FY0
btmByrBIFG2OQfZm8t1hScjeliaWSPKiuYbEMpfwnlQs8F6SXoLSjFKUZ5Wj
IrcC9UWVaKpoxOHmRuzeuYIyo0k4yXqAfXjFM3y4Nt5J5j1qm4y+7Jm4WzoV
d4qmikyMa01/IP/PWdivFdx/pmRjH5EPfz9N/980xjV5A+xPhPyvNFfknjVr
xNnf45QBPZQoNz8yA3e7yV6n5LO/3xKk7hcZ4EToGLFJKcN+xOBKU11u9pQ7
8rmRp+abzO1zn+/cH2K+Toq0jJSirKOeOvOrPjFdoJyYrpJytU5MV5Grr0vp
kVrVZ36r5BPTfOb3YudV6fqhGyqpQxosiox9fCXWRHbtpFP4eBWf/vknyerv
ntYuDH2GfAtBvkGG/J9IDw+kTVamJBXnSYscCx2L/SFD0rqIpHUGSWv290nW
zwsuMPa53nCZwgMXuX5L0vwbXn9nW55QtqK/qujqj2bL2uXT2Xj0wQuirIrX
p8uFh4Mm5A8n46jfUux2XYI2wn4LY1/4/CWod2D8LxHYL7YxQxFhv4qwX0XY
r7IzEylfLelr3rRST9hvcbfCbm9r7PO1RSdhvzvEBQe3eiE1wBk90YE4ERuC
kzEbcTJ6M45GbcHByK3oitiBXdt3on5bNMq3xiF/SyKyw1OQQ2leHqV5rKnV
uC9KIT+fWipwX5ZFuiW3DNV5ZWgsLse+mipUZWegKmEjdm+ciH1hU5Hq+6LQ
2O9kT5E1dqvi87Vw/07RdByNI79QbqrRMN/SXKrt8zsl9WOdzZWIT8jnf5z1
lH5RfD5pmIfFbmKP2Y/WLw3yw2ca/SIffhfnZLu9LJ5/eLnYgPJzcmhXyGBX
p+Cd3TNlIuwnIjRysW08Cd3x2LbCGC5zjRC8aAF8F5g9dp2z+J656cz/cPhd
fV6bD78XKoffq6XcsEapcEcrESGUiNAl1ZHmac1Tn9dWH36/wue1VWfaz94v
37hSgFAceGewk8b5vsFQ6B4mw7dD2oc1TzufluXXfsskqDFSpiMDl2ImioIb
i3fO23nTAAv49oDRYlM4O31FwAsy5DuNRLPfaEGY6zF6JDANcL/MCP9iJ8fO
7eQU+RwGC3iu8H5EQeAXs+VA8MlsdJQtlBNNrn0cNsFXlaY44muOPW5MhCVo
cVpC4mcJBYIlggxMhFr7JSR6zAQhaogI1XacfJpRgLAggbQc9USERpfV2OVh
hQ4iQhcRYX+APQUqVxzZ4Y2aME8C+lqcSt6IM0mbcS4xDGcStqI3bjsOx+5E
Z3Q0WqNiURuRgOLtycilAJBLyWV+NC9NFcrOXyEBC/eyzDJUkHivIRLUFshE
qMkvQG1OGs41pOEiiZ/LMQbiOOOHORPwRsZk9EbPxPXUGXjUNEl2/LvIAcTP
wTuFNBd7FCHf9mRJThMIig1xr1BOOj/LJfGTrYgfJdlkMnAweD1BjzVr+GxD
3Z/Ig7uaK77i/6vk8+Juo/Gwk7B1mj7fBbmHwcOTE9FHn+t85hREWBsj3tqU
HKQZolctV06TyMduY1dz7wJnbLVgTojeBf1rF68lLhAP7IYCgvq8veAC6aD0
jcyFJubC7W1Byf2p20rl8/YFJ6TOJ87bX+2vyWy8X7ZhJel3xeG3K06fNU+j
fESROxU91ughwRUlETWVE3ma109oTttDpwkNxDvuLkWMx8kt4wg/Y59IZNWr
H7EkiPKd5TNKJ8LGoS9ODx9R0PxDBfGrVTnPx4X+K4r4f4848OGsYUwGHT3c
ffkFPLpBT7/MReiJ+EO1KY4HWGCfx1LsIgq0Oi9Bs9NiNDkuFjTgeFBBsC+3
XUpUrrVfquNBXyk3IArUOZiTXlqORucVaHFdjT2eVtjnY439RIEeosDhza44
ttMHbTt8ULnNB2czN+N8xhZcSNuKi6nbIaVE4GRSFA4mxGJPbAIao5NQvjMV
+RHpFAeyUUBxoIjiQHEyaR+OAQL+pH2yyykGlKOuoBz1hRwPCpEZn4AjTVU4
v7ua6LVIxMmmjdNEDeo3FCv/SDnA+3lThM7p2DlXwP9Ry+Qh+O+S4wDvCPhX
o1KV1ooHv2U9VCjnAHeVeMA0eD+dqaAvL+3SIFr0ucwd/qP1v8KBjzVX/OVY
4GdhOmwww3UEHrYRdo5QnthjjFuVxigKnoQor/lIpASt2MsabYEOaPV1QIOX
fFSx0Ek+2s/9EhIsHRG1Wu47EbnaAtssRj12mzPy3orpM1ShVjuUeEA8IGEU
S8Iowa+EeFAlpW+qk3K3tkiFke0DkRuyBhLC8qXGrKNSOwmjrqFeCbcLY9Ie
926nz1ZrJAudPcZyqZvPnu8eaobC/Tu+qTZUbn26EHN/58WmCkP8rkQWmp8S
Dz4mHBcHzcbr5E+uUYzjQs1xiglcd9xFMaGWYgLXGXm5meuOMaufRxbxgsXR
0c1jcY1iws+zDPD7ci0unFEODr05Q5fJoGMg58O8GEPj7gXSRycpPKiID8cm
4kHtNJwOXo79XkvRrvChhfjAnGgkTjQ4LCZdtIy4UGe/RMecvlLO4LCMhhmF
DHMayymXWIFdbqvR4WmJTubDWhscCnLA0TB3csVrcTo1GMkhbpDywnAxLxwv
52zHK9kReCUzCufSYnA0JR6diYlojU9BdUwaiqMyUUA5cGF8wRAX0ogLGVpc
KCxHQxENyoNTYuLQXFKEgw0VOLOrCkeiX8KZrePwcqQBBpKMRN2Lw+bXNRN4
rYqxr8tE4PWqp6nA5UeSUX+vk0uQf66So8KXJXJUUKcH7MXuZMu0+DBTXxcf
ZHCnFvrvw2b/UT+ojv4DIz7QqCO5i8hyuavNRN2Hl6PGiLWzwUJ9nE+chEh7
U6Q6WqAx0A7bXSzRFmKPMh8nwYw2Pwc0esvMKFaaM6TbOJIndUKMpVbDC8sV
iF45Ctsthn+9epr+oP2LNqpwihbqzjYJlDIkk1JKD2VmtEqFUe39iVtKb0du
SJeaco9J7SWnpe7q89LRJtXtnJ3Jjy8nTtRihNJBRN09ZI84TS3f9SxBEA4Y
39YTKaqfJAUHXPY2HxGou8Kn4tg2E1GpO7dtnAB857qhNaJCCgrplCnz+e/o
Vc+D+4NUUzbRvX6snDGTl/qNOmvoUg59s1gamKEzHPjZTJ1N9HUGpKZ5ciW+
dxL+2DAd59Yvx0GfZdjtshhtzovQ6rRIEyGq7ZagypaiBImkBgcelEUQGxqI
DY3EhiYnC8quV2C3+yrsJTZ0ea9Bj68NjqxzxIlwD5yK9cO5jHXIJZF0Oj8U
quLtuFwYgav5kbiWE41LWXE4mZGIA6nJ2JOUhoaEDJTFZqMwNk9EhpIULSZQ
VlydK0cFFkVNJeXITkxGeXYOdpWXoruuDCfbKnCyaIPIpPZunIDeHSZ4n0Tk
/xGUOYD+rY4EEK9dtmtFhTZ5g8+3T1Hha7IVRwemA0cIpoQcJYgWZLvP82Wn
xvbjdT1+ZKqQLcLnGuv+6GyhXn4Y1FwRTfPkE0xn461G4GrEWEqLxyPBZirS
yRDFbpbcR0MXbcG2Oi9iuzP9d509qnydUMW0UChR7e6IUhdH0eMh084RKdxj
wEq7V4k3oqxWES1Gq5vrfG053WjQcZGjaqt7hpQQWC5TIqyxf5Nn4kCwW+TA
Bq/Ye7arnQe2BadS4EgbiA3Luhfhafn4cpKy5qtNhZ6JihiaJwQSJw4cKFg4
fVvHXFBOiVEydE/JxD7NleeSvAvO7DTBka3GUO38t4KpqJDySj1zgBOH6NVy
AlHiNgodwWNwlvjzepI+PhNVU+VQt6ggmcpHnPh8y9szySve5qjx1gydcZAa
iRdXpop9t19Uz8HFjStwzM8MHW6LsYt40Ua8aGFuOC5Cmc0yNDospijR6LBE
x0tUlhopYDc5mhEnzOl1FtjlugJ7iBf7BC+scIB4cXy9E05t98TZeD9IWSGU
HQehaMsGnM2LwPncKNwoikZfQSwu5yXgbHYSjmSkojM1HS3JWahKzEVxQj5F
CF6BKqOMuRzlWRWoyq1AbX4FGosq0FxagdwkSjKSktBWVoL28hLsrylBb0sZ
TlVGYS/NTS+Jz6pgU1FVZmF5r9hI7OJmvyEqqBpOmAxxQlFLvH1HzQleQOWV
BPX3LHh/y8lEEScThvilUlHl73kVh66Lppg/kRfvaK5o9fEZXD1tBDlBI2TY
vIgsWzN1rxlueDJMtJp5QW4zE2yPJgoTal7wbp1aD0eUu/LOeEdk2zshzdYF
CdZK7w2tNjNRa1bTr5C5wX181hM/rGZOeLBy1tQHa+ZMe2C3YPrjDMfxSHM2
QIGXIQ5tGoeThNMLJPCvktB/SMmwWM3qEitb8s0tkLcHHFD69+yS28uQdhI9
fP5Bj2pa8NGq33KRQplGuUhhIBbD3qCcrGadKS7Sr2Jz9jyVS3BOnWI9pKGY
HkyXFiWn6Kec4uMcQyGaxdr5IeUEPeuo12foyJTQl4+CcT79+nTc7Z2NuweJ
NmcnYzDDDKrNK3EywByd7ovRzvRQQkeF7VLUUthoclisS3xYouNCjFlKYxla
xDAjzWWBdtfl6CB2dHquxn5ixyF/W/RucsaZCC9ISf44krgBx7M2o4hS68ul
O3ExPxq9GfFQETOknGRcyE/BiZx09GRmoT09B3Up+SjjXSscMdKJGZkVqMyR
mdGgMKOpvBqVuXkiWrSXF9MoInYU4URzKfZErhIp1yGKHAdDDUXaxTXou7mG
4jjsI/IiotbKDGFm8M7iRl4XM36CGQ8qjMTmNI4YvJ7LgkrDGHr+Pj3/RYkh
TTFxguIys+Yrep5e+7Bnw5ifpKQUhrypUVIyQ8bIHWxG6LVPHG340GLSBCRb
LkO1yxo0eVqjlXMKPvzP3YL8bXS4PZO1zuyhVkE+NkJZ5bu50HVHtKx1RL2n
IyksR3HwKM/BGRl2rkiycUPMGg9EPtWuJtraiigj04ZbBSVYDieajUCN50js
DRottpVKO/Rxltw7q0kOpzxp/2S6dJjId7hoaBfNiUlymxreWdOpLDFQ2vG4
VqbMXysNRc/Ir0oM8GWRHEn+L09WVixYSayKZTc+1lwVZCqnHM+ox3LKwdEk
gVNwoksUKax0uxGo85ExcTlKD+9l0O8gWz1uNpHXSXuVuuzN6fKRaH25DDsg
j0dXZ+DukVmia8j72ea4umUVzgZboMdzCYmtl7DL6SWixWIUrDEjWnBgIca0
EGO80UqMaSW28GhzIvdG8WS3YMxKdBFjuokxRwJscTrUBeejvHEqPhDHkzfi
aukWZIV6ob8yEq+WR+NWeRxuliTidHYaDmVm4khONg7m5GBfVh6a0wtQmVqM
MoolarbUEFvqC4kpJbz6UIz0uHi0V5TRoFhSUYTdFYXoqirEiaYiNGycJ2Ix
z+SukAk4uMUYA4mUMdMsfU4+/yvSW7x6873ClsdabHnEm3DI+bDhv1JYwexg
tvB1kYoo+ku8hjVYmfzIrOKVaN7Iczlaz/6nE2bgqZAyXrMtf6HJ9FPTxpn0
Ocxcdtt19soHQQtnosRhFWpchtpttWjaba2RWz1NF5Enz8MaeZ4cgRxQ5+tI
wHFCK3GnwcuJpJgTSTEnFDg5i8N6KXbuiLeRQ02k0rsmyjZA7sVgs0rDnXga
3M6snHx6O4H16KYxUEWMQ+N6Uy5OyOrKTN7bIPgyWd4WdlLpqnVC2fazX5OU
COX110q5V/AfSgzEGf0vCvkUr6LAcvRFCZAVGDdb4X0tPWHG2L1+Ao5QRrKP
MhIu0VYqa3jMG96wm6iUrpg3SWvkNexOQgZHQ96u9asiI/xNvZanvX7Nh0sH
xLnCW9M5d+dzhbemQ6qbK3oL/DzXHDe2rcKFEAsc9l6KDiJOu/NLlJdThuJA
IceRw85ielyCNjG4jrXLaZmONdqJOe3O5tjjshz73FcI5vT4WOF4sB3ObXHF
2UgfHIoMxpX8jbhOzGmLC8bxzDAMVMTijYp4vFGWhL6SFMpa0nEsLwc9uflo
ySxBc1YJajLLUMmsya5ETV4lsaaSWFOJlvIqZMTHi/x8dyXFlcpiGoXYU5FP
zMlDb2M+atfPFX5nD6nZ7o16OL1dHzfj9UQGd4fiDWdxrMg4vgjWkALjdl5q
1vCeK8GIUjlR59jyqHqCLhe1dMaIl8oJDL9cJhF/z8T6B13jpSp6rtvrped/
tBirkx9efYo5BiLUTByj1zzPyFRaZDx7wH/+mv7t5p5S8sog1Y6lXvejVk3C
xbBp8r5pbprmSiwiJrUQk9q8RdM0DkG+a7hjGockUsl57kQlD+7W5SBCUJmH
sxaVOKtxJiq5INvRDan2Hki0lbsuRlprmgqJpgjcMS3GylhDJW51UeQ8As1r
R+HA+jHqg1AcKngKRXjvVNrRqGl0eoou7xvSWSj/94jSp45X/lq5+aKRiEB/
LKUIRIKNVzD5nJoQbbn68s6YLLmC+EaivBCyf7Mx2thfUj6zR8lneL8nCzTB
Jsrxk6zllXFmE7OqkCJUe+AYnN46Dq8l6IvDUIwQsfOuR1kYUakj0WvTdcbL
i4W8CeS1abh7fBbuds/ARwXm6N+xCi9vsMBx36XY5yqnNUymNopG9D1xx3Ex
abZ2pyU0ltJYJsZuZzPs0eLSfuLSQeLSyRB7nA13R3eYPy6lBuM6cam/NBzH
MzZhT/wGvFkZh9sVicSlZPSVpkFVkomzRdk4WpCH/fmFaMkpQ3VOLarzakmr
VRGPqohHVWglHlXkF2N3VQX2VJWio6oYHZVF2FtZgL0VOeiuzMbJhhxUrXtB
+BqO5Tyjxf6mokzI2Q2XCjnz50j0V8r8vxE8Mhbr5rwv7I/q7J4iCx+m4ijE
zzFRuEbMSyXMv2/kqgDhlK7ojBB7ocT1Znm7A9qMBzOcRv7gCbFnhSKFUDc0
2u3pQxizjCadmmM0pc977uqB0CXOqmybDVKWDXfuCpHSLINUkeZe9+MtJ+OT
9HE4GLiECGYpDgPzY4ObpWiF1+plJbdYe05pUEi8cl/D3NLldEjHCHXeTqj1
dJKp5eaEMg213JHG1LLzljvKqNWd0nQi1mk9Yh3tCaRjBLUSrZ5XbtASp7eM
pcxEH+ciTURCz/6Ht+CLROj4ZHn14qzSiZBPB/Gjuglkj7IFkDKj7xqM8JdK
brxpILIhDlN8lPz/uNdIjrxjl+Udl+VvkfvknVUs7/LXTh1aZaSMqISiJ5OL
N1anKeRSFw2YYNkOI9HkS9E1dByuU+L2QZYs80QhbZ/iD6Spcg8EwSoRrvqn
6Wym/yvsOjATvygyx2vErssbLXDSfxn2uy9CoxKi2old7U78uBi7aTC9djsv
pbGMaMXDjEKbOQ0LyqhWoNtzFQ77rsHZDQ4Eay+cjvTDtYxg9BVswqtEr9cr
dqIgzBdvV8XjncokvF6eghtl6Xi5JAtninJxpDAf+wuIMgUk3kqq0VxcR2lQ
DVGrBm2UBuWnpKIwNRkd1WXYW1VCowj7qgqwj6jVVZ6OA5XpOFWfifKgOWKV
lueniyUzOa5zpN5fIzn9brqBSI9+q4QrNbVEKkRh6g9KKvSlUhiQBd4EQR81
dbjw9p1WHfoJWu1SdtF1mHBz4Z8i9BR2XdVckdllpOkKNG/KjJenmUzu22Dp
PrDT1k9V5rVDqvaMlErUffJsNH3yVFEW3qLV2q+yx+MXKSYUulYyy7iDE30d
pulqyB3yhom+hsZyaKMsq8HbBjFOVqL5apsvhTMKY6WUWTV4yqqwzJX45uwq
881B6ethq6UIh3r7KMU0K2TYPo9K95HYQ/g+TpLs8s5xKAyYJQqSLKC/47lT
pyfnle5N3L9HpXx/Wj4eo0mpiGv/okD2qELmGkvC3xboi8Yuv+Td8TnyQQ3e
HvGWkITj8UrkeFFky/WZKnDB2xW5GM2rN4JrxClOn5IVrnEVInLl8yK48eu4
YvEy/YzblJpxsvBn0ivf79LaRv6K6XNKq6mb08jlSlUv4A/tczGwcxWubbbA
2UAKS65LUW/PRbjdzi/R7Owhfu0hbu1x5rFEFx3OS3WYUsuw18WMhjkFPAt0
uS2nFGwVjvlb41CQC46HeeFqgi9uZKzDq0SvgZKteLN8J6q3B+BWaSzRK5kU
YSqul2XgUkk2Thfn4WhRIQ6WlKKnvBL7q2pJ3dWitawWjRWNqKKoVZSWgr3V
5dhXXUKjCJ2UM3VW5qKrLJXek4LDlSnYn7uFTD5OLPbywhdrgYZAI+zbZCw2
P6gjGO/8/H25kS4v5+iMFswSRQZepSEByMziNXxmGwtEZhGxSpfpQ2JQXvaX
K9z8qE0q4dzIKT/cZdLttezHi8Fa+eGVp9hlqhxLNTq1dOY8yX7RyoE0v62q
jsj8O+HcREtpaih3pNwhmFZgt1HpHSqaGt4LXmyK+/l6os3B61HTUe/CG05X
y7GNv3flpoaahoa63ANPx1B0v2sTDadtsd1e7u7attYBrT6OqCHtyKeKZbK5
ENnckOPkgQxHL6Q4+CDBXmmiYxso36SB3D/H3VfT2JX7UJaQAGv1HYXDvD1x
xzhcjJ6IT/JlnS1w26Pg9pLoFCo6HJhyGYO3LJ5V2roeUmIbCcfH3B6lwlCk
YF9y51Di26+4VZoiGnkrHovG1xXRyOcfT4WPQ1OQESrWGgp/XOkh840BlK3w
TV3CYL7tXMlF8REoJXG5VymKv5og7yb4HaGHDyUJvctp4wWRjumKQ5Tj5ENF
vNPyuinu9szE7ztm4u2Y5egLlanX6cHicSHRbCGx7CUai3SYb4t1/LHXeQlx
ja6LQa8l7nW6mqOLuLfffTkOeBH3AmxwYr0Lruz0xI0EP9zMXIdbBZvxZvE2
vF0eiWMpoTiRuhXvVKUQ99JxvTwLl8pycLasAKcqSnCypgIn6mtxtKEB+2vr
SSHWoqG0CnXlddhH1zprStFZXYyu6kIapDSZd6UJOFyeiGNVidibFiymiPV2
qdsoNNJ08lrb3g1i/UYcNf2ZOhsrNhIHjTjE8SNnXnwK8Lclcq2bv/+TWjU2
KRVCXgvZo5y+bNdm3UQN68RphwPinNhghvcY9SZfOSn5YdZdfEoxThti3ZwF
ffF+of212zOeakJZ/WHk2g2q9vB0pa1orMJA7t7LrewEA29vWGz++OJWPfyt
TB8PCvVwJGgxxTY1A1cLBvJjg9tqMnaTu6WOPpo0rUXXiHaibT4yBflkGB9S
bPZ2RKOXIwqdXYiCzoKCRa5uyOPD/c7eckhzRBRJyhiWlK5yk0JuQJng5iDo
x5ti8h1HiOPA3bxhmsLdlfiJ+CBvijzf6obKp5X1Tq4qMH75NAf3UuGuyr1K
V2Ven2rh7kSGGvp9wa1gWVbmKrJSOW3DsvI1LVl5Imws6gOMUOZjiAbO2RT6
cRUkx1He0ZkiKiEjRM4WuUqWmEzPFv8xQl5yFfGdNDkreVSrnEwZ+uzD+MPz
+YErpmKJ9p32WXindjo+z1uAG0S9nrXLcdRnCfa7LSSK0SDq7XWmnG2fy2Id
X/q6hNi2lNi2lNi2jIYZ9tPocjNHtztHvdXoIMNIoc64HumJ/kQ/3MoKwRvE
vNvEvJ+VReKNkmjU7QjGO9WpGKjMwPWKbLxSmY+Xa4pxqaECF5trILU14FRr
Iw43NmBXZTVSY2Kwq7xEMG9vTTn21xRif3U+uom5PSVxOFwWi2MVsThZFUfM
C8T25cPF0gTPGuduvMKd4TlFrPJdjdYTe/t56x8LA87NNKwTeZqRYB2vKAlB
Wa0lKHdpMWyvsud/rzbjJqkZp6mX9RUY2f+UvE1h4XnNFbkQMvwJFsYxCyNz
dHS5q5SOsXSlolPpIdqi1UM0RvQQ7QxNe5KRcpNfuX/oTj351HqpHj5JM0Gb
x3LRQLLOhRsIEheJgczQhn9rDct/FcAGrd7ERjtLsezV5OUgOjTXeziiwpWZ
6IoKd1f57lyR7ix32UhwkEVnFIlO0e7HTW4omcANJf3o0XaSaNDMyVS150hi
5Gi8SoKQRf75xJnyXHcr83tW2aam3dOXqxTMyONKv7A9xppmksxIruML8UnB
8HPlaCaLT96H9VaSHvpjSXySB+DjirxDgqvPSa5ThIJiLPEKsJqR6mqKmpGc
7HFQzLAfySeK0bV+LM5vH49bifQ7cuQ6wb+aTYYSVdGaneL4GNmxsDO5OAWP
eqfibts0fN04Da9usYAqxAxn/RfjkOdLRL+F5Bs7XV4i+3S5LKLvFhMdl9Bz
Xa5LdbyJjsvQ7WamDHP0EC27PK1wMtgOqi0uuBHphdeS/PE60fKt/FD8jGj5
HtHy/co4lIQFEC3TMFCdhZu1eehvKMaNlnJc31WNax31uNLZjAsdzajPy0Zd
YQFRswydtRUUIEvokQIiUbinKgsHSmJxuCQKx8qicLIiGudqE9Ec44EtZsPF
FKXYyDtxWaeXeBsKzSHtkFcNeUmMt9zdK5IV6O8USv6mWN7tyEHxCSXaqgS+
fVrHE7q0juho6Dj5ifL1YJ1x+MJpw5/FymGap5Ry/pmnuDjzCS5G+4WLZpCi
7yv39OVuj6Lpa490tULu7Xsxr0U0fSVe9teGJd5O9w3V9PaVeckZYdDt0CXm
j1XR+qId1+MqfXxdQjI9ehoaXeXGrvUyN5maq8iN17lqt/Zl2bqGqGmDFi9b
RNpbodrDXlCS/wpBnYejfJtTUObugSI3L+S5rkWmiy9Snbn5TSBiHeRmnzEu
m+QuXOpWbQFRSPL2QqL1WLFawLnh0U1jRfn+T5QPSumzhg7pn5mipfVem06x
V9Ohmdl6TD6zzgfavmtUWrwqrGSJyqUX7p90N0uRqKnyxuDr0eJv3uHUlrFi
nwa37UhwmSKq3MxK1lhcw8wVNc6RmjJMnJXMSv5bOMxSZu+uwDFikZqreIMZ
BkJ/iVNArKe4qwW3+tDQUSkfnZ0s/paIlDcbr+fPQnewBa5tNMNFkjDHvV9C
t+sC7KeAud/lJaLgIhqLaSyh52m4LaWxTBc9bmY61jjgbo5OtxXo9LLG2RA7
vBLugv4oLwwkB+CtrPV4Jy8Ug0Xb8H5pFN6viEd3QhjO5cbg7cZc3G4txFvt
ZXhjbxVe76rDrZ5m9B1ow8HGGjQVZOFoSy2666vQVVuG7toi9NQWoLsmFwdK
43GoKALHSiJwklJPqS4Zl5qykOg6C5uXPYeIFXLAZIfGkqPCcyxaA+SFTBVl
0eplt8/yDcWBOM4Ledp4bZVZKUtULoJqS1QRFIcxDSmtFCrk8OShv4YjiDhF
u1jXF2w5SibkvzVSE932nrUltkZ+6H1KtI4Y6tvKf+lW0HRrf6Wg6VEduWHv
1Ccb9qqb9VZoN+sVfZqlE0qzXtGnWVB2K1P2dpjZiseqOAOgWW5+xq24HxZz
B71F3HyVm/EKfta7cDtubso9StOneahX82oSuWvQTLxt9LRFprO1cvs9oohT
6e6GAlcvVHLPFw9vFLivRY6bHzJcA5DsHIR4p3VC2cao+296k7L1i0BSYLTo
r5iy1l30HmGm8B5O7o/P62TcVv1uxwx1QimrWo6hoiGrEksvKb23jyhOdZex
KJr+vWaoKSuzlos43F9Ro2zJMfDZFm7AI1FSeIJgdGD9GOwh5hV5GtLnNxDr
e5w48tr4EwUdseNqhCbBZAYzs3lrydFQ+fwSr2P9qkg+r/r9bmV7CbOWvQyv
l19QVDkXononoa90Jq5lz0TfziXY5WuBLp9l6PVZhINuCwRzuynT7HF9icYi
HCDmHnBbQmMpUXUZDophRsOcssuVOO5niXPr7XF5qytuRnvjzRQKmtnrMUjB
9H1BWw6m8biYG4kDaTvwwa5CfNBRive7KvHegToMHmlCX3cT2oszcK2nBRf3
1uNkWw0OkfbtritBT10hDjBlKZM8WLgdB4t34kxlDFSN6bjckodjRVEIsxiL
jUue482mQnewt+OAyp4wwWWy0Cy8knONEvvbKfpiWzTPFxdS+cwjHxVmjcsB
Vta3SlG0XeknwMHz4GRdJiwn60cnD/1hpScpK9etL019eDzbcNl/SzAVrh7T
XJE3Io7WrI6LkDp3gTqsipbqh/MofFYf5Xa6ukqv1LpjOpPVTZalGzy0uHul
ROauaLCcLBosf5jgtU7VGZpI3I1h7vZvN3d5fHy7vtgEzM2V1f3VP88wQbun
BZpk7hJn611W6oxU+uXKzbaHGiyvUiSxlXyX57mtOmrcRaglKnNe6kzeVI61
HGfz3X2R7eaPPA9/ZLkFIs01GIku3HBuo6BvrGe4aJ+b4B+JJKXzZdqmWKS4
zhfd809S8OPdWX/hpdq9U3C3c6acyd1Q1g1eV5pr31La5l5Ut2pS/rxFm7E4
QaXeOS9a5xJ9P8/R17Rp4vZM3P5rSAaP1chgpm+xlyFy3Q1QRe6EFxXV9SHt
BDWBAm2MIofjlNMmXE/ibS4cTRiSnHrx9nGRoB5R6MvUVZkOBV2i7zt1M9BX
MhOPOibhs7RFeCvcDCcCl6KKUtAGJwq0LguIsguJyi/hINH3kBiklYnCh92X
0liGwx5mOOJhjoOeK3HS3xIXNtjh2jYX3Ir1Ir3pj/dyQvABpagfFG/Fz8sj
8fOaBHzclIHyiPW4s68Ed7rLcedwDX5xvBE39lXh1UMtuNlTh1cPNuJyZy3O
7qrCsaYyHKwrwkHSzQcrUnCocBuOFoYRdaNxhWh7bVcRrlHkbk8M5o1+2EAj
3Hy42GjNNWw+ncM764o9xmtaQ/HR/JuiJ5mBWJAV1C2U6ctU1ujgRrUOVlLR
HiXUij86N+XJP4h2Vqtmf1Gp2V82RV+98U9KUxUuH36KywvlPyb3wgunzOcu
kDxW2AwUhyX0N8bkCFnM8ljdJlu0yCZeq+p6uUm2dKXxBHGaRtMJ6TqNG2IM
cVu0yC4Zap5+Tm6ePtAeljDQsD6Sua0qdtlwP8tlKh42GSrtsQ1FHxguOH2c
PAlNJLuaXFdQbF4hU3u46JuvobbcR1+50/God7NGrZst0h2tkeZog1riNvO6
idcyPVxR7OaJBh8PVHj5oNzbl3hNIdk1RBdpbut0DiNF6frHUjrWcyvifSOQ
SFE5maJy6qYkpG9JQ/qGcOQ6jxd1J95BxhWH78mEUtELQ1G5X96xInayMM2Z
8pLSKv3/U/bd8VFeZ9b6kTgxYDqIYqor2PRmU4R677333nvvZaQZjXrvBSEh
JIo0FFEMoslgwOBuWCfrjXcT7+d4w4ZNdjfsJud7nvu+MxLE2SR/XEYgzM+a
ee+55zzPc88ZWCGXfH9ga+fP4NIZ0s1TvnU6k0uzmwm3MplP8wWZOLOVOk5d
ouXUM5WuPDfAp06cXGHhWlW/z0tiWJR7CuzhJbZ2u9zaZElwRj6dz0pb+17t
erG12UBKk7UB/5y/ER+G7cB132046/I22izfQqbhFpQabkWVCZ3KJHWPWPLa
gkHa2kO0tYest+Eobe0jNly02otTbvtwzvcQJsPMcCvelqDSCZ/meuDTQl98
XhqCz5XR+LImGV81Z6ExwR+fdhTi54NKfNJfgTMNJThVl4tPjzfg7tFa3Dis
xqUuJU63lmOkvgRHqgswoEzHkaIwDOX5Yoxg4kpTISZby3ClvRLvddQi2eoN
nnEX29t/+wuIIFKt9bRklpNlsQilJHf5/T4eOE+Et3El6rMsqRLFgTc6Mq2U
Jgp0ZJrfy64ZW/uYvKX5veXB2pltOG2oGEdUXV6Nx2de7rXd9+LfubP7n9vZ
i6dNzt/YNJnmHvTzUEcPzc3aPp3J+WWVbIQvm+CfUczY5bzD64QJ/iy2ONdb
rbkiGZ3rNvkVrQ9+ybQPvmxwPlXsHnInycL1QfiBA7/NtNOX7rS1L5Gsq2sk
D3yuYZ3xewP1vMlp1Zrv0aUkqM32aPOK1cy9LfYJu2G1xUGoLA4hzVja4NXW
xrNQb2eqZ4R6e3PU2Vuh1sEGZbYOUNo7odzeGSV2rsi18UCqlTdiLAOQwL0c
m0DECdodIc7tFD63/VOQwWaxoRnIsNsuRoIm6DzlD/kpYbXwrOxZL01ET84o
YfErWwiNy5b3PMndrj/z9rN0wYcvNeRLtuZf0rnN1op3dbR7nojC4jkJVnAs
mPn8bqXzO57oIZeymH6XPUe/0wzl2YUDP53Fh7iemfhjtf0ccQdIEzZfuvOQ
v1i04nWjC9qgQdrfT06swWTlK2J/M/Pm/f2oZjX+VbkWH0fuxJT/NlwgdXTS
fiPt4TfRTcd3Ne3vYsNtqDXajlZTOrJpfw9bb8WIzXYct6fj3mE3xl1244zH
u7jofwjXI8xwN9GGlIwTPs/zwBfF/vhSEYaH6lj8vCEVv+jIwbmyeEyoUvBJ
XwX6CuPw6VAlHp2owycjNbgzqMYN+vNLnWU43VyC0dp8DKrSMVgSieF8P1yo
SsH1llJcb6vE+SYVJpqroUpPRrz1llm8wfU2wnfbj0WRmaGQr0wV0DtYbDkX
hTaLRJuH33W+j341VqpocZuHP3m+CsGkW0wzVEvbW1yJaJULyd1yxYpPbGZE
Gu22lpkRPxkX5WOBn5rra/hoeJDhO29me+eHyLdKeunWCWVpW8/WTSxse3Xj
ZJZf+NWO1ELN3ZZjmtuNQ59lBUZOnC1r4TACVa/eHM0lZS9t716dS71wqKct
zg71Yns3zHCoXym29zXdFp/OMLhMW/zidIbBRHdwymcRJod+n+aqjwe1S4m4
6EvZBW187Vlyp+f8gl8TSg64bEGD5W7Uc4aB+W75p7SXbQSnF+tsqa0rOVvy
Pi8zP4RwwwO0z01JW5uhwd6MNroF6hx4o9tC7eCAMnsXqBxdUObgikI7D+Ta
eiLT1gdJdoGIto9AnGOE8O9N5nwL+RRn/94szi4ICEGZ9QKhd7m5+gxR54/u
0owAwSs/VKvWn/b6oI3+G3mj/0Le6F9kSv6pbP3Mvim80fkkHyOtx+KAiTpf
++YbSn+JqGdP62x672i76yWI052LsTxPy/VqPsV/UaS96bd82v+VQOnJyTXQ
KF7Do451UrrujF3+cdEGfBm3nUj6Nlz23AyN0yYcs36TTuw3MWS5EUdJb7PO
bjfbijLjHagzJ11tuxPjzjtx0nkPznnswQXvd3A5yADvR5nifrINaVcnfFlI
RLw0EP+gisDP6+LxTWs6ft5ZgIlytnV3xWRTPr4YrMDPT1Tj4fFqfDRciQ8O
V+BaTykuthdhrD4XRyuSMFQcjmMF/rhUm4PTRNbHahSoTo2nXV6FicYqTLbX
Y6QsE767FsJ9y0/hTRo7mEg61yJY2OSa/FSkHAUZrRXO1UzS+SYlXzXmk5xr
K1/JRJ1LZHwj8N9nbvVGuVvbvnx6EOX06me3t/YZ4eeDba1vSNdjcHstJtuW
G/1t27xD9x05okS3zXe88ZbGydB0qiYxe+Jyw4Dmfu+Y5m7XCd7yV1sTcz+L
dPT4LMLW/WptZIbmsrJLai0pumZpzpR06b1AO75L0HdtJgXtdj1puy/nSAFO
FPjLeQIilEJ5p9DN5be5gavxgAvB7zHCrZRsG3nLty55ppz2KHUFGi212/xH
dKJzZMlu3u4kz2mj622CShdx845IgVWasYsobXna7pUWhvA32E9nnIXQ4/V2
ZnSuWwjeXk1bvtaJDW1doXZ2g8rZXZja5jt4I8fBD5mOgUh1DhVhV3HuCUjm
c92Pz/UMZM5IEigK9ESn52Ixys7kjYOvBIHX6ll5XmON3jrpz0TkpBxE0Tpt
78P2yb9REAGUtzxrcrZNZqtkrUvo5ShJl/P5zuU8djzhx5BPHSaXeVaLnyHw
M5rHBPtE4fXi2PpInP+83Zm08yACP65susvOHvcqSHOXbUB7Em3bvDfEoS4l
Ok9vdwzoQ5O2Hr/MeRMfhm7HNZ8tmHB5C8dt36Rt/gaO0uE+bEXb3+otjNq8
jRN2W9BGhL3FZieKCLo7HPbghPteXPF/B9dCDuKDGFNcj7fBqRhbjCU4YTzZ
HZrMIFSGOqEq0g0fkB6/WZeKkkgv/Op4JX5xQk3bXY0vRlR4MFiOW30lmOws
hKY+G6Pl8Rgm/a1RxKIi1h9nqkqgoXWjrRrXW6twtaUal1tqcKm5BheaalEX
HwDrbfpiywfseEHMkSXJxJ1dSrOJuNc4Su6l/H6zwwb3qu7Syc4Xq1mbM3Hn
PtV38unOlXAe7eXLKaISrm3Ca1MOL804Bq7K9Rsuu/JtuDvrxEXqB8Mrg956
5Qd7VD9E3OWt3/rc1l+pK4Xv2viWxtnIcqoxrXjiZteo5vNjE5rPhs5oPu47
zTAwcaGm+0FxkN/TUtqb7TErMJm1+OlI6FJ23P/ed/+G7z32bvjeecf67623
rvvefPO6b+z2bOdYkas1CSWMAS1jHCgyprf4/wKBq+qAmG/inLY9jfeRg0T4
B766WvITOSaDQLOoy0mU3RUNFrvouN/Fxz2xeQ4tlQNFTGcm0xAGCBfhd8X+
V9L+V9L+V1kYwefgAVFKZ91ea2uOaltLVNnx/rdDnbMD6lxdoHTxQK27B1Su
Xihz8UWhSwByXYOR6RaONHdJtCf6ptJxn0rHfaYIgciOlCz7C+JyURfri/EY
OhZzF+EPtJ+f9HIfVy5Fn1k9o7a1+tmSumzv9fSZ/b9Yt/8/y5Cs+dklR2tY
zQMjfEuHh0Z4pEFbn+MB/nizaX6vbYqJ/U/PcvKhOfRghB9cTBgQcnAZ/A+t
RbT5OqTbb0CJ2yuo8XsVbSGvCWure6Vrhb250CBjsrDUTJfUBQYcljDgd6qX
8SBiO276b8El97cw7vAmHftv0N5/EyPWGwkT3iLC/zbGHbfgtPNWnHXdjtNu
u3DYdRf6XPcix3oP8uzeQZHTAYxHWWEs1oYwwBHjKW74TBmCXzTF4pedKfi2
LxvfDhbgVFkMrpGIfzhC+/9YJT49qsKt/irc7FHjfEMBxspTcIYEwGRNDm41
K3CrpQJTzUpcb1LiKhH6K40k2BsqcaFBjYl6Nc7WVeGEqgxJtjvgRhjguX2O
jt1zaZ3t21NNFxK2LhK1Ob4GwO87z6iKOeU0ScTzZ6+tzTHLZxHPLQphkdGm
Tf2Wc6Qvz9B91+UCDx/zbD14l9b9dZLFyKfrJ93NZ/+dGND4HMvfPt0Oe/Wt
4zs3bZvMCo6fqiEcuDWg0XzFpuMnrmgejlyaxoSB01c7M0u/VYbswAOiLkz3
HjWuFWcW32NhnGPs4zoxU0+ehec5bqZKHlteeOq1fd731ttf+d5+J+fCBE2V
RWZNaJTdMiwMSEUDVfvV2tDEb+Jttz8dLVyJx/ReaNrkTBh+D9jrnm1VRuXL
zbPxv6pFeEzsatB1M9MCNFrslqFByohRm+5mWmCyW88OKmOCBWMJGioIGioI
GioENLDB+CHkm5giwOCAKOmxIqiyMYfaxor0rg2qHe1R7yK5Otd6eKDFxwsN
3r5QewWg3DsYxd5hyPeORJZ3LNJ9WO4nC7mfEZYjJXlE5iCXkzzi8qBML0Jn
UQFu5u3Fv1UsxZelq/Gofq30KIzPEHn8Oip73HfK/hFaaFAtwb/J0MB3f8Qt
OnbETZNCYdhASziIxkhdNx7nZFXAQrTPey4aXObB6eAbgrn6G66Fr8FaeB9c
C88Da+Cxfw18Drz8I0QdWqKXiHjDhYI99HhJ1Xq+lMpTGP+tnbZok4edBmfk
MY8/hwz9+nikfBlf5L2Mh/Fv4VbgFlzxegtnnN7EcZvXiRG8QYxgI8YcNpFI
eBtnSNSdc9uKCx7bcc5zJ6747cL1wD2YCnkHtyMO4H6CCT7PtMHDPGc8KvbE
zyr88XU1I0MU/qU9Ab/sTcPX/XmYqM7EYGk6IUIzPhlqwkdHGnGntxrv1eUL
RLhUkYip+gLcairDVGMZbjSU4Vq9ApN15fR3ynGxtgLnaypwtlqJ07TGq1Q4
pa5EV3YyfHe+BNetc+C0Ywn89swXU+fpcuMtz2I+CUhpCnZQFgWXSBTwdC2j
AwsDDnfgMh9PsvD7yY8Cv6dSwoh8P/6i3ITVIYI2LlViBMJ49xP2pWNz6Q2P
h+v1/2rXTSm91Om+I0GCLined8nCJcc3S2ksU/mhWRMna45obvVd1Nw/dkXz
OaexnJ6R+SNBxMTVliPfpLnuezqaulyX9cPHmgh07louII9vO/EtT64383PI
eQPsMaNNwuCiSbWc3M7TUmr7Ob+NMlz9feDBVx9keXpNFQfEfhNvvePpaKI+
HjNdZsikN4IdyITj+4N18o86V4og46KgXAz8OH4Nmq12oclyl6APdRzFYs6Z
F7v4WoXJLr3NUh4ZZ5EZa93epzEi1+gQFOaGqLE2QorpQeTS15VWZqi0tiB6
TRhhZ4saJ3s0uDqh1csNHf6e6AryQUegPxoDglAdEApVYARKA2NQEBiP7IAk
EUDGsiE9Ig8ZkfnPpLAoUovQXKQg6ppKm2alaOto0jZID8aoqPPyNcGX9dZI
QvywXPaXs6OessG7FiJKJPPJr3UKQjJ2l4yGF4hhOv5I+PRiBjHgtwBFDisQ
b7FaDLrxKad6tmhAR0me6YuzxJdxYi6VpcNZWTrwIAg/zP8pvG+WTatbQR1W
TYMD3xYeXC7uNz4hIHlIkP/r/FX4MHwzbvi9jYsem4givEFU4Q2MOW4kqrAJ
51zfxnn3zbjotRUTXjtwwWcnrgXsws3g3bgVthd3ovbhQYIRgYMlvsxzIHBw
I3DwIXAIwtcNEfiqOQGftmTj044yPCKKUBEfgkfDjfh8qB73epR4ryodZ0si
cY1ebzUU4v2GYtyoK8a12mJcqSnG5eoSXKoqxXla59RlOFNZBo1KgVOqcpxQ
lmO0ogLHKpRIc9grav/e234Kl51LELB3PmL3zxYt0RCDFcJfiadQu+XiILf2
rsSKzA3hHvAJgSyPvXFtlasH32nH57U1Vu1tZm1srhYU2FX+geREhs84EYFd
i2n9bAMmh1by/v5bqYOME9XP4YQuUq5+w6pXNfs2H+Qknau5IQWaEdWIZrzu
hGai5bTmSjfnmFzS3B8hzBi7KWeY6HLC7rQkJ/+2xH09HvNDy24L4uqrNAX0
qHYNPQ8rxJQtgyMDJvdGWNbWEagWzfClYqMHfi+ZhnG0EyftcN4JX9Pjw2oi
agEe8ywXbxCW2RdX/1ju5gmhcVFOLOyX4YJjLysW4qTnJjRb7pThYqeAixqz
nagy3SmhhY3wrVXKS6CFCaGFybvIPWSAfCND0SistjISQwCpJoZQWTJaWBJa
WBOy2Qqh0eLpgg5fD3QHe6M2IBC9EYHoCAtFU2gEakKjoQqNQ2loIvJDpciS
rPBsEhk5yIwuQFZMoS49h5Nz6vMV6FVW4nLGVpE79FXRCvypTb7gNCwPahzX
1hZXyPbZ04mFDBfaxBwtZPD9/IczvMmF6EiQhgFOhy9ElftKZNqtEQObfCmr
1H4x8q0XE3rrCg4/ZsVBLKKIkKPIghFktgAMPhm5gcD3sVgvfyMuPUisQhCd
bjnYhrWRdnRnWGsvsEykzLSHvIr/Kl+Ir5JfxZ3Qzbjm9xaBw5vQOL+BM64b
cc59E857vo1L3ptx2XcrLvruIBaxg8BiF94P3Y0PIvbiXvS7+CjhEKGiObEJ
W/xDsTP+ocILnyiDcVcVjwe1mfi8JR9fdpXiYb8K9akR+LC3Evc6S3FZmYj3
yuMwVZOJW/X5uFmbj+s1BbhaVYDL6gJcqizAeVUhJpRFOFNRDA2tsfISnFSU
YFRRimNlpThaWkYMRYHu/AKEHVwtxnh4LjZ494sIJNAI2LcUkQaLkWayEGpC
YW7KSg3Dl4RRFdcdmFVwV+HjDGm0h0GDZwH+p37GfRvtfdJbWqBYL0VSMINg
a3N2tn24QVg84+ev4NHk6zjV/Xrvqxvm/r2IoXpebOgQY7X+Bs2uN/ZOBVhF
TpRF1UiRM5yCpDgmRc40jGsutp/RXCO2cXtIipz5fFyXgsTBld9kuB54eilj
udQIOyLnb43I84P0wNwrX4d7+WuE9zI7QXGOFqMCz5vxjQ4WJTNjZnjIgpnI
YWLFnL3FzzbX6tme9vdS/oH0Uy6VGBgBq8je4vfr9lqpXsnDoIel/C2uU/4q
Vx9ddtsFgjSKeMEdRDZ2kiDR5r7RMiYk4dRKKzlZUEKQIqN9AkGUInuLy5VG
hB6EIMaEIFbmAkHUdjaCazS5O6HDxw09gZ7oC/dFR3gQ2iND0RMdjvaoKDRG
xqI6MhHKyGSURKQhL4JzKnOQQzwjNyYP2XFFyEkoFsFHnDKjzlWgrUyFkeSD
YvbgcuIKcedFGDb1yCPTw/LEJk/cd0xnnrImYasHLYp8LxOPX8gZutrrnEKb
EIoMhyxDpftq4U3Ak/VswNzrNd2SZBccpdSSnMUwMouLF7P4t3pJAj/KGfTd
5mJMRK8sFDMxWuskviMniEeHXGfjR+OUfOebH5d+No2THEUfFa7A96TPvye4
+yL+NdwO2YxJP8INjzcx4bERF0ilvOfzNimQLbgasBWnfXeTCtmB22G7cCdi
N+5G7cX92HfwceJBwhBTfJxti48K3HC3KBgfKqLxSVUSPq1PJwzJxRedxXjY
V46TROqO5EZisjwWNyqTcbs2B+/X5OBGdQ4RjxxcqczBe8pcXKzIxUR5Ls4o
8qApy8dYaQFO0jpeUoiR4kIcLSrCYFExBgqL0V9Yit7CMpQEuesGDkJ2ce2S
Xt+dD599y0nJLRDtCt4G7dyu8Jkr3nw+XLkzyRE2PIvFM2V8hPzb8/foT89I
/9JixyfCDRj4coNwxH7y8au4d/oNDDVtwuTom3h09fUHGREL/1o3skJ6Kdd9
R6pVbtNBxyq2+3hl1zf7thtOZPiUaZRRjZqqhHZNQxonVw1oeguPaoaUI5oT
VWOaM41nNJc4FqhPigX6+MRNDlObuCFSq6KeHo9ahsd1S6UZuD596UwZkm2f
BiVPgCfNK/Cw5GVxt5xNFpmYMTvmuhqTEIWcH8kDHSxeWMjw+8qEjrH5UtR8
eWx3t7RhxrRuZ2vF+zY5+KYkWhiLL3PbT86NbKX3XL0InyWuRqvVDmIgO+Xs
SMIQkeO3Q4chKmMpnqpCrF0iAqjU+B1kHjyIctP9JFykmmcFiZUUYwOkMA2x
5shIa9Q42KHR1RFtXq7o8fdAf4g3BqL8MRgXjKrQKPQnRqI7LgZtcfFoiE1G
VUwqymMyUByTM4uUSp7eW6RV8pFP7CM3sQR5yaUiOE2ZrZBSqopTMR6xDJNx
i3EteYXoev1vg8xfuex1RG53dEwnU0lOyRKO/E62hv1Ozu8T4iVHugPwftJi
qDzWoc1vFfG7ReLxZeTm+3Lc7WRqkUgYUm0vroj/mKnILC6A6iWL7qdKXs0u
2qnYBWKOgUU5l+35sRclOv7/6pFPGOaOo7JlBMMHm+m1SPDxeTZp3pKF+EXW
UjyIfhu3Qt8iuNhItGMj0Y63MBnwNq4FbcF7gdtxJXgn0Y4duBu5Cx9G78aD
WIKPuHdxJ94ANxOtMJVG0JHrh/vFwXhQHokH6jh8VJeMjxrTcL8hFberEzCa
G4q6KHfcriGNUp2Jm1UZuKbOxKQqkyhJJi6WZ+K8IhPnSrNwuiQLY8U5OFmU
g+OFuRihNVyQh6H8fBzJy0d/XgF6cwvQnVuEztxiNGXkItZ8M/y2SZ1Onlli
dzJ+xN33rUHEoWXIMl+IekdJpzPn5m3BNaZJOjn53GD9wsMN7Bz0x0b57OD5
JC51T8rtDIYNph2sTx4SbHz0KiaH38RQ4ybcO/MGnnz2KvCPr0i65fAKo79W
1JDxo/Qv4seKBas0m1ZvnrLb4z4R65DNEWMPnc28NCVhjRqlnMzUkN6nac8b
0PSVHNMcFclM45ozLWc0l7svam4OXBGhjJzM1Fva+K3aZxceEN8S7uxsddWp
/2wg4xHZW0QOp2wNeU1c2mXTVn6TGHcZS1gE8r1qrhpxIYRFDeOKih5Xbewd
36vh8WxO0BNYfGwGFt+WommefPwaHl18XaoKcfvktGTHztF3fyROMua1CS2W
jCc7SNFsF612bSIj54JWGu/4QTzJP7SPMGUfFIQn5aYHCVMMUG5miEyTQ0ig
xfGzNQ62qHdxQKuHM7p83XE42AtHInwxFBOIo4mhaE+IQm9qLA6nxKMnOQmt
SamoT0yHOiEbioQ8FJKMEWDC0WJERgqTi5CXUoaCNAUqCFDqi5XoUakxHLNZ
3E1vDVgjXAgYmwXH1QaD9sjzrm36ugSCmfbrzAt+Uy5ZJX4jW69z3F219zra
fIvFdb/rxKfZEJkFObvmz+ylytJmFqMHgTu3VVnpqLlWZTdnFpMWvVBUO8xB
E0HLUX/JmpMZOpdF+ETlcU6WteL/rlc+VU+ues4hQ/Y6b1iC8Zi1eFK2EL/K
m4+HKatwP2YLpkIZUjbiauBbuB78Nm6GbsFkyHa8H7Gd2MgOTEUSQyFWcjni
IK5EGGEy2oJ+Oju8n+6CW9nS5dvbJUF4vzQYtyvCcbMsBB+oYnBLFYcPqpKR
H+SKKXUabqjScFWZiisVqXhPkYaLZWymlIYzxWnQFKXjVEEGjudnYiQvC8O5
WRjKzcYRtvvLzkFfVg56snLRmZmH9sx8tGYWojmzCMqYGHFZgRVO2G5p2pmJ
eNzBl5BhNAfRRsuQa7kItY4viRFY7q5yZ/uCDC8MLdxR4U9ezElpXUfOyja7
d9fLbOQV3g16szDUsEnvRTy6TDvjZxKc4CtmKgw9dAr3LP97SiIyyhTqBI6U
E/cTyUl83QuTOzbN67V990X+N7kOO2cGCHHO4bolGzRvrNg0ZbnZbiLYIHZG
VFy5JteXAMmcACmSAaldU5XSrWkkfSQisxQjmmNEbMaI2EyISM7LIjLr7omb
d+rTM56OBi7FY8Ui4VMpoiNaZdv8bjnnkAlOn2y+Iiflfp6/Cv9YuExu2izA
CTnrsFn2qCyU8rLkdyAeTQRUA0QYeYztHpFE3oCiIsWbblTnSyl9BIzq2mw4
Lk9zPOyE5ADOj/cfaxYTIG0kQNr+A3mcMwFpBwHRDgFI5Ua7UGS4FzkG+0Wd
pXwGICmJ4KgsjBF46CCBkRXqnO3QTOqo08cV/aSOhsJ8MEzkZiQ+GMdSw9GZ
HIv2tAQcyUrCkcxU9GSkozUtC3WpuahMKUBpYoGoqzAYFXA+HKmj4rRiFGSU
oyRbidoiJbpUlRjK8xPvx4kIfUwmrRBVOnbzFo+m7gKqDEpyHpzk5yq5fzPT
Ydfvfypahgvxq9Dsvx7j0SuFgxuTcNaubDTF80TcwZnZ3GVXgAKbxYLlsFri
V4Yenr5mh7daxzlsmkC/viT8E5tcpKnsUyJfWjqltYUCqSEp14pG+J7PiZV6
ntP1lm6p3oJGdn/Rx+8VC/Gv+QvwNQ+SJ7+Be7Fv4XbUTrwfuUOg0FTEVpwM
3I0LoTsxFvQOTgcfwNkQA1wMN8J7kca4HG2KK3EWmEy2xVSeJ94v9MGDykh8
VBWDT2oT8VFtMu5WJeJ2ZSLeVyWhJd4fQ5nhmFQk43JZEi6WJuF8cRLOFSXj
dEEyxvOTcTI3BaM5qTiWnYahrHT6WNNxOCMDvbR60jPRRR9vB63W1Gw008fc
mJqH+rR81KbReRPkjeA988T1qai9Up83Yv98xB1aIIqNJZZzUWC1CNk2y9Hl
OV/weyY9XDXnUgHfenzGl4W2w6Pu9bjXQ1po6HVMDrwpagaTQ28KokPow/M/
jzbQLw/XE5Lgc27ursXjyZd7bQ/8zZPZMhzl6b4jRf3N1UX9PejVx6Nj6/HN
kVWYzFv0eDj0JY766z306o+0ECXnimwVGLVg7oL6dYvWaYxeN5qy22I/Ecbx
NkbJmijOOrPgiKc8TZpriSaLs84Cqu4EO8ZdTfQt1Kg46yytT9OYO6DpKjym
GRD5rKc1440TmomuS5orA1cmznZovklyPvT0Ypy+yGT9U5WcbdYoR91oY/16
/xyrWBVMpa/GBO0RbQfppHBonytpLCfBm5ik8vwyd964mMBln/vaWSbmCX0y
keexuhtyJOuXUqyZiPQ7R3rsA7mmw7NNvcvwB9qix93fQquAqmejWatFNOt2
HVRJ8cESd8ozeFfEsXIDiVOslaYHoCKoUplzadgYwUYGtC1t0OTqgHYvF/T6
u2OQNNixSD+MxgbiOPGm0fRIHMuLQ2tGMoYKU3E0PwODdNr25uSiNbsAdXyi
pnGcTZEcY1mMIhHrV4rSTFo5FVAVqtGuJKiqLhOxweejSTDFLxfwzaJMNjSZ
xTilt1yXaKZDq2apocSnxUc5q9AVsgHvJa7Cw9wlgj6x4zFXhxlNuDLM9Iz9
bLQ1HT5R2GcqwXylhEazGIz0Ngreyx5ebKPIbInFGM+r8F/meQpN6Hxx14m7
zSzKWEwIv0wWjANyye/4yulG0pHlslHmUlHJf5S/Ah9nLMf3RQvwL7nz8VX6
PHwYPx/XI5djMmIN7ibuwuWYPZiIs8WNFAdMpTrgZoo9fW2H66l2s3At1U7P
AB+WBeLjygh8XhePLxoS6TURnxJE3a9KwB1VPN6viMMN9jwui8dgeggaYnxx
qTgBF4rica4gHmfy46HJi8dYbgJOZCdgJCsRw5lJ9HeTcTgtBX2pdPqkpKIr
JQ3tyWloS0pHC62mxAyiyFmoTcpGdVIu1El5qKKTKclmF4J3TeuyuP2zEX1w
AcmHnwrTXg45K7ZdhFzb5ahzXYI6d310+S3HsfCVGI1ajcbAV9Ee9hra6VFo
T3wDkzUEUd20Bl+THv+HrzA0fblBb7Z0in8hN5d5fcq9JT7huYy8etLdePbf
7OBVLr1k674jRTTun45oHKfP8OrLeDS0jv6nNoj5zz8RLLDR6fXYeVz5exy6
5yeTs1+Q4hlXzVuuMXrFYMp2k9VEGCfT/R+pdGmcxOuj0uQF1E5FuqVNxXpn
EWR1a2pFEu9RTXfJiGZANaYZqTujGW8hyOq9fLU2t+Hbcp+9eFyxWDBxDpT4
I0PWzCTSmbqP4apV8hH8XzmN9BfFy0TxgzBIejdeE7UJyX9VLh/tlyQfTxJX
2kqwxY1YPv15KOB/2VqPT2Vd+UhO3/1SCqATaYxa2Te5WipF9y0jifMyum23
C9h6JpGUYYtZlrGALpIyxtv1tgnll2+wF6VGe6Ey5fUuKk33iyDpSkItNaEW
+7hEmRiixskWbR5O6PZzw0CwJ4bDfXE8OgAniVydInJ1Ijsao4UJGCxJwUBp
BobLsjBSkouhogL0FhajNb8EtdklqEgvloiVCN7lQMYyKLKlQMbKQiWaytVo
rWoQBj59/sug9lonrOmeIVkdy/lx7VyuVzJtwNO2HPcK1qA99DVcSV2LX1fo
C5KlzZ7jwj6nC31O7OW+bJPL2uL8jDLSYbmMlGy5SnRctOjEFWdGKB6o5++z
OTW3vrs9XxLzMXwh/WzEfFFJ5Qkwbl8KZtAod2IGV8xw+pXnY1ilcxWyQxp0
fEKo/Fn2cjwpXYjvCphlzcNHCS/hWvgcnA2YjTP+s0mRLsKdbBt8pQzEV5XB
+Ad1GB5VReLL6mh8UROHL2rj8Tmtz2ri8Qmtj6vjiF3F4cPKWHxQEUOaLxpX
S6JxuSga7xXSKopBhrcjJvJjcSYvBpqcGIxlx+BkZgyO0zqWHoujaXE4Qgq+
PzkBPUmJ6EpMQkdCEtoSktEcn4zGuBQ0xKWiLjYNNXGk7uMyoYrLQkVcDsrj
c6GMz0Ci5dvCWyJG1n2++5Yj11gK463klrijVJmucl6MGjd9dBJ0DYetxFXa
RTwCodN8x2aE896W52BY933GESuf8i+frGMI+5jnZHiKjo2/WaC8/Hg4b9Ff
nZGR4SpdJ/SkQM23/jxQ8xLRifekUE1N+as8mobHtUvELYwWl2Ww27QEtm+u
gttmEaZ5x/w1Q03kvmA5TDPqmQDBKKMZAYJODFsiSFmTF1zHAeJTsT7ZGlVK
r6Yua0DTQiyrt3w6QPB0+6U7ZXHpT0eD2YJ78SyRDDhPioEi1PpT9ZLpIFmt
OOx8DrEqhdW9/E68KY5yroLweEK3x3Slim+HJR+UHP94nIHDc7l5xlUTNtFi
QSFsovmU1szoGHDJ74tXZgSHb5RGFa7K1e9+ffw/xcvos9+BNsttwm1TC1tS
gPg2iXGZcFhaJeGWxLZKDPeIyz5qk71QE26p2fSbcEttboBqC0PU2Zoh19oU
hfZW6PJxweFAdxKE3hiJ9MfJ2CCMJ4VinJjWKWJaJ0qScLQ8DYMqwqzKHIyq
8nG8oghDilL0FJeiKb8U6mwO/CiVWNYMzFLmlaG6UIHWCiXKs9JQl5OAjrDN
6AtcgXq/9bifpT/NuNpE6XsWA5ZekciNFUO2+Wt0jOtpzTJRBZ8uWC0WjIvT
ij6SvamuycUqFiPaYhWfIErHxbSWyNA0l6BprrixxyaorAGZYPHle/77DFmc
IsM+GnzPh8fS+NICQ6yuTKUzfJBJl6iEL3+mEs6+CVyu+i/Z8+Sfc+bjs+SX
MBU1FxOBEmyV2a/E/WxzfFHqh88VAfisPBifVYTiE2UEPlZFEdOKxkeVMSQG
Y/ChKhr3lFG4WxGF22WRuFESgcnCCFzKC8eFvAicz42g10jk+zoRUQ7DWFYk
TmZECtI8khqJYVqDyZEYSIpGX0IMuuNj0REXh7bYeLTEJKCJVkN0ImqjElEd
lYSqqGRURqVCGZUGRVQ6SqMyURyVBUVcLlQEXXFGq4U45NM64eBspBnOEWJD
af2iaAixOS6XrPiuF9/DupuyQHxeOjNqbSNeO7lzQ66Ef8Ro9dE6tsR5IBOs
+xy7zFd8+K9x0fxlATCTlcI67m+VhzKIpei+I6Wh7nXate5HDzJsX8RjnqM4
KaWhPj6+gv993FTro8hzJRH2tSghshm/fwcyDQ1QaGKCjEPGRFhMEP2O2VO7
N7c9MHhl74T/Xv8f5l7aBEg5GjtLRGM3EpBlEpDlCbnYkCsnAivHNEO1Zya6
lcPfxNrsf3ohTvIs1XEsfq2TkExwsFo5/VSbhyehmCQF/0lkpV2IWy7yvLj4
ypWTkUBpZzQ9W90SHDrN4KdiRJ53AzukcEWM59f+yE//EbnUfk1OwtaNSkhA
9ujS63g0/qpkfD++UlyD+U65GgOOO9BuxSA2nYjNIMa5XQxkVSZSIjzzsPyD
e8RscpXJHlQR+aoiEKsy24dq8wO0DFBjZYgGe3Pk25ih2NGGyJAbSUUiXhFE
vGICMZYQgjMp4ThNxGuciNcpRQpOqDPQpcjDaF0+TtQW4WR1KUYrFTisUKC9
WIFaAqvyrDIdgCmZdOVLAcDVRQrkJacIEDvRosap9IPQhJO+S16M22n6eC/5
ZXxdslI6jIlwcerpZBbR9kw5EFiOe9RWuRhJtL08lp38+XAbRJv4ITwv5QoX
68Zj8hUm9iYudFihQypOA2G0Yl05HDBPeHZxGBWjF/fxeBSAfYx5FOYrubL1
h5mVLV3Cz4zEElF013+m6P6EpOZj4t6/K1uIb7nwnjoPH8TQARc8B53ui9BF
6066KT4q8MJHRb54UByA+yVB+LA0FPfKwnFPEY67igjcoXW7LAK3SsPxfkkY
rheG4nJeKC7khOBcZgjO8soKxbnsUDRFeKEu3Asn0sIwkhKGo8lhGEwMw0BC
GPrjw9ATF4HOmEi0R0ehJSoaTZExaIiIRR2tmvA4VIXFQRUWD2VYAsrDklAW
loySsFQUhqUhPywDhZESkuV4OepQjEtcsQYLaC/8VFi41drPFqEvPR5zcNRX
Kp8wOebPijNzRJWQp8aOyPO9E7LVDF9TuisPJN/jPIi7a/VeJHBjucIh8jx5
xFUXervPEtIM6TOF+jtRLFH3HSfx+83T6Z0p84TkwZA+HqiXYDxrFdwProL/
ga1INduNWndjlDmYoclNypaqJB1TzFFsIqLQFLEitdOUKNrKbw9sWDXhT/RM
R8lMU2RKJqd2uipEvnlWQK2mIKzxaoJv4Z0Ir3RdpnN7yQlNn2r8akFs5bfF
HjtFGorMuWYx6dL7qXRW1tOZUL1YJHWKKOd6KcpZ+slXC9cOPvd5goY731xl
OR6xkuTWCiFVtNHmvXKmlGoGosXISZ2MaDx6zgEDX9AnyJfQhDcWn+Vn5QLY
h2KAYxZzZ70FAtgeTbyOyZ43JEDTrBTq5LvKNTjqvFNEOrdabhWxzg0i1lnH
zNgaiX49g2KDXYKVVZvsQo2plGZeY/YuajglggCt1sIA9TbGaHa0hMLBCvmO
1hgI8sBRZmRRfjgZFwRNUhjO0TF+Ni8Wp4mRjavScKo2Cx3lBehWFWOkrhRj
9QqcqinHUVU5esrK0VRUDnVuuYivrchVoLKAI2wZzMpQnJlHgJaM3qoKjDSq
ME4qiCfya7zWiHk5vp/zqGAFPsheg0dlq6FJpveBBLQ2mFBrZ66L55B7if8m
f0Rc/+XciU9FNoRUCOPkbaZmfJ+SS+5Mz0YIsBKs10ugFSj5azNw8b1N/jv8
/8TXrU+HSf8dD7BelWtgXz9fAzss95i1cytaaiZq9vrTNXuuhRWtwMO8FWKy
9deFC/CzDK6FvYQroXOEkjxOj8n7yca4m+2Ou7leuJPvK7xAbxUE4XZRMG7R
er8oBFO0bhSG4HpBMK7mB+NyThDOZwbiTHogxlMDaHEUN31+6UFoi/RCeaAr
RpKCMZQQjIH4YPTHBqM3JhhdUcHoiAxFa0QYmsPD0RAWgbrQSNSERKEqJBqV
wdFQBsWgnFZZUBxKguJRFJSIgqAk5AWlIDsoFdkh6SiIyERBaAriDF8WgMb9
80SDl1AgF8P4MkGz02x0u0uzTpqQl+iwmS+GSNg+VnRitWbO/P7xYDoH1XIh
5X1WLQxmt9ewkLzFs9arRYlK6L3zK6UQ+VPc/dKfLHL722thCuklVicupTzi
XVJKPanhB5kLSEQuxrGoRUgwWY10M07m3o8Yy/2ocTdEk6cxLRMoncygJGRr
5PQvayl8Nc/YFOmHzJBwwAJRHLxK6Ba8a/G3B15Z9YMJ3bFOJZpkTqonoZkV
3KApiGzRlMR2PfSwDdRUZQ1pGgtHNF3lY3fSA+KejrC4rJyRzP1nta+lAs6e
VmqTuddJoUW100ZEIqW+YDpd8n0iFaNh+qLFNU4H+FE5hLjeUQ5dNZHUprZT
zH/W5yXZ/n0qE7VnYO2mDGsP1nNl6KP13Mf6WJpTay/aJDlknJaiuX9dtQYj
rjvRY7MNbRZbdXH1DaZbCde2olZg21ZB0hSGO4m8cQjxLvpzjqjfi1rzd1FH
uFZncQD1lgZosjNBqwupTC8HxFiZEknzwrFIX5yIob1BJO1sKkkXImkThfE4
SyTtNJG0/vI8dClJYTaU4EhtOQZrVDhZq8JotRKHlUq0l1agvkgKyhOYJiK5
6bVEiWr6XpOiDF2VhIP15aRUoyUJ6L8MNxIXi/YeV8vYzu9h8ct4UrviWUyr
lwgaS03eC7+Xg/B4gPP/lUnhwzz7xoT4QTqTtT/DNnqP6VPTy0GOw1ocC1oo
fHu1+MUXQrgZwDjG1bWL9BnzsNUVMWsohU3wZRFR2WHC2DUD12bGMY7OrPEv
kyplrRK2aeLXCksvlpz/lDUfHyfSs0HPUTfh2mmSnNfiD+H9NBdMZbhjKtML
N7J8cD3bDzdy/XE9NwDXaF3NDcSVnEBczg7ApSx/TKT7Q5Pih1NJ9Nkl8qKv
k/1xktbxRH8kOFvhaFwABmID0Bftj+7IAHRGBKAtLAAtoUFoDA5GfXAIaoNC
URUYBnVAOJQBESj3j0CZXyRK/KJQ7BeNAr9Y5PnFIccvHll+icjwSxI+QVlB
acgKTkeaq70O1/z3Lxem9GUWL6KKtFuT42x0us3BgPdcnCRxwxf92LKaywS/
E71IuTXP7yOfC/zM822HaxzQLVfDGNC0+vIit/B5Tpxn7nnGiPfUsge/bln8
12Y3ZTyL0n1HHvt22rbyRw/8d/4Ep0MXoMhyGbJNNyLLZCfH5XKeNMdJ68Kk
m4ilNbmboM7NVMI0JykjqtzSFIUixdAcyQaWiN5vjcj9toRtexG8czZnq9+x
2Gwu1/v/PFs9K7hRUxDVrilJ6H3oYRekqcs9NqHM6P4m1PLdp+fjJQ9EqSKm
L41L9MojE936kp5cJmSnkJz1DGVLhEfx85nqM5M/c502iIEV1jK8HTlDmrvy
ZXJQbuKBn9C2IUAjyc/XsbmYzFuGh4S+FTV/2cFU87J2omIWi89ZIlPdS7Qt
H429iicX10q35EdW4JOst3HCYxf67baK/OgWgrImMy1Nk+CsmvRmwUGiZOy0
InKjd6GOCHI9QVmd+TuoJyirJyhrtDqEFvoIOlxt0OvjhFjSncPhPjhOj/qp
+CCcJnp2nujZJaJnF4ieTRA9GyzLwYCqAONtRWirUNBrOU42qTBco8YRtRoD
lSr0Epy1llWgrrhcaMzaEqZpRUiJiUd9aanIj+5UlmKwVoERVRK6vJegylVf
FNC4sPjPcstSl4ora8w/zYhz0sLYE3l+VJuE+6sSKSNaKvzLcMbTFYkynBE0
8ZFCMDULrT7L6WPn3zLKXZJR67KMXBzUy51JvunNKMZhk1/OLJo1y2OjWqfx
aZbGJ9LICj2X6Zo/y07uWLYswS8ruDG+CP9BspM7lp+nvITjgYRwPANFSPZe
1G5cS3TE1RQXTKa44UqqJy6neeNKhjcuZ/jgPVqXMnxxkdb5NB+cS/EhJu2N
k/FeGI3zwkis9HoiwQej8T4YivVFtocLIZIX2sIDCb380R7qi5YQXzQF+aE+
0B+1/gGo9g+C2i8IKt9gVPiEQOETihLvMBR5haHQKxz5XpHI9YpCllc0Mrxi
keYVJxzPkrwTkeybjLSANOSEpCDReLUIRIw+OB+JPIlOSKa2eZE02Wx61Obg
sNccjPrPxaXIeeKaAMd5/zsXz+plCd8rT2lz3+QMl9zZLP+aMMu/OkNinuFu
Gf3VE/paEKNDZSkmM0Ry699cPZNRLVz3HWmiVPhj9dJ6HLJ7IcL2rETq/u2o
tZGCJOVEcA6YdNNFgrsRurkZS4sQjtGtzpGdZ9g10gwlFubINeVgSSvEGcyI
A9+/m6X6U/s3Z9+x3mrNbYGrLvsDp2zf8ZmyOxAwZW8YPOVsGjrlbhk55W0b
+42Tmd9UiHvatzlO24ilaatj+tMsrV++Nf+CNGshF9VYgz5Vcz40UTe9tToH
duHlLF8bZXEzM6NV7bFaHOzsWtjvLQXfsd5kc5QMw+kYcK40MOJxo5+FDnsi
CR+pOjkw7JR8Ken2uhe4GKpnKxrR93pekXj48RW4m7odY967ccRhGzo5+dt8
C5rNtkg8TYDbFjF3UUMcrd6U1w768520dtPaiwYCtgYCtkYCtmYbQ7Q7maPL
3Rb9fs6IszXHSCRpzljSL4khOEf87D3iZ5eJn10ifnasOAtHK/JwtqUAp9tK
MFRHoNasxJnWSpxpqsSJukr0E7jxKFgngVuLgmO/FVAXFiEhIkJkIjQSqDWV
FYs4yYGaMpxqKUdnyCZ0eM5HD/E0vgzDPhHsD6ENL9Zl1NVKoMao8rsZoCbH
SNJH9l3ZEtLtUlfzh8GNWwRcBGXUGgzWR6PPKvF7RrDr8Qvo3yAc09stkIw/
Hm4B8H/Lltp8p4btq76bWUjrlsdzfoinzfABETyta6lAt0elK8U8BrcG/jV/
Ph6IuxRLcDV8jmgLnAteSQhrh0vxjrgY74zzCW64kOSOC8keOE9rIskT55I9
cZbW6URPjMV74HisB0ai3XE00g1Dke4Yjqbfx3hiMMoL7WG+s6DwdtQ7gLZQ
HzQG+aIqgIHMD1V+tHx9ofbxhcrbHxVe/lB4BqDUIwjFtArdg5HnFoxctxBk
u4UJu5d0t0ikukUJK8cE91jEuccjwSsRaYFpyOUbmV5OSKInPtlgNjKN5pAM
k8LH6+WuQJ/nHBzzm4vz4fOElTJLH75l+d9VS6TYwQ6ZcrB05/49n+k8gnRF
KvtjYobWPP4sqqF7CR7kLTAyfPVHfy+yBev053Oz8kHL5yx+sH7hPHhufh25
h95BnfVBNGhT3B0OSijnzEh3UKS4C5RzNRJJ1Jzk3uRKPM7ZFHVOHKNrimpb
M05+QYG5FTJNrJFkOCM+14DQ7t01iCakc9g4+/sda1c89d42V9i+s1dVkski
5FotFt31owFc5GUdQfpYLWt3ibfJP+JG6VnUzgJ1LNOV2ziG+r8rF+teRchE
6XSEO191lTTpdA7aYNAydPosFQXpHm3moBxDzaU2be4Z37HiSGoeweTiNO8t
vtP6H1pTzBG5WHpj7QuMdXrueDK5HkOKNyVPVvrMP8zYgdO+e3CUwLvHeita
LQjmCOqaGOoI4pi7VRgStJEkbSSYazTbQWsnrd209qKJYK7JYh+aLemZtzNG
l4sler3sMeDvilI3O7QEetC2CcaZZIm7XSHuNsmltZJ0DJfk4EJjHiZai3C2
vZRkqJKWGmdb1QRzaow1qDFKUHekupKkZiValZUkQUuQSBBXU1RIErQEzYpi
WoVoryjE4aoS4n7E5wI2ooO4b4Hjy6KZzLDEo1yiCVorS8/ptFsBcdoIaS6t
MW/jgXmuPf9GTqDm1Fz+N56HulvJCwnKCMD09oi7PPnOG3Rw9kGyRNIErBE/
v0//DZfUmFOyBOV4Oi6v/UZbXmufmZcmT08Pziy1rZDs6QZnQF0nwTPBNt8H
eqpaKMbOJmOX4j49Rrei50qDG4Er6dS0xrlIO5yJcsCZGGecieXlgtNxLtDE
umI8zhVjcW50JLliNMoVw5EuGAx3pp9tINRZzxhD4a44GuGG5iBv9IW5oT3I
BYn2FugIckdLgDsa/dxQ5eMJpZc3Sj39UeQRiGL3ABS7+dNiGyt/5LOVlXMA
sp0CkekUhHSnYKQ6hSLZKQyJzhGId45ErHO0hHPeSUhlAkc4VxidgVSzNUgz
+AkCDyxHsdlPicC8iDr72Wh1no1e7hvwhHjIS8Kaiu3j/4UYBG81jvsUhXDu
FvN7xs5e3PRnO58LM6TnTIwblDGuh819SYM1LeqN2Pe3p0aWSS8Buu9IaT3z
hXHx/BfmHl8zT19j8cqeO8brdv7ef/tiNJN4UlvuRxWtWhHBIUeGc5Sx40Ei
dc6cxdHkRLLVhCDP2YgTw+mPXUz0VtCvpqiyN0cZIV2dnTmUNpYotrRGjpkt
Uo3tEHuIU42d5FRjB0S/uxQx77wgjg4OCWcezGp+NHABjoUsEx4dLC1ZZv53
9VJJjc6ZlhPH5DU4I8RYmAeKlPBZROQW660TEVffE86xbSh/GGwWJAlWbZbx
QtGA6/BdjjoPfTFezubfdXL9jc2+Uw2ke44iZG7vTwTusZ8YX7bj+LTPaAPx
5vlTm+wCJE19sNp5f92P+cqj3n08Gn0FT86tFYWIj7J34FzAHoy4bEevzRa0
W0jEjtGO1ari0A40mbKC3UZrOy36PaFdM6Fds/keNFu8gxZCu1Y6mDodTdDr
ZoXDPg4E2G5QezmijnaCJjGUCF2EIHTXiNBdLk3BcEE2LtTk4FJzAS60FWOi
vQzjrUoca6jCudYqnG0mtGusxPH6ShytVeFwNZO6UiRGxaC6uBgt5aW0+LUI
rYoCkQ3ery7E8YYi1Pi8IUZkuGvJBTg+QLi5wLKQ3ZH/IBoHnAe+VBdaPBPp
eNqPi6P8NX9PdEwVUtgVoxMfKIxUjFxMzBjFeHyNqwaVXutwM2mxQEP+3vPo
xvKUL0czmeObedqim7idp3US79ESO/levRbtRmXEO7pcuqDKVhk9EuJpktaJ
y6r30/RxKmIVvsmej/vxL+FC0BycDliB8WALjIVY41SoLU6F29PfscfJCAec
jHTAiQhHjPKKdMKxCCccDXPEkRBH9Ac7oDfQAX1BDhgIcUJ7oCtaA9zQE+yM
riBnxBOZqPNxIiLrgjpvZ1R5OkPl7opyVzeUurij0Nmb0M0PWYxujkHIYuNO
e1+k2/khzc4fKXaBhJgcrBGCWPtQxDiEI9YlGgmeiUj0SUYKoV02oV1RXD7y
6fTkMFbukuaazJG6pHYS2vW4z8EgbdexIDrw+XRLXSBuuvNG+51ysagUCfLB
jZhBfamodmalNDX215EOqF046b7lhR/KOPohUieDne9zclV/2nth/rLj25a/
Oum2yeCq51vGmpS9bhNh22y/jdu3EnfiSBjYvCN7oO9HDQEgZxA12srg58AA
KECQFqGf8T7OczfSW04AaELLVFpOpGhtLVBjxyYFVii1tkG+hR3STaXY22cy
pg+9K9Avft8LYgKQa5rcpzlJb2ex81pSJYvkn3C7xPF6Zc0xuOJZwxjdpVzt
lYHpPsR/qYiDVSzGYwVtK8JA9lH9Z+J6X7M9Cm2J52P+ToUuRIvXUuGPLsKR
7WcLewiWsCJA7ICUX8IYyLyP3ZB4ApRr3ZxNzhm3oninzeaV7hn8iJsSs7hN
rmeFJ5fX4dHRDeI61Md5O3EheC9OuG1Hv+0WdFpuRqv5ZrSYbSayRySPILDZ
jNc2Wtvpz3fQ2klQuZvgbw+td9BquQ8dtgbodjZDv6cNjvg5YTjEA9U+zmgg
UnA2JQwXMqIwSYTvalESjudl4rI6C5MNebhMhO8SEb4L7eUEhZXorarF+TaC
wRY1xknfHm+oxHCdCl3KUmTERKKxtAgtFWW0StBWUYS28gK0l+ejsyJXRBSN
1uZB5fm65FPiNg9t3ktFcY1hiSd3+Yz4Ty0EVmpz25eIdGmGun8tpWPrVyWL
6ZRjVGQ+yLU8jnB/Hgm5o03oOovhTe9tQQWPR64UiwGPv/086PH/AYcesdMM
d3wZcBmYxa2dGeHUz9C+ozIA8m2QEwyEy58Fwm6ifURjf0v0tD9kHX7F88kF
C/B58jzRXdX4L8dxP1OM+ptjJNAKI0HWdCqOBNvoHaIz3hbDwbY4GmyHoRA7
Uud2OBxoh94AW3T52aLT1wbd/rZo8XVEs68Tfe2ATj8HtNHKd7ZErpMV6jwd
Ue3ugEpXB1S4OKHUyRlFDi4ocHBDrp07su08kGnrhVQbHyTb+CHZ2htJ1r5I
sOZwMH9EWwciyiYYMY5E+9xikUQAmOSXghSStlkyCCoSc5BhuRbhBxYh1nCx
1Fml3cqd1S63OTjiPQcnAubiUsQ83E6Yj8/SF4iokX8vW4T/rZYn5XUguGIW
ox/X7LT4N/wX8Q+oXDCZb/yCfEfpz0LgXuA/kOdDvHTAJ3UfFujs7BbOnX/8
9SWrNTtXvD7ltdlwInW/qybXwEeTddCTM8AnonbafZu4fyX+iQ6vMd9NqLbY
R59RFf36Y/6aA53QYL0fTbb7CfTs9+utlPDQ3oBxUMr+diTR68TLRIBgE5f3
HCxQZGlDopADYWxRaGWPLHMHJJs4IcbQGVGGrojmzFNTN8TsW4ZYAkMOU+Rg
pzaXOTL47RIsmuc/+Q6UOKd1/E9u+J+SDZJ000zLpXIf1/iIcf+pVgJCJoL/
Rh8J1/V+SaKXOxc8n/iIXRV4FF6+wcN3q3i+JNF6vXQfVK7ticQSLRDKqS8c
6MRgyCSRL/GcDJmn84r/zxp5UOGodlR7Ld90u7GWVIzW3FRT8wb+cHo9qd+9
eC9kL8Y8dmDAbgu6rTajzWIz1EbbUG9Caph4Yav5VgK/bfT1dlo70Ga+k/5s
N/29PWizfAftVvvQ5WCIPldzotG0rQKdMRLmiaEIH+TSFplIIy6YFY3J/ASc
yknHNWUGbhAXvNaYj0nigpfbFQSGSlzsUONcWw3xwWrBCceJEx4nTthfVYbs
+ChSuMWkgsvQRqDYVKEgICwkHkggqMhGd3kW+nl0uDobZa6viY4P10Zz7V8W
DVB+b+RWAT1ixMD0Fgo1zOp2BgiKbgVPyvHnzhyR74lyk5aBk/++Fg1JCc9i
D0m9LQLhfiav9xJX4Gj4avE1O0w+j3x8H44bTVxzZEt6xmXhu9UsX7nrkHux
vTNQkB8vFmw85MhFquMrJBE3pC/Nm5AIflS+EpOpq3E3fSX+R7UIvy1dKO5d
3Yyci3E/0haeRhj0MsGgjzkGfc3pLRj0s9CzozPLEgO0DvtZod/fCn3+1ujx
tUKntxXavCzR5mmJRg9b0if26CJU7PCxQSt9xM1etih2skAqUcJqVztUutii
wskWZQ72KLInlLR1RI6NMzKtXJBh5Yo0SzckW7gj3sIbseY+iDP3Qoy5N6LM
fRFlGYAYu1ASv1FI8oxHioyCKUFpyAzPQgEhYXlqMUpC3EWhL8FwAUrlDkYj
92LZT8dLQsKL4S/hNgvgjAUiWvhJuTzmxT1rLhbwCXJ8uUQJT4oBkr8Gg/gf
xfzHNyNns3b9W+t8MiV002Gn+EpvybTR5/yF41tfeX3CYPOuqUgT56uJJh6a
WqdYjdIyWFNoxFntM1Byl923SYSSv8xbgG/pRO113iGQ8kcCKX8kKGM9oWSj
7X7uftjt11tGvx7U5bNPwyRBpCMvgknu8xJMsqFVkbU9VHZ2KLbmOEtHpJk5
IcFE5ooig9YHscbaKMy9QikfD1oAhdtaMc/Dw6WieNMtQ47ghzI0np7hVa29
06ytDzZxjg4xAaLs/674y1qZLzmyYyb7Q3Bzl2e18mhb83g924cp5bogc0UR
p8G5OfuluZWIvS8I2OQmMA+uXk9YIJgJ7zthriXMCcUFL+5oMVe8toaPyBuS
6+ujkVfw6PB6fF64k1jFXpz23IEh+y3otd4sDRMb8fxdm/kWPdorBJNtBJPt
5tvp6x30upPk9S60W+5BB8Fkl81+9DoZYcDDAkO+dsRFXHAi0gvjcQFIo/3D
XPG9nDiMZafipiINt9SZmKrLxY3mQlwjrjjZUY7Jzkpc66nB6dY6jDXXYoI4
o4agcqi2HPmJ0ehVl+BwDSfOlqJTxb2PIiGVOxVZ6KZ/s688DQPKNBxTp6PQ
8RXxvvGlOLXzEmI9S0XP4iN6v78WZjxLZYhcqoNIltRcCORIdm4Kc4GQueQf
aqRYdi4q6qCyXMI7gkt6jwj9ZrH61csS/6Ha51Whhf8cFCUHUx6443/4iVqO
stVmvmsLz73yZdRhGSB5gOzsKqk9ycOTp1Y8C5T90vCKJnGdCLXgOxP/XbFQ
6Oa7sS9BQyDZ72KAPjc6x9yN0edhgj5PXqbopdXjaUYPnBm6vMzRSavD0xyt
7mZocqWNROeeyskGLR6WaCXAbKbXRncr1LtZodbVCkGmh1DpZI0KR2uUEScp
trVBgY0tcq3skGXpgDRzR6SYOSOJM9lp48UZS/wk3MQHEcZeiDDzEXQxjvRy
olsMUnykDkhacDpSaQmQjCW6mFKMyowC5FivRdDB5Sgx/6kASaaLrJmHfekw
IJF3me9IJM7HoywCFOIjvAH/xFeUuB3O90oYJIflQZSRHwDIDs70I4CsI4BU
L8Afy+fjv0rn43zwHKO/AJI/VCQslV6cn6OP+tOR3q9s1Jhu2zuV6RxytdAz
5qo6MPVOumuIpjs4S9PimaKpc4rRlAvA5MhuTwbMiTgCy5SDK/FdEceQLcSd
2HWotXiXAPNdCS+Xo5p0G0d0N9jsI+nNr/tFj6XRTsZLexkvGSsdTNFobyou
ATQ4WKKOPkKFrT0q6IwrozOuQOSHOtPH54o4E3f5JzyA2AP6z+hrfvtP0Vtf
7blaaN/vFfLVFH6MR2QqqZFzIDns+rQcKMdUk2kn/712SV8/rVoiyhyPiVL+
miglf4TT2loy/PtIe7uSL4XL9hVsFVrusFjUF9lRWOSRGEttYynqlzCTtHX4
Himgmw27+LoS93y4rMVp06IXyfzkmOz8ItUaJ9foucrZGdL1micX1wnc/K71
dVwP24Nz3jtwzHEL+m1YZ29BB1HMDnpt568JNzvMt9HaTn++g9ZOdBJudnIy
t9U76LE/iMMuJhjyssKxAAecCHXDWLQPziQEIZ24xyWilpqsZNwoScEHynR8
QBTwVkM+plqKcbNDgakuFW71VeNWfy2u9dbiaEM9Jjjqt6ECxckxOFJTimMN
5RisLSWqWYxuVRE6lfnoKM9BR1k6+hTJGChPxqAyGSOVyaTs1ouYJj536p3n
ocljqZhY+WDGFS6GMIYybqLMxEyeV+aeMeMp63BuxmhnnGdgJ72n31csJW7J
HJH/HV7fyRjcEbwB/1i07M+hslKCStb5zCn539NFHbXKKrtXljHH5BoOn838
vHHP/9zz8CnDwOFl+GXtCkxmr8ETAcPc0yM5Q2r74yR6PoLnoY84SafjQXQ6
8QRGp/MhYgudLobooNXuYkSyymgWWl2N6ZhsdjVBAym2OkcjQkILNHD5yoW2
mAspN2cz1DoRpSQVp3YwR4K5IVFIE9pyFiixsUCBFYlvSytSczZIN7NFiokd
EowcEGfogJhDXOZyRiStcAM3hBj7ItIiALG2wSLGl2NDRGRQSAbSQzOQxnGA
hJz5hJxl7MGZUw4lHcfZxnNQbDFH9FbaXWZjgKjlcf+5OBv6Eq5Gz8P95Pn4
GdGS72jrcTtTXEnn3kq/TMe5QDEo94kZNft/ADWraCkFtRTIeTtmrtGBdT/S
+1tLjjJ0OjwHnaumofPVTZNxTv5X1ZGZHBmlOVPYohnPbdCcSK/SHEtQPgyy
dtH0ChhN1tQ5E4xaBBDn9CR17jmRsMvh2xSDVfgNwScfkb8tWYCj7ltFPHqN
BKUs0t/VW8JfkkjfR/STINWaX7l1wy1rglJDhlKCUQde9JkTjHLkkxTnyNZl
7MZsj2xLFyjsnWV6uUjIg1hLf8TbBiHe3Ahx70rqvEJS5xjxf0k0afh6v7jh
x318rp5rAxDOvcyQdH613tsSnDK0jkgOtaLS3sZza0RZ1EtEiVKnzAulqKef
5y7Eo2zJ75CHodgFiGNe2AyLb35UOC1Dvs0yVMslyoI/i1z+iS4xnV85+olL
lWy5fCtZcv4Rmawz09IvCRi9vEbPSo4ikRd93Z7xJn5/eB1uR+8SNsrHnLai
z2YL+oiCdlluJqjcgk4ZRjstttHaji6C0S6C0S7LXegmGO2xfhf9jgYYdDfF
sI810XdHjIW743SsL84lBaM2yAPt0WG4UpCEW+Wp+KAyE3drc/FBUyE+6CjF
3R4lPjxchfuDtbhzpB43+uow3NSAsx216KtVY6RBIcZrRhvLMFzHGa1F6FMX
CFXeXZKEntJEDJQlYKg8AcPKeIyq4pFqtU5MKxXI9p0Z1qvEGDpTULZT5l7z
d4o/g9BZ/A292SLSgD9+RkxuZwtyKDz49WUkXUZb4z/US4Xan8VvuR7x27TV
uE7rL2Elc1jGS3HBrkXGTW3Yq9ZBgM9lPp8neAru0st6bjPgU5bpbGw+KhUr
75WtxiP1KjyqXCU6N38i5vmYttTDNPpZI+aix2EzWoiGtNjuR4sdrwNosT+A
Zntp7KPR3oCkmgHRj0Oop1VDNKXUyggKG2Oi7oa0jOj9M0KVnREqaSltjVFh
Y4Jks0O0DFFqbYoiSzPkmZsh28wcGSaWSDW2QqKhNeIMbBF9wA4R++0Qtt8B
ofsdCTtdEWVK0tw6GLGOhJtu0UjzTkAGFybDMgXbTA/PREZElpyXUIzqHAXq
M5KRYbECeRYLxYg0txS4J81dGpblN2Pn4ePU+fia9tdvaM/9D8/2avvS3NVi
ec6Xyfr5wlb/UlZhAja5jkl/tZ6gs1pS5H+qWICnZfPxPSn8izGrjP6rcO7f
C502OmkuQedPnoHOaAGdOZyhO0tzSdWnt1RzUdEuo2idQNGRhHJCUWdNH6Fo
uw+hqFOURiGh6ETiXodv041W4XH5IvyxchH+s3wh/jFjOX3MewhFRVj9LB2M
zuLf6s0TOMqdnzobA9QTfoYQfjYSfjbaE3bamYihRY7Nq7Uzp2fAivDHRv7R
9orYvCI7N2TbeCDNyguJVr6ItQ6QonAdAhFvsFwMgPLcABs9jBKOsZfrvcyV
QrqJQny/bNE0oQ02lVMQOW5qTMZQpg48qt1C26R2KZ1/S/Ck4oek+0Ih3cXU
It+W10XYS9dMWt3no8ROiscrfT7bWrS8f8ot71kMonorhe8BFzn52inPAXNz
lTs+QhT2rJg2wZsZ6vmeHLtMP8qj3nV4cmQVPk/fQhBK7NJmBwZsN+MwsdFe
K4JRiy0Ev10WW/VM6ddt6CYI7bbcgR6C0B6C0B6C0D7bfTjiZIhhD3OM+tnS
j+IMTaQnzsb743xKKNojfNEWHYT3S5JxuyIdd6qyca8+H/fbivFRbzk+GajE
Z0dr8cmxBtwbqsfUQB1Bpho9tdU420mrXUVKXiHGd0bqizFUU4CByhz0liah
tygWh0ti0F+WiKPlsRhVxuCUOgFJFuuEpwdXOIS7tOM89PtIs9PMRnm68Vey
wOaiJjuZMqz+Y77ERBlaucXDo9vMQAXitcnW4o369J4QJs5icJzFzF8vRsxE
Ml5+mr8KF5PXCtxk9OX/WvBMGYVFLbNdNhlm/NSm6Q6unNY7p2XeyZ/UpBSQ
TXAqDaVMaMFUuhPxy7ZV+GXLSkGsxGuflBrxe9pZX2cJAoUuu7dQb74H9RZ7
UW/J6x3Uk36os2KSQtyFNlgNkZQa0ntV1vtRbG6AInbYoU2nJtJSaW0ApdVB
lFsZkD4yoHeUgNbiEArMDyHoEP19CyM6rIzpsDdBprEp0gzNkGRgjviDFoje
b4WId60R9o4NQt5hMHVCpJE7Yix8BZFhApromYh0P9IPREBzIrJFOFUWrczI
bAGk5enFqBFG8JVoDNmPBNMV6HCdrZvOPhvyEq5ETXd6/jmfuJmCEKZG7vSw
fOf7OZ103KFLmJB0S3OKAkRbCEQbZf4pAykr9w+SltM/t4zBtDd01w9z0P/P
2XuARXmm6+Ncpq5J7L0bE6OxIHYjCtJBUVGaIkjvnaH3gYEZZmDoRUBQFBRF
4bOgWECjJpZYosnKbnb3nJztZ8961v+pnnP2/j/P+30D6Jq9dn+5rtehhTLz
fff9lPt57tel72r5wXHoM3Lb+61XgNR/oCQs02yU1KtrM5sm9RnapEt0rvCj
rkWgam9ulXRGoKqOUFVzJ909cKDIM5RQNVYyuoZJGlvf3sS1O36TbEOIqqM/
oGyCMB/jIfFzvotQTnFpuUDVdW8Qqq5jVF1H7EFvMrSKLpKRXttyFysCVcr1
t20hMLWRPQhdhP2w8qc1yB6Eu3bCuHsXStw8ULDDE7muXkjbtheJW+WgNNo1
SPiLxxKxxio5Pg9w99DrwwPbp2LmDet125SB7T5lYJuDuz4FVE8r+f1hRUJU
PVnUQ1kGzi2jf35JIzlO5PayRnIsbvHCNx7cD/5A7ETkvjlrhwK3zBE6SZOf
eKatAqqbh0AVYeveFqjBtVJeoMurSXhzEov0uO7HZvfi3jXpiUxO1/zI92uv
XKO4Vz0P9/Rz8BvthzjhsRZnPMxxYscStDOyUnB60HEZIelyeuRjjhbHFWih
wLTFcSWdVWh1WoM218/Qvtsand4OOOW3DT3Bu3A2whsX4vxwSRWMimA/tMQQ
qhZSUKpLxb2yTHxdm4tvD2rw9IgOg8fKMHiiEt+crMJ9QtYLhKRFKbE4VatD
X3MJehuLcba+ED01+eiqzMXxsgwcLU7E4fwIHM4LE0bjHQXh6CiORo8hHmeM
KYhzmA//lfIuSn5teel2yc4Jou58PWY4OH0VUX+WLQ/KsIyI48sXQy5tU4YX
+9WyXhbVU8ymyXn/yKPoz3l71lCps175/xpNUqFpsnyfsVTowBVTCGZAvp7O
Kq/XlVlyKXuiAq0z/xJaKcW/Z5gjN9YpVpVy5st5az2PkY4Xi4/vx9Jl5bII
pVtWwrBlJTdnbVaZvQuD7Wr295Odvu3Y4XstdPZrobFbj+TNlqNQZLfObCWK
HTZAY78BhXYboLb9DHl0cm03ItdmI71tif2W6+kK3YRsm81It7aiK9KaUigb
ulJt6Nm3Q8QGB4RtIGTdsBUhn7kidNMuRNh6IdrJF3HbA5G4O0wOTf2TkRaS
iazwDGTSSaeTRicrOgsaFaFqlgYNmhIcUqcgyWW+kEtyMZRD04sUmn4e+QHu
xY/B09Sx+HXuOPwbhTTcvBXhac3EUTwkxEP6bIjMPugNCqLWKxl9pdIsoqz+
VzkTcTdxKv4pc6IIUf+7YEy/29I3/15U/VhAKX9m1NDXTH4l239n2Ely7sKT
Swltw3cGDBSH5Uhnde2MuIZ2s6mEuO2EuPK5Ig6hLyHvJQV5z2YapW4ZeW/m
7wm7me0WIDV4MfIGDwSttP9Nii2hbumEYfN3La/bn4r6rWzvSLhLv6aRkZYO
I26p/ToY7NeZySj8tujjlwkEtiS0tUIAIXD5ti1ytt8MAxvAurqgfOc24fJY
umuXANyinV5I3roP2Tt8kLXTF2k7/JC4IwAx24MFmcbvDkGczUKkbH5bRLQX
wz4QIc23+TNls9QOxRJRUnb+sI0fZ9QcEvJNwg2qDkW/yRKUyklCKfsfOnkG
5/evqQg8SWHR5lgxyM5b9yVeWads2mQXrDDbWZRtvS+Dr8O7Imx9Xd8+mMA3
lsC4gL6OJxB5CQGPtD3NnIB/4cZU9SvR+HmFMM4qzbSeGXh+jADYMBdN4Z9Q
kLAaF/esQLfbUhzftgRHKaw9RGFtCwFwK4FvK4FvK4FvK4W0rQS+h5xWUei7
Fkd3WOK4hw26fJzoVtiOs6Hu6I3ai0sJ+3FRFYZD0YGoi/DFF0XJuFeajq9r
cvC0qQA/O6LFLzpL8fOucnx3uho/PlWN46WZ6DDm41KTDl31RnrU4uIBDc7X
q3GmNg+nK7NwUp+IY5oI4f1+NC8Yx9TBOKkJxdnSRJyvyERvVTbiHBdg34o3
xfwSP28s9GJHCd6nwc2/O0pYy681kxU333m9OwMwVwh4QIfVS6IkoGzJEUTc
NNW0ppABuH7qW4yvZrPQHrNAOG2LL2J0bX0FXZkFO0xLuBQjL5ML70WF1T9X
VrHwsu3rs+S9aiMh9/x0/OrwLPyqhSsG3dN4LXrDbAxWzhSDOryTm1Xr3yZ+
gJZtn0BvtWIUSqxWUH6q27wCWjo8gKCxshjFw/Bmo1FozWtu1yCDTr7Vaqit
V6NgC71NJ9dqLbLpZG2mSCjTaj3bhVhvoFR/PaI2bUCmtSXSNlsiedNmJFpa
I56wNs7SDrGWjhTJuiDKchsiN+0Q3d9o+z2I27pfyNNVnpFI9Y1DRqCKcDYT
GZF5yIrMEtaq6XQyCWsLCWtLCWvrCWvbjUbofVfBuGuC6MyfD5Kj1y/o5uEy
wE/Tx+J3lDKyQEZ06MsZZysmmBGOVk2QU37G2iaurnIDX2nKE9YOZk9Fe/Bc
3Euahj8XjxFRLFdSCW/7H8a8/+bfWAlQoHbhaz4lt7DeelX1JN4fN1Q5kJv6
Y4ZheP6Ck+YfL+6PdvO/me0b13sku0Y6q21jOJbOGo4TIPPpIEjukC4ZO0ZJ
V4wdhNBXyzukqwKVmwmVaxVUNkg9hMpdsere5uCUJ3rPMELlqDtRllYvjoWP
xzNu18nW3Pizfryo096PmYNKJyXnoXiYUJlQuMxhrdk7hMprCZXlo2eEJlQu
ddxIyLxJ+dMrUeq8Reyy0FNcq3dxgGGbE4w7tqJq13Z6FXcia6snytw9UOHh
CbUbwbLbfuTs9kfarkCk7ApGghvFxLsihIYjaU8kUuxmom7XaNGD4mrdUw1l
4nVzZUg2ZesDyp3Dj3w38edOjijWsqy+gmIpguZ/Z4MrjTwe+UuKif+BYuLv
KCZ++oqWlP24Wcva7iNvT2QZVbrTJCTZTxT+VYqTJtK3vPuyXkDpffHb7JXH
W0d5TwzPFLGcnHsx/2fSmJ6aMewjbvLj5iLJqel4fnQGGmI/xrO6GXTFLyd6
skDXrqU4uX0Jjm1dgjaC5sMEzYcJmg8RNB8iaD7sZEFnJZ1VOLptHY7t2oST
XrY47euMM0E7cD7cA32xPriSFIDzyZG4mROD7H27Kf5OxddVWXjaqMbP24rw
y049fnnKiO+lKjw5UY6uKg06CZq/OlaOL46UoruhFJebi9B3oAC99Xk4W5OF
HqMKp3SROFEQiOPqABzPD8ApguULFAtfqszGhepC9NUWId7xI+xZ/qZwj2A9
bpbNO8hxHIMD7qMFhXHh9uuUcaMYkyn9YlTmWSEOj1lZ9UxIUGWZgCgRMBq3
CMDl2nfzNMZlE1I3ieWyTVPlDbMTxAfvFc4VFnPyZLcS93Yo9nOdis0i0zrr
OboVE+dzSu7SL/qSvFNmDu+UufUKWPO83+WZeE7/W79hPivF+eefn05I/Zy+
5fN2peRAQRAPiXPJ4egOioutCakJrgm0CK8FUhfR0WxagUI6BfS22nIFUjas
Qg495lhaIJdOjuVKZNPJ3LgKGRtXI33j6lFI27jGbBMyLNcSFK9F6MZ1BN6f
IZ2gOs1qM1KtttDFageVlQOSrJyQYL0V8dbbEWPthmhbT8Q6+SBhewBUu0OR
ujcaGfsTkB2SgrxINnnJoVA4F+nR+ciIzkZmTBbUSfkwKFB9tMyIOv/llEDS
jUNQLULiKDkk/iZ5rKjYcoWPoZpnlsUiQA4JWUdRrcTDBylUbp00hNWDasLo
8Hnoj6dntXC86HahWK44/K9G4PWz2xGjR+zB/5sBe678BeZhYWFJ9GnTceUv
feOvAPfrfsx7Qx+SwXyJSaHVOG3y5JMrCcwT3Hxv5vvF9p7Iq+FKMJeEpV5t
q3S2qFU6Q+esroNAvVPqNXZKfXQulXdKV8qPE6rTqTyuoHurdEXbLF0hdO/L
rRTofiZZy+gudUZmPS31jriTsMXuxQXVRFmvq2xSh3GCqB//q5pt1s0J3dcS
uq99Gd3fYFA36xCwTn/H0NE6bqYrxVbAut7JBiV09E52BO2OQhlb6bYN1bt3
IN/VHUZ3d1R6eqDSywsV3ntR5Lkfuj3+KPAOQppHGBI9IhHvGY2EPXFQ+SYh
eddWITVntSqnvf9D6eq90nmvBEWKcTa/zTDZo9SQ+fblcYEaSo/LJ+G/Wc5A
0P5HgvbfKmMCXO5gzzFW4N5PYudT2Sj5LG9b9XtfuKHwqiKOujOcJ0FF0K64
nr6mH/eOgHYue3AEzrVmLibzKjAezeZl0aw8+t/KKcNetedGQLtiqj5YPwdS
7gIRdQ+WzcJ3qUvRv98COucVOOS8DJ1bP0W78xIcIXhvI3hvI3hvczKn91fQ
WYkjzqtwbPsGnHDfjNN77XBmvwvOh+xEX5QHrsb7oDcxGAMZ4bitjoEuyBtf
lqTgaUMufn6oEL88rsNvT5fht2cqcadNj6MlaXhwvBTfdFXgYWcZ7rTrcalZ
h3MNBO2N+eity8a5imRI+iic1hCcq/3Qpd4PqTgclysy0F+Tj/5aDfrrtbhK
lBDv9Am8l745VPZgl062PVVvnSDWd10IlSNvljf8NEveIcmP3yv+yCw/EKb0
lZNfbpm1iUCakf3QtLcE1M8ST/LzgzPQrvpI1pGYomrG7tMjsPuMgt/MsxeU
eIFxnC+q24rhMi8/ZC9Q3hn2CqD3V3yIwUOM+X0zzGbKGyp6p0PK/1Du0ddO
xH/rZBlDj/dHMG4xJzw3h8HKXKifdfRYvNmcAN0cGjqFdDI/s0D6BgLxjQTm
dHIVUM/euBIZn9EhQE/fyL7m6Z+tNluDTEu28VqLPRvWIM9mI3K2bEa2jTVR
pw1do/ZIt3VCmq0LUmy30fO9Awm2uxHn4I34rb5IcgtCilc40vfFIiswCXnh
aVDHZEMdm4M8OlmxeUiPVSMjNhf5SXmyhyih+ZGyMrREWiLVebooG/cGywWO
Bwmy4ovLxtx/+7ei8eLv/7MJyTmc5PJxC50jsm7hOd2j7VGE4ipCcUJ/6Hlt
AXRjKbFnROfo+3+L5Ai8P/Q96x8A89cVOvLlh0VmQ+H0SLB+3Xd59xWsnjw0
YGW+YJHkssHqpi4o/mmUp2/v+eJa6RphrsDdlzC7RTqjaRHYzYF4L2F1H51L
lYTZdK5WdpqNkq5WdZpNJ9xuF///VW2TwO1LhNu9Cm53M26HZ/4m1t7+xYXU
SbK4kDcucIGoaqKoULMK+2cp01FFeC1w25FxW8ZuQm2OyJU/2wEl9jz8tREG
x010KVgK42q90xaUOBJsO1I07mwPw1Yn4VpStG0nSt3cUO2xC1WeBNtenij3
8kb5Hh+U+exHvncISv1CUOjLC5qjoPKJR5yPSggGU/bHItt5llDw8jg2D0MO
llIi2jhPhjsulLCXF68+4rfPK1Vqzn15LoeFl1VK649g+//TKj73BNvfjyiU
DCt2x4jCDO/2Z9mGaUk27+/PJ2iJt5siplmHWoAjqtUE26NYP2Hmi2gKyDlg
5yUALOLldUA8Y8moLUS8RxTBMddHRL1ErpXcq6QrVztfBOTP2whwkhbgjxTd
3QuxwLW9y9C8dSm0NsuFiqLDaQmO0uNRp+VoJ9Q+Sqjd7myBY9tW4aTbenR7
bcbZfXa4EOiMS+E70B/jgf5EH5xNDMXdvHDcL45DZ2oITuVE4btmNf7paDF+
d8qAfzihR09pCi7WZuMfz1bju54KPD1txOMTBtxr1+LSQS3ONhTiUkMOBdrJ
OF8aTSgdiG61D3oKfHGhJBLXqnPweZ0G1+tL0FGUhd6aUhxQ5yDBeys8lr4j
HCNNixAybEcjy2m8SHw4CVKCcoHcvL+c6yW/NAnQ6OUXm2WrlUJz81RTk47v
8vbpb/Kbo/j5NZsz7EFMYXZD/CcyVPf8AFRfHNGMvapcVDfnDNvX8vJ53ll7
d45s+8M7Hm/OxvOLs9FfTRzbNF+Oya/MGMVLH9ke5yJRcBN9iTBQ5+EaORT/
KmoKqnhboLUM3wzdJQTdWoJr7QgIT1y3WsB2nqW5eGTozhXQbUF/bNbGlWYr
6N9VIibPslyN7E1rhOlZ5OZ1SCboLrC3gtrehjJDO+Q5OCLHwVlMWGY4bEea
w04kO3ogycUHSdv9kewegjTKgLP2xyM3JBnqyAwUxuWiID4P6vhc5MWzuVku
MuLVyEziranFqNPo0FZWimOaOOi2j8fhPR+Ijh9LzkbWpv/EsF3CNRNFesaY
0zhJkU10TKHs5l4RJdpFRLJiv63S7dOPFR0/wm5Gbt45VDyWeZnef6YeY90f
9noJxV+B7sUvf+oHY+w3hxBerltPFh3C6ROnSK6WtjdLo1J7L5Y1S3cbOqUv
aztu1iZl36yKy5Ku6lrkOjXFzb1FdDTN0ll1s3SGDhdVRCGlsku6VNUlXanq
ErjdZTZNukbvX6vqHIHfDdIVNeN3ucDvs8lFAwW79n8fZrvoxcWsyXIo0CoP
VXNIwFTITuL/rR2HC/s/QbXzGsLwNSb8lv+0H1HMvQZ6Oz5cUFkvILzE3hJ6
irqTbSyJzVkIqXO0MbOiyNtOFFSM252g2bodRdvdUOPhhiqP3aj08EC5pxeM
XnsIwn1R5eePuqBgGAMjYAyOQlFgDHIC4qHyT0WCfzpSg1KQ5ukqNtywKk2Y
cVZNkwsrHK32zRq+60bWutsVEXG9vLmNF4P+p543bk/EHwon4Nf5cq37uyEB
8Vh8qQiIuaDCEM6NRlZvsOUER9+8/9jfeo7JLfylmrfScKTngNCbMDyGCwb0
OfbD403ivLyAZRzy8gIFw08o9foLcvR9r3q+wHB56Em2bBmsmIXfls7Fo4iV
uOW7HL27P0XHtsUw2i+DliK4RvvlOOa0DB3O9Ohijs5tFujasQrd7utwds8m
ekltcTnECf1R2/F5vDv6Ev1wIyMYjwoj8cSQgPulKlTG+OEfD2vw284S/LSD
MLcwFrcO5uOX5yrxC4lr3qV42qXH404tvjqqwY1WNS405OFyLeF8eTTOlwTh
bMFenCv0wdXSGFypyMWJonR0l/Hi5GLC8Bz0VhnQ31CBs5V6hG2ZL4zDg1a/
JZY9sCNRmPU0UTzj51uOvseKUVvGcbbh/HXBxKFa9/+YMHxI5MtzitP57u5k
/Dw+4w0uknDofUKRlRNu9+sXCKs8wZgXlDLJSMzuVwKB60oex/5H7JrA2M3O
krza9cHcIRx/PjCX8omP0F64EIPt89jwZRSvhzObLm+5vCrbtQwenIPB6lny
PVcjtxqfxE9Fnf0KGAm7y7aIqRrorWQc5zCccTx3owXSNqxC4SZzqOnkE47n
WTKeczjOGJ5DGP4Z4fkqZFvyWY28zezKvRaJ1uuhorhKR6lwsbMtiuhm1Dg7
o8BlK/KdXZHjvAOZzruQ7uKFVFdfpLgF0E0Whsx90cgJTER+WCoKY7JQlJAv
hiwK6KgT2ZwyDzl0clV5KMosQmlBGRr15ThaEEdx2nhU7J4AKeB9XFUGLn5C
4Tcr9gV+i/7iRHlTNMeOhyeLYZXnRLP9+XPwq/KpctG7ari5OALERwkUf1PG
c/5w2Tje0PK31r4VCBdtRrN3XlsueRnS/2ICeITkY7oM6FOmnFy/1Lw/KyBi
oCWzWHrUdka639ot3W/q6r2ob7pZFBT/JGyH582ySBWBexMBe5PUV9Qky5PV
DQTsDTK469pEpVwBdoZ16WotA/w1+neSAPdrxrYR4F4lXcktH9D7hH0f5bL8
RWfWVDzjrRk8NM7gfnDykMGTqVz+68ypaHRdyeAuPy+uMIqYfI0M7EPgvo5A
XQZ3HYF7icNmqLZYIslmM0M7HVsB7iUuTmLAWLNthyipVLq7odx9N4zunijz
8IbR2wcVPn6o8Q/EgdBQ1IZH4UBMLCqiEqANp9QuNIWAPQ2pwalID0pA4e6l
orHIW83/s3wygR7dXidmD4dXfcojgyXf0kcUs1OxhIZVJJPwHwTuPBv/z8LG
XZbl/WSErJnXBDG4c3zOZRyW5rG8mRttvHGLh2cDtswREr2RVfO0Le+aGpp0
DTDE7xPlFuOO0cImgoPzp5njxeDWS46BlNU/PzUb7dkLBbCLivkrwP6tbja+
S16GuwHLcdlzCXp2LMIpAvcjzp+izHY5AbyFcILscl2B7p0rIe1ejXNe63Bx
nyWuBNpgINwJN2JccSvJA5eSA/C1Opi+ZzR+UpGEn9dnoiZ+P562FKCvLAU3
G3Lxi5Ml+PXZcnwvleHn3Qb8tEuHH3cW4VFHAe4ezsPnjek4WZaK82UxOKMN
wTmNPy7oInCpPAOHchMpVNUSsGfi83oDrtUZMFBbiisUnF+qKcPF6jKUxQRg
+/JxwnOZ7U64rJJkMw75LuPF8kY2DzIpShjYeVr4l2q5pMITdLya66UJDn6N
j3FEfmrmGwzkbBc7g3FdwXR5fIiiv9b56K/4SBZCXh2R1H0+Asu/mCvH44zp
95SY/IniC/9ExvjntyiDav4Y7dpPMHhivlxeEbj+OetLrs80G8Pvy+B+YTp+
1TpT1pBwV5MC9O9U09DkZIGKLcth3MJ7cJfDYLWcgvTl3OFcToFUynoZ00WJ
RcF2rpnni2PB+E7Ynmu50mwDcgjX8zatFr5TRTbroHHciNAtn6HU1RaGbfbQ
uzpC5+oCres2uhe3Q73NDbnbdiN7+x557ZZ7EDL3RCCH8uD8YBUKI9NRTHG5
NkmNYpUaGjoFdNSqfOTxSc4X9izVhVo0GcpQmZOCXJdJoqfZ7f8e+sM/wMPE
MfjHLGXS2DhCiXdQji0Hq+jlqJ8tHp+LXReKFI/1zGVKcG4Ya8J2pbxCwK4f
J3++fFy/x4q3/k5gXzj0mTeG3nrdt5D3388YqqRYLPyUQHxlf154wkBbgVF6
2nVF+uZ4n/Sk/az0tQzodyqio/6U7zsf7clT0Z854U/ZO2b/Ichy/h98Nsz/
g8eqed/v2bDiZpp32M00j7CB4qBUVv5JfcbjDOYUpNd2M5B3m41nOCcwP66A
eQuD+YAxKO77mF0rXpzQTMezi4ofwIUZsqD+yJSX/JBhnKDQ0nIRoVc6rqEI
fQ3KHFYTiq8mFKdjt1ogeYk9I/kGOhsFkusIyZNGIrkTb4R1QKb9NkKybaja
5SrkKMZdu1C22x2l7l4o9dwDoylEDw5BU2QEWuJiUBqZJAxEqxNSURKThryI
NCSHZiEtLAN5kcmo9zenNHyMuKufavlqmGua9eMe0yxe1c8lTyEFnCbXTnmF
OK8hLZPN4XgZ7+8LeC28POYniizJY3EvgaWAY4S++nK4HKkzqLCjOEeOwgN2
93t00U6AxuV9YSKndhxuf7LL+JtcJTfzE+/zmDSvUWRQ4vUFvEniedV00Xbr
L5gv8v72rIV4fnq2jDU9cstTgPhxeVOVlDYf/6qdhwch9GfvWYKzOxeh21UG
8pMunxKYL4XW3hwZdhY4sG0VznmuQd/etbi6fyOuh2zBrShH3EncgWuqvbib
7Y8fF4fip2WxeMAqEXUk6hL9YYjbj8et+fiDVIrfEnj/ih7/sbsEPz+lFQD+
1RGKyg8W4FR5Dk6WJKNLE48eTTQu6RPwFQuym3V41FSMrxq0uF2vxc0aHQaq
dbhSpcOlyhJcrNCjl87ZcgNO6goRZLUAnitGiypLouU7SLMZTYn/eDS4jxYr
KlmZcjthuNIigJwyM65Qcd+Th1Q4ShdjJQzix6eb6iZv8ht0BY+Eb1E+uayM
/2Qs+uuw/ZUC3Q/nyz5/Jousp/Px/N6H6D+0EO36RRjs/nDYi5F9ga4rW+jZ
J2hoI/3MoY30UuGH8gTgYVlp/U/p09G61UJsRiofhvNRFKwvN7MTITrDtpbQ
vZhOkQLnBRSmF3ArdJMFQTuflcink7dpFcH4amis19ANuR5lLpsQYbMRhu22
lCM6onyns7A71e/cDt2OnZQz7xJi3Hw3H+S6+yPLKxTZ+6KQR7lxQVgKitgr
juefkwuhTS5AMR0N2wQmsymzGvkpBPEZBaguKEZrqR6pkaEo91kElfMsFOyc
Qfn3LJyPmIKbCVPlqT6W/h2g0KuEMqX8uWiI+xj9JfNFeC6q49zv5L4n6/9e
gnIRpo8SWP72SBRn6cqD6wkfMNb+rZWWPPlh5dBnZB+5uUN7JKaMm3LSfNFS
ycXS9qYuPrt3oPmU9LTnmvTTM9ekp91XZfzuZPzuHTiYWfx90u4NL/rUsrFa
Q/xCATj/Vz1ZYBNfvDw5wPu3wta/A89lb71wXfzeH+yXznsQs8tnwBhXIF1t
OMOBeEOP2VjpRkPPSAwfMIalfh/jtvKFUTULl5sXAPfnysU9Vkex/wHPlMrB
gfJn7sa/08895r4MNU6rxamiU+G4mqJxwnHCb4OdguEsNjXhuN0GumQYxzcp
OL6JzmZoHWyQbeuIQicnISmsoMunnC6fMredMLjthmGXhxyNe1E0vm8/agKC
cCAsDAdjonAoMQ4HU5JQn5yG1ox01CZnQB+fgdyoTKRHZCInOgsGVTq6YlcJ
UcOLqsn4Vf2s4T0XpkIoB2KsSeAy6gFZ081L8l+UTsK/CfOCifgdATmv9+a9
t4NpcrWcm5ysX7mhROUsLzwXPGzKxtEimxlkOk9CssNEpBH4xNlMRJT1RIRt
nohgS14jHrRxgtl+eG+YAfcNs+H52WwRwfM6oSy3+SjZs4AyEErQoxbgnnqO
LJM8rtginp/1ekA/OhWDhpn417Jp+Ensp7jluxQXdy+CtP0TAeqnXRfj9HaK
1Hcuw0k3czTvWIVK17U46rEeR70/w6G9m3DE3xbHQpzRHuEBjY8zive7Qhe4
E5cLI3GxkKJpXSwOpAbiD6d1+F1PCX4jleCXPToKOLUUievQf9CACzVa9Bpz
cE6XjPNFsbikjcOdqnR806TGk6ZCPGwoxL26Qtyu0eBmdREGKotwpbwIF43F
FL0X41ypFmfodBt0OKUvgSHMW0TmnqvGicicm8XBm6cJO0kmzW563llLxDs6
+b7g1UHy+kZ5aobLVlx6EcOnrBrkHubZWVxy6Z0ls/pyubIyAspFJeXmHLQX
LcLzgXly85Ih3FQRf6RA+BMFxtlp+qnJbXoB+tuJfY2LMXjuI7nyclepnLOR
yEg4Z/PKL2exU7j8/jXZOWmwdY7QHYp9DhSi/jZ7Bo66Woj9ThU2ywjWlzGs
j0IZQfp7ojrO0E1xugzrI5qhJoVL4Sb+Go7QCzavNLMiOF+NYjZTdNyAim2b
ke28GTnbtqDW3QnV7ltRuZsybYqrDLvcoHNzR/Eub2g89kHtFYi8veHI84uB
OjgRGoqhtHHZ0BOEG1I1KKGjTS1EMR0NnYLUAhSmyZBeVVCEksx0+nyCaJnU
eU3E0f2TcCeO7qOoKbijmorTUXMhJc6DlEKJkXoeBqtny3jUzUGLsh6kSdn9
Uzdi/88QpMsDM8N4rsi+6ev64z6wFiWSvzFEV0Dd4uW6ikm3IdsdrxAllYlj
Jp5cPG+xZLXS6qbKTzVQHFsgXWk4K91o7ZXudlyRnnQRyvfcEGj/Uxntez9v
6nxQFBby4iSlXs849+6REaq/aD6R2Wz8b+VkMU7Lm7Z7Qz8QRnbFzu+K1cI8
jst29hQWvojdPOYP7usWPEj1CRioSioWaH+jtmugKi7n+9hta16cSKPvz4hH
F3FDwadySZA78uxwc3mm/Ce//1JJ/fu06ahzXoVap1UC7CsdFbC3X4VSGehH
MdKbOYqBghK79dCNwHqtvdUQ1mfZOCDHzgml2xxh3O6CMorZS3fSdbXTja4t
d8J5L5R770X5Xj9U7Q9AvYjXI9EaH4PDKQk4kpmCytQsNGbmoCUrC9UpWdAm
ZCIrOhvpMXnCIf1AXg6uZa4VQVxPwny5AXZihE6BNQssDDOV1Rnr2QyFPep0
so0gbxAesnJQBC2PVHLgzvs5uEPKwhZ+JWQrYXmWh22E/aznw33TAsTYThFY
H01YH75ZuERvYpxPshotuqU8OMk7PdjXjlffsuCOW3tiJ5OpanBUmVseIWgR
OH9C2ct0hPV1s3Evayb+mDsbdwOWod97Mc67LRQB/Nmdi3HGjYL53ctw3sMc
fd4W6N+3GqcocD++dwOO+m7CsUBbtAZvxZfpnviJxg/f6YPxi4pIfF+fgF8e
TMVvjuagLM4Hvz9VhN92F+MXp3R42F6KO4eN+KKlDH3VBejRJuMc4fsFTQRu
GOLwbWMeHh0owOMD+XhQl4+7Nfn4siofNyvUuF5egCtlhbhoKMQ5fSGkEg26
dRqc1hbhJJ3O4mK05efRszUbbivGwW/1e4ijKzx681ik248TFS7WiPJ+FB7y
v0tYz5UYbpPykD6LW36rTEgK3WeLgvME7m+KkX26tPtm/wW8C1d0is7vtX+M
e8c+/quwzia296RPcO/MJ4Sh7VWfmo3GYN/HchGG7yiOoe4o+pbrimeUDPGj
2OaT6y+3FbQXwfsMPD/HA69z5PVmByfjXzXTcHq3OZoczVFFKK8g/SiC+mVm
7yBnowXF8cs4jBdIr2O03yz6pvQbFW1eMYp3Qputp39XCiu2YuvVoutV7vwZ
arZbocjVGpkE8Y1ezqj32oZaz+2o8nBDucduSps9oPfYC523H4p8glHoF4mC
gDgUhiYLc/qSxFyUErSXphdBT6eEjpZtJPlkFAp412YxxGuQEBKE4xVFuFyd
graAWZBCp4g1bywDZlmw2PrLa8XalLUlXQq8izn8ybI6kechTYpyVpiXjzNF
7qMY59kkdCS6V8kI/0w/3j/X5Z3/N4R/66VquunRSXzuAwHz4wjmP561qN/D
bt9Akk+G1JrbLnVoO6VuQ5fUW3VGutrUK91ouyTd7bwqPem+RgE4hfhm8xjy
79Qlq/5U4DUfD+giFWXWLmW4lm5sLhsPamfhBYESZ6MczHCpt8njPWicZIUc
m5ylWbFrxo/o4/IS4EbP917od0z4Q+Cmj/4QYv3RixNhk/GMS1f8fXlYly5w
Sitl6hoj74vhlVFNimpRKbJfDvh4CO6r6VQ6rkK5wyqU2a2iuH4VQ/0qMyeC
+dXy/JiAe7nQrh0B99FW1iiws4feWZakl7pupSzRFfodLISRi+wV3ntQuXcf
Kn39URMYjAPh4WiJjcbhpHgcSU9Ce04a2tRZaCY4aFfnoCkrBxUp2dAkZCMz
Nk8U/djG9Lg6SkDAXWKqweJZw6tyTigytaFCuyyEYVvS/6Lc/rlO3ibOof2v
80eE98rUEG+ovhMv7xJhF1lh4UevRK3XJCS5zEbW1mnQbR+LUJtZwlF2xPjm
m4zvhPasjeGyDZdoeA7+RuxYgVLMTkNo3zB12FHTJMtQVOkjHWKe11JUXzAD
/1MyCT9L+Bi3/ZfiqvciXHBfhF73xej1WEJnGaG8OS77WGDAbxVuBK7B7dD1
+CraCvcTHXEvZSee5nngp0U++Jk+gJA+FP9QF41/ak7Cr9sy0F0YhqtVaXh8
zIjHHZX4+mg5vjpkwJWqHJzXJqArOwSXNWF4UKnC08YcfNOQjc8rC3G/Jgd3
KnPwRUU2blLEf60sF1cNebhYko9z2nz0FOfjVJEaJzUF6CwswLHCQrQTPByh
KLAo0FMo1FnG6L1mEiI3vo8Mm9HCjZQFMV3Erlwm42WrrE96mDxOKPu/U6SM
/2oavmpVdgpwAC8vT+2fbbb6ZYQXtstcd5knAvL+tk8Esj+/T9nV6YW4170Q
/R2L0FC8BA3aJeg/tkhGemkhnj+mAP47uUYjSu0P5w67zpucAbkmw8E9eznf
o/PVHPnxzogaDgX2UslHskUNV0erJuKa/2IccjFHje0yVBLUV26RId+khSHU
l8vwogRPgf6HQy1WrdUKsfyah42KNlvQ40qUsJmwwzqxj7x+pzWaPewQ6bAJ
LXu3ommPKw7s2Yk6712o9nJHhZcXjHt8ULrPHyV+odAGRKOIgvniiFSUxGWh
VJUPIyG8MbMYpXT0dErEIeTP0tCvk11gNg36nHyUZqfjTH0JbrSV4V6uORr9
ZotxvH8pnID/4O5phbI4hI1AeEt0t7J0hWN5BvvDk+WYnkGfSzV1QxX3UYz2
nKgNAz0X3avGi8FcBvwJ/R4Wb/29YC+U7KOGJjbFW/biM+b8Kf933nmnZ+bU
uf2ulh4DYW6JkjG2QapKbpEastqkVnWHdFzXKfWUd0u9tWelqy190hftV6X7
FN8/6b4hfdNzbaCtqPL7FPeNLy6lTRs2CTAtIj6hTELQvS+p5uM/yyaJATl2
uOKp5frdo8Vy43SKFmMVV0vTgtxj+95HX9gHYrCRo9R/N7nMcgWja4byx/qg
/whd34/nyRWdq7PkDThMs81yfZA1j7/PmYqDrisI9VdSgL8SVYT4FXSM9isp
wCfUt13FoI8SPlzNsR2Gfa0dw/5mAfvRVlYC9rWOdihxdoR+K6+K2gb99h0o
c9uFcneWqnujeq8Pqn33o9o/EPUhoWiOisShhFgcSUnE0awUdORn4HhxDg5q
1GgvzsPRgjw0ZOWiLDVX7t+rClGWXYTmQjUuxi/E+aipeJQ1QxakcO5kmvtj
TG0cAfssnjHIUT47tvI2v98r0G+ypWQRzdfJ8sCoKdJv2z8Z2TvnUNY7HS17
xojciyXsr/RZCW9y7N59gyWRZr5D1kZck2cFCKs/fqdYy4o5moPK2lXTCsHu
EetWjyhmh3SrNAQvEFrff6P/9ycE+l8GLsHVvYtwyWsxLnl/ikt7luGKjzkG
fC1w3X8VbgWtwZ2wdbgfswl3EhzwOH0bBvN24bsib/xc70uAH4R/rIvAPzTG
Y7A5A+f1KTiqTsJPjlfi2w4j7rdoMVCRgTOFkbiQFwRDmAd+XJeOb+sy8bg2
Aw+rM3DdmIvbFZm4VZaJz0szcM2QiaslWejTEUnQCycV5uJUQS461bk4xtyd
l4cjefk4nKtGa24hGjKyEbxpFvxWvImA1e9i77pJCLWcIC7uqp2yqQvv7WIP
JObeOwrom55H1q0P7b7hdI6b6tfnMB7cmGM2Xi68vwbw8Vjukw5e/BhJYcvR
UPQp2isW416PDPwihKfwHoMfMqo8ZZ/3n3zIG41+PF++i14t39xQyjUczN+l
c1/8Eg/mcAp9d0Q5h5D/OeUcz0XDaIrohd0I+hRHXc1Rb7cM1TZLR1GUv5Si
TkZ1o81ylNssE6DPRR25Wm85JJLkoSWdOBbQWlugZAvdqLaUlTutR63rJjTu
2oJWb3uKUaxw0GcrDvnuwMF9bmj02Y36vZ6o2euNqn2+KN8fJFuIh8RCF66C
LjoNhoQcGFMLUJGlRXm2DsZsLd1sWhjolOYQA+RS3E+voSG3AFmqNGHFfIZ7
MW2l+FptjsNBc8RuIZ7K/nPlJFnccFDZTnpaWYnNsT1veOWKFkN/uwL/rGHn
Uo48mT+KwZ7NF01xfeVQfM/PcvUEszceXE/8wOS2+zdvMB37coBv+k+8L9PH
mwuDg4P5jSnh4eF83nq56mP6b4RJkpn5yz/pB3WV1uLf5bKn0rtjTs6eOK/f
3sL1ifOGnTfD3JIkTViVpItqkIyJzVJtWqvURGlFm6ZT6qS04gylFX0NvdK1
1kvSlx3MNDd6B1qlB0Xh4S9ORk7BM9NSPZMBl8nnvkOZjKYgWEqYLxpbPADE
ERU3HVmyxnJAng3kGUGuKOXayYZ8fDNyTfuLWOGuJD8HfnKFlJtbdF81aD6V
U2RubnHrl9dRchm6RSGZ0vHop7SingimzslEMitR4bASRjsmmZVEMBS1iLNK
3k9hu04uI40gGbXtFsKJLUi0sYLWyQ46F0exCtuwwxVlu1i8444qimZq9u5F
ra8favcHoDaI8ooIziti0KaKx9F0FToorzhekI3Oklx0GAiTtIU4UaJGW2E+
arPzoU/LgzpFAx1FObWFOhyNtRSt4NbAOaJ8LHYAHlLsHFuVlkGtTDL/SyTD
paT/ENbgE2X7SSXHYHtwJmuekWJBDxfzrsWMR53PDFTtmSHsVJj4jynbCbil
E2s/XbgJKD3gN6B2eHcUT0yNYv09EY2BiIY9qHjDFu+CYTePIbuiSsVPr00B
yp6ZQ2nmS9YH3DJTT8dziqT/WzsefyRGfBr/EW4HLcHAvsXo3/cpnaW45rcc
n/uvwK3AlfgyZDXuha+lzMIS9xLs8ONMZ/wkbwcRjQe+0/vg29IgfGWMw9e1
6XhyQI3Bwzpoov3x7dFSPGwuwK1yFaTcIPQXBOPr8gQYI/fgTlkSHlWm4n4F
LzJMxeeGDAzoM/B5SRoGSlJxRZuGviIiLU0mpIIsnMrPwvHcLEoUs3EkOxuH
s7guSJFDVh4li/k4kFWAXD93IbUPXPUWIta9heANYxC2ebJIndlFlyccuAHP
e3nY1+u2QjaiHscLH2uVAbOuGaaLnsnhy7lsLfYKuYjOLUVcTCxc9pcOLMLg
hY9HMetwOvKNUk7i5OEx21N/PY9HnPhdrhxxXvENNxTmynmDqe87skFwV8kp
HtD5ms4jOveVXIM/d3sWBk9QbnN47lAp6YuwT9G5cwWaHJlKamyXmr2Natul
orlbpeQbFTLdcHlpudlmlFovF3JOIem0XkEZBx8L3iaDcvYTc9mAhh2b0eJh
QwDhgJLddijzcsLxQDccDdiNw/s9cNDPixKAvajzp1AvKASVIZEoD49HaVQK
DLEZKFPloSJdg6qcElTmlqCCTnkuMU6eDuX5xD7qYjoaqNOykBkXJ/wkemqL
cOOwHvfzzNEfNxVfZ0wX04hDLMORE6fMPcoy3FOKovCkvC1H7MUWjYNJ8i4Y
U8NAzip4lQH/Q7nFW0oZaYI4/fF/X7Ng7A9S0ZsFISEhTC919PgD1PJDo1Tu
P8w0r/vFlsrfmZmmZevGd/0/nSu2fL0vPjxriIBmjJvdb73YfsDjMz9JtVst
pXlpbwbtjLsZ5qGSiiJrJQOlPOWqFqk2s01qzj0utWm7pE5jj3SWUp5LzX3S
tbar0ped1+5UJKf8Sb1rPh5QGC0qejwtyqYBwh+NbWw6pvGaiMPKjoCGKYQ5
M3EvbbrozbJPACsZOevhIVXmn6RNbyNq/VsiA+KPNXu+J/+JAWImXazfalea
JVzh4vnwR/Pp1qPbrvcjubFxbba845PTTUW8/F+EySc9lhAfWaDWyQLVxEWV
DnxlW6DMjq5y25F8tJq4aJiPtHYbBR9p7KyQZmWLxC2bkWRjLWRIJducYdi+
TbTKKjx2Exd5Ci6q9/VFg78/6oOC0BAWhuboKEp44nA0NQkdlPAcy8tAZ1Eu
ThjycbKiADWaYnRVECfpC9BaWIDqHDV0GYXQEh9VqnVoyU/C6eDJ6AqZgqeZ
k4Y5qWX4qTXxEeuRuN71okxOfv6NbaS0cvLD7nnf58quNuxW3RkyHTqvuTgR
PEXwHetjJGV/Lq8UNw2AZTqN53CBLjeN04/MAkUCVDTi8HCYwfVHYnCMXa95
FcNDxdKKJ5jE9BL/vq2KpqZb0bd3KtZkh2XgGrJCzpmG/ymR7VF+Tb/rt/EL
cCd0CW74L6acZwk+D1hGeY85boesJEpajfuRa3EnaiMeJ1njYZoTvs7egTs5
e3BXHYh7umiimyR8Q7T0bWMOvm3Ow2VDIipifZAXuAvH0v1wUxsuKOlxRRI6
04PRkRaEu2Uq3DaocKtEhavaVFwuTkV/cTIuF6lwsTAZ59WpkPLTcDo3HSey
M9CemYHDGRloTc9Ec1omGgnFDqRloz4tF7UUXxiTMhBiOUsUvcLWvIXA9WOw
Z8MMpNt9IMKuVkoyefU8UxO3mj6n24PjBS54/bvJyrdNmXvuE9f+KG5Lc7Zy
f5iRBns/Fs3n9vLFcnrDHQzKZgbPf4T+1oUcRz+cx3zGmc19cfhjX83lxVn8
Pte4OPP5Zt5fZkA3lHrXl6Z6l8JLj0QW9Hgud1oeKR/7SvkayoYkvVL7apuM
2xFLcHqXBQ65sGnRUtQSL3HawylQjWLlq/ATfc8Km+VmK4SGiecNSsVZQaTE
xwJGWw4r16J+22do3mWFQ562aPdxxNH9LsjcaYuesF3oCvWgy9wL7cF7cDh4
H1pCA9EYHob6yBjURCeiMi4VxsQslKeoUZ1F4V+eHjV0quhU5tOjugRVFBJW
0y1aSiltYmQ0qgrUOEjh4+kaDa41q3E7fSEepUzAg7RpouYg6jJMTlz1OslA
eGY6Bw+SsiiTux2CqxTvhjalqS13Oka9hpgmDBHTg/Sx/p9OHfU3E5NMQq/f
wvC676HkT2OVNjf/fyYi+zsYazn/M1xl+4HcS+arH3E+x1z17FjhRHx7fA7O
66Y/O5YwrmXrkret6XPjhn8vOYv6ZMonRGKz+jd9bD2w3cJDirRVSVHOaVKC
a66U7K6R0vbqbga5xQtC01JmZUholiqTW6WGnHapRd0pteu6pK7Ks9JZyqyu
tFzplWpPfx/vtvlFX8wU4dwgTCnZxYHphl/HkRbHI9iMO8nf5szA7ZTpohvJ
iiAO5Rs9RotNkxS5i+ZN9Pq35Wdppgg+WQXKCMzrXIdUhmdnygpwlgxSxPj8
4QJxC4vbmlv1LLLl9gBvrq+bRKg4HQ3EZnXEZjV0qhwtUEFsZrQzMRqLPYjP
zJygs2FG4xLeOmhtZUbT2G5G8mZbaOy3iEa9ym6LMKQs3b4VRrftqHB3E7Xi
2r3eaPDdhwMU0x0IpFuHLgtZUBtL2VUC2tOThWdsJwXnJ3V5OFmmRldVIdor
i9BRVYzT9Nhp0KBZU0i3FGVYXF3IK0GzTo/2OEu0+k7Gxeipws+LZfR/Nm0l
aFCa9cxq1cosXLmstP2vUpnVuKT3ezE2MUHEhhU+83AydLpAzduKEVGfshGe
G/bMTjwPl+0yCSmOk0QHh1jtDX5jFBf26J9tPzKLpCdB3rbJ23IuR8gbN3mZ
GSuK/qtMgeJDisNm94yXM6yRzkl0Hd3LmIn/03M5bxx+nzsW33MqmLAE9yLM
8WXocnwRak5nOe6Er8BXkStxP2oNrodvwtVIe1yPd8WN5N24nUlUlrcfdzXB
RGfhuFMSji+1obitDcEXmkA8KI3CY8q8HpfH41FZPB7SuV8aj/aUABxRBeAL
XQJuaBNwrSgBA3TO5qfgkjoRF9QJOJeXBClHhdPZyTiRmYKO9FQcTk3FwZRU
NCWnoUGVjjo6NapMVKuyUKnKgVGVi9z9exGw5n2ErJZnJnw2TEW2DS/Lew8V
O3mr03voCZC79nxfcDjAzhr8IosX9oiycZVH2Vgv+1AeVXt++0Pc61ooOIwz
q+dfLZCrcd8qXXmFkxpyF3NnfY7Zu3Kp+0vlfKE8cjOeJ94ezJWzrhkv9+hN
XZvbSiZ1nwsbc5jD6KfQ+Xau/PbDV5is7CMxQMGFrLsxS3HGwwIdruyLspTY
bInch6+zW2a2RZBZta1MaCzG5eHnShuTKFceoCsjIjPaWKDSbhVqndeicftG
tO62Rpu3HQGJE3pCXKHaYYPeGHeci/aCRCnzqQgfdEbuR0d0MNpiWSoTh+ZE
FRqS01Gdkouq9ELUUmZVry5FLZ2aAjqFBtQW6VFXrEOdVofUmBjKunJQXSDb
qHRVFeBSWZh4obgg3hE6R6y4Ffr2JiXL4lr1eWUvKT+ySy/vJz2jsJqpfz/c
xjH761RGkfkPdnBeV8Yb84Nf9yZT2hyF2v7fcqxhxnrdj1ZmqJl9Tqvc38OD
pimi+DzLbLE8BE8p5x9LJ3Lg/MDb4u2W5dPF1/J/grE+mvjRyUVTFvY7LXYa
2LvGRwq3ipLCrWPpJEqRDslSrEuWlOhG7OVVJGX6Gm6GuiXdjPROlbSxTZJB
1SpVpbVJDZSKtRZ1SR2GHqmritmrb8CYYfyNZu8qPOOlHxUTxXpMMdnCHr+M
QM0i6Obf9fBUDkFGMBevXuTA8mjIXDHBxh1XDvwPer4nP3ERQoaTR2kZb+5s
3/eeyBF+nj1eBsEWxcuDJak8s8QKyW8VuczlhXh+58OXm1BcDz5AzEWEecB5
BTHXCtQQa1U5MHPRfWC3AqW2FpSHWaDEhs/KYeayXU+Ha4MbkbfFCkWUi5U4
WENFLJbqYCOkZRVurqhy34kar92o2+tFrLUXjf5+aA4KQFNICJojwnEwJhqH
EuNxJEWFjsxUdOZl4gTlYV16tci/TlFAd7qxGK2VJeg5oEU3MViHoRhNxZyH
FUNPQWGDtgRHNCp0Uz52JHCaeD54wpcHwIZWAB8YwV41yjIOnhOhPIgB8FcF
k3E1YSbq/efhRNgsPEqdOGS1zA1vLktdVlxG2RLKNOxX6DoB2c4TYNgm51sG
V3ZBLXUd/QbrDcxkT3o2MWGNGVMfa6XY3ZeTMPELHlB8hU7O4GuiewYl1qIz
aWpCtchNKA4xBvOnU7I5Df9RzPXBcfhN9lj8Im0KvkmchrtE2ddCJ+NS4ETc
jPwEtyI/pV90NS6H2eBKuA2uRtiiP8YRAwlbcT3VDV/m+eB2vi8el0bga0ME
vq2IwxNjLB6VxuKBIQb39dEiUbtL57Y2BocT/dCasB/XNLHoL4jFVXUsrtBj
V1YyenPjcCY7Fj2Z8ejKSMCJdEqqU1VoS1ahJSkZjYnJqE9IRk18CqriU1ER
nwZjfAbK4jOhj8+GITEH8S6rEKTUB8M/ex8Z1u8g1340Yuymo85dXhfL7MWA
yLpi9oIS4VqDwlzd8rrawRMLcK/zY/QfliW/904tFDXBVwp/8hC2wj88fD14
fL68B+lz4cXFr8X1WZyB8ccEL82Rs6v7c+UMzKQ6YN66NXu4//SVwltfz1Uy
sEkyfz15hbu+nIXBk/MweGiu2NP/Tdoi9Hpb4OROcxx0lP20y4mc2Oerng7b
ydaKs3wUG2ybWQzxVwXxVrkNnxWosOVBz1Vo2LoOB3da4rDHFrTvtafLzxln
w7ajbJ8TWkN3oi9hDy7G++B8rC+k+ACcTgzDCVU0jqUk4khaClrSs9CQkY/a
rCI05BvQUGhEvYZOURkaig04QNFiY0kJclUq6LOzUFdUQJyWh8biHJyszMdF
QzAuhn4gJJs/y2YrxMmKZ4mShHHkfEH4DV2ayXsF+2YM79hm/upS3AdblGmR
SoW73hA09ra8VfkV6vLd8MHfylzvv/wx8fiuTFHMVqYvG/uXFCUe/1oO9c4Q
b7nKH132mm/wzmt+J3mf6mI5+Zo96tkxooBnXDnlGdGBmWKvy69OzhYLcRkS
eLMgN8LjLEc/+3TqhL6ZY6f2O328ZcBrpacUtiFYCrcMl8I3mWgtgZKyZCnK
MU2Kdc1Rqow6KcvPeDPUXXUzak+apIttloyUlNVmtUtNlJS16bql48azva3a
Yw9SfENfnAikCF8vlnvza1ExkSVs1Upy3TCi2sg1pRG09n/lsic692AOBc3h
wFP+wyNR4/Zy14vj1owt7wjdEStMOWHgBcVD9HZqxnDb64FCb4NMbx/LOgu+
O68r5UbWWDROwk/T5qDRZQXqid5qHVfQ7bFiBL2t4MQMekFvq8S0jJ7orYTo
TW+3ATnWm5GzxRp6ByvoHa2RQjSX7mQnrwB034FaL7mde8B3D5r278PBwP04
GBKElogwtEZzKBiLw6pEHE1PwbHsdJxQZ6NLm49TZQU4XUXUVl+M7mYtjjeV
oLNRD+mAjihOiyNEcQ1FxahQa1GuKUNLWRnqg1eiM2ACrsVPFujHHcShdaAN
ytNdr8w7KxT3NHcmLiXMQUvwfAwkzsTPcyaJFhhTJI/bPRaLuccJTRyXuM7x
BljKsbib1SKWc4v21xtMY3S1VhCZVe4Uh66AKrfRZrPFLhNeFMumsvy/chPs
QbJsiMCj2KIBxvlju7JX3OT93TU8KCOUFk3ygOrzUvq1s6eJDWu8puhf8sbi
l5lj8DTpA9yLfh8DIfyzL/iPNtuBbt8PcCxgIb5V78HXed54SOeRei8eFvrh
UXEgflwWjW+NfGLwhN7+2hCFByVRRGyRuFMcgdtFEZSuReBWYQRu0OlI2o/q
iD24kheJy7lRuESnj46UGQspIwan06NxMjUGx1Pi0J4cj7akBLQkJKIxLhF1
sYmojklCRXQSjNHJKI1OgT46FSXR6UKxWxybBV1sKiKtZolpSK42Rm0ai3z7
d6Fx5kCB9aMfwOg+Bc2+U3GC8ua+2Bk4FDofDaEfoyF6IRoSPkFD6iL0N3yM
e8c/livsJmJ7PGK7yEOlTHhPGSS7ScTYMR/9VQuU7VACeS/P5AWx/P41k3Ru
tlJKnCMTmanM+Grr675SUuRH+WMy143/C4573k8/up3ndiker5ktXIS6d5uj
zWWprLKzYfO1pTjgsMzEdcIXeDnlCib79GqRrBHvVdqYmy1FNTupO61Gk+t6
tO7ahKOeW3DMxwGnA1zQG7mDnrHtqAh0xZUUH1xN9sUV1X70JQejNy0CZzPi
0J2lQifdjEeyc3Awp4ASVx0aC8uIu8rRqC1Hk64MzSWlaNYbUFNchOLMDOK6
IhzQ0tcWMcdl40R5No7HrcWZoPfFSMJA3FQ8yZwuF6ualJ4I6ywu8qhy/yym
OPmJJ8JTUrVTivyC1XYsq2Y1xVB6xoLqlyhuIu5lz3xWs2+qSGP+1mLjB0Nk
NG7orb9GXj9QWJRna8xm/+Vnh37ku698/9essnrlY/IOlXVyCuc6msLOieIy
4V2T4kmimOBB3WT0l0xEpveHCNg4BZGfzUbk+pXwX7UG0Rts/rR+1qJe31V7
BN+FWYYR30X+RSoX5ZJJnJcrqdyLpDQfg5QVUM6FyJtRe9MlXWKrVE6pXC2l
cs2aLqnN0DOQG1v8G7WnBR4QOIrUrU5J4SrEsnX5NTaldKaCpInvamS+Y+3B
H4smKn+xu8gdWFfAO0FFe22bqb32DiIp5E3eLLfXGHg512CN1X9xj6Z1OLQV
A8wPRwwq//RDSE2L5bue71y2l2FEbZ6MvsAlaHqJ9ChWJNIrJ9Irs1WIz8ZC
CAvZk8RApGewWw+D/WcosrWEwWETHSuUOm1BGuV1mS72RHjbUee1iwjPA42+
3mjy90FLkB8OhQTgUHgoDkVH4HCcnM8dpnzuaGYajuVm4SRr0fREeOUadNcU
iTyup0WHw/UGlJcY0X1Qj3MNJThZoUWrvphiyWLUFGlRkEIISilH/u4FSN2x
AI/TJ8q+lZW8sK1+yihhRCCbbg0WzER75AL0J88RBWDO6bjHxpYyLC78hxx5
p/YTXuKSNE6M+7C2rTd0jBgVNek9eFQ02HauYLTa3e+Zsffqe2bBQgfCn2PX
Ce7BcUrHlUvuyZmWkTxOlW1sRC+QCbhlqrL3TxkhelVQfmjKS0uLpZi5+LOB
XnfteDwvGIffUnr305QP8CCWromw93AxYDTzHhHzBPSGzMO3+XvwTYEPnmj8
8KQ4AI+1wfhaF0onHI9KIvBIH0FsF4GvisNxpygMXxSG4ZY6FDfyQ/B5Xgiu
5YagPzcUV3LCkOrtiotZYbiQGU6P4eil05UaRUxHjJcSgWNJkTiaGI3D8TE4
GBeLxpg41EbFoSoyDuUR8SgNT4A+PBG6CBWKI5KhiUhBQUQa1BHpgvmy9u4U
1knh63+E8I1jRWFS6yzXMWp3f4Cy3VPQuG8qjgdPR2/MDPy+SAlkXpZ9yIz2
Nes2Hok+28O5w32zr0b2xWbL22wvzxQ2oLggsuveGQyrvBWjT8Hi/hHz/F+I
rO/2bP6aW7OHe2p3TWwmiFCpMr0tf+zRnFerkvwtZtGv1pD1ichonjXOwWU/
C5zzNMfRbTxBZI5mSvCaHdg+byk7kNK3JPojRD7gQAkfnXqF+GpsWS5Sbcus
V2tvgcata9CyYwMO796MDm8bnPB1wJngreiL3onLyR5I93LAQNY+XMvYj+sZ
AbhOr2h/TjQu5SXgXH4KTudn4nh+HtrUGjQXlKC5qBwHdRVoKSlHi8GI1tJS
tJaVIofu4IZiNQ7q6et0amK8XDQWZaKzLB2tQQvFOMCtmDFi2/TJiLkiypcV
hooS4JLYdDObWU8svlFcPRjYudXWqRQmeaio9gdY7zmF/CyI4sG6B2l/X4vt
dXXJsX+Fu2TGevt1LbkfIjSXH2TEHyprvjVEkKNf89kPxb9K8jeDkr/I9+nS
mSyKuM+OTkGbaiL220xBrPMcJDuuRJztSiQTQLMRdNUOW7GHJdvGlgjFDsFr
tny/cvZSOQncFP4yISpJYJRLjhTrppZUXlopzdcg5QRX3QzzTr0Z5ZslGSgJ
rMzskBooCWzRdt9JCYh+0elPyZ+OFe4i+WuYzLVL7spxfdOo1DmrFRmQSXoi
E6L87HiJpONC9FScCpkiZnm4C8S7Vth+bWRzjpNATgZZ2M2fZ4cfloL9d7ki
rmcJXb/SmXukRL8/VhLBSxQVn/1I1h6z5RpjLeWkl4OX4OA2czQ4mY/gQ3Pi
Q/OhRJBrnWXEh6zjLeUxWltKAK02ocxhI0od+HEzyl1skOlkgxxXR9R7u+HA
Xnc0+XrhoP9eujN8cTjUH23hwWiLCkdbXBTaEuNEAtiWloL27AwcV+egi+6s
02XEhZXEhfVa4nAd2moNOHKgDAcqjTjRXIrjNQacrdPhWLmWYlEtshOTUEic
eqJajy6VpRDEtwXNxKP0qZwc8y1UO8UsH8/Zbjx1LvpT5tIdNHWoS8cduuc6
OQf/bQFrTiaI4Z1v08bjvsnynr1Gw+Q4hcvObUqNM3PrVGh3TBQZHr9/kHiS
k8NW7/dFU+7QHlmbwl/PenvWm9yKHytG/3kMlH/2UIPu2PThabtuZZHZieEB
q+Gdc3K5c5Aywf/Ty0aw/5w7VvhHPE54H19EvIdLgaNxmjLAg8SHV8Nm41GW
Jx7m7MGDPB/cV/vhfkEAvioMohOMrzQhuFcUgjv0+GVBMG7mB+N6bhAGcgLR
nxWIK1kBuJwZiL6MIFxID0Ky51acSwumE4Lz6SE4Q48nVOE4khCJY4lhOBIX
jtbYCKEjOhAVjdqIaFSGxcAYGgNDSAxKQmJRHBIPTUgCCkISkR+iQl5IMrJD
UpFPnKiJVCHKaqaI/faunyrs8jSO7wrvdJZEHtv33kvDJRzL/JlRlmMKfv7O
KffALaWrZiLAe6LseHeO2Xw58zONv/Yrpkq9M9Cvn4/BA3NkhZ6k9Ix6lfrb
5ZkvZ4S3lPLn0KPy8WvK97wib0gQ9SmW2d8XpU8TIZrJs7au9O8sDHbNx/Pz
s/A/xOd345bhvNcKHHCyQKvTUrQ6LqGzVJQ+mx2XsbEsmvjRkdJDOgcEK5qj
ju7XWjuZHRsIBpu3rcWhnZ/hqIcVju+xxan9jugN24bLcW64muaJAl9nimd8
KN7xx428YIp/ONuPxbXCJFzSpOGsJlsMxR2jmPNwsQGtJRU4ZKjE4dIKtJWV
o628DBUaDT2W4HBZMVoNhThYkoem4kw0a1LQURyLep/Z6PB5DwORrCIYJ9tY
Npi0VdPkXstlJbv+YsTKfX7+OBiRFHWkqd7J7k2mXh1TKI9fVchGcs/pXpLi
+N6eLK/yqpzIS87+5o7dstfzlZLfTZKJ6q9IU/4mpvuBL/3Ra750vvh3tJwD
2r2DB9nj8KxmIvozxyFzxySkO3+K7euWo8zTCtXeWygY8rYx+4T+tUW6Iy87
skPpVluo7e2QZm3PXlwvti1ad8d+kb1c+rQylT5VlAoy62VJUZQKxrprpOS9
OinNr5yYr/Zm2J60m1F+2ZKBUsGqnOO9+vTm74Md17+4ED1Z0Z+MYDVFRzDE
fBUTh7+mYbLyB+rEkmAWRLDEj29htnXmdlLF3tki9eC0gdO9A5RWsI17AdFf
qkJ/sSb6Izi98Sr98agSt/fujhip+UYZq7nwMWvKZFhg+js5TaQZV8PoFnM1
R6Mz3UKOFFgS/VXR7VQh6I8O0Z/RlsUqq+hwDXQdsjZbinTQSPRndLCE0ckK
la52yHaxQ94OZzHK0uzriRb/PTgUtA9toftxNCIIR6JCcSQ2kqBSFqS0papw
JCMNHbnZ6CzMw+mSQvSUE/XVaEW9s62aqK++FOc6DDjZWopTB4n6mg3oqKL3
q3TQpRF8EoU2Eg12VOpwShdF1Eu3QfhUnImagc+TZ4k9j4L6iPY4DRzMnylL
LyvlNh93Vtmum1Mzfk1+VzhhqA7KOiHWQvDM3zVFoMJtPi5mHvOTRSrFO6eg
2G2KeJtbf7yvk187XsjMrxGnjzxbzF2+rgC503fndZ0+02ycPH/It/jpGWYq
uePH7di2KcNalTqibONkPGdX2bIJeKEbj2f5Y/FPGWPw46QPcCfqfVwNpnTQ
a4KgwSuhs3A3bTfupnviTqY3bmf74HaOH77M9acTgC/y6OQH4lZeID7PCaBE
wR9XMv1xKX0/+lL9cIHO+ZT9OJfsj7N0ktxdICUH4ExyIJ0gdKsCcSIxCPVR
UWiN4XSfN4OEoj48HLVhEUJcXhYUCX1gJLQBUSgKiEZBQAzyA+KQGxCP7IAE
ZAUkIT1AhczgFOSHpyPF3XVoIiB601i6j98Vtf96Sr/F1AvdIxyasG0Ky2WF
OWGTMrbXo1jmsAPal0qx8s6cYfGJshp/KPvoU2QSRHmDdbPRXzRPhl0WqLNc
gttOXJe7IJeehqlQyRGVFoz4OH/+wgjJxfnp8s/gPFLkgA/ncPPQVAhVzuBp
ukWPzxP/6zfZi9DhtgrSruXCe7LNiY7zEuE/SYxIMNLitMxsM7HhcjZYl3ND
ex5WYyZcgSbnVWjZvg5tuzbimKc1TvjYoSfACX0RrriauItyQC+0xLrhUIIH
bmkC8YUmFF8WczM3Hre0yejXZeCiLg9nSjQ4pdehs9SI9rIqHDFW4Wh5Jdor
KlBbrEFJRjK9ryU21OBQqZoYMgcHC1VoLUxAU4ondC7v4pC3zH7clvixegYG
jbPlXJAva55EYsXBF0oD1ZSi88vSpzjq8ktgKoXyTEDlBJn83hoiv+cGJr45
TIB811ROFFnjhAfXo+Xps9fx0BtDNGQ+9EmlJ/d35G3iYz9Y2HxdI0/22Vop
53JTKZfzHY3+2DHoIcQKs5yJuM3Lod+xEdVEakH2G1DtZU1nC71vQ4+29GhL
AbcD8p2J4Qhxi53skW3nKOzLIje6vHD4aP7A9uW7Xs7pnOWcLmqnWkpw10rJ
PgYpLaBKyg0ndtubfjOW2M2Y2XEn2jvsT+lb5+CZduJwvtaopO9DWgOF9Yyi
4Cn/cauHfKfYwIT3avKKHl6OzDfnE2WWitelMfhxTY29puqUWifvZFBtekfc
7Exw/z9n7x1YZX3F/+cXW5WRsIfIxsUGkSkQIHvvvffee++9bzYJSchOCBBu
gAABEvYQxa1xVGtLta3WmmqHWt/fcz7Pc5Ngsb9+v3+c3BAy732ez+u8z8wz
kGrTOW72iQpuHOvhwQvXlk/O1X1dnu71lqTzGrLWSVeSqvqyYxFGAzegzYzu
CCOG2yaC26YJuFVobxYxzwqdrWTbyHjv527Sd7vVUaG3R209KvT3QmF0ADUW
ekg30UWWpTGaXW3R6uGANm9ndPi6oSvACz1BvugKDUBnRCg6eTxGXDQ6EuPR
kZKE7sx09JOsO1WaC6UiH4Mk3ToUJeisLcXZzlKc6y7FydYynGopxeW2Ypxv
KkJlWgwKEmPopsoT6YWO8nz05pKkcNBEl+cCwaW3khZhOGo5XfmrmGniyl+g
JjFNFF+WS1zjSghOsU6EPPmlSZsrcnzsc3D7LvsR7HewxBuUy1h4lVe1/Xzk
WjKLiF5qO8XmRv4/5hgz8CTJwQE6h5X0Nad9NR9O8BVMSfAx21S99SLkKbdW
/7ylukmWeMQ3ZcQKcXezxBsXrQWz8EGshliffcpjNups52PIYzou+j6Nm9EW
uBFrjRvxdrie4IBrieTWJ7mQueJqshuuprjhCtnlRFdcTHDF+TgXnI1xxplo
ZwxGOeNUpAv9jQORrmobkEjyrifMBaei3HEyygPHIjzQHOxDLPPD4UBfVPkF
oNrXH1U+fqj09kOZpz+KPAKQ7x6AHNcAZLkGIt01GKmuIUh2DUOiazgSXCMQ
6xqFOPcYYlws4t3DEUISL3j3NATtnYUMHR4W8yRdZ9PQajddtBZcJcnNtw77
iEImq/rn+fkblOOUV5knt5ZxIclNGWnXlk6EN4VqOyNX/HG1QO8iNIQ+K/VY
caBNhbiTP8PcEI/DPreEk/hD8rcYlONz/On98rfjj134mcB7XUzUYJ25jIOw
olxzGZSVzwp91xz1HOosX8Qxy80YMF+PbqN16DRajw7D9fQCtBtuUEebIaOt
1WAjmg02iV33jTLeDuttQbPRS2gz34Uum73ocziIE6665AkY4lKIGUZjrHEt
1QEXM5yQ52OK20U+uFsciFdKwnCvJAp3S+NxozQFo+VZGK7Ix7mqUgzWKHBM
UY0etqoqHC0rQVZcDHoVReimz+ksz0F7aSZa82LRmh2GjpxQNMVYiWZ49kLY
M+TAyXjtYozVLpcmsPOqJD6E+GVgj0MVhRZzO1XxziWThZjt8qar6ilom4t7
SUTLjMUCb0Q9NWmT72NigeFI4CM73qQClF+i1X8XeE8/6luJjz06HTgZs3wU
+558xMcksM5g9p203/IrVJhpIF13AUJ2P49MnV2ottiHaisym/2ott0Pb53d
HOK2ZWlne0htJb0lANrooMBMj76YJxfpI0vfAPGHjBC23xieO7U+f3n1qiHX
Pf7/Keusc5WR9oXKWLdyZbIPwS+oYSg1uPZ9K2O3z9wO7vh+KEhaiiuqaFXZ
O1V/nDiaFkrPnLf0adXzH1q2+E0+79CdMqlCtbErahaSLVaJZBKXtXMiqVpV
2aL9JCL3Pk7ge1ys5mYQchCNE4IfJM/Fd2Vyko9VHU/JuTtlYMJrkxAcG3wG
45dXSEEcTix3LaLTYwPazel+MZYCmwy+at1NUOiwbSbbQraVQLgNuQd2ClVX
qbcLCr09qNTfA4XBXtSYHEK9tQEyzfSRY22CNg97dHg5oZOo1x3giV46FXtD
/dEdHoTuqDB0xUahMyEOncmJ6ExPQU92Bk6QC6mk+2iwugAdFUS9aqJeWwnO
d5ViuIeI11uCnoZyjLYXo5Fcx+qMKPq8QroP83GkmN3KXPRXpKPVazWijVeK
BB03WX2euxDfFHOtLPFObd4E8b4vkwKanOT7VjR5S+RTBTd5gosq2cfBzdty
AeelSfrR9zzlraG2CVH085Qy3ZiKp300BeXOkHEgkz//PDk0w/R6PTLJ1yxP
jur8WXDz5FMPl7gclYObMv3GcpeIUpefSqXg5p/SZuE38Zq4TQq0wXExLnpP
F+S74L0EV8JMMRphgdEoa4xE2+JyjIM6Lsc6qpniUrwTmTMukp2PdcJQtCNO
RzqSw+CAgTAHnCA7HuqI/lAn9Ic5oczdEuUeVjgR4Yq+UDc00UvcEeSKI/4e
aPDzRIOvJyq8fFBEoCtwI+C5+iPPxRfZzr7IdPRDmqM/UhwDkOgYhHjHYMQ6
hSLGKQxRTuGIdIpElEsU4j3jEGtjJgbmuOxehDTO9Rk8CYXZNByx4XbvGbgU
oCFme31GtxKP9/2J78hmuaHnuKwaLj49Obrv6pSY47BcJ3haxlW/3LXVtRBj
pU9jvEEevt0hz7VgEvbK3cfHxU7NE4vVNCS8qeZgsPjmEcsd8ucOyHUIKlHH
ScD7oqnu3jI1M0nZySgcG1wt2hDGjy0hR2sdmi23oFx/M6r1N6DXeB16jJiB
bBvQRdZJ1m64kZTeRtJ4m4TCa9TbLPY9tJpsR4flbvTY7kO/00EMuOvhvJ8R
RsPNcTXeFjfSHXGrwA1Jrsa4VeKHexXBeK0iHPcrY/C6IgmvVqfjTm0ubjYU
40pTBYYbq3Cqrhr9NTXor62GIieHHM0C9FUVoqcyF10VWWgvSsLRrBB0ZAeh
Pd0baRbPiFg074vlwMi3zCZyShpinqfnY6nUz3tdjmXek5sT35CTrzfkuOZ5
uY6zX35em8WSMLn94F7iEgE6/ievImDa8YSdP2fNaTFe+9ivJqjzqBDmZF+A
rOWW/gxS/22syP//cJBHCToJm7OFoCO7v3K2Bnxfeg6Re7agzHAvqk3JzPZJ
cLMks96HLLO9iDOij9uQuLMmcWdziBBnra22lN7qoMJSD2n6RigxM0SesRFS
9YwRfdAEQfvMYL1p5f0Dz++TdV2yQBvrujDSdVFOJYQ3BeGtVpkefGTU2y7p
m2Cd1fhL3lwpIjm1GFOaQyL9Lc9IHxZ1LHR0cS8Jd+2TzOORYCq8iV0J8tjV
D5I4PzR7IjjW6bEA/Z6zRLCLax+4GpCnISYefEL0JTDiuLKNCzi5XoKPT94R
/E3RfEkgcA3EyDLVIH5ODaxQs5MuIaLdve5nce/oGukSI993/MhynPN6CZ10
O7Wa0C1Ct0qtTLgqHUniVRHhqohw+Qd2IO/gTlTp7SDbhSr93WR7UG20D/Xm
OmiyMUKRtTHSrYzR4e2ILl9X9AR4oC/YG8fC/NAXEYieqFB0x0agOyEG3UkJ
6EpNRhfpur68bAyQRhtUFKCTPMcuRSmGWohuHSW42FOCy2SjZBfaS9FcEIvG
7GicbcgXG+Q7K3LQWCylDY5V5aHeYy0qrOcRUSTZLGKD5VJ8UpCtXCIbt4l/
pyJb4XwxwoRLX/jzueeNh1JyXayo4eSSlhjpJWJCXQwSxFJndKntQZzpygmI
sTK/ECjBjB0QXjk0EiyFPflLb0VKA7t5zPE/S+UO8eZFk5NWuqeMTjv51MPV
LBy6ZMi1SJAby18iOsf53uaBJl9lzsJvEzVRbr8cN/ln+s0QgDvnSb9PgBaG
g01xIdQCF8KscT7cBucjbHE+0g7notjsMUR2OsIeyjA7nAy1xfEgWxwLtEFf
oC16A+3U0RNor3YAxS7mKHWzIL/FCY3kw3QEOKM9wBH13m6o9nRHnacrFO5u
KHP1QL6zN7IIaqkOgUix90eynR+S7HyRQI+xdv6ItgtEpJ20wDvMLhQh9uGI
cCaFR4BL8Y1GxKGl8NujiXCtWcgTybsncdh6GrqcZoimcR5cyX4iz67nojDh
cnICj5/GE3LzFgNm9OnJZJqIUj4lJYVOyoDqkUFGUBsrWIKRxGWSgm6SZ/S1
yDP72hc+xgRT5/d4/lWb/HIckbUHv8/fZ6qu4+jmbQEzdZGxs5yUeG8uh7Lu
OdxrWy0+9U+Vq3DdbRNO22xAkd5GJBzgm3Cj4FufCRvxjqzbmBhHfGsTjNuE
FuJbq+FWtJtuR7fVbvTZ7cdJ50MY9NAnP8AYVyMtcT3JDreynHAj3wO5nnao
DfHEQFoELhfG4GZZEt6pT8N7Tdl4u6UA99vK8Ep7Fa621uBcYw0G6mtRQa5o
RVoijteU0I2Wjz5FDrrL0tGeTVzLCER7qg9SzJ4V8Seuu+PicnYzeUQPu29j
zSsxfmGFlDi5K0u5N+WhMG/JO1dVUUt2wc9MGZvIMy3q54nFXSPRS/EgR7Si
VcwVMo6FHqHtx2JS+IVz7kfue+IX45WPol3KVFn16OqVSVyq/+dn/VLibbGE
NGkEya9n9C/VmHd308KFcN+yGjmkE8oMXkaF0ctQGL+MahMyMzJzwpnlXqHf
UujjKUb7CGlWBxlpVofISLlZ6ZDposZaD5VWhsg0MkWpuQmyDE2RoGOG0APm
CNhn8r3JC4u+3Lps4Zc7Vy76cu/qp7888NzSLw9s3fyl4ablX5puWfml9bZV
X9rvWvV9p6t08IlkjkjCcc3cQulveUFyF7kXnLvqfo638nlCuX1PaONxaLys
U+xbTpPGbYgRs3I5IMfGDjsvQoXtQpHfaZBzcqqSFJ7GFbTrcfht/7XY4cZF
8FwmweriyzxexLlIGnPL+QguPWHE3WbE3VnBERK6osavrERX/vMSAc9wXdgq
nPXYiW7rLWgzJS+Qxy/ocS1Yje4mtZuEORJ0ultQcOAlsh307+2oJrxV6+8k
240aeoHqTLTQSI5Esz0JN1drhBjrotvPBb0B7jgW7IXjYb7k6QegPzoEfbHh
6ImPIrTFozs1SaTjurMz0V9I4o08ws4SQlsloe1IMS4cJbSReBsh8XaltxTX
CG9NBXFoyovF5eYCnKnPFR2qnWVZOFqSieaSPPImc9BGd3G2yVw0u8wXTytj
ijH2LxZsqjClLNrGp2CNhRuHLRlt/PgF8Ydbkz+WEfdm3ByxdvtWxGzBqVHi
1UiIxK4qpyXo9FwgPsYc40kn/DlcNXQjfBZuRrAAnC3ScYxJTsn9OW9Kd6CK
b6rwZc/iKeFLuTqFW0l+zrgj86GMksKXP8qTUc4HLcYZ/0V4P0YDNwNnENuk
is0hn13kDRnhTIApTgea43SQJU4Hk4VYYTDUGoPEPGWoDQaCrYlrVugLsEKP
nyW6fS3JVbEisyZBbo0OXxsUOpmg0NkMDd4ENj8HtPnao8XHHg2ejgQ/d1S5
OaPcxRnFjq7Id3BDtp272PuTZO2NOGtfRFkHINrKB1FWvgi38kOoVQBCrAIR
YhOCUAcZcF5xSA1IRozJNoS+PA2xWtOQrfsESo2fRJ3lNLTZTxfrOXkVIndJ
cibg76ziKuUxDRxL4efxpFxZclFWbVNjlScW/QfcREFg3Txi/HKpDlBq7JJW
NXMX2OH5v+ZyWYZUvbx1mIfb8acw39p/Jt44W3dj6cMTu16XJnY9uLwKI0ef
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
vfX0dzavP/+1/Xtbzusj88ZOVhJ0CbZn6w8bE3EPG704drn+MPoK6s9XxmZ/
HeP47ncK71fw9bgcZromdb0RmeBjiw3Wt/z/cBAukW8ylqDOcivLWxm821BJ
wC0n4JaaTIPugXcIuu/RmvIiF5rtRuCOHQRdAq85g9eEwGsGnaUVVJa2yLF0
FI34ypydUe7qhjJ3T5R5+qDcJwAVARyYDSfoRovbhz3IzUkpaE9LQ1dWBnpz
MtGvzsSANgutebmojfPGJcUCEoxk7qasmdI1o9O8yJzjwpmhYtbWfNmLPE/y
IvNMXR57nDPlReZDnjUuz9niIXfcopa9mtyEgdt3cASxnaDAcyLTzKVyUxaw
OdPAG/PhDGMEfDCHNK7/B3MQuH0O4vbNhdZuAZq9F+Fw5BKcjFuB+uB1qA9f
h3N5JMFK6GAfXj6V53R46VS3XZm7HAkZS12NP1UsxZ3gt3DK6TVi7xs47vAW
ukjjFplvwZDj2zjl8Q7O+m7HxaA9dOqY0Z9ii7uprrTD/fCZLgxflCnwVV0K
PqlLhz7SGwfVCtxrycW/HyrGrw4X45uxIvzrqB4/H9LS7tPgYW8e7nVm43Jj
Og6XpuJgQTKGNfE4pI7CUXU4rpcSu5sz8E1XHr7uUOFf2lX4olWFyRYVHjaq
cbtOi4laDa5Wa3CxIp80cT7GS7U4UqTDiF5HzNehW5WLwF1rRZf7+F0vospu
Bg75S8FaZu/Daezl/GADe8UsR+YuCduf8oVn98boFG8fBxeIs6Lj2MXpnF3x
eNaZ2Bp8knDBwF1Z1n4ijWZ4dJtOoI5X0FNMwD28VvIo35QjtZxJys9clcje
x1sM35vLuXD9hvxldiifXYox3VqpUcOwDBsSRxf83kCb5SZU79+Acobv3g3G
LHiNnhHsLdoj+ZGZs/o9hiobTiPW7tpsFEOPW+hrtHZvhWb3Nmj3vQc9bUTf
nbQhrfajlLt/2Vug2tkada72aPRwQjlbul4+aAoOQENYKGpps1VHx6NSkYQK
ZTrKk3JQmqKGPkkNHS1tErGXlppWHi9ibl4Kc1eNcpUWlep8lNHGPFiUSJt6
CVo952LAfx5ORCxAf8gKYs1iTGQtQ0/sGvQo12KimGR/7xKpRW2X3IaoWeYu
a11mr4jTyuw16F397L9lbovUu2GyjMMsyyQ3Qu080f6Ic3/5rOd4MfuNuXUu
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
vE+8glqL54SY++2g5aJvkcfdUSIXttvlQ3ZCrqhelLF1Rq6ynv9BZ03PhoWD
u4m4UApxneQtEk1qlDUT2mRRIg277RNCYr0btfIkHO6Sv4fmdrTKaryDmrkS
bQk8xKzPjxufxMeY4j6Uhmxb81/BTM0e8bv/qW0bLrnvR43hAXQT0PYYSWDb
arCfAPcAmsQ6iFbjt9Bh9j56rD9Cv70OBp1PY8T9DMYUpnRLrRBmcgrnlQ5E
I10xFaHATCwbngXjckYkruYn4GZpGu7V5eCLjiLM9Zfji+EKXO+twpX+Knw+
VYG+2jj01UTjxmAhvhjLwef9mbjfkYbp2hR0FiaiMT0MDYn+aIhXoCnBC22J
3miKcUWsyWvweX+pMBrtoUefD9S/lK7DYPxuKWfMPI8Fkjir/4kcBN9aXDyX
M/vjP6CzbVJ4yY87e/cMhuzAo0p5K3TKFJlD01F5PJJfeUt1SIq6FV4vimkF
Fr3nkJersw3EZTmJxtkmDpGZy3ISmbcudyveDVkpwuK/8kA71yD5lOHA/Ytd
i8B29zzYiiTyp4uM13nLVq0TYwD/EMbPUKXBm1pPo5xOwjL9t1Cq/zatd1Ci
/w59rsTgXa2l9PY95Oh/iGy9wygwOIw8gyO0PkYuAW+OwTFk6x+npYPok8eg
PnFsCcXzp9n5+6wBSs2NiEuZotrdErV+xJ08nFEU4I4SpRfyAyi6DfRHrToQ
NWoVioNCkBUQjkQ/4laMsd7RiPKNQbR/LGKC4hGlSkZKWDIK4tNQm5pEu/9F
QTmbPLbjP1gtXsNxumRZgpbHcZanLbnt+M90ULMgNI9JMaXlaTyRR46RFCpu
q9egzlkbLa6bBJ3lwhr7w3TJQsaJRusonlg3P+DDYj6Mt+kGz9Mlo/eI02bQ
xzPlxfY73LZ8VS45Si6oa8St/yuXGGsWxQiy6pMo2jXJmpilEuiyh+9v4lbg
6+CN+MT7NVx23otJm1cwYU2v1q9i0PwAge376DA5jF7zjzBgeRSD1scxbKuL
MYdTmHTWx7SXCS75W+Oa2gk3IzwJdP0wm6gk0A3D3ZwYfFqUhM8rM9FLvLU3
PZpAtwSfthThenkqga0KIxQXD8UpMRCrQl+MSkxndEYGoz0yFK0RoWgOpy0Y
Ho76sAjU0qoOjURlaBTKQqNREhqLotA45Koi4Hlki5g39Xjrafiw2POHP4X5
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
8BEQw7wxGOaFvhBvdNJt0ebvgxY/bzT5eKPexwe1tGp8fFHjS8vPH3WBgXQb
haLS34WefA2cIFCxA8972Ssx3vCU5E5zTW6iuD4FjmySxebWvNvxrjc1ziqy
kYtENnJCdtnhOOuncpyVp1nckQcqctqMLbe7HOeg0Wa2BEcSkbmGs6DUm4nU
w6oS18flEtcZIs7KpTucoczSl+Kt7PjCrQicEftXmdwzOSwPrD8jw5yNBl6X
Y8QE9jz/9WLgdan9ZgzYbMYRs43oM9lEj99mtOpvRpPuFkHIOqJjHdGx7vA2
1Ou8gga9HWg23ot2Sy102eujz9UUg942OBrohHI3a5R5OqCfNPzphGCcTArH
ieQoHE+Lw9GMRAwTwY7lkzosy8HrlXS0pXW0Mh/DVQXIiyO1SUrwTH0W0TED
p2rTiI4pOFGZhOPF4ehWBuBYtgeOZ3uhOy0A5yuyUBQZgOHCTHQqFThRmovj
pEa9NNeLevU4zbliqCK/z2xfN4WK09iSXu0x8SWOv/6D1KBoqZTMeWqXcit5
pQRIAp7ao4y+R5iBaq+iyv3pn1KwUiZqtTQSTIwGq5NLWlVk7FeRUaYhPzcX
5eYxpuTZFQ8Rks28R7PXSH0GTEuSKMNpa6WCygYpNMXRVp4ufcFjBYoPbkH+
/s0SIYmOOfSq3LsFmbzo15lEyaS9ryBm13ZkHHgZ6WK9gvSDryL90PZp9GGH
2gtI13yN1k447N6OdK09SNfei8zD+wmSBwmSmkjU1kGCth4y9fWQrmdIoDRG
op454g1tEGfiiBhzN0Rb+SDKLkD4osd7RiORFGMCrXhasb5xiPFPQExIOtKi
MlBIcKzLzkeLIgheB598oB5H3OfgvM8c3Aqei/ejNfAHxTwRgePtA8ULJDPt
uVJzR5nc5shgLJuvmlCMCTqWjgYtx7vRS/CHhHn4Mmku/pzIGcY/xs9VsxLB
1z7PlfgqRapu/SRmrjD15Dku7ADINg0nSTgOOMxCm9VMdNnMxCl3EplBc/FR
rBT3FY0pXD7EZxaOj3PL5qWVk7Z1b0rTg7nukRvMx08+Ldm28Y7JV5J2Rq5Y
+ZYAyeWzf0ufh7/wThG9DNc81+OkLZ9XX0WP0avoNtpFr3twxPwAhm21MeJE
cHQ3w1k/G1wIJfEY7YHrSVzLGI1jSWEoCHDHYEYc3mstw3udVXivpwbvdFXj
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
yCYRmDdNio1WyyqP2Xjyn3CSZ+pWS7MDv9VPxV/ypuDL3Mn4dQad72kT8bOU
ifgobjKuhc1gZjIxv0cfJpn9AD9OmYQfJNFfmzARP0yeJHwe/ks7Veh5kchs
lgUmI5oF5jVJYA4NEBLrVgyLTJNn3eD55Rg8s1zyK+CmCULEV9Xz8eOkZbjj
8xoG3N7ANbc3cc39LZx1eRs6QmWL7Wqcd16F8y5rcMF9Iy55b8MlXwv0+liR
uHNBh/chHPMPxMngMJT6+KI8MBjn0rJwSaHCNbqC3iwtRX9FJe40NOBhWxve
PdqJLoMBmsRkVCnVOFffiCstzbjcWIeL9dU4W0x4LchCr06D01oNTuVrcEyR
iRyHtwUm/TZPQwxhMnbLi8i3GofTARMxSIcNl98PVtL/u2KFqSJWwuSHS56d
AMbTp44vxUD5cqk0tkduiWqTWocFHsvkEVjsZdBgQqRkkv07WbTwDfRnihk4
HT4fHYfn4WaMVBLL1lit3hPp+jdB+CSL5KXFOMQSIhnx2Xs4HjtB/DrOnvwk
d4ZUJNn4XDyWRxt+JmNSTmIKu7Ljr0jimG6vvy1eiBN0feHMFU8bK7NcSZhc
icwta1G4c5XApNaEymFcmiN3GzfcbUCJmLuyGTW0LWsdt6HWgQSm3S6U2+4S
mMy0pmW7H+V0JTW4uaDM3Q2lHp4ifqP39KODLRAqT9paXuFI9YpC8iHaXgGJ
ohSWYzbZ0bn/ICzzSVjqsjQooStUTFAg2orVOFMUKa4NXSFzMBA/D1cSFog6
KtGD3igPPRJ8lJKYzMjH+YuHBaZIZBqlup+v5KpJDtDxAcvXkOfjsSwwuTyW
0Ny8Y/n3/s8wOZapiz3LX4C3CZMjApMuvFwqOwnR9M4tpQsU9/txvoxJLlLY
nJ7lZtIBGZU3h1EpnEQWm9lg8OQyDFSuwJ+OLcGFQHMcI0zWHJCMzDvszXHE
dg2aBCrXEirX09qIWqvNqLPegga7nWg+uA9tJDo6/Z1R4eMErZczTscEojc+
GGcIcWdSotCbFovTmYk4lU3iLzcDRxW5qMzSojMvjxBZIBB5ghDZJRBZSMKy
EKcMkqjslRHZX89lsGrCIyMyF1drM3BNRuNAZRytGFyvjBaIvFOdjFskOnvy
wqA6MAOXI6YJHAo0akbQyK1AX6ikHCd/za8yC0vuLGFU8ivPLqsc9vmFagZh
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
I0z5hM6Qtyj9vV8WbkWX7SHoeAS5CY8f3y9G3ZQY7xN8M+mYBJy5J/cL4Myh
r+UQcGoJOLWn3oaWgFNLwKkl4Ew9dQppxsYoIr6pNJbEtK2e3NTpiE4/F+Kc
Um62NUCBtmB/NIcEIdM3GlVhdCKHq1EaFY+S6CQUqlORp05HtjoD6cQ103jF
5iAzPhs5mhzkJbN/v5a2W4wwVRwtCBMDwPKdtxMwb8e/a9dL2b0mNk4UbuCd
mwzW0HGzGT3R9KwmU8BeuUnwTR5WxGYubCL6pVbi/5xm43T5rFzXvLqorlnu
tBYZNjxfvsuTNleX1zKDrcJlb4g45jV5CPMP6Ojn3PkfKhYVNUcMFwYHCiH1
JknM3CpJI+fYyiF5ozAQ/s/0FfgB7ePZcB4BaohJb55bfkhMd7saYYOrUfZ0
bl5VORlQFBpmi6v+5gSZ53CDXm+H2FD05USw6YEHGl88Sg8ilhKBDwpj8GG5
Bh/XpOHThhwMEe8c0MbiYnoE+iJ90B3ug44wH7SGKNAY5Iv6QCWq/f1RqQxE
hV8gSv2CUeAXiULfUBTQylOEIUcRjixFJNIVUUhVRCNJoUaiIkZ0EqUFJCLG
3lLAJlc2PY9uQDK771EEWEQPdIn1UsSZG6LDQ4JOdvBn2GSHSR4hNu9PJ43D
kOr2s1I6du793WKgBT/Ms6MvCfgUVU1h4bJd0mU82DLjZPx3t578v6CmxDd3
zezd+A8i3cNtJrUyzxymR0IkmWnbsm6W+5h4BpaoaIre0w1SqmO+srlJQkwO
nlhhwOktfr0iIyij5jzv1OsNN2ImewcyfIiztG1kb/sNBnbSScMUqHxRpjZ+
OW4GrKcQ+E1Um76N6vPvoMbiKGoJOOtsjqOegFNHwFlnfwo1trTsTtE/xZjC
8wXgLLYzR6LFWWRYE6C6mKHO2Rw1ThaodrZChaM1yh1tUepgj2IHRxTaOyHP
zgVaO1fk2Lshh0Azz81HjAksDwxDCYFlVVQcylWJKKCQOItAMzUkEcmhySKb
lK7mscl5SA7wRY7pC+h2fQHTfktwj0DzMwLNn1AQ8GuifBwUiGypnu4NyWDZ
twgs22SwZKdwLmCWrcKfC4g2Ep38Km05fp60DP+auBRfqJfTabGe6DN3nEz4
87zlcf/1+IRA9Puxy2hjfa5eamBN4EmUlOjoHwpXSZncRhkx+fdydljfifKQ
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
6YXQl9AS+TJaYl8Wh5/AJhcGdL0ozWvQH56sDWcj8764PL0tLk8PZ2HzEzH5
ib83tdlgtZhtIWpGfrBJWvz9j+QaIB5FTPzk1hNh8XNNCsX+QrcV53yIna47
MOi4A92kMdlxvYJWi/UuNFvx4vnwe4ij1hyFbbLZjzbHw+h0PYFeL3PEWR3H
gL89BgKdMBBEkiXYA4Mh3hiMCMBwbChGk2MwRpvvTH4mxovycLG0CFeqtJhs
rMCdtkrc7tRhsldH0rIKo+01ONtbjdtndRinr40TU2sU6ajJT8FITTG6y4vQ
StK0q6wIg1XFGK0pwuWmQozHv4qxkBV4kLoK/6iUpzRzWQx3XYzO4iX7NnGR
3DnZw2lM/v7IrGppjtR2rhDcfE5w00SenynJy6muTZgoexnT12W3GY6c36Vf
bcar0oZuWyUOjCk6x9mVsd93IXIslyH48ArkWy/D2ElDehCX4SseDsDxBd7Y
H3w7N59GYh9tEn3vE9qX6Ka8UXLbaF8hc3O5VBZbugyP4rdjIsgYEydNaJli
nNa5YDNa5jgbbIkzIdb0e7LFqVB7jISyL5cz+oOd6fVywUAIT1F0RyybeIew
ibc3cZQnRPmiK8SPHrPOEH+DWnQEB6AjJBBdxM/O6GAo/cLRSOxkbnZkxaIr
JxGF0RnozePFjqV50CTRBo9KgdZzG8ZDFouQ6R9rV2Mw52U5grZBSv1xCJYZ
yrVpos5nrVznM4ubVc9y87/YsYfdR7OlzhHuzuLeTm60vBK1REjEMbk8NsFq
A3TOi59JWyos54vaHq734fArMzPl+FwRouURJmdClojJjGw3IyQmyyQ+sDlM
zEO9bkuSmE1wGZxiMMbZNWKLf6jagk/iduFN/+0YsN+OegLmIMnMXpKZnSQz
OwicHSQxO0hithM4W0liNtBh22G9H932h9HvaoxBL0uSc/YYDXZFb2gA2sOi
0R+bikRXT5xJL8DprEK6l6oxQvJypKACPQodRksbcb6+AxdbejDe3ANdvhoV
ecUYrmsladlI4KzFRBXPPy3AtbJCXKI9ybNLz9G99AytMY0KpzT0d2o0GFRr
SeschMPulYg8OF8YFmSYLxUTFfW5S5aZvyiUpo5w6pjByTHZvzyt81k1M31J
dHmsfZ7B+B0mJMd+6GuD6bSneoVh56m1Botk11cZjpwiPjd7RNd66ffP9ysB
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
E+uluc28RVyUS4ini+/l7rWp9jWYrKItt3qDdD/Vk8KnLfRPmUvwc5InPVbP
o0Rn1yMEFtDKF2s3Ck7uRb7ufiQdJ/Vn+AoKDV5BAV23AsNDKDQ6TOsICo2P
osjkOK0TKDbVRoLBMSiNj6OS1GC1rT5q7AxJBRojz9IChdYWKLExh5pkSKap
FVKMrBGvb4NoAwdEGbsiglRfpLU/YhxDhFdakm8CkvwTkRiQiARacYpUpIar
kMvKL12N1oJi5HnrIstkKRptpPqXfldSfl4LcD1oId4gZfsxKb/fpnNebnoo
gMjvsV9LywoNT2kAUK2YmgcQ9r7I0cRfMzTxqXIxHkSswDihj5Xff8UvxNtR
S/FuDB1AExbhA5J3bxD67gbNx4TffFzynofznrTNe8zDqNs8nPWcT1hcgPei
F4lBkv/kDrEqeSDBgBT5ZDPth02bMSU8TtfPDPDh4QOXtmPynGyswdeVlSr9
e84t/pX2gI9jtTDu8jJ6Tfahy2gvOgz3oklvP8m9A8gj9KUfP4QGveNoMdJF
q6kRHXPM0GFjjS4HB3S7uKDH3RP9Pn4YDFCgJygESgdnnEtKwXhGNq7lF+Jm
eQXu1Dfgfns7bra2oT4zC9kxseguLsflti6MNzfjfF01OlNVaE5Qoik+CUU+
9og+vkjMGI84Og9eh1cgTncJyhxWYSx4HT7IlWal9KifZzdzvgbvbdFY/Wjm
+ETHs5gc2SabZ8rGR4PyTJVGqRXsi0Ip0smdDp/L2Jud8/tvwt5PCXv3oxa3
am974v8H9iTd9+SuF1dqfO66byHij8+DklCXdJz1HylBDSK8yVxcCVxEGmUZ
vuECDu6xeX068SdSm7yFvr9ZQyFm+kx0Psv6SFLAXOZ6QfZEmZZ+hL0puv17
wrdKJa8csKiQ2v9/r96C04GHcTPMGDfDTXAr0pSWOW5GWeB6lCWuRdngSrQd
Lkc7YDzaCRejnHEhyhXno9yQ70Yiw9MFZ6K8cTqatlhaw1F+GIr0Q39EAP1/
XGEfiI6QQHSGBKEzVPq8jT5vCVagKTgYzaG0IsPQkhiNptQE5DnvEf72rP2+
aliF+pjnJIOx+/Jcl2nk3Z6FPC5b5zKG6YRf/XTBy0pR8PJYwk8Odv4khXu4
luBu5OJHwU42QGt3kXSf0mSl8H/hkepZswo/o49z4efTIunHyT8OhnLnH3uT
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
dQG+n0avpS/EDzMW4seZi/DT7EX4OGcRvZ/09bmL8bsiYyYuQFpXZLMIL/HK
WV7itXIZyXpM39qIB2NbZjXM2Ug27A48OL9ViuJypgzp7z/VrsX96O140e2b
hNlvYsL1eTpq9xBad+ESIXacduCYkwn67A+jzoKuk4UF6mzs0OLsjlZ3b9Jl
AejyC0FPEB25dBx3hMRgIIq2VkI2hlML0Z6uQn8ObR9VLS5qW3C1rgs3CKvX
2wZxtX0Q55u7UJCUgivtHYRbPdmsDRhTl2KIi5J5FRVBF+6CGNKv/odXIIlw
xeX2re7z8VrCYlEwxxFrffrTD/H6pozXD+SWW7KXePpFOp6VT0m39yU58N8n
tXMSWK1ZLmGWNWzzSjEX/i88+lWeECoEUskK/JC2YZXvFtxOXC6SFCYiFovC
rHavhWIUGrfPZ6RydJTxyjqWe+1z0ZbBQ/zHCjlFffRLHuIHj2rYqStPS1Nr
OfOJtt9vKjeK+p4Wuka1Z3dBZ7oLeYRXLeFVQ3gtm43YE3uQT7pWeYK1LA9Q
Jg1rcRga8yOEV0nDagmvWuvTUBNeFZZnEXLmNErt7VHi4IQSR1fSKR5QuXhD
6epHeykQBe4hyPGIQDpZqmne8Uj3TzYyWiEHR9k5XCjJVzJWi1J5hnIxinkO
V14JdMoyZMTSCdpUjvNJz4u3gq0UTpntidqG6RpZowoZOzYjYwmw0z0bMJi+
E5PKrZhuWSe9c01SSTkrEwFZ2Qj61OAjVkiHH7eD5jL90eDFwdtW/vs+4q8m
7NfT6LVNtPjx/07GBj/mU5KrOERA1o8gK0D7FVKWE3FbPReIwDy7NUU/PXYB
nJcD7oZ+em98CbT3NkNf8KxIJng7azdGPffQ0bxX9A7vI0u6247LwaQOII0W
3PfqAK1DtA6TUDpK1vVx6Omobne3RrevE9Qe9tD6uGAkOhBjcSFE2AiMJcdA
H5+CscxkjGSnYyg3GwP5eeilrdytVKG3pAx9ZRJhhyroaNDR/UCEnaD7ojIn
EV3qbFxvLcO1lhJcaVZholEhAqyXdamYoHWtOgU364tRlxmH63VlOF+hIEs8
BTnWa3EncZmg6JepymnVbIFxjx6+Sfh1vnk42P557apH3MUfq7hBFrF2DhvS
dJHYHL6asB5XErhQT3yCXiJ+s+jl7CX6H8I5zLcgtzwWdzGHXznEz/lgnE4j
nMSCr1yHst4odBZi1z5ELKm1B7UbMJFL1lD6dilKyNHB9hUzPuJfyz7iXqdn
yLw2eZgiZnEQtcRZzo+vsz2GeofjaHA6gXrHEyiyNEWt4yk0OJ+mdQYNLqZk
8puJDMFiB1Nk2p5Bo7sV6unC1rnZoNbNDnUexFhPZzR6u6DJx40464FqLx+U
uPmhih7L3H2hIvVa5B2GAt9o5AUkIDs4DZmhmcgIy0QarQzia1Ycm9sqaLJL
Ua/UIs/HFEqL+ahzmIsez/m4EkLWYuwivJ+6GD/KMcZvlUvE3ynkjn6WjOQM
osGvYGv1EvyT2PrfRYvxK1KsH2ctxIcpi9Hht47O5tW4GLoSD4ixrb7ryDSk
TUCP7xA/rkfQ1byftNAoDz8k5P6W3loelfBFjdTo+kEFHT4cnGI38TVZwb4q
95a7tVEOwkp4nX5zCymhbZKaM3QwI7z8vWYV3g57Crc8n8Ok1zdxxf15aMiQ
HbY3wWWX3WJ6c6PZUdRzT35LSzQ72EPv4oE2dx+yZAPQ7R+K3uBIsmbJtPEN
xlBsGkaScjGaoUAXna2jRZW4qKnHjbo2vNTai5c6BvFi5xBudg6jtbwGl1pa
cb29DVf0Tbikq8BIUSH6yeLto9WbV4COrAwUODwnenpx8JWHitc4zsPNyEVi
MN4XHasll++wPERwNl6/LWc20rky2bID09ekJH/hcBiTS6tYqTbLeK3joDhZ
t4TWv1bSjilfLpJcfqeWJsz8XJQ7LMNo1Dp0Ba/FC7HGoviL65z5vNPJFSi5
ZpJ6TTz+JJJPPCmQy8m5N6KNhV+Jv9fnjXIFmBAe8lwFScGyu/r7243cMf3+
dtG9SZgNF9biY/U2nPM4QGfgHtQRXtWnJZQyXg0KtuwkIZZeY6wqGK0nTVAi
8HoAFeaHpB5l5kdJxZ5AhdVJQuxput6mUFubI9T0NJT2dihzckapsxtKOKju
yn1V/aFyD0KRZyjy2FT1jkG6TwIyAlKkZuEceI1XIDexGEWyclWScmXXcHlB
CfJTM1Gel4XRejWZXcdEyWpzwHq8nEp/U8kqXEzcigfqjZKCZb/wLLBO5G/H
dNcGyd/Gn++QChi46zQrEAmwcnDc4CNWSiE1VhgM2A9zl05aP/uNf5etTzz6
mniUePt15qnhy4z/FaLiUfoxjw/fPsnP5vDTlf8bald2rV/8X/DY9XjUBu+X
cJtCVlydCw+4lYYhiehDszy97qY8yeAhbuVRdfYCvTy+7kH3FnxStx3tTnvR
Qngdct6DQUcuRDMROfet1lKzrSZCbROhtsnqMK2j9LUn0ebC075t0RvgAo2n
Iyr83AizwRhPCMOF5Cj0JCZiIC0Z57JTMZqbieGCXLKYC9CvVKK3uFTCrEbC
7Gh1OcZryzFSV0G3TTZU2XnorKlBl66aVhX6qrUYqCzBsCYH58qzcLEyFy/X
F+JuRy3u91RhqrMab7TrSNjWQOlvhk5/yZnxR+2jaOWtLPK2af2WnrNtxtFa
Q343i9s/zfIcfyJVOX2NKzfnsDFoFCyKOPk240euE2WnFr/vvK35FmRBzLel
yBtn2HL+PufsCHfxWknMcjSW2x3cklv/3JTzVQ3EvSgJ2sGM7aIR2IPGDZge
kJ1uHB1sWo7PKpfh96ol+AmpryGXZ8naNhEdsivPmKDCTB5fy7n4Voeg46o0
u6NkSR+HyuIkauyPo8bhBGodThF5T6PO6QzqnE1pmSHM7DjdU+aodbGAztkK
Ohcb1LjaodbdAfUe3MLJhajrTtT1QLa9H1HXWxz/pT4hKPaLhDIwDoUhycgn
wnLkKItWRkQWMqOykRefj4LUEqizywRtG/OzkG+zhqyAuehyn4dx//l4MXwh
3kpYhI/IivhFobHI62L1LiKl3TzmdmAlB/MeAa086IhA+5naGH9SLsbvCxbh
N/mLcD9lKR6kLcZ3CLg/JgF7NWIVLoevwkcpC/Be/AK8HUsiOnwRhvyX4WKQ
MbSu6/BK5HzUe62DxmMLhsM34h8VS0Uw/EHVOuiTdmIwbwem9FvEKMbJpu1S
b4S7D2nLffAGdc8I6grf6Q3DaNuVonD346wNuOSyF6N2+zFkewA1Zw+KtNFW
EkHNZkfQaH4KjVbmaHV0QLurBzo9fYkggbTVQtEfHAUtCdsKEraj8RkYS83D
+RwVBgrUmCirwQ1dE15u7cJr3QO40zuIl3uHUVdUgppCFV7s6sbNdj2u6xtw
WU3bsECB7tx8dPF2o9WRlYv6uAgkn1wkaJtCq1QOyPJsvs/bV4t5f5NtXER0
b7PRHkm/fiDPfLrPmV478MmVLZImfEHO5Dsnd2/kJh4tKyXbSbdcgJbnuv+J
QMuzpP4g705D4j1r0YmYNWj0X48bJCbGQxeLDpKc5cSaleee5hBs0+VYLOtZ
hcVc0XWSm1Oyi5nN379zlk/32ofu4ndFCxg+DT/iHq/0dLEg7fSLm4Wf6V76
XlzyPiAUR8NZHqm5RwjXytO7iLa7hJhVnxS0nYPco/uMzAnEDNq9ojWM9iyB
1uwwygm0FZbHUUmgrSDQllvxSAcLpFmcRZq1FdTOLihzcUeZqxdK3XxR6uFP
ojMYSu9wFHhHIcc3Dpl+icgMSkV2mBSDzY8vQn6SigQsQZYErIoFbH4JKugS
56XloLFEgeG6UnTFHxVZX92BK3Etfo3wDfxasxq3MzdjqmQzC1lBiWluxZjH
PREYsrMCsl1rHlGyHGv7i9wgzeAq5twVdh2y+47deD8sWPaHRo/5/4mr+IkZ
Ii6ZefY/EfQrXMYrpKchj/kJa8THsDP8leY7vv4ITgP3Pape449JSU78xnGX
U858/VvNKikN7PIGKdHJgFQOyBoa7tNrU53bMdW0FT9p3IoWwumI+26MuO7B
MCF1wJFT+Peig9WsFQ+oO4BmK9rrhNMW66NodTiNDlcL9PjYYyDIDVpvJ1T5
uxNKQ3ExKQIXUmLQkZiCC9nJOJ+bjnMF2WRZ52NIWYSBkmL0lapnUDpGKB2s
rkRHZR2UmYVQZRbQDdFCaG3CaF0DrTqcq60mZarEREUurlVm47WGfHzUU467
7bV4t6MSb7ZV4lV9FSabqzFekoFajzUinY0dTTMILZUGGYti4BIJp+wzZt+w
SBVvkmaD/E34iVcK/y6j8beaFXSF6F9GT+Je9jpcTtgkPvc7GdF/kNQw3Qp0
qxn5iP/LacOirzcnN3FnKlY9fXIB6fistrEvyX0yX5Ir/2ewKjVg4cSQSfUW
4RB9oOf+jxulcCM72mQnMePm14SdMfdnUWtmIolYWhWme6E9sxflpvtog+9H
pYzW7NM8v+UIqug6VtkcQ5XtcVTbnoDO/hSt04TZMwg5cww6RzNUO5xFpYMF
HV5WqHa2IbTaEVodUOfuRILWRXRHzHPwQY2vL3T+gdAGhkMdFIOS0ASoIlLF
2I+8yBxkR5Jw5RWVg7yEAjoMilGSXS6Q2l2hQ7r7MbQ4zyMBS0gNmI9bEQvx
NiH1QSYJ0KIlonGESDhqEY5a0RV4hVHdoyzVkdIsJ8VZshh/Jp7+Mm8J3kle
gVsxq/CLnIXCScxClsOvryaSCotfjU9I3H6UuhD34hbglYj5uB40H5f86Xfw
nYeL9DgZsQD3kxfhlwXGgqni5w+swjSZRlONdDC18SxZuUv663IJDfcW+s5m
PLi1Aw9u7pCSfm7LHaLYwc2ps2QKfZy9CeccD6Df+hB6rA+jxPQQFKcOElMP
o/HsSXTYmKLT0Q7dbq7oJZOlzy8AA4GhGAqNQp1/CJkvgRhPzsKlrEJcU5Ti
fKkWL+nq8XJTK97q6cXbA4O43dmNZlUxGpTFuNLWgRe7u0jN6nGrsQI3S/Mw
VpiLtqwCtKVno5WWPi0bzbTyHfcK5zDzNPjEajKbNuJy7Dq8raBzo3kbKrOe
k/qy3DfMYZDmBz+4LtfjsarlMswX5eQ9Lg0dlPv9s0OYlOsX1cvxzyrag9rl
IpntjzOO4eXClGVH0Xdyl4mkwVznrSKxictGu30XipkEWpHYJKlXdgqzcuXz
MMd0rpAY3PWSU/y5io37p4qykDE5OYUnY/DMXx5x/+2tc/iPIQHLI4+nurcL
q/bdrL244ncI/Y7svNuFijO7oTuzC1W0Kgip5adkrNLKP7aX1j6UnTKhRUw9
s5+23UESsYehNT+CSkvaZsTUSvYPE1PLbcyRY22BRCtLaFxcoSGTSePuDbWH
H9RegVB7h6DENwIKvxjk+8cjOyAJWcFpyAmn7RRDFmmCAoXJSuSnqUm4lgrh
qi0sRVm+EoXpmdDzkMCKfNT5bhUdBniEkc5nowhj8bHFIdipok2iJe8nLRtl
nq6XROsMT2dV08gClo+0v1VLx5shyYkvFauLjwVbpXAs2T1n/gOmPvmY14z/
lZszXyR93yc4JJsmO455Ocih2sf92GX/G2+DBW8tmLePSXoyyNfow09AaSkl
0HFPAY43iz4dnGHD5/otee7sHbk/L/cpmpTa/09f2QR9xtOYUGxHq6/kLR51
o+VigmHiba+9VDbezp0zrQ5AT7zV07mgtz2GDidTdHtYod/PEUMhHqjydUZN
oCexNhwTqVFkUyfgQmYSLual4kJBJsaLcjGqLMRwiRJDZaUYUDNrteirqKSb
ow5t2ha0axuQEhWPvppGjNQ3YrS+nlYdxuqItVUqXCrPxvXKTNytz8X3usvw
3e5yvK6vxlutWrzWrMUknSEv1lfiWm0VioLs8GqC1MfJwFce4/QL9uWqpO5T
vLfZM8w3kpCaeqlU4DMydslQm8N3FX2oXPk1VrQkmBqCdghtKzKl5Kwpzhj+
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
I6DMQjkdsGWJhShJLkERrxSexlyB4qwqlCsqxXxKHtHVqVKjSpEBTfhulHht
EQDHZSsxN4GB8aQMlGNrDZPSHgBmr6EcKQ0U+p3aHCeTNuNO/lpxOTjRxx7d
TOh51v38dg4edaj0WIXegCWPMJt8lDmjUazwv2FyOckt3fT9PN/i0zIz0awu
GCST1yEZxKdl0fK0nFjlW6NHmrJ8LllKrn5RZoJPc5fi7ZQlGA5ajlN0/L4c
f5CCIyecDrDGcY9jBJIWtCwx6GaJCvujaHexwgkve0z4uVAA6oUpivcvxIfj
pbQ4XFWkUkydg1t0+7+uqsKb2jqUxUThRGUpTqkq8f5YL94ZY3NoPW50aXG8
MBPdiXFoj0+AnhYXlXSxKdDEZaIhNhX1MalQx7AgMQNKCnAqYrJRSkcgt2+z
sUlVggIpx9bRFpOSq6EHzYkvPIFMKzMUO64QGjNuVeL5JXeyTEU7KYt0xLBz
uqX/+jBgfM2QRN0s3ebzGON9q/tPtmDu3tYZF8uVD0XBh9HHA9JD0kNeWiY+
bhXIGPHC4//UrtHqJclTJ8KXCrUAS+beyTEVVWz2JhCxmBDbrpGHNayVh+7J
l593IcerF2UKeX4eOp6R0ZFOlJmKTUK2ereKE3p9K40OS4e3zgz/rVqGX5eZ
4ke59OtjzdHmsBftTi+i3ZUNUw6hy1OSmff6WdB/1YruWmt0+/GyorvVRgBk
k48T2gKcBEAOhDoh0eEY+kNd0Bfqit5QN3SHeKAz2AsdwT5oC/aDPjgArcGB
aA0JRmtoKFrDwtASHo6WiEioQmNQQzu6ITYZdfEZqKG7oDyOuxhzkBuTh4IE
AsbUSlRlK5HucRS1josofFuMm0lLBU3hyTOCQXbKqbcToo2Ox1qsNdoiMbkL
chr1lNxLPrzygec0Yx/PWmhYhi8rl+FS4lr8R74Z/qI0wV9rTfCPOlN8Vb8M
Xzeyn/VyCTNZ7iSPN/+aYo1vtMukr7lMxj/7pLmUZmU8vinaiF5bb/TafTnO
7OnNYlCUSLsSLs4MPI3ZM1skHCX8/n3XJrwe8z1cC/geJlx3YNSZp1USk/TY
iZOEjROEjSd5fJfvi5gMPIJzIZY4H2GH6WhnjIZ4ozswCLH2zhggQj5AzHGI
NuBwch5Gs0ownqfEeLGGMK0Zw9XtGKnrxXHCxAndECbbhgkHh9Fd24D6ohKc
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
WT3O1TRjWttJhLEPV3pGcblnDGc7RtFXp0NjSTle6u3Hpe4uXOxqw6UWNd7Q
5uMDfQk+1JfSKVCG9zrLca+vHBcJFt/Ql+F4SRHUYW4CFlMOL0Gn9yK8lUGE
umkFZvX0t7XNMxoywKLsvies3Gu+I8GLGAgrVwhOyrDIp1wXz6BqXWG0SZ7h
sEJ4V/+5TrIq+53cQcA1LT6BmaMUe24VdIP5yWDQEgrkFovuYm6oYlTkMiOj
IvtysEaOg1XO47CARBhUG1KqXI/54P6s+U/ErHnZPm6s4dn7YtXf6TfhbOAL
GHLdKSaBNRN3ZK5Ydng3NISKakJF1dEdgjtWi7WL1vOoIVSsttiHnEOHUWN5
ANVWh1BjRZ8zKtpbIcPGEqUuDnS7eUAf6IOOkAB0hgejMyIMnVGRaKMtxLk4
ZWQ6aikCUsZnoyoxD1WphahML0MFbZ3yzEoJERU8GVqJmiIlaktrkZOaidqi
IvRqqnGypQZ9sd+jSNAEk/HmopH8Vu563C3byDVF/tvH1hqZYa5vHaYKKbIj
nnx/IJ9ofVwt1RqbJe7I8xzYwJrLvj8SgpzleIuoH5d+r6UIG1We6xu0egHT
yAWYFh/iTB7B+TgTo0WCW7J459285eKacEOCkGHw7zpu0CnyiXhpvVGAxB24
kMIFFbnBeypto7Bm+H0F/ajkFbhHd+RrCYsFJh4PssRxwr8ToXbETB0wwaL8
KMJGerxA2PhSmC2u0OfX49yJgfnh1awQvJ4XjTdLEvFWVTruqnIIE4vwrr4S
H3arUE0s8qORJrzeXIJT6dw4FYihhGB6S+lSRYeilS6XlnalOigSNYHSDLDK
QApoAmJQGJCEAlr5AQnIocfsgGRkBKQgzT9NNHrzTLCS2GxkWq9H1uHHRf8/
696q7RcKbye95yJUuq5EvfcqTMcsFZj4MWHir9la7duYyIJeFqW+R1h4Zx4W
si00p1J58ME7ckqLT6nra2d8jyz831YZX/zfQSLX9ttklniSNt5FmSXyABbu
i+WNzMo40e7PbRuskB6RJ2lwMZmvNidPr6+XbJN/LJU1rs2DRbl1eu7EWowV
PCWOlLmT3NH+1H2bapHfm5dPnVMuo2N+NdrsdqOJIFFLkFhPjxoijfXWe9Ag
prbvg5aIYyPBYxPBY7H1MTS6cLsyLfdjaPGwQJHjERQ7HUWrlzVaPG2h87RH
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
B6dg7/FIL+2sya347/ateD/0IKZcKNi3fhPFF44yDaTfJQDUOSbkQVosDwnh
SPbW0cIfT0vXmR1GPe24RsujtI7R7jv+x8zTx+5HvWkwnXri4nTGGbvpbEPX
nzidNp3Ot/Aj2AucLrIOpxU1rbCLm1Y4Jt3Pto//ebJ16B/THAn6PCNQ4BeH
krAUlFEEUplUiGqCvOrMUlTRqiS+X55diopcBaryShAXFo6hWgWulEULx/lH
Ceuh8duD3xL0fV0tO0RoNksnWa8Yge7dzGiiHYvu1zrqbpQSoTXrlpM/Br9F
6Fv1NzKeMu9L+VbQ+3mX6f7v4Kdpawj01v2lXDcH80xAuC2D+3n5YL4lOjaW
alTjW5e6G68vA73ZXUtc732Z7y0DvLkr+yQFGYqiBitflf7+rZ34z/5dFOi+
iQ4HfUy6HMIIvQ7Z8zD8YQw5HMGw41GMup7ChMd5TPoYYTrAHNdCrHEzwhFp
Dqa4HeuOO3FeuJPgh9spIZhKjkFrTCa6U0rQm1mBvvw6DCqaMVzZgZGaHlrd
6Kkm4lffiXF1l6jxFSalYqiuERNNLZhoVGO8oQFjNVUYK8vBpDIdb1dn4vP2
UlpKfNamRJ6XGUJOvCBqfmO0A3+Wsw4/LtmBmYq9UsCgBbxH3wC9mWWgd0sC
vQUK5KcL94vRvmcAr30Z6eOAXpiey8Ikakkan62Q52XSUeq+Txjt3I+RpCm5
+1O0uxCRyCegSzz/PaQZPg8NHbz3otaISFmkOzm9NyN3gGpJH6c7/04ifTOj
r2Hu9stSVYN7wTndSUD8y+KdaLOWAY+lDc04C8NLsvTIN+JppJOotmSZ+9Oo
sjyDSotzqCASWG5pQMsQZZbGKLMyQZKpIRJNjZFjZoUiOn1LrW1QZu+AahcX
NHq4CbLXzC0u/oGoC+I0ZxSdmnFoJvLQRMRenZqF+vQ8VKYS4GUUQEWrIqOQ
otMilGYUo5S3a64SjQoCPUUxukNfRqu/nkiTfd0mDxpMyAMQvXIhtUO+1q3L
gI+uFxtmc6DBKc+ZZF20BO7Fj3M2i8rfDzI24EnyepGu5NE/1kSrcN2KIoct
QvKTxWCY+DU6E9g1OK/U2Sl0X+rk1emxSmRJWRub3dF56o8VmsVH4MdjQh7D
1sqgce13XAa8Lmkaczp+N/5cuUH4mbND3c8z1+CzBPoorm/QqdNpeUbnPEoI
+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
GGHbeH0vhuoJ4xp7CM96UEssvC6/ENMtrbjS3IIpilEnG+swWVmAyZJEvF2Z
gk+bC/G0uQgfNRXh46ZiPKX1aXMxaiK9EXn6BWGv+iB6jRjw4gY6pmaiFZax
7LEsfrO8x1nGuIVruyRhsgldqYa36BC2VcI3joHaZDrH/qvsNtAiUYn/JBrB
NE74rsoG5OPhO9AdsF3MQ3OLN9eBWCaZB/my5dwlF0GKLF9AH2Efe7Ry1f9r
Prc5d8d92dqCxI+X0bl/2I/BxteFxqeYXrguzbV/mPgauu0Oo8VKnzYY45u+
wDfuLGMZ3kKDI1CyPK8x6zCxc+MJlBC9KzY+Tessik3O0bqAYqJx8YYXEGFg
gnwLwjZbG1Q62EPl7IQ6Nzc0eXPe0hfNxC/UwSFoDItEYxRxgrhENBMFb0rN
hDo9F41ZBVCkEr5lFaI6qwiVWcWEb8VQZpWgLEeByvxSVOYVIyEsBJMNtDHD
D0Lhtg//XLxFCMBJssXy1EK/Fufk5qAuCeMWGrZjJn03WoIO4IN0XdEyz2oi
X5Rw98pG0cTJ0wvv0bV9S3Z7YBO/aMs9IjHZ6UnwRkCmE412grN291Vok1er
2yoBcSz8wqlPTkNz8wpLev6Zi/+dyyCO829cursml+6GtknhMj0uc8VS/pKH
SpjOcf7y79PoYwRuQbfXNlz11sWo0xkKH42hsTVGj4MphpwtMeZui0kfZ0wH
eeBGRADuxEfg7bQEPMhJxztF+figvBRtyQkYzs9BU3oy7rc34rOhdnzY34L3
uxvwThvBW2EcbqQFoicuDNfTgzGVEoKxxFAMxoejJyYC7VGRaAqPRG1IFCqC
olAWGI2SgFjkByahICAeuQEJyApIQkZAMrKCUpETmo4kZ1tEnXoOXqe3isxJ
utk6eqxX4wqFaDO07ZjScR2PpQV4kOS3LNPf/AyVk3pQ3tf2oegt9aBoey/p
sV94Is2uhvnoQ6N4XbQxcyPX7MQrRCNmJ14m2s1DPfixZIIi5l55oOeRvKXf
kru0tYnL97TZLEnNQ2DdAwnfGAM16a+Imd6v1Lsw4nIMQ/aHMWBzUEyYdBDC
reBKno4hkTv2rTqENloai0NCCY0xTk341mTB4eWRPxad138S/+bZ6YyjRtMZ
Jyymcwjf8g2dpotM3R+mmDj9wvWc+ReJRs5fJBlf+iLb3OdXOVZ+X+ZYBnyZ
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
RR+3otGag0cOGs2/LLE48Hu3nYcu5lv6CqhWkKCtdIwbqXRNHFG7p49ovPOu
l3rn3i4OKLhdElZ5uzyu9nZtVttvS5Jr/1ScpvtTaWbjF+WZ9ajK0aAqTwVt
vgrVhZWoLa5AanQsSniDnroUx2vy0B20FiMhs3Azfh5aAtbicx6+5xmaZkXQ
8jyTyTDzuLL8jBenDZngqohdXpamf6RoH2oIqocEVBcIhD3FarY7Ye/0h+/Q
ZfVP3SKxVlmU7ljlvSd6NfhW+nNh2vXxWlG2u9m87Ey6h+CxmfckL1+W2Vj0
PbyUrSTldomXl05D+LbH6QXgj7ZiTUw7BaRvEdA5gBJ9v3z9va+8U0R6dooc
HaVb78Dz8juJUx2vyb3QUvVqdDvR/VOwcpNIH3FBt+bIJlHQ5Z7NXNJAaoud
0BIzNZa76eyB2tKcGLoPlZYH6ByCv/leVFhZkAwlOepgL9KyNW5uULn5oNw9
AI3+dAJD0BASQYF/NBqi49FMOqY1NQOtGYoMLZRlKHPSSIzsZkZWVqC9snKS
lW1VNagtzEVJWjI0GdHoD18pJ0BMPhn8KG+HV9bx2j/i5mTbxBL8vGglTsat
w3+VLYFUsUgkADg1+2HWfLydKrdKXIiaK/y5NO5LUOK0BAbPWSIJwOlXTtMK
dk7hp6kHmvuoedU8m7DzhJ8wXe9R/LlM05tMAFMNTayJV1pXOhdjNGeN2MPL
NU6u7bL5w63QFzHkaC5+9nVW+9Ftdwi9TlY45u6IwaNeOBEUgFMRYTgXG4Pz
pBEvZ+XgfG4+SkPD8GZdHd5pacKtlkY05WbiptGAt/o78XavAbe6mnCttQZd
aRHojPHmzTjpwWYbMJIeQicUIxlhBM1IvJYTja6kJIxkxYtNBf0pCehMTEBL
XCLqoxOhjkiiPysZBSGpyArNRm5IOnLDCJwEzGz/UMTsmYvY/QvQ4j4bb1Dg
ycDktRKmNC3X1fj+NQnLV8W6gB+KpOtsGZSmJOs7SkWMAMn9nhNvb/gWGLlD
6O6pZ3mT9unn6MOZ5+iq4T5ZMSfHWoJ7aN9erVTPRlfylap4ptPT/LZ5T1Tn
BDQVYN6UM7RjA2sxqtsgfDw+71qF62EbYXTcgg6iYrftS+i0eUkkAzpsCJj0
pNkedNCV9V1gNomzhcC5FU0U9BkcdqPGxvz91L32t6MOON6OO+JKlAwfUTvG
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
1uYAdI5WyLezRKGzHQy+HtD7+gpTV2N4EHqjwtAbG4nu+Fh0JiaiPSUVhrRM
tJGK68hjFxBWceWiWtFLgWufgrVjhLWBOjWM2jIUJkUT4opxUl+OPsJaX10Z
husLScVl41xdOrryApFnv1Sszf64aCUm9AJrBt4jI5YFtCzlWKVZydpRZMmV
BVPhgnnEEo4zbu+mzZ/GbDMLwnDEUrQGrBTmUBzU3qLglANUrm3cSJAfWe3x
86z+uM9F7JZuVXoCT0/xJJqUcMrM+IhSuBiWFzuLAJbQNlZNF45qBcZKl2Os
eLkwHuINBJy8+6+8ufhpymzciFiH14IscTHCHpdjXXElyQvX0v1xPTcEN4qi
cI+k7UeGEvQWxKMjNQI9Abbo8rVCFy9w9reFMcAOxkAH9AQ5Itb2EHqCnWEM
doExxBW9oR7oD/ciKeeNwaijJOX80R4WjGaSYZ30YjYFB6PGPwTlR0OQ7xmK
NLcwxDuHk3Sj4PVoEpL9U5EUmIH0sByBtbKUEqQ770Kc+VyorCnscH8KZ4Jm
4c34OfhFzjz8pWIBvuZMNzeOca8k/2xuiOaTO2vMQmSU3ZoaP62U54bPKjVF
xlj3IrqXrZWbgbuUfZyMOBPeOMNkwttFecvDZPbplKkuuUT+XieV5TRvKItp
3pxSw7glg22gkiTl6BrScM/Lfyf6Pp/WrcPt4JdwxesFCodeRgPB7YzLyzjp
/IqA2wCBrV/RcOzj2EVg05jv+iJ32wGpaK+1VLLPTio74iKpCWZa26P3K+2P
TkQcsZNq3SMknUeU1OAVO1Hlm3C/ITRLaooukpqTKqXW9CrJkNcodRYZpG6V
UTJq+yVjVb/UU9sn9et7HzaqGh60qmvvD+rb/vtYvd5nqF4fvHP1NLEfnh2l
ecOAxu4pjITOxq/z5uOrxsUYLV8vbHCFgrsh1JuS83xSrvG8teqR1r28/P1M
N7mRr+x7QPZj+aH0f2Wc0+jqeT9A4ObHxTHJt6l847+qmv6Kw8GzxSUmXHc4
MuIk3U1lDYxpNeUUxnHvEyv/v15+FrdTd+G0/1b0E9/66KXgrRzN1hvRJBJ1
m0SDZ52YEN1GZztqLXai1pJXPBLfSLrV0SWid7ZGgYMVil3s0e7vBa0PR6iB
6KM7/bGYCJHL7kmMF2MJnWnpaM/IRnsOG1azbCsn2VYhyhHMtn6FbYPEtuM6
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
BOeywjGYFYE3MqNwJjOG6yGfzo7HmZxENCan41hmMjrTktGYlAJtfCqUMako
imAZa3gWCqJzkOR9CE0+C/B+4mwG/Lk/Br65XaSLP6cHeFHwsHhkJrkwGJQj
PnuEQ5rHWVJPBcTlVXR9+47sSq/K+ktm6fnbZpGxx7iaCNHtc2LWxkkCyATv
G1w7SajOTbVIdV7n55/s4zMc/beNLKVueEyUEd2L8F7cszB5vcjKiPVoYugv
3r5RiCDL4sd1+18w6yehjrSUbDZCb0Nyc0KgU83gr7bZDN2B15Fr8zoK7Hcy
6NN8mh0aDzp8U3TA8VLa/jCTwjnZVOyVbSrzLzaVhylNyli9qTaFMoJelhGc
NBnVgyaj5q1BQ83ZKdcqSnqtFt4qKur8KiulHGWsICzPUSAjMR21+fkM/cXo
VZfgVNkRrjzX6rcI56KWWHQ6dZPQ3iQjvZWLINOj6FxIHqF94SQvICcM5opB
JycKGgb/cA5PoYE8/4VNy6YNBL78kJizLpgr9I87l4iYd2NSYTDplIEXB13r
hP5x3xLSP+ZHlrP47+Ry86qPdFkjv2pUfJ0d5vvvH3coVZ92V3O5+YD7wPmR
CcwH/Rzm53PM25NG8iuWIJ8gp/rZex7m/Dkldo/w9jCSTSeCqx8NCtPZ45vm
NjHrH2uqTRLOGMpezUmpRkuXo81hC4p2bYVh7y7U79sDg50tGp2d0OjuyUoM
X3QcDkR3aBj6I2NxIiEdiR6HYGJ7fVZRzjXPh9RaXG1owFBDPcqTE9HBvP7l
tmZcMDbgYmMd3jRocFbJEoOkENQGe8EQ7oELmUG4kBWE85nBeDM9BG+kH8GZ
9DCY0iNwKi0Kp9JjcCojDqcy49GQkIr+DPZ7UxJxNDEJ2rhkKKNSuAZ6dmgq
ssJzkReeinjHjTzY/wj31LphFhcRxPEU3t/gkucTZF5yLGe+kt8Vta6j5/ju
Kh6cJwlrmI8ab1sU14ho0ix3zgUqiYb5lqwjdGWFWWhStBq9T+XA7ZVEHWNG
vllz8gqrPs6vQJfiCVEPHFuMz5VrcMabBHrX8wHGBob2ozbPsyX4Kw2y0GQ9
18Z4EfW2GxnyX5KR/zJDPvGKkTTvNuTbbYPCYReMB23Qcsj+mwpHh1sZ+wNN
xc4JphK3FFO5d56pPLBssCys+lpxZPX7JTGqz7PCyz7Pi1V+XpCi+bw4TSdV
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
EHQYmoAAZHmGouJwKMqDIvmpf3FYCnKPpDA4pyAlJI1ThuXEFaAwpQR5wd4o
sn4Ufb7TcTlyJn6TZhaopM6MxeL24+QkUXCZRm2CsHZClFLuzjhqoZy+x37P
L1MWYjhpISRmF/9bOhvfVs5hIXAuvtPKSm7U7NUiq4rQs9Tz+1/1PKtXLept
PZOEjszMq5csULrdsgZ/Ob16gj2/q+IpGssRYYr9Oz9Xr4XJ4wWcZPBR7X8R
JtfnccJFwIl4arodCU4bWXjaDL3NDtRY70e1rf29kv0uktLR506Zo9/4kb0H
JA2DkdYzQtL5xEm6gGSpLixbqo9W3GlILhtXp1VLzXl1UkuJUWqt6OCybe2q
bhaOOqQ+Xft4YkTsnY7aeqlfZxjr0ej8e9Q1YqplnvOiGVZjJMKRv/ch9PnN
wG/S5+Ab9vi7UpipDawQUYk6Vwg6H8pCIB/IULqxcuxc7QLnl558sHAiyxOF
lFXVT0ajDRw+lig0XUQhnxk4ETSTxKu5/ivVUX9WzOcsfhM9kpz/wdwMvVzO
8uRze7MIohlCdEBz8vsiFPn+v8C4cZIwYpPM1q6ch78VCoGdXrenUcsFeGmm
8iXeray23QyNENdh5lHnss0qH1qn7VDY7uEwMrjvYpDagwbPvWg8uB8Kp91Q
OO9Bk7ctjnoTQ/sB1B9yRB2xtHu7MRh5MBh5ce23hsM+MBz2hc7fDzW+/ijy
DkGhfyQqQmNQHp6IkshU5Icz2ISyOio0HVlR2ciLz0dhagnKM4qQ7vALGD3E
9c37CbPwJzJ1mjKgKaQJqTA5Kzs7SVRnsuDhZAEKEj1kMCEKrL9mz8Qn7Hee
D53H3MIyfJY8A39KnwkpayYX0/myaDb+UTaHE3wSYfFXxXPwFXEn87HxH2iF
UWb4pkVQh0qIcbZ/pBVmzvQIPjQVdbtznXDPb4sxyz9WrEXngVdQtHMz24sX
WJbHIs+BjWi33wjd7leg3r0Fqr3bUbNvL1S2Nt+W7Xe4o7T3lKqdfSW1W8CX
AXvthD6Yd5Sk90+Q6kNTJUNEntSYUDJan1Qx2pBVK7UUGKTW8hapndQOVT1S
j6abwaV7VJlTOlqVq5CO1TXd6a8zXO/TaOYM1NQIkvZHjVtWTeWC1TTkcTth
Nr5SzsftslW4Xb9GVE/vmlvtPl5NTfayRNhw55KAZ1ZPy59ATc3Po+b5pf82
ca2sc5vORy0o4JyRA857SXPwG1YTkezLxBVz11KLZItZiYrncDJqzAzgZumW
CeQIjYOuFLYbVawm0q+cCETcKdYt4Nz/X5XOxX+xwHPc42moSdaVoaaK1p6N
XJpKlm5hqNE4vGaVhyKb7VDab4femS3XHahz3YV6NxLd24sCx51sMSR5WcPg
ZYs6L3voaB7AyxH6gy4MPW6o9/Fgywv1voeg8/WGyscH1b6HUewbhrzDMVCG
xaEiMgWl0ekoiExDVlga0o4w1ERnIz+BBZ20MlTnVaIwKhhVB6bzub2rUTMx
QpoGBQw5FfMEzQkNA7fJOdfJSZeckzsNJiNGOQf/KJqFuzkzuZ7BZ8nTYQpe
iOuRc/D7xOn4fdJ0/JG9/1bEIrxxZBGuR8/FUOQC/DppNv49bSaXp/ofhiaO
HK6yN180MHHkLP6eFBXJUHGNULNkC0toxq+tRpfyKZHkXLNQr/yxZA267EnT
YDNytm2GascWKLe/hoptr0G5Yxuq9+xiHm4f1Ha2fy/d7yBV2R+S1C5+ktY9
8MvAfXaS3idCqvONlgwBSVJjWKbUFJ0vGZPKRo+mK0cbc9VSW0mT1F7RJnWr
eqVeLcm19LD6p3k8LSpOOmFokY7XNf7HCb3e7phWK88sWeRaNHIdxCX1jDQB
/6RF253+H2aplk9WY+zayoFkv5n0Z+/HqmBhc9GIN6rv80P8OstqwPj0oqk8
eaNbYaKGapcjz/lJkYdup6jvkdNQG5dYmPQpgRuQadIo0pyXcfT2ivtgaSlP
4kgbZKj0MZ7MmRRrxeD4MaFhaZZB+pbZHbHOn/R6Gtq9Zq7XF7kMUuXujZy1
qJrmZlgkIq2Q7N3bCFFsbYXGaRuPRnqXnVziLc9+B/IOsM9ZnaRzt2b1ki00
7nZsOUDr4cTw5MLw5Ab9IQ9oD3lBfeggarx9UOMfiJrgMGT6J6IqMhHKmDSU
xWQwHKUjOzydU1FnEZt+YgGK00tQlaeEvqgcChYxO7yIfprVQ7EMS2mz8UXe
HO4buD5I/QJLIkX2bE7Wmn4wR1M1B18Xz+ZU+lLmDPwueRZ+m0zEinPxx9QZ
+M9UQat/j0Ue0gr5i2IhriQuwc34hTAFzYfacxlOsdczDF832Hsk8XY8YiWr
79ZhRLmMnxJyltcLrMY6K7c3m6+u3pUP2D9axTu1Rs7KB/v8rEEM+v8+Zy1a
rbegcterqNnxKmp3vIaq7VtRTcOpe2k41fo7pbXdXaWtu6Ry8pG0bv6SzjPk
y6D99pLBN0oy+MdLTaEpUnNEttSSoJBaUipGm7KqR5vy9FJHmVHqre6W+rR9
Ur++j2Gnd6w0XXHXUKaUTIbmvw7oDaqBujp5xnAWz9qI+owyqMuxs3nd2VXw
pDjLMc8UUp/xCB8pGOtRcir9+zHpWxhJ6n4OO+E72QfEvP4w9D+IP5cmxR+S
HCN6Hz4N0PID+vbJKhRc8dx82yuf6J5fLl9mizhEhdx4n0j2iYBnpGmVKIq6
LOSlRIj5v2VzcebQM3z4hHMl75F5kkmRgmGIuASVLB7l7tqCkn1bUGvH9s+O
ZQ0HtnIpMY3jduicdyLHdjty7LZD6yLo21Uu1qh1sYXK1R5qNweGISdoPFyg
8XSDytMDKoadWpa11QaGoDY0ErlBYiKgKi4DZbGZUERnIDsiAxlE4R6Ti4Ik
BUoySqDMr0JjRS1KAvYw3E7n9O2TOZKJVPR/S+fw/xsfTzXLTf8Ebr4t4fo6
U4gh2Wofq0GX4rNUFtIYjAhKd7IEb/I/iTeZ6DRYyPpLyUL8OW8BJxn7TSLb
Sr95qHKaz2rZuXgnbDp+lzIT/1Myh18+DOWtgiH+CQzVrIEh/UkOn4laiKBz
W/TBjn/Awk3t0yLNobr7TRGGvj66BJeD1qPVZgtzba+iaucWqHduhYomOvfv
g8bW9u9l+w9IKnsPScOSNp1bgFR3KHQ8ysb5jtY7UmoOSJSMYWlSS3Se1JpU
IrVlVo41ZavudhQZpP6qVmlA3yudqOuXBgz9DDKqsbKMAulMU4t02tD4e5NB
/+yphgYreWDOrEAR8MziKUMemx4e3r95Hgx5yzHUJKtP0BTO79eMnWtdTC2B
yfdBA//q6M+hZQFHS9z2h/9llJGK53MVBX4tS5Gm3Zy1LRWRxswqfpn33ayk
S/xLK34IGGo/1T5mtUtUxudlxqqatSLVp6StVSYW17JgUzkPb/o+gwbrF4Tu
gUwuTqTilTIBZ8mujUjZynZq/yZUsSSuymYzq0q3cPkWEqciwGTZvM7WNqid
dqHWkRh+96HaUZBw1jrbM+A4oNbVCbVuLgIsLFlTHw6EKvgIVGHRKAtLZola
JqoTslAWl4XCmEzksq+zorIm9A5KM0tQXVCJunINarNSUSYz/Z4LJq2DGVzr
gAjFieWXj3LVzeckp/NpWr5hngUkzOqJHu9bWevg4+SF+H3aPM4oTgGHNA/+
my0SqZJJOQU3xFbOPfN23HJ8nsPiUMYsfBQ3AxeCH0WX58No93iYSx8QAfBX
hFfCavcizudOjIUTMgeX5VyN8hoa92J+mfNv3lojDqNoK6la7ViEr1nO8U7Q
82hkYEndzioe5rOIBEFvvfe7amubu0obV0njeEjSufpJdR6BksEnbDTP1We0
wP2w1BKaLLVGZEltCflSe0qZ1J1T9aVRoZIGqpqls/oOabCpT3qjqV8609w/
nhmdeOdEfSOXaXmjsV51uqHOSoyt/UDfYCfXNxhOPTKHuoWskicCRrMw95r7
QED8In8OgcQdD6P54Az0/kSwILJ+UuedILtuk+egzXy0ZlKUKystVJGUKE7C
wfgpFtBznhCJ74VlE30ZhrSnxEnRsSUWxut6Ubxc8H+GK01NJtivmoSDnG0v
IWf7JhY8XuJEtJX7BLE+6X4IGaPXkbn/NWTsJ2L9nag+sIsVN3ugPLAfVQ42
LDgTGa2gjqx1d4WGJVsaPz9oAoOhDo2AOiIWlVGpKI7OQk1SNioSslHMcFAQ
m4WcmGxBRptSiLKsUtQqKlFfXotGRSaUzos4Bs4zDNxkGPh0EgaIiYgVEIIg
yVGMKenMpNUyY2QFPf4l6AxahVGWp/2vTHRNpk+yk39nlf//EYtk7SQmN43g
Rfk0czHORizDnzNn4eOEmbgSLgiviVm/wflhvBHwKIckcdB+Z5CZ9d+QGdsu
ygHDLJct44BTRh5/Qpwo0ZZS3ixz0X5Tw7AQuB6NtgIL2t1bmdva9feavdaS
1tZV0jkdkvQszzJ4hkhNvuGjBa6+owqPAKk1PEVqj86RupMLpb7sCulEoebL
vgq9dE7fKg0Ze6W3W/qlcy39dxsrdWOVWQppsKVNyHw0cZkPPncxZUJJjRt7
288ZOxcNH7Z+air39QOyr39X9vV/kH39/5CkoWYSTXznJGEbcw/q1VV0DHlt
ldUKCz/qpFu5odq1gtmHjNx8g81ehzRrBeP7gHzGRRVGoxBPuRTwDG9B1psp
3vdssGRJ7DVlyyaidJ9C1m71zASre+V+IdtFOjdpJCKxlxWOLEmqtNmBcptd
qLDbi0p7a2brtqhxPsASJWeWHLlD6+MN7eEAaEOOQBseBW10wjdFEWmfZkYp
vymMy4UyKQdliTkojM9BXlwOZyqkwX1idlcxW28or0K7So1Uz63oPvjIfW2d
FctTiFSU2tGIgbBK5gpTCWJ34l3mxO75zCeXCd7lf5YI3mUief+avXJmVdVk
Wo+tgupD5l82BqzGSOpcfJI4E9ciZnD77vR6BFqHhxn8H0K/z6P4IH4m8QWx
fHeBCLWDS+9v658+hvGP1ooEaViW6qJwTffQMqHkWPEynHDdjCZbqjO2fFe7
e/tdUo+ot3ORDM4eUqObn9TkHSIZSTnC3c+sHCH1JuZJx7LKpDOFVdKbSt2X
p9UN0pWWbulaR/+d800dY6qcovGc2KQ7pqPN0pstLaQe4fXm0Xory7FtlzDl
2p8276FNKx/4lz6c833oJ3iwxHwDpTBmvSZe3PNWDnmk1fV7l87jgyt5ESNG
YswtPsK8SdCR5zOn5QvGSWKb7wQ9w3W2DNYbWD4jaPHM5OJELE76TcS+SXrC
lbIv5yIpzJ8rScuJ2Xjq7s1I2b0FFdavo9x6BypsdjNfzvIZ5sdrWC6jcnVk
yb8LdMyH01GtLigYuiPh0EXGfFMclnwrL05tqlEcv6VIPfoNsW9WJOeiODEX
+Qm5RJWHwrQiVOaUQVVYAVbUobGyAkccXkWT+wycCzLb9kxu2/dY4fpl4Wx8
RcerrCDmWbtyzgQ53u0sVgwlLefKBTL97xTi/51CGQ7bOzq+NRv1VLNRT+L/
/SB5EY6FLsOvk2bi3cgZnH6TMFbv9DD7/z8E9YGHcYa992tWiHzFCiuuyz4g
awb/0Khl3l+uVkCTcLSfdEtjpt4kUKjm4y9ZqzHgyv6/Nlu+jty6ZSxj9647
Bnt7qcXVXWr18JHafA5L7f5hd6sOBY4VePmROoFkYo75rKJCelupuTukM4xd
biSKzd67/bWqe5XpmXe7a1TSpfZe6Xxru3S+pfnCW8x532hvt7ofR96jE2/1
/ZyhzzW+uFz48HPhs3Atbg4+ZB7g9zTlWSQI30ivkfvvVjNhi6zKYaaCZKY9
lXoqBNH1gxO9M0O6dRjpfszMrjKFc0HayFdKLFlJf0p4D9MSywkRi6LXQp/l
rUONNht4sqI2GzlbGVtf5rzW1czAuZHL/NZKmamtirQX9zHj3vUKN/BKlrAr
bXeiiiUq1Q77UetEFLMO0Lo7Q+/lhjrfQ9AHHIY+JBR65riVYXHDWWFKU01e
n0ldcspUW3b6liKz8V5abDGKk5jTZotY24rSi6DMLYWaDLxciaSwI8iPCUGe
3SLuNc0G/keWOXyePQv/lTOLGzqd5HDjJnEx1QKMFC7hrPnkwWX2xynk2qfQ
T9EJepUMBJ7ZzBPTmlsnEpTvKuby2PAfGbOGHZ6fMdzpxRL00Bl4iyXpx3wE
xSypcpTsfwhtno/iOiu46eD3O7ouIZ9y7j42LtPLcm0yOhi6NelgqFtoY3MC
GZZT/iVz9XddjpvvNu7bdldpvXM8fs/OMYWd9Z0OL0+p399fOhZ6RDoRGfdl
nLMrJ8g/ryiTLldWSzd0utHrTY1j7zQ2jFckJYwdLVLcudRilG70dEuX29uk
t1tbRi4aG22GjPVW9ytJH5xw5Mv419O+913KwulrwSn3wJMhISH0yaLw8HBa
4i7wgR/+Ef43ZP4sXHbSby878CjejpqNWzRZSWxn+WLEhtOc6OQGrc5JdPBv
TqQ6nJV5GjX50ccbE0ypAjXXeUPMuxwm5kYYFg+GtHIKNChfVnSJVOfdsGe5
7mKzHTGRCEZmIjUs2/kiCra/xIkNa/YREzPBRejLEyMzcZXVUG5PsYBBhfKc
avsdbO1GjQMJZdlA42IPnbsj9J4uXD++3t8X9UFBqGNxQBMR80VWcOZgWWqr
Sa04btKUnzGp2aotPzNYWTrwRUZCJRTJ+SzHUaA4sxjKvFJoispRkp6JwuQE
mPQliHdjCa7HAtyImsF982dpAip/K2AwKZVpllkyPq5ZCFPiKoxXzRd+XpCj
TqEvCCG1QqBG6ErM42nNVA6TaeJWTs5t/pLN2ZhFnmv1UkDIpmnDaoeHOA18
m6fIcYgoleBymoWD36azcER/ZcsikaPzmlaGiZnXgNSy3nocQx1PiltiCuNm
fsPmhUJRtXYexormvpf2+rKRDrvtUrfjXqnfzfZunZvteLGr7Vidt8edk5Eh
0rnkxLGqkOC7HUnJ0tXKSum2TnPner3674bcrC8rkxPuvNfdLH18rEN6v69d
utXTIl3taJEutzarhloarFLvb9H8jVU/BR+rBwpDQ0MJHHXs9SeAQZ9Pvc9v
EDPeVqr7fEvwtszhTViZ+x7GldjZXLvut9lzuaILHZb+s1Y+AmqV50KpS+Ts
Cgt1Eg8m762m6Q0zD6h53VxFmtDUy8Ojzkoa/rew+3F3RsTm/Lz7gnwv0SfS
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
L+ror/9+VvMX5RqYDr2IPtf16GQuvZq58VqW1ZsJ++psBE2n3mYj6ojSiziB
7F5Gnd0mtl6BweE15Nu9joIDO9HosR9NXnZoPugAo7czs2g3tPl7oi3Y55sq
n4BbWX65pvLvU3QOGipN12pKjl1Tlx/7LD+j7vPsFM3nWalspWk+z8vWSKV5
utGiHNXfg/xCv61hWc3RcrLqYhzXluBUaTAGWBahO7QCd/Lm4NuKuaJ6bFhA
HN3ccM3kvNRiSkMS1JzXyT+nR9O+kCvSLTTzfNNXwpiJIiiKM5TIUXieOY8f
M3g+inssAvMdo8L1vUlGLJ8DEYUJL3JbnuC7NHZq6XCqCwPHuqkiKDz67E1F
pOpGcezI7eoU6WNd3rgyOuDeu0fL7v6qu3bkNz21ZjbekPvYkuUk58X7fHf2
j23T8kPcW1N2nsT9NP84zUHO2r9n4rIta37SlucN2T49DVLhPHxZMV/w1Tcs
EjezxNJ9Wj7Rv7pKcNjJXHVEcDXU8iSGmp/gOQmz4ylmemmzKX/IF3FRC5Y6
2ZzNzloMgWGkn2U0+rUiOzm1BOPNK/FmIGnXM+fMzFaz74UJhjpipiNzJu5J
4p00yPRWDcyUDbQObMZR59dRaL8NhQ670OxlQxRXaPF2RKuvCzNjd3QEHkRL
sP8fM9yjTcpItakm0WDSZLVfqsw0vq/MNt4tStWPF2foRisz6+9UZx+VlHmN
UiVbynyDVK0wSCpF/Wh6bM5oVnzOvbpSDRrLytBRXYS+2gIcU/jzQbz+wAV4
N34R/lEum7KZctbMP0kKv91cJ7p3ESXoPYvEME+33DTXyn9+Kqepmzp2LmbG
BEGd6BF+2Pm5pVPHTgbNYCXnIuFsqNy0HGEKyqtp4sSe5R7DXUsGkr14W6XM
V/3gs8PaVNXHhtx/78mP+auxMJ6YZZ/9pKv6yH1MxcJh5/4vXeZPm9ki454n
p/IE4B9V7D9HtHpN1GW7RJypU5cYXfwTwcwwM6+baya4TYlghhvPzVWW0dTr
Ey5zCqHWytbC4mQeW7BQx4ip+cnJALlNZms3k55Fo8OLzH5oyGk9jHaiIOQs
iDbEhEjfe5HTqDXaE3vTy2hgq9HxVTS7bkPRge0odtqN1kN2aPNxQLuvMzr8
3dAZwNxloPcXhZ6hg2UhZaaaWP2l0ljNZznhpXcVMcq7yhT9mDLLcLc6t4Gz
IFazVUWvBU2SurBR0pQY7lQVqMfDDkdIujLdnaPl2m8by5ToqCxBjzILxqQD
/Nyh3W8+3oldhK9IdFYzX9yTtS/6PhsiXS+c4EOY5CuPccHx/kmsiB3mZjPu
O8fOJcygIC0zEs58wWnDtIEvSudirGWxyF5/JfvG3xO9E1t/4H5yrKtqTcBr
mxbOsfiuqc83px15oSEzkn8V9n3TEAkmfTw48X7CzxmROIEeDJuF/yO6VTL9
1sWigcq0DOOmlbjdTEMFgpxvgkdzWK6Tbq40c2leWcHvauRWUPMpzcc8ZyeD
4qzbw6ss5CdkQHSqwIyoq+RJjNN8/0VBxfPH2rXQMQPpc1uPHqf1XESDDqXJ
kJrsXphCZHxW7FPiOznwEppoOWxCs/NraHHfgRLHHSh12YMOX3t0+jui67AL
ugPJT3l9UeQadKHUL+/9HP/sz7P8su7mhyjulMdWS6oUnaTNafyyIrtB0ubJ
VHxsqQrY54Wcik/SlRvGIwIi79QW1kr6Mp3UWKG911RRhbYyBbrL0qFwXgOt
k9D9bPJfgf8x2xBv4F1sGdwd4GLSp5YQG9hJmZJvQLapPtlntZvZwGaS7Qg6
Pk6DMpDsOB1j5J/oAcuMYPj3tRgbXj2cGjqTCFIyJjyKz790Ltr72IVIURfz
fMzz1SWoD3ochiNsRT4BQ+yTMCQ+ha68J5ldrMXtjseJLk6QM062iWvmpovl
oob7nl3wG+xfrSZya7KPj2SixltyjX3VYhgjxx8TY8vEqnx6BZqTnkSzxws4
xiJZn8t67mFamGEY+SJ+OMERZyQ+DoeX2Ctbjq+g1XUr2j13osZ1FxROe9Dt
74CeAGf0BrqhL9gTtV5ev093jJDS3KLvFninShVHFFJlZIVUnaSSNJl1d1W5
R8dq849yfjgtWxriiCtpZlbRLNVVNI3mJOaN5ibmSvUVeqm+XCs1VWjutFTV
fGsszkZbXgzSrZeiltW3F47MQF/ocnyStcTiXcxjEqZJg0ZvcL64MyTOeXoJ
AeuUPPPaJ1zRcNHcgGeWTVkiQpcgpvKfNfY7ulUj7/EfazF8dsVA8pFZ9D3L
CWUADz2TPMP9LECuMala530K0JAfWyQYTnkGM2lI10xH9p6cdYudl9kBl91v
94VCwyeyd/jwBy5h0u5TrBlqZBbWvpbr6xBTYFfU0zjmsR79rmbXsEEQkrXY
v8BcQguRQzhs5KvF8WW0Ob+KDvdt6Dy4G92+1oi12YHeAEf0B7ngWLA7ugIP
/kPhfPhuoXusVOHHNj4wT1JGlEhV8UpJnaKRdDn1o6q8xlFVPnMBCpmMrESQ
kRkqmu9oSurGo0KipMbKeuYOyCVopOaKaqmtouxeQ3Yikmyf5Od6SvtHOJfA
Zznz2X9hrbj2bJEVOc9wUjJyCeeWkUt4U6ZBGjRPnS2RZ4oWY6x5gg5Jvquk
Ptuxc+2Lx851LQ545gnOmTvpaO43Ykt1Pwl0rs01HL/tIfyDJt9oq/n8zmLB
GEaz6TSnfknOEG7IM/WX5QkzuhOZzHY1eZs/lsU4fjkJ4Nf5xf1yq5kWjh4a
wbmyCvkxz2KkR/CB/Fa3GirHDThOOHdez4Ucie9qCtoO0DYT50472+I2x41o
d9qEDrct6PLcjp5De9Drb4M4u504HuyM46GUORz8tsz58J1S92ipwjtJqjyc
JVUdyZeqo8oldVI159ypy2saZ1t8p77YKOnZ9uqJ7aq8hW2rUWquMo5lJGTc
Lc8ukoxVdcR4JRkrVFJreclIb3n2waqEoGGHp6YgbNM0Tr5DjJx/zpsr6DA0
K8VjpBuJQT6HS9vMeVQuLKMyzExCd1bwO4x1LGL+ne+v1QqOVXLnYffZPQsJ
z+9+eovl2pq4l8dOBk7HPyrmidt2ulUhNepeeUZ4UO76vDKxtVwlZxnluz8k
FBTnokLxxky2Swg282RfsYzJ8/1llcnISZYzF/yCVyZ0TP1PlqD2Bj3H4LkB
x1w3cCSzPZ6CDgfa3g6aUXTaiA6nl9Dp8gq6Pbai9+BO9Pnsw7HDtoi334mB
UBbUA7ygcve/V+ocKlV6xktKvxSpKiRHUkUUSup4IjLTSPqc+juGwuZx4tQ1
lLZK9ZxSiROZScbqlruVueVjWYnpUovKILVU66WWKi3b2jKptzRLdaKUtwsE
bFo2BTTnm7L9QbQfnI5P0uZgtHoR137lznBQpqa6xB3fZbLxS8uFC5wmsppz
fA5jrCeVX2Xel+zlgYm3/v2nd1Tkgb4i9c+YLeoh1XwxKMQJDBYLa6O+3Qsy
ccJ5mUTkrWWW3TQzYF2U+X0oUpup6swsWZMok83MPZyfTvMEq1KZX+5YK/4c
+7v+o/oxVB5gu+nG6kwXM2uPIBLpcnqRrY3ocn4ZPW6b0ev1Ovq9d+GY334M
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\
\>"],ExpressionUUID->"ed8b0d35-2d06-497f-b1a4-84e90d0d1290"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJxl3HlYTP3/x/GZpk1EJKEF2UIlS1nC59jKGrKEbJG2b0W2RLKTLCEqSiqS
PWULcUb2LVG07/s+7evUr991ndfnXNftr/t6Xp85t3s+HjNNcz7ve8jmbRZb
ZQQCwWh5geD//znN++/UMxrdxPqzNcvzjAcSg1dOs1NTFWgPrpBZNCJAnnYf
rSsrdq6Soy1rPna9uK8s7UbPD1uVE2Vol0Rauay9IKSdllOzJ2KJgHbAUJXO
Eo0OFu1xfJrK0YA22puK7YdoqbXQnjP/8vjnFxpp6957O3tZz3raPZSrVpR7
19DOyZz4XalXFe3boWerZiiW0t6+tUhlp7CAbwtPW/OGTNqCtLH3nhUn0h78
Li57+pN3/Pr208+2xjoQdIi2m/KQI+9pixWUZt02T6JteGi1lKzLor3UY3lG
+cQC2l4xrS+em5Ty19eH+h+dVUXbI+Dmy4ibNbQDjPfeUdatp/0kaWHAznuN
tBN2DDqZatBCu0KlbjeJbqOtGPnRJtyog/bFET/uHF8nYOjzaTAOnRwspP3w
fUhAebYM7VhfpfPBQ2Rpf9286+SyLXK0U8ZlecqGy9MuEszb87xIgTb82a9o
tdij/Z76Q8MfGv7Q8IeGPzT8oeEPDX9o+EPDHxr+0PCHhj80/KHhDw1/tDl/
aPij+8H5o+ucPzT8oeEPDX9o+EPDH72e80f3h/NH94/zh4Y/NPyh4Q8Nf2j4
o8+H84eGPzT8oeEPDX9o+EPD382wbwW/NZOoPzT8oeEPDX9o+EPDHxr+0PCH
hj80/KHhDw1/aPhDwx8a/tDwR5vzh4Y/uh+cP7rO+UPDHxr+0PCHhj80/NHr
OX90fzh/dP84f2j4Q8MfGv7Q8IeGP/p8OH9o+EPDHxr+0PCHhj80/PXVGBji
ODqL+kPDHxr+0PCHhj80/KHhDw1/aPhDwx8a/tDwh4Y/NPyh4Q8Nf7Q5f2j4
o/vB+aPrnD80/KHhDw1/aPhDwx+9nvNH94fzR/eP84eGPzT8oeEPDX9o+KPP
h/OHhj80/KHhDw1/aPhDw1/c/Cf6Qs0C6g8Nf2j4Q8MfGv7Q8IeGPzT8oeEP
DX9o+EPDHxr+0PCHhj80/NHm/KHhj+4H54+uc/7Q8IeGPzT8oeEPDX/0es4f
3R/OH90/zh8a/tDwh4Y/NPyh4Y8+H84fGv7Q8IeGPzT8oeEPDX+tx626/9Ap
pf7Q8IeGPzT8oeEPDX9o+EPDHxr+0PCHhj80/KHhDw1/aPhDwx9tzh8a/uh+
cP7oOucPDX9o+EPDHxr+0PBHr+f80f3h/NH94/yh4Q8Nf2j4Q8MfGv7o8+H8
oeEPDX9o+EPDHxr+0PA3Pk6mNGBUFfWHhj80/KHhDw1/aPhDwx8a/tDwh4Y/
NPyh4Q8Nf2j4Q8MfGv5oc/7Q8Ef3g/NH1zl/aPhDwx8a/tDwh4Y/ej3nj+4P
54/uH+cPDX9o+EPDHxr+0PBHnw/nDw1/aPhDwx8a/tDwh4Y/o84VW8YH1FB/
aPhDwx8a/tDwh4Y/NPyh4Q8Nf2j4Q8MfGv7Q8IeGPzT8oeGPNucPDX90Pzh/
dJ3zh4Y/NPyh4Q8Nf2j4o9dz/uj+cP7o/nH+0PCHhj80/KHhDw1/9Plw/tDw
h4Y/NPyh4Q8Nf2j4W3ZN1yJAo576Q8MfGv7Q8IeGPzT8oeEPDX9o+EPDHxr+
0PCHhj80/KHhDw1/tDl/aPij+8H5o+ucPzT8oeEPDX9o+EPDH72e80f3h/NH
94/zh4Y/NPyh4Q8Nf2j4o8+H84eGPzT8oeEPDX9o+EPDn7NJO9MR3Ej9oeEP
DX9o+EPDHxr+0PCHhj80/KHhDw1/aPhDwx8a/tDwh4Y/2pw/NPzR/eD80XXO
Hxr+0PCHhj80/KHhj17P+aP7w/mj+8f5Q8MfGv7Q8IeGPzT80efD+UPDHxr+
0PCHhj80/KHh71Tqz7E2Oi3UHxr+0PCHhj80/KHhDw1/aPhDwx8a/tDwh4Y/
NPyh4Q8Nf2j4o835Q8Mf3Q/OH13n/KHhDw1/aPhDwx8a/uj1nD+6P5w/un+c
PzT8oeEPDX9o+EPDH30+nD80/KHhDw1/aPhDwx8a/sLdbmh/DW+j/tDwh4Y/
NPyh4Q8Nf2j4Q8MfGv7Q8IeGPzT8oeEPDX9o+EPDH23OHxr+6H5w/ug65w8N
f2j4Q8MfGv7Q8Eev5/zR/eH80f3j/KHhDw1/aPhDwx8a/ujz4fyh4Q8Nf2j4
Q8MfGv7Q8PdWzU3ZcFQH9YeGPzT8oeEPDX9o+EPDHxr+0PCHhj80/KHhDw1/
aPhDwx8a/mhz/tDwR/eD80fXOX9o+EPDHxr+0PCHhj96PeeP7g/nj+4f5w8N
f2j4Q8MfGv7Q8EefD+cPDX9o+EPDHxr+0PCHhr/qNcM7FqwSMPCHhj80/KHh
Dw1/aPhDwx8a/tDwh4Y/NPyh4Q8Nf2j4Q8MfGv5oc/7Q8Ef3g/NH1zl/aPhD
wx8a/tDwh4Y/ej3nj+4P54/uH+cPDX9o+EPDHxr+0PBHnw/nDw1/aPhDwx8a
/tDwh4Y/qa5Pg9RfSP2h4Q8Nf2j4Q8MfGv7Q8IeGPzT8oeEPDX9o+EPDHxr+
0PCHhj/anD80/NH94PzRdc4fGv7Q8IeGPzT8oeGPXs/5o/vD+aP7x/lDwx8a
/tDwh4Y/NPzR58P5Q8MfGv7Q8IeGPzT8oeGve3NzxaNUGeoPDX9o+EPDHxr+
0PCHhj80/KHhDw1/aPhDwx8a/tDwh4Y/NPzR5vyh4Y/uB+ePrnP+0PCHhj80
/KHhDw1/9HrOH90fzh/dP84fGv7Q8IeGPzT8oeGPPh/OHxr+0PCHhj80/KHh
Dw1/Az5tLtiiIUv9oeEPDX9o+EPDHxr+0PCHhj80/KHhDw1/aPhDwx8a/tDw
h4Y/2pw/NPzR/eD80XXOHxr+0PCHhj80/KHhj17P+aP7w/mj+8f5Q8MfGv7Q
8IeGPzT80efD+UPDHxr+0PCHhj80/KHhb6Tf9/R+6+WoPzT8oeEPDX9o+EPD
Hxr+0PCHhj80/KHhDw1/aPhDwx8a/tDwR5vzh4Y/uh+cP7rO+UPDHxr+0PCH
hj80/NHrOX90fzh/dP84f2j4Q8MfGv7Q8IeGP/p8OH9o+EPDHxr+0PCHhj80
vf+21TjxS7A89Yem99+4pvffuKb337im99+4pvffuKb337im99+4pvffuKb3
37im99+4pvffuKb337im99+4pvffuKb339C4/8Y1vf+G/cD9N6zj/hvX9P4b
1/T+G9f0/hvX9P4b1/T+G67H/TfsD+6/Yf9w/41rev+Na3r/jWt6/41rev+N
a3r/Dc8H99+4pvffuKb337im99+4pvffuKb337iGv9kTQ7565ChQf2j4Q8Mf
Gv7Q8IeGPzT8oeEPDX9o+EPDHxr+0PCHhj80/KHhjzbnDw1/dD84f3Sd84eG
PzT8oeEPDX9o+KPXc/7o/nD+6P5x/tDwh4Y/NPyh4Q8Nf/T5cP7Q8IeGPzT8
oeEPDX//7Wnyp9YcMGwiQ95m/LXboCg2+b3wkNnMFPr9W8+f9W/mV/8mP+59
zF2c2MyufjKr6LJaIok/Ozzw3TdFseJqycOsjDz6/eHvj9rrFx1OIWKdUxe0
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
VOa9/CwhOnErN56dISt2LQ61+15eQ26fvr7h2Tn+/PnimiTmao3gn/Pq96cE
Day6WEscVlYuL/8rEg+8f5NUXa8jk+Mn9H3pxJ9HD3XydH/9K5dISsrDt5hK
SOSDfJPuS7s+j7XadPiq1REt0fGws+9LyDW3vYJ3Ifz8QGL+s0HsvWqy+632
iE1JAvH/xA/f3gitJfaPR7lO+B9/Xl0x4fqNu+vKyO6dR6piFGrI6ZEz37vb
dLC6ohO673JqyM+Q+0KZGgl9fMAFdojpVglpt7NVNlghITICi1J993K6vtxF
XsVgH3+eXfuwUWuEaj0Zoe9lZmNRRfY+WHg3X+8PXe83+1pP3w317DB/Q4Nd
JTXEU/P5O/XrifQ8uLnZjfXjb+TT3jFuddBfQQfZ8Drb3di3ikSoLU7JG1PD
VoSf/OMTW0duTlvT+9CdMvr4yOlzYhxOSWhfazBSH2xYwRqOutOko1dHzqfe
WGndUkfXm2f+L+h3sYCx/9zfM+CwhFyRT9ByEBewX39+cXjQxJ8/X5WqFmoe
2vV+fuZD1QAhf34dP6/+Hjf4MN2HP88/6cS5q0+6XucVudtT/8Ty59u/7SnQ
tlvLn2dfFn7uzGtt2X/Oq29b5bC58KKEbJz10jQ6kj/Pnm9QN76fsaI4Rafb
4L2WTST0noFVQwx/Pt3aw3LJOj85cbVVuJljYD3JT5s6crliEnH6qnj3050a
EjbrvFdYnEj83/Pa7Pncaeuf8/MWAxziX+k9aCAWFRnvxUZy4srUo0OurG8k
jiHpjYlG/Hl3v33TlXR/p5AgscammNZa0nK23HnVO/68u+e82qsLz4vEmw2P
xPb1ayDpc6d9WradP/8+Oi1Zb2VaPpmX0OfVgQ/8fILmNp8D24bXkpdxOo8P
asiIG+KepeeNbSA+1Ws8rG0KSdSW4Ucyj9YRsavp4lHPBGIt9ldHYEk9eS+e
8eGXJX8+/pT8lQFlh8rJsj1rdDqba0nZdp3V5Y4d7I2yqfeuOtaT83UjD0fO
4M/Pm3663H1zjIT8L2FLn73HasmEIxVGg9gKui57da4Nc76IdmCCdPR6aR0Z
v/Vnbl5cDRlVYp/g0iuLrp9M/m7rv6yeffRlwu6sDfVk0itHK2ZEBj1/fs76
1gEFxQ4SuWj3goSu539Kr1Rp5NtCum78c/Tbyk01rL908gPB7kYyYVtx4t6y
crr+d/S6h7/+SmiHFqv3zZxbyS4WV9rYTW0k5q+6XYsoraPr9plPTB8FCZjw
sWv6zw6sI7Jf/prETipmNX6GFMc+ayCLs7ec32cgwzR9id/Zt62WHPEpOG+l
kcX66cUFaQyvJ9pZ6qr5cvz5+UYVOadsTVlGLLvp3qPQGuLtYyr4fY4/T/8n
3FLbRcCfn8/dvL9A4CP657x84ZiGL/du1pCnzQ3pLh5y/5yX32IiLNTUaCTy
6d/eHDiqKP7veXAHlRFzD6U30M9r0SnbrAUmzcQgyiB7whsFsfeH5XYDypuJ
zvGS7vsPh5H2aXsDE9QbyZ0eY8VZY/jz9Rrz1M0ydoto7/XzdPvYXU684vvV
3Upnm8nQ29ZG6bL8efsy5u23A3kZZKjzuSzFffXkwpffkQfv8Oft8Xnr8kHF
wOWWDeSSrs/tZDuR+PY5n48XPzeRwSbLF2Rv48/jk++VR59GZBOHklXZgxc1
ks/BzW1OUqHYYIDxuqFuTWSfQEm8xLmIrG4ZvOT7kQayzalNtDFcIPaz6GXl
vKCJnJDztC9fwJ/PH2g2vMiPqSDD6ovuntNsILn7H30/4dzBPvMN6hkkaSRa
Qz5ZRmzlz+87pBxse18mITbrF/fe/6eeCMaFzVxnX0nXfZNMp+jeKaa98Xan
pWdFHfEeE3pjpGU9EaXYvXD6kEPX/etWaTy14s/vdzyf03a79CU9//7Tam1d
1bx6tm/FJUlgapfvuQljlIQ5dF26Yb7pqW4dZF1l+PYnXb/X3Hk67+2MX0V0
/R6pDurjXMPq9vjldlq2heQbahnuPV9B1929kw8sl0poX2tMKzI9V8mWFOpM
l8lrJuqRNufysuroesvVmec/7xUw1y1Ud+21bSRNFkOqH+cWs4bRAx5p+zST
oO/ffazThMzuswlb7o/o+vsP3ihOqc1hTfecUVAPbCIpUr1Rl+T48/39Fh+v
tNoiYq6NnuCvFdBA4pbeVe+1mz/vr3zul/eHeOE/5/m11617bLm3nuwpD4yu
JSK6/lecn6/dxp//x+evrNA44wl3+XkSrQNa0UPntRKjXhYZ6s/48/2Nmisf
jpgjJmH7c868HtFEPx/V5vprlbQ1kf6jDW7sE/Hn/Xd/9XnQe8VH0vP9d40R
Jc2kX7j1tty1Iro+yVn1Z3+trp836gGqahPaSLSzR+/+dfz5/xcZiyyXX+fP
/w9MO/XkoY1I/Mtn9Y9bc1uJ+bFubgOc+HmANl2/7cQ6h6gXpu1J8momS/Nm
fHzTJBSvneGXrVfdQiTNjd3jmovIFI0OdXdxE9Gr6pt6PFQgNqhXqx/8sYVE
9v318dEsfj5gf8yeeVe6fi84n3rBfqdLE5mgWFkm7vrzhr25rzFtZwsJMclI
lTrz8wMjXk378l5YQ971txmfO7OJ2NmaNN67VEnXFbx+SVWbimmntrvO359d
R/R2y4SeL24kmfNCCu7MyaXrzJJtE2qnfqE9Zcpen5TZ9exVuxP7yy1bSHHV
Wc/O1x/pefymb8smtbvn0N50qXTJdfkO0m9V6krZ+Eay6PnIBZs1i+m6y1fT
h1PW1bAKRu1u/d3ayEyd2JNeryrouqmyWttiOX5+oN/Al1/q1lSyYjXbazMW
thHf4Duu6cl1dL3++tfpb/8nYD4UJSlUilrI9pWsfv3drue7bNqbYU2txFip
qFKPFTLrHrn67c9pJr47s8dek8tln3cMMsge2UpGqjakzRby8wWPRrk43x0j
Yo71MjpR5N3193nJZGebIz9v0HtQvjSgQpbJjtNese1ME/nQ023qz1h+/uDF
MOUN6Ymf2NjhV7Itb7WQ1aY/OycOE9H13ElRo34m8PMI9P9XUDN/dl/VNvLZ
Lf5u/ei37NQq2eaQFfx58P2JHo+yA9qIy60dxvPO8fMJza8GZpGFiuL/nq+v
k/M8MaZbKxmSlLotfgg/j5DSM8buhbPon3mFPo49HoVVtJNA3bizhVJ+HqHX
PLcZK2/w8wi22u6tpoEi8fFnSvOmG0vJDUuzGb238vMJk89Mazucnk1u7Bp9
vWVuG1H6X+Ziyz4y4tLKW5nvItrJ5NUeff4UFJGobj5H/yxuJTMdXl99eV8g
3uk11VaysZ3svx343HoGP68w/PYdh3HXK8jfzm+myvVdf9+N1X3c7TtY4cKj
49fWtpHVkzTUfqzh5xkaj7n623e9f/aqlFl+40sL2Toje+T9RZV0fVGhTUDW
yWLaJ9PLc7z/dP0eNXFdc9GuFtJiP/WrYmAOXZ/XUZnfI/sVbfbe1/larx7T
eQCdl/k2K7tev9dPfCDxqV2PD7Ow1nyUTdeXbFvk4dYpJbMGLOh/cXXX6+9g
hcnUR0V0ve3o/SM3xtewj84YmZQkdP3eLNrQd9WuCrq+lpxMLZdIaPc7HTEj
+HMFu87p0ceW41KiEnzhTr+kOrq+Z333O1dcBExGt5GDww63kTSG5PoUFbFr
C3+eWN1fSnRKuh8u/SBkwi62bLBf1UZ2X3khVzUhh30fmXPSeVY7iZ+dm6XQ
IqX/Pn/vEz2ix4mY3+XJxtNl+PmP4deaDHZ8k5KImszTUbszWR9p/N95XT/3
lMaxW8Zs4+cjOmR6tH3IkGUGXwmZt39sK/n6Kzqm4hM/L9Et0/QwO0lEW/mJ
ZsEzCT8v8XloYFiWjx9bMarb9+Ie7URS5xf/O0SB2VU37qD+wxaS0lb/dNsZ
RfGVqw+25yry5zXb3Z6WXbRvp5+3uj3UzxKMaifjlqt77bwm98/8xIH6qddN
TAWMQ3T9z4QoEV03/LRw5faR/LzE6N0brgY+4+cj8HmpfXL65zS/dvr784GH
GmZTegmYv44uvxas5ecn3GM3v/6xSUacb3D8Xr/PnSSqcsuRHUmFpHemy0un
NVLS23+quO67QDz2iGLI56GdZMY0t8l9Z/DzE+bbV2UX9awgWVO+7Atg20na
+fHvSzZ2sKKjV36Pde4gr8dlNpuM4OcrSs5725ilSMiUg693jd7RTna9nnso
43gFXX8jsri7bmER/983o26MbXwdeb9NN8i1s43cjvi2s9doft7ibrr1A/O5
9ewcU3U3/U0dxPuGu7+8aTqdT2iKGppvWSclz3aZhqiXtBHdxx1D0jwK6Xri
4oiQsGoJu7xVePOWooCx2PNssemjcrr+Oyq/24TXEtpzLdunm+WVs+e3GxhN
9Oskz7rJrwxPrKPrOSEe0QGeAmb4kP7t3Qql5OyDN1EvHxWyCVPyMxMFnWSY
7bPJGwqFzIuJe7MKrkqJkV163KAKKb1e89Q7s7vrRUzRmXGR0fpScjNolNzN
/BTW8UTDljH2neTmktnv7h/h5y1u/nmspdxdjqm9MKzWYlU7eeORr2pWy89f
4PurC0b9V11aImCmW3m1ZX9MZNUdDXUNLQTMp63Mru6eIvr4zepTHJlN/DwG
Pg9Zv1qhr1je9TpecNP/00N+vqLX5I+Z26bw8xT4fXjpBeXWNnUBc/XHUmO/
dFnxsVTT5MFaQmZe+U6r1278vMXATw5qlpn8fMXdUV6jfRbw8xX4fXbf9oR3
wqhO+v3pwXP2wQqThMyvtKCVPVWE4qLlCRlR/YTMLf2Utdmz+PmKx88twg2u
lpF5T4JPrJV2EpHdWLNJy7p+PrRN1KndLmAUVHv4DfsqoY/3fBCt6H5MQliB
A7thfieJTlhw9qVWOV032NFtnEIPfv5isO+Lu7O/1pEpL4x6tJ7oIFYW7uuf
nObnLx6OSNaYs6SejVY3dHy/R8DUXEiR2Lr8ovML38a42/5vSD7tKEebd1ty
pKT/2tSHrp4d5NCF4au9zkrYSeWj3RYNEDL7hm0ffXBRGX18ZS83j8BNEtqT
R52Td7xWxibuH/7+8isBY2X85vyMrs8nWK/yuJ9xI1DA+IpMv+mp8/Mlho5b
06+7C5lPX2OjDLNL2Ll1a21fnhUy0c6DcnYqFrCdgXXjuq8WMGdsE959GijD
yP1Wf+72uJN+36pZvtDXbm2Xpw+n3icn5bKqwr06yT2EzHznnsdepUjpnx+r
8dp8ZESXN7k+57W1O4mf+R2J9x1+fqOP0/+uLbSWY8aJTuWa6HeQHaG+Vr9n
y/wzr7EgXN/NfkIHCarXNT956wur8Lr75W1PBcyVh7UDbov4+Q4vpUjvoBo5
ZrPNn4ZOn076+UbGpHL+6RQBU8x2Lj/eM5r92jp+lkGlgGmKMQz76/Hv/Me3
0kWT7Tr4+Y8D140Ntg/l5xnGZunUtbXz80j9qpuX9EuVYVRHPhQUpSiIJVum
3n2dIsNoPWuOm7UzhujKFzb/TuPnb5y0V+ks+sDPL+2e5Dt0rqsMs/i+p2bd
aTnx5Jhdrw/8EDLS+z2OHp7Gz5PkOWYoVcmK/pk3uau9YoNppJAZ5f42ufcQ
fp4EPx92N6ndn3FEyBzNDLunHCcSe590Muk4IcPEHyxKWz6Bny/B96NPR7fG
32zk56Neylq7uf2QYQyVfG/5LeHnSZRXTqk3ndzBPn87VKJ3S8gcb955aNg4
CT9Psjh75+331eTd74Nvdk3i51kKPMlBi30yTMqfvqb3e3awY5btP98nUYZZ
d32s/RtxCb2+4MDlCwO7Xm/zn/XznnNcwLjEW65aMTybrpuZD5puYVvPnm2d
vqPjnZBJGj7glM3BTDqvEZ2iqvMlTkoGfvAc9MJHwEw1VntZl11M1z/82b00
SlrNNtpe94tQlWEUX/epTjldTdfdhrMTX+fU0a7PVlBV+yxgAretOOOiJ2TK
93ZvK0osYjOc+0uuLpJhPihoHcm063pe/e70XRMvYG5Z5/7MOJXFFni/ivO5
K2Quyb+vMHwlpf++A14xVw8ryzIGW93q7Bz5eaXISNvxV0/w816GwnBVwXMh
8zt49eDzC1NY/5kTh7kPk2FMlkafaq3g51H6+2/uEPnLMqHDJ50M0BEy8W1R
t/fE8/Mo+PkQPGjE4aItMkzkACsnPZ1frHCTdnjnIRnGabbhmIcX5RmreYnL
Qu27Xk/7+6on9fh3XoWMZVUKd/HzZsFfTh4SvJZhrgXely3pGcf6XjbzsWJl
mL37vDtrnRSY9Tl5u3olCJjUrl9ArGcpit9X6ltUHOXPx6c/29CnMUmGGRZV
bqCSzc+3TPZUuhb6xY3cVgswMkni5zcaZN/sXPxIhrHI0t/S/dRnonLmmtms
KzIMc9ps1MVOkfi/8x1VbQtfK87j52OU+v5q/fROxHR4f1dxmycrljPyC7FT
7nqfEha8SfYT/jM/83vc242/KmWYtyHPzcZ04+dh6P8f8LN9xO4XMszHvkqX
Q24JxaXrIlSbqrreN6sKpxY78vMvuF+3MLv0g9MOGcZ09R+XH1b8/IvNnMnv
J/yRsgeTG027NYuYuwU93Qe68/MvThYa/TwT6ohq4HT2Q5d368RQqx9X61nd
HqXNVYNEzMbWjx6jgvPpvIjWH7Vqn4tSUnvZ7pFXqZCZ1CoOFC2qYod0pg+u
LpFh2jf0jHhyuJI+Huc1Vuum1P5pl2HmlP2ZPdKjgh2vtFDm3jMR80Wp8/G5
+jr+8Rvc9yd3EzKv2UUaG/W63k96lBcWMgVs3pCpYWdLZZjiuh0NR7te1+9b
YgO23uTnowrPZnuoPOXny6YaFy7/WyfDnF57ZYWCZS676diShs/bRYzrJ0Yj
47SU/nlDf/x4HLdCxPhVf/uVasPPA5mZuvTp91zEHE/TGzgtIZ3VDEi5+vav
iNll/indyZqfj/k+5sZ6n8lyTNvGTYPEcfw81oDFaosG5QiZxI4Svb7xIvr4
Qw2lHRFSOWbl1qO71xJ+XqbXDh3XJ2dkmPVnyaaoLHnmRJB/d9kQfn4mxld7
nFtBlwd/+zWhL/h5mvIdka8LXiqKCxb3WqUzgz/fe7K32w3dVn6+67vzu5jl
nl2v4wmrvS+L5cVXe8boJM6WZSRGmr8sjOT/mb/ZPNfx1+fp/DzJPo1Xhav7
yjK34/t8meHAz9t8yrAZVP80iex1em6/ryc/b6Kt93hjH38R9V4QIkzfYiHH
7BjTW62wSiS+vPOhr8kkOYYt8/Tve19K51vw+awodv3kxBOyzN3rz7fVhvPz
NqNMlbXTx5WTqKEbuqdfEzG3s8oGlr8so+uz2t55m+yVsu2Hbw1huj7X9rSp
2z+9oI4stX4lutImw3htGBj0WZpEH+/gc7h/qU4DO+VFXHxkeNfzLSh4mrIk
kc6nFOw5eG/NdCnRuhT05e9KEfP04sH6m4X8vEzHs7BrvxXLWJceugleVrKM
mvu5jyO1+fmYBWUDbv917npdifoV9VES0fO1ZExn8LSFIvr5admqmd3ND8sy
I1UrZntNKGZPjh82rrRYllkaYfv8bZGQcVCbEJ/2W0R9vxsnrTIhXe6SNqwb
+TSfVYq+WyVaIMesOuml3jBZSv98S/2ri7o3dF23wcFwjryI/jw4faHWNn6o
iPGdf7jtuGES273BKf7AMFkm3XxlyNtIWaa1e/8k5qyIuVRbND7ASOafeZsJ
ljcf7MwT0fd/f+FCiy0jZJmDcg2P9x39xJLy8CjL1bLM5c2BsYO85RjzTyaR
l+tF9P29zfLv+uCNsoyOmdfOoEthbJ/TwduGO3X9nlz/eOVyET+/c3VNzK3A
TAXG8rpX7Pc8/vUgOcg8lj3Bz/Ns3+L1KP4S//7vF64pKnDh58sUkk8EDpgk
z3h/yX+huVFBfGHng/nKw+SZJWHKkgZvMcnaMMXv71p+nmqUY/7mvZb860E6
2zf+Th95ZpetrUpTmpz4VPYV/6u5coxWZopB77Gy/8wL9U+yzF34Q46p/Jlx
dnxVO/vf+Rerp6rRgiFyzIikGdbRB4rJOPGFqYXe/DxWwwOnV2tNZZn8tOJv
2UYN9Po9mZtCL35uZ4fFbbip3SDHeE4xWhY9oJ7cmnvs/AUdWWaFpfXGztg8
9r/zMt6biwbNMOfn3c5vnd86fKs8s7Qmakjk4jZ2kEZN+kZ3eeac79Xnj7fV
k/t2r5JmT+HnjwxnnUtQ3iPPzL+7w/p+Vi6dn+mREasx9EI78X9UrBheKcv0
eKK+IfU5P5/zfe9XQcB+GaatzxSP5wf5eS6rpD1+PWO7nGUM2f5dM4dVny03
JiRcjml3MM/9cL6dn99J9Ozx1kjElJ6ospupwM8rbTjWoH4kWo7Jbx6w7f6w
FFaUNv/S0wJ+fkk0dL6KWtf+POkIHeBwJp7NOeXoc0VJnpGd0urfrU1E53H6
hhvtP7tPnslc3r0kbS4/P6b50vlBijk/f9d5zi48tJ88c0ty6+1Axees13az
bx815Jltyp9agk8qMOdf5m/y2MfPm60anBluZ8K/HyddOWzHzubnV+y05Y+d
HiTPTNR+c3jO4ygySN3vc7A6P89y4cTJ6KTe8ozuYO/1LbXxRMvIyDy2iZ+v
+qDnvWJ9mRxz1VH9iH91OkmLmVh+7y4/bxXxbeHM0mA55tqV6n0P6vl5njDv
x6dCm5poXzF2eaK+toX91eOFptlbeSbn85eUM2oNpHfQWRMlXX6+xdZgRtB7
f34+KEA/0nHcB3nGNfhk7KxnjWTVof4zN1/h513+2nyuT+t6vfUOFhx6pddE
513ctYnk5A9+PmaN6wqX2X1kGe+YI1JXJ36+6uCKd6cWb5djHhaKzc41yDKz
VQ9ppH3l561yN7WpvMqSY3Z/mbX8W6sc491hp7BUgZ9/eTkzNoBoyjPpFzSH
91FXYMbLNevF6skz/ifGexoXNhOL9PuWge/4eZ2H4q22LV39f0Yrzfc=
     "], {{{
        EdgeForm[], 
        RGBColor[0.471412, 0.108766, 0.527016], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNVmto12UU/v3/7/uOkMo5pbKU2sUyyyhzLi8QQURZa+uKMbywRVBRY84t
6QI1a47lp6A2/3NqBcHmdLIFQR8yV6RUUG7ZDOtDF2qmkB9MMt3W8/A8Qh8O
5z3nd+7vOe/5ldY3Pvx8Psuy04AAuLEoy/4CYxHwn7ks+wxwEnAiJ3oWvo34
TF5JXmfKNMYs2wR8L/DsvHincuI1Ax4APINvTcBNwKuBN+ZE91hmk3n3my6Y
brYcz9sB04Dr4WMKOAO+IS/eFUn0pcDtoN8ArAOsB2zNiUe8z+e9luG5AzDo
7yXQnwReQhyVa0jKh3l97hiO2T/joPz3gHF/m3KdRlzHnPWPw149zqugtxT4
FhS+DWaqgW8FNOK8FPgA8O+ATwD9gC2APYBi6FfAzi+Q2QkbvYBWQDF4VYCZ
gN2gDwF2AQas9zrgpSD6UeAx80l/k2TnLPAL1qNt3kN5Tv4qfL4A+VHHRP0V
efUB7/yg82W9LgdcllMOlT6T1x6U0yDw1eiz49CbD9yVKWd++xTwh2lCt3mM
a3Ne+Y0n4a+BO4O+bwE+FVSL34B/DvJ7Igh4vjLKzhfOkfWayKRDnzMd50nf
G+/62yjcZ0z+DsBC6Ne4/wru0x73acG9yv5a6z68O0mnKknnwbz6mLDAfUQ+
e4py223noGeNtV4OqPd5JaDBmP1UG+WrNUpvxLorfD+Um+X7oh3OxR2ADY6P
uss8L+3mlaNudQjpZuDHomRXR83JoGfpqGeJ56Go83iUP/qdY5+s6Wy/GSWO
pcr+6OumJNkZwH8DhnA+x1olyS5OejfK3Ivrk/JoAK52DVnLY55BzuJXUTUY
jaKnPKdbnXeH6aOOf7/1Bo33e84/ijoPRNW1x33QFnXHH7AmUfZeBp6I0vsp
ylaHbVW4nqzrtO+bMQ86jn3/8016seWpN8f15DuyJGimbwNelZT700n6e31/
Oxwn39VdUfSLjr/gb5POnb5oY9I1uhYzeRh0KFKePbZ3nXcEd8WvUbqXwO8M
nEt5r1EztMxztMG15h0PQ+9NwLa87rbTdKd7usH4Yl+/lUR3J90x7/qppLmp
dt1q83qzOIel7o37AO9BrgW8w0mxVDqeGr+XtFHrGrKWe/zGkuZ7XGea/Vns
OVkQhefxHUjKoyeJx/yqDOucf79t0U5rUqzPAdcFvWlrguJZ6DxaQPeB/wrw
nVE7c25UfRpcq+VR+d0VlUeLc6lxHcjjd84Jd2avZVqtTztPWnan+X1J72pv
0rcGvyebvQso+7a/PevdtdJz3eTZK/hNq3E8jJ37g3tjm31Tv9l8fl/jOjwe
FG+5v93uPch9uNG5kN/ie6f9SstQtswyzHskqV6HkmrJOzgCeMi1ZY27vGfe
ybQnuUfY6xN+/7kHgvt/Kolm73CXXVOk3TEPeAy2zoH3Y5As54L2ppNkKMuc
zmfam7v8nd/aHFufdx33F/1/HISHgX8I0htyjv9msnWV9yb35yLPY2mRZop1
5pyd9vvJd7TMMZTbBmnOynzbmVsk/pjtH3BMzPeJoDq96lwpR921nin2eWnU
+Z6ofwPKUPb9oNoPBPVQrXuK99bl+nfbX5d9M4bvAI/YL/2P+l9jzHc5avuF
qB35bpTPUcv0+3zEtsb8n3PW/zn/JOXNOn1oGPa7dCGJPpNU+/O2ccb8L5N6
pOrijAd9fw34PxhYeFU=
           "]], 
          PolygonBox[CompressedData["
1:eJwllG1ojlEYx899n3M/aVGz5KUWniKKEVlMKykJWT1e5ssSPS1CPD3Fkpdi
89bySWHmnVKPnkXbauWD0LKF8t5ofJhJ1IqPGxt+V/8Pv+13n3Ouc537uq/z
pLO5jfti59xqCPafP5WRc1shg3+GD/h96MIXJ86N4bMJqsYLjHXzfAWu4zfh
Ev4YnuNH4Ay+HWrxKTAhUo40vtA710TeOqjA53t5IyzAy1iTZu1aqMIXMXbC
KcZix3MGF+uM35lv5bmG5wNwC78MZ/F6OI83EfOIkBbLiS9hrJq5STAPv8Me
J9mrDdrxlUG587Ab3+IVexFq8aNQwF/DbTwftNZq0Ip3MfbN6Z0H8Bqvd7OY
DfhecmbIPRdW4YeCarkfcvgfxq4x9xT+4V+JKbV3Jf4Bfg8eOuWwXCWJ3mWI
NRG+NNHeVqPJ+FU4GCtnA95OzCjT7+Au/gVmRRr7iB/3mivCYfw3MR3E9sPU
lHPDtmesM9pZp3Hm9ZH2KMWfMdYZ6xt023xKsTY2ynMFTMSrYBu+I5Evh534
iJ0xVk7LPQ7eR+rBMtzDj0h7zMHLU6pVD0zH1wX13jLrWfwFa27EqkEBL3p9
uxF4i+9J1CvWE1l8V6Jet57K42+CettyjuHlQXvbNxnyymm5f8JMPJ2S98IM
vBh0l+xOnA7qIeulHFRaP3r5BdiErwnqBavpCryHMzTHqskv/G+ive2d+vAW
yMZa8yRRDa2WNnYOP+a1t/XMKXyz17e1O5XB+4N6x+70K7wv6C5YzQfxhqDf
BrsjjXiHVy/anWrGP3nV0u5sCfO9ie6i9chL/D8025Px
           "]]}]}, {
        EdgeForm[], 
        RGBColor[
        0.26131827535357055`, 0.45933014859792753`, 0.8054831097714524], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
           "]], 
          PolygonBox[CompressedData["
1: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
3GmAuA==
           "]]}]}, {
        EdgeForm[], 
        RGBColor[
        0.38835995226245656`, 0.6742848066344197, 0.6033382839905523], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJw1lntM1lUYx3++v/f3WqmQobnWyhJFlFZtLTVToCwzNVn6h82ceclpZYDi
ZolppdiMvLuURkgJpKImmc5bYCst1/BGDBteqcBMcbMtV63L59nz7Y9nn+ec
85zzO+e5ve+9U/PG5saCIDiDhMi+eBDs6hAEP8EuyC3oSXARshi9HE6IgmAA
mybBY8gq9FMwGQ6M+dpR7OqwL4OzGY9E5iCJRBAcgB3hVfZsQ78G9yBb0S9F
blcS8323YVcLU+B21grRT8A3dZ8C+CLjLObz4Lf6bj08xYN+502NsIy1GdiU
w7WRn10KU7Dri/1dcCfjBcxvhReQKvSz8DfkA/R62IxUov8As+HMmJ/bi/vV
w9SE+2CS/LANuzWwGpZEbl8Av0CWoq+Df/LtNu5wHD6B5KDfY+/i3hu5/xR4
HenG/FXYDylkPh2mye8BbGecgk0vexP6fKbT4JKY+7latHERsiJyfT/8Q3f4
B3aXTy6x93HdZzQcgV0G9o9ZjBjPY34h/EpvsTfdLD+YP2oZr0c/CKdE7peJ
kcf2ELIh5vuK5K/NrK2Gn8BGzv2G82uUPyWy/5w7tfCuJliB7EOvhDOwy8M+
Ew5l/B7zQ+B0zc+CjzIuZn6wvQtZjp4F020Nm2fjfle783fwFdZWYDMLtrPW
jE0r/Dn0urD6eAT9XWwGwZ6MH2K+G1yvfLO8u2zxRm+DHVnric1p7BPSO8MX
LEc5Z2Lo+W53qLN6Yu0pbJLtTBP0Uviw5ofAFs49iO1FeET1aHW5VflcBTdo
by58iW9s4luvwgdZ64FNVzhc8Z0Da1hfFvjb6pX/h1Vn2f/nPPtfZz3T3sLa
Nc5v4fwTjG8wvyX0N6xX7A4xPsL8mtDjaXVu5xYxbmJ+O8xBqtDHwFyLMfps
eEB9aTe8wbf2sy9Gjp1Br7D8Rx8Q+p3HwqOqO6s/i/lnesvdilE2jOvOSfCK
4puC3qDcOx/3OlsQuL/OR967zsF3+MbXzK2AgxmnMv+A1bf6Qlbkfc3qrR2O
xm4V9k9bzqrX7YU/qs9Yv7kuP1u/OYvdv9i3wrmqtZy4102d/Nkj4eO/I++v
o+TTbgm36Q7vZC00Hd6U8DzpDK9w9q+Bv8F6huk2V4jdOGw2wV8i7xlXYJ1i
ZzGcgOxEXyiazy1fTgc+rpG/a+TzL9UfrE/sC91uBzxmuRV4vFeqF1lP2q58
2B16DlkubQ69r5ivjll9qrdbj/8w9HM+snzBRxt5z1txv4t9q0liuvm0QX2m
0eqDPfuZmx/674r9vpy0nor8xTn3Rd53zUfmH6tR68nmi95xX7PeXKx8sLwY
hVSijwy9nm3P5NDvbm+w34/n2DuNveOs54eeYxkwP/I4Toe36g5R5LluOR/B
vaHHqzZ0Mf2y5X7ofl8OuyS853SFtytPLF/OsdaJM5vhHvXSaqtj9dJ51s+4
UzE2RTCdPSfYmww3srYXm3L4pHrjsNDva/mXqjq0euwAxyvnLfff1l474yLn
NnD+93CycjcXTlLfngp7JzzOfRLem83/5us0xseZ7wt3sr+auU2wn/6T2H+T
w4qTxWiJ4mtxPqwctzhN1O9Rf/ixcmYHXMp4C/Ot8A7VzlD4qb51Er6vGFms
3lC9zIVt8q35+ILeGGO+TLn+Grxf/XZQ5DlbqfzPUt/IhMvk/13wGeR59Hw4
UP3N+txyxXoRfFn93Pp6hnKpPyxQL7We2kf/B7K1XqGeNoLxSjgcJsm3neA0
/T7OhHmyyYdjdJ9hsFR1Z/W3FilHXwfHK7cXw/8Akjpg2g==
           "]], 
          PolygonBox[CompressedData["
1:eJwtlmlsVlUQhm+/c8+HIrIIaIxRFGhZNGpilE12BASFCD8wGpE1NIqtlEZk
EVQokUVWY8EQ1lLQKhYRLK2KGkEJKaCsgohUEcSC0R8QNS7P68yP98tzzj3f
3Llz5syc28YUDivIJEnyAUrRcH7G5iRJN9QB/hFtg0+ierhjTJJO/KEJyoO/
QRvhMnQc3saaBTn2n53wa8zN5dlItARuxFwrng1A98JVzL3FszfRXPg7VANX
oxPwUNZMYe1Q1A/uix6H70Gt4F6pseYehm9G7Xx9H/grbEzH1gx0GP4ElWTM
p0/h5tG+LTC+Ee6BesE9UTf4vPtXgX6GD2DzHOt3ob2pxUixaoHawmtYU8Ta
weh1eLbHUzGZBz/i6zU3At7AmuEZ8/EduAtqAw9Co+DWrGnu+9FeGxQt9vLh
T8ZHGC9lvAwdhavRHPe3Br4QkuSXxGxcgnvwn0KPfye4e7Rvvx31jxbzare3
Fz7Gf+r4f0PWn4UL+E9pjtmYkNqel3l8K+Gv0ZKM+XRIvqb2Lu15A/h+bCzE
3gLUDT6CLsNX0FG4he/nNegc48bY+BW+AXt3am+Ym8ba6ag3HJn7i+eH0Bnt
N6rw8fdwS/8+7fGl1PZUeyt7d8NbtGc8+0L/gRdGy1XlyFIxus/zV8+Kfb8U
r4FwQbS9moSW6yx4vmnNC/BaNAHOR+vgQn+/5kqjnQnZ1pkaDd/h36McUC7U
pfb98u8InOv7L586wM2ySfIR/DG6Dm6EPszY3LVwG1QL70dt4XPRnmlNHXwm
GuvMnYb/1hmBV6Lf4NrUcl359gecZu28y+bVcLNosZSPWfgfPx/yUb72jhYr
7cFN8F2e3/rGpnAm2l5p3AQ+ndq3yl6q3PJ8UvxWwg2y5qt8vgoeH+2syWZX
uLP7oxiPgweQI2XkygzUDx6G5sGV6DE4H70KL0JPw5tQdWI5/z58MdjZrmf8
GfwgWgIvRgPhlviwK2Mxux7uzNz8xN7RCX4iWK4r50fC7YPlrnK4HTzGz4N8
GAv3dH801x3uH+xd8u8B+DlUlZgPI4KdAdnbgJ6CJ0eLlWpYvupb1nJDPraA
jwc7izpvB+EpaGdiNmV7IdoNf64zCo9CqxOb07PVng+qASvgZ90/+VMML0N7
4DWKkWpPtPcr5y7A65ir5dl+tB6e5PuzERXBm4P5pppQHkyXff1q+BW0FX5P
MYZnBtvLY6gEfj7Y2nI0OZhN2dY7V8HNUqstqjG3iInJAT8fDeHcrLHm8uBp
ng+K0VTZ8nhpTrlS7Pmg+L0Mr/X90ZoyeHSwWCiGT8IVXk/1/zmqb6nVVvkk
37p6viiHusDjZdPjOQ4e5N+jmCm3nwm29xoXwBPQVM+vXLhvsNxRTvUJtiey
JZvL4VnBYql3Klcn+nrtaSH8UGq9VD24SPXb67nq/3i4xPu9+tmj8GQ02/vx
EPgnbPybWE9unlqN1/4qB7OMb3X7et4SPhksForJCfglr896fzE80fuX8q8U
nun3A61Zr3z0+4F8mAVv9/uLfJwPH06t3qhHVMJr3V+N34W3ev2RvTL1Z+8n
WvOi7haeLwdRe3hIsFzTngyGT/v3HlcOwKui9YYVOoPwbvRGxu4IuiuoZy/z
+86VaGu0tlQ1Hb6E3vZ+pLvLvujPMna26qP1eq25CJdH68XqQepFm/x+oBqq
Wno2mu/6hsb43zRrdy/dcXbwLGbNF9XYLFzh/snG5mg9LN/t7YnWI+Wb7hyL
4UXBaofuHFXB7iAVbn8nfEo+ZqyHnIxWA/b7ed8Hnw+WC4qhYrk92NnW+BSc
5/1fOd46WE2u9/pUA3cMVutVEzsEO9M6z3rnD9HWaK1q1K5gOaZc05ncEazn
qfdpj36PdmdUPHXH+RbOyRrLf/XCVX4fUk38Uvme2l1DOVcDbwmWC6pZql1F
3g//v/PB/wEZY4l0
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.6097771602039598, 0.7436933952524478, 0.3572907163227177], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJw1lX1ol1UUx5/tPnda1kRoFEhDl4WCfzhBsZRwpaJIFNqLrpTwJd+235Yt
sEjH1HLaQGw5MxZssrVITNc2XxKV/MO2+YaBlq7mVGYv4gukkBHl53C+/nH4
nHvvufc+99zvPc/wBWWzMtlJkrRjAStMk2RaVpJMgE109NHXAFuwS/jNMDL2
ODED4Vra++ivCL5GD9aGbY5JMo+Ft8BiuBarwpppvwy/hL3E7U18fob5x2Ep
rLR1Wb8cPkm7kf4lsJP2Yfrr4TH53fBn1lrNmufhW8R1E78N7mbsa2Ia4A+0
b9PfBW/Bm1gn1sRYAzGtsIixHfRNhkNoj6U/F55WHs7AecHPV2nfi93B3wEP
EtdO/FV4jnY+/lmYBc8TcwFbpzy8juURN5KxYbA6eMw3sJAzPMb4I/BNrAD/
afg8VoT/XPT9bN9GuJD5GdZZZmfUmexsi9U/CQ5n3j9ZvlYO82/hD4FTGXsJ
/wk4EyvGL019P4sdbXel+5sNu9nvImufgJ/pvj6HR7Dr+AdhTupntxwE6cT0
8lH0s++HXYnn2e7pMO1y+o9AE2IdthU7pHzuNx0ytoy+FlgLS7BPsdrgZ94M
v2JsOX074bXo6xyPvpbFlmLPsFYha06Eie7F7udi9JhLsI+xH+k7Y9qjnUv/
f/j17HGC+JXB97N9Pwmub9N5TXQzfz7swCrx2+B8aca0s1r6t3ewUmu+bfqJ
ro/v4Cj2m8Q3zIattNfQvxvukc5N721a/1vlrwybrtxYjlZg+dKwablLubsA
tyuflteN0p5p0HKUUf7r5Nu6FXrj5cHXL1VOx2EPZ3uOzrJHJ3tdTv0u7Zvq
o+vG9FMNF6pGLIBvaL7lqzV4LTgGc3O4S/r6VR9sX9PcFsY6YB2sYY8a9qqG
3wevOXvg33rbd+E2xuqIKYHX9A77TL/B7/734O/PfBvbqvjt8IBiLPayNPRb
9NxZDnvhJn1DB/xTejPd9ei+foVPMZZHzO3gb97ObHe8QmdZKl30qD5cYU4L
4w/m+Bu+kbjOrG39g+AB6cT08lfwuDvBY22v++/QeBSOkJZMU416d12qg1YP
T8IX9PYnw3exVfizYK/ewv9wjOrSRNOg6vMXcIDqST/+jGy/d9Nhu/4X9t+w
+jND/SOjt8fDf1PXTwH+OemnHQ6lndJfBPPlPwqbVavXpz7H5o6Ag6PXt2y9
V+u/SnuX6v8pOEpj9qY3RtfwBnhI+jEdLVf9t/9AP/YAc38KrkvTYqf9m6K/
rTXwY9WsTdFzbTm/DsfpH/pQ6vmyvD0Lb9L+hf4/4FLV83esbsm3Gl8bPVcZ
OEX1+UV4Rd8zCP+G1skjZn30N7kOvq8a+B6swl7B/8BqUlRtgHOZu4i5r8Lp
tEfb+4Zzomv0NThUddLqZYX0UJX6WrbmKjhTc6fCu6nn+2TqNb5Y/7gC3bvd
d1nwf30JnKNv+BDeA79NH7g=
           "]], 
          PolygonBox[CompressedData["
1:eJwtlX1ol1UUx5/fc+9diW0SZAXSyDJR8Q8VjCCDhAxDorBZulJEM9qcm5KS
BWtsWqlpWb61WqSiJmbqaksttSDIuU2j0MLUuTTXGzopgxVRfb6e88f34XPv
c++5595z7rmDZ9VMrs6zLFuNIvqFz+lClrWgg/AXIcuO0N+OnoL/RL3wZdQH
34s2w5vQHXBFsLHqq4SfRq1wC5oNzwrGH6EZ8Gpva8zr8KqUZTU4JKdegd+i
r4N/nehteIPbV9+b8FrUBh9Ga+BpzBnL3CfQ4/B89tDAXsrRg/A8tycb8rUX
XcpsT3/An3v7IvoM3qQ9w1fQO/A36JaC9XXAI7A5jvZANBQ+QV9pwcZo7DZ8
KMOXKWgHvBCNzK2vFj6DXoDrUDe829u1aBc8HsXc5kxMdgad7s9h+FHWfLJg
PsiXTxizxPf/ajKfr/j5NcE/0veer9cK1wWLxfdoVbA5mjsdvQYv8PV0ZtXw
jGT/dMbl8K2sOYy1H0b3wU06c/49gNbAK5LFch5aDv+MjaxgcwYyvoq+ibnF
XLH/PdhZaj9D+D8ZLXb7E+CdjJkr2+gIfCCY76fQQXgRfRX8G48qtVdvV6Lt
8HPJWH0ae6P7X0C/Mf8H+tbybx06B3clW0t9ZxUbX182nocbmfMxa3ehZviA
56/O4FCyM5V/J9Fy+GKw3NIetdf5aG9mNmrgD5PFRjnQnCxnpng+7IEXe1v5
8yx8DP93KNdQF7ze75vsybd30dnM1miAn0l2Ntp/I7wPNeSWM/vhXcF8VYz2
K3c8HlfvSLA7dfVuoanwyWS+yd9TyXK21vO9Ht4TLDa647rr4/CxGnv3o7HR
cl77VU6eh39Kdvbr0a/wVsWEud1oi3xJVp90JwbB10WzpTtXBP8X7Sz+RsX8
70hmSzFRbO7m/2j+jUH3wMXe7ocuYP8C7ctwG/oWvsvty+fZ0WzK9mDsDYMf
ipabytGFcDs6BPegPvhcNFuyWcT4G9DNubWvgY/6/VQ9OaZ6Gq1Wyb9S+EW/
3yvRCrgZbXT/Tuj+eP4p5nPhR7weac5UeCRr3JabzwPgHlSfW8xfgpdFs63x
06L5IF9Uv4LqpfujGloLf+3nq5zbDbdgY7vHT7XlaLS96wza4Fa3r/fkU7hR
Oer/v4T/RSW5zflL9vy8tMetcP8is601SuCSaGejmCl29V4fNH4LvAwfynPb
495kd6TM6+ckuMnjIx826CyD5ZbuiO5Kp98X9X0F94+WG1pvkHwLdtc1ph3u
Fy33lCOjdT5uTzl7PJjEsnEevjNZ7qjmTVdtTFYrFaOZ8PXJckM5Mgr+Lthc
2WiBh9BX7PVXb9210WIlH+RLlZ+v8nUOfLvnp2qcat1N/p7oDvXSrvD7qDnr
4Pe9PqrGqdb2RIudxl+C3wj21qoe6K3M/T4oJ7p1nl6PlC91ut/BaqtqoGp1
n+eH9vBPtDdEe1EODE92J8f4ez0JfjnZ21GFlsJLPf8V80XwPvdPObYSXpJs
rPyv0/vn7798+gCe4O+vzqAUfixZLVPOlMH/A2wOOxU=
           "]], 
          
          PolygonBox[{{1346, 577, 1384, 1343, 1344}, {1344, 1343, 1342, 536, 
           1329}}]}]}, {
        EdgeForm[], 
        RGBColor[
        0.8388036358487669, 0.6888238739249768, 0.24525776993648285`], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxFlFlsjVEQgP97//Nrm9abtNXbKiGWBtUWkUgRXCK2aGhdjZdagihPTZVY
aq3lCpGiGg8eRESsUUTUC1HEkiYiHlQkbh9ohLa0FaW+yUziYfLNnGXOmTlz
ZkTF1pItYc/zjiM+Uu08rybkecvh/sDzokweghE4B5mN7MaeC/fBqkDHauBo
9hSzNw/OgDOR9cgrHGfDl3ASzEeSkQfYYfgRzsNHLjIfKWB/lPEU2MHcOPR0
9E12lpw5EXuu+IJHA90Xh8XYMcanw2Uh3ZuHLMBeKfeBV5DL6C9gP9KO3gdP
ctZ7cnACNiBt6KdhltM7T3LqS3zKvdORjJDGus4o8Y6xdZlwNXcazt2mwt/Y
fYynog9GfqEPWM7Sbb+MyXpZF3Gar1Q41tbLvpm2NsPyIvcZ6f7fQ/xdY10p
fq7DFmLoJpZGuB7pRH8E05ifjBSFNdeS82R402KXHNQjXeiP4VnTz8Co5bcE
/sWOoP+BVy23552eJ+ee83VO1oQY/+ZrvD8s33KWw/ad1onUywmbuwGXB3rH
MlgAC5EY0mz1I3UUtxrYDN/4Wl+tcr6dJWfKGyZZ7X2yNbJ2ABkUkkuQd1/z
+hM+t/GnMIHfPfi/DV/76ucFLA80hzHY7fR+y9CXSo2iL4J+SGORGIOQUmI+
wFwZa/ZafBJXKrLK6RuPd/qX5D1LndafxFAoOUTapAbY22R3S1it5Vr9HA70
Xx2BCezmkNZ6i1O7x+l5aVYD9dj1jG+EF5EL6Lflfzmt63L43c79CldYfyiB
O7FrGa+Ep8zPabg90L6xC8ac1mednZ9m8ebbXy5ymkfJ5yjYjN3E+Gf5uzYu
+e6zP/sczsIeKn0JXrI7H4QLrQ9IP/iAtEpdwQqkEn0tPIbE0e/BKut7++UN
zaf4fmh3uC8+sScwXh3ou8r7LoA7LPZGp/1F+swGuMT65OJAayrTeuLIQN9o
CuxgXRdjX2ASdif6EKkH67k5sNfXuun3tZbyrP9ErB9nhTU+6Q991oPi1gty
zE82fOK0BhpgSqDnyvnVFtc2i1vuIHPiV+wue6uE1c8w1gXYUfiO/c8YuwM7
fa3tHvjWxtud/kuJV2qz12puBHvX2FtMg7nmMwveDfR/18Fa62PSz27af7kF
/wF558Fp
           "]], 
          PolygonBox[CompressedData["
1:eJwtlVmIz1EUx3//+d1riUcxzGQb2Q0zg0RSZhGyDcYgL2PJ7kmMfd89SGPN
gwdJEmNLapRiLA3yIg9IISFhBkNkfL6d8/CdPvf3P/ece89yp0fVqvKVWUmS
rEQBLePP7EySbEXr4UdpkuTCOegBXMi3wfAQNBy+EpOkEgdb0DX4ZLC959B5
eDGqzJhP+dYe7dW38fAoj6f1SPg+MVrBEdXDS/hWA69A8+EKNBpeKJ9wB2J+
gzsTvwBu5/7boDfsX+HnUYyJwWJU+vlz4D3BfB1EB+BcfOTgqwvKjpYUnac1
CvDYaLH0ezF8nG91GTtjDXybmCmchergg8F8L0L74RmoGp6GxsHX0QP4NDob
LIZiKcdd4OXEGEes7mgenAlWC9UkC+7Et5fKF793hT8HW19Dt+CrwXwrxjPl
P5qv36z7wi3B+Cl6Bc/iWxG/D0WV8IdgvuTzC9yTb+357R3rv6yHse7GugxV
wL2i7ZWNbOcGu/sYNAcuD3Z35WC11tiUYluCJsObULGvN8M9VFO4UDmAFwTr
BeX7MPzO86ceaB2tZqpNI+u24mi50fm/YrvD86+cnIFv+v1UI9WqGvuxWXaG
dfCLYLn5hf4Eq7n8y2Yp3BCs12Uj21KPNwhNhH/y7W3G7tAMP3Z/2nMBfh/s
7LrDc/Uje2b7faer9tF8yWc3eK2v89EGeHw01jfZnvLzqOc3wje8/3THOvhh
sNqpZ+uDxVAs1XwGvAVVuP8p8F3vb93hHjzV530W2qla684+n1XwEZ9X7dHe
bNQ/YzPxlXnIY93P+78UHuH1lI8C5Sa12dUMPIEneD9oJovgv6m9DZrJFrgh
NVutH2qvn6dEMxFsRnJ9nQ8PDNaL2WhAMJsSn6cU/oOPb4x9I6qBf6dm20k9
AP9IjTuiJvh7aqw3qXewN0vne8n+2tR6VvktQE3BZl53V076KF+p2b5Ah+BL
qbHypbfkBGry8xyDL3p9lP9aeFK0WVGOlKvdPk+ax73wtmi22qPatovWy5rZ
PHi779eeHfBlt1eN9bZ/DDZL6lH16gbvN/nbGu1/gt4jnfEefDS1syqHi+Ai
z69qol7ZF+1setP2R3szyjz+zGg9orsHxYR/psbKaTN8x/0r3t3UJNYZ/sGv
U3t71WOf4F3+/mnm18D/AVr9x8E=
           "]]}]}, {
        EdgeForm[], 
        RGBColor[
        0.8963794659315389, 0.4119103572816002, 0.18376499208838676`], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNVEtLVWEUPcezT2X9AZPbQxo0SC16jbMGotADM4MiAgmSlBz2uGGXoCZR
VlqTZja4QfMrqFSQEqhYw4rIskEQBIavgVGtxVoDB4v1nf099mvtU9fZ23a5
KkmSPiAD6tMkOQnsAmaAZWAJ2Fql9Yq/ud4C2+dIkvdYT4fu8G4bsD1Pko3Y
r8tlu247773zO/uwV8CZVnAjvjuAU0Cf16f9HmNqB2pwbgFcyHWOtgbeyRVf
B3g3eAOwB1gIxcBYtgHrsG4G34X9Pu7dA/eDHwDDwHrf5Ru0ca8LmANGgFFg
AnfGwE98l+9cNPO74tyYI+vy3fd590zo7NlQ7Mzhht/mmW+p8psGFn2f7zwH
qp07a8A4v6aKdT/e6mEtwbWhOkaoFqzJgVw155r9asTeEXxXgVdC8S2DD6ey
XwKKwJB71gTUptpvDvWwPeSDvhLwbKp4GNexXH7actm/uLadjpPxtrrvR3Pt
8xx7s2otUVOb7bfJeqAWbgI/sDcJ/gluCdkPgo+796VctS1aO93YK7GP1Cdw
iHoK6YA+W8A7cvVsE7g7VZwDwLWQ74fgK6F63An5o9+9oVyZy5J9trunxLM1
cRRdT+pgzLpY9CwVPFsz7jc1O+cz/SF9vLF2uqyzjyGdvDZTG1P2Oen+Ff09
tObcq1A+zOsRuBzar4R8l623FyF+aqa9ZP+Mg3WcD/WvNpefKfsuu1c8X3Jf
boE/uHfsYbe1Rs1xhhs9D/X+Zh0HXatRzwZrUo23xkO1+mQuu25F95o9n8/0
P6rhrIf6cRV8O9e/4QR4p/VMXb/1XHO+59wD+noZmulf4N9+k29T0xX3osex
UjMNobzOh2aM+aXgc7Zzn3NC7c36zqBznMik+XHwX69pGwiducCZzVSjZfC/
TLX6kymWYc8b3xrx248zzdJqpv8d/1Mj4P+vn8Kw
           "]], 
          PolygonBox[CompressedData["
1:eJwtk8uLzlEYx8955zk0/AO8zdCbhYUxM5nsLFxWUy6ZvJS7SQixdA0pNmrI
YGPHYib21DQRphSSJRYu2ZEyxsxb7p9v39/i8+tzbs95znPOrzF4dOBILaW0
AgKu8jmTUzoL1/C38BKfFngfHMYPQQ++CQbwk3AM7ywp/cA7CNqH/2xLaTXt
g7AjvEk3vhT+MfaQ9gv8OYzjj+AD/h6+45PheJrzBu8g5lR2n/b6El6rvnba
N2iPK3cYxveGXTkPhmMq9n14jH+Fe/g7+Bbu09gVaJDfDO1P2TGf4hfDZ70F
I1ob9mfwGq8Xx5rF+RcW12y6yldn+Ryeq5yV+wE4V9V7H34TRrP7TuHH4TTe
hJ2qFbzKnnMXX1dc605YX3xnijUCd3Q3xWMLoFm8h8a3QD8+D5Zk3+FifFl4
bDP04jPUoCt7ziT+hL4x/KPOhDeIOafmGrVo7w6/jWHVEJ9gTR2fD9fxP9V7
UN9fPDNnTXafxn63+W1ozxY+yvjt7BoMhd+Iaqc+jY3BUPYdPsC7YCW+H7bi
28KuOZfw7bCq2k9vcy75t7Jr+itcM9VOb34i/MZ1HuXYjW9kfnvNZ54Kn1Fn
VU0uh++oWdVvD76W+bOZ2wMb8OXFd6E9F+Hni8d64QLeX/x2tEZrdQeKpX+m
Ho6ptv7RE/iu8L+lHFX7/+LOgOM=
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.857359, 0.131106, 0.132128], 
        GraphicsGroupBox[{
          
          PolygonBox[{{1218, 440, 1266}, {1265, 461, 1269}, {1172, 422, 
           1170}, {1120, 402, 1119}, {1266, 440, 1217}, {1117, 361, 1018}, {
           1018, 361, 1116}, {421, 420, 381}, {1220, 422, 1194}, {421, 422, 
           461}, {1168, 402, 1120}, {1167, 402, 1168}, {1145, 381, 1121}, {
           1269, 461, 1242}, {1241, 461, 1265}, {401, 402, 441}, {801, 440, 
           1218}, {1194, 422, 1172}, {1166, 420, 1192}, {1121, 381, 1118}, {
           1192, 420, 1212}, {1118, 381, 1144}, {1268, 441, 1219}, {1212, 420,
            1215}}], 
          
          PolygonBox[{{1215, 420, 421, 1216}, {1144, 381, 420, 1166}, {1170, 
           422, 421, 1169}, {1169, 421, 381, 1145}, {1216, 421, 461, 1241}, {
           1119, 402, 401, 1069}, {1219, 441, 402, 1167}, {1242, 461, 422, 
           1220}, {1069, 401, 361, 1117}}]}]}}, {{}, 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{801, 1218, 1266, 1217}], 
          
          LineBox[{1116, 1018, 1117, 1069, 1119, 1120, 1168, 1167, 1219, 
           1268}], 
          
          LineBox[{1121, 1118, 1144, 1166, 1192, 1212, 1215, 1216, 1241, 1265,
            1269, 1242, 1220, 1194, 1172, 1170, 1169, 1145, 1121}]}, 
         "1000000"], Annotation[#, 1000000, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{1019, 917, 964, 965, 1022, 1021, 1025, 1026, 1070, 1071, 
           1075, 1076, 1122, 1124, 1171, 1174, 1221, 1223, 1270, 1271, 1313, 
           1312, 1267, 1361}], 
          
          LineBox[{1067, 1068, 1114, 1115, 1163, 1165, 1210, 1214, 1261, 1264,
            1306, 1311, 1351, 1353, 1356, 1359, 1408, 1410, 1413, 1360}], 
          
          LineBox[{1009, 1008, 1048, 1063, 1095, 1108, 1143, 1158, 1191, 1206,
            1240, 1255, 1258, 1259, 1289, 1304, 1308, 1309, 1331, 1354, 1357, 
           1358, 1362, 1365, 1366, 1333, 1315, 1291, 1275, 1244, 1228, 1195, 
           1179, 1147, 1131, 1128, 1126, 1097, 1078, 1074, 1072, 1050, 1028, 
           1024, 1023, 1020, 1015, 1014, 1009}]}, "900000"], 
        Annotation[#, 900000, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{963, 870, 919, 920, 922, 923, 967, 969, 973, 974, 1027, 
           1029, 1032, 1033, 1073, 1080, 1123, 1129, 1173, 1177, 1222, 1226, 
           1272, 1276, 1314, 1316, 1369, 1371, 1368, 1367, 1364, 1363, 1416, 
           1463}], 
          
          LineBox[{1017, 1016, 1013, 1011, 1007, 1012, 1062, 1066, 1110, 1113,
            1160, 1164, 1208, 1213, 1257, 1263, 1303, 1310, 1349, 1355, 1399, 
           1400, 1404, 1409, 1454, 1455, 1457, 1458, 1459, 1461, 1508, 1460}], 
          
          LineBox[{913, 912, 944, 961, 957, 956, 992, 1003, 1046, 1059, 1093, 
           1106, 1141, 1156, 1189, 1204, 1238, 1253, 1287, 1300, 1329, 1344, 
           1346, 1347, 1386, 1397, 1401, 1402, 1406, 1407, 1411, 1412, 1415, 
           1417, 1418, 1419, 1421, 1388, 1373, 1334, 1320, 1293, 1279, 1246, 
           1230, 1197, 1181, 1149, 1133, 1099, 1085, 1083, 1082, 1051, 1035, 
           995, 980, 977, 975, 972, 970, 968, 966, 945, 921, 918, 913}]}, 
         "800000"], Annotation[#, 800000, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{871, 805, 832, 833, 874, 873, 877, 878, 881, 882, 924, 925,
            929, 930, 971, 978, 981, 982, 1030, 1036, 1077, 1084, 1125, 1132, 
           1175, 1180, 1224, 1229, 1273, 1278, 1317, 1321, 1370, 1374, 1420, 
           1425, 1423, 1422, 1466, 1467, 1465, 1464, 1414, 1510}], 
          
          LineBox[{916, 915, 911, 914, 960, 959, 955, 962, 1005, 1010, 1060, 
           1065, 1107, 1112, 1157, 1162, 1205, 1211, 1254, 1262, 1301, 1307, 
           1345, 1352, 1396, 1405, 1445, 1446, 1450, 1456, 1496, 1497, 1499, 
           1501, 1504, 1507, 1546, 1547, 1550, 1509}], 
          LineBox[CompressedData["
1:eJwl0DFLggEYhdG3LLcKh9bIvcE1gmpwjSBoLMKWDxIVcpeadGhqCoQcvjAo
iqBFkJyjySGChiwhivoTHWg4+3NvvlTdqkxExDa7mYgdGpzQoskNPUZ8Mz8V
sUiRTeockXLHM2Oy0xE5CqywyhoJh5yR0uWSK6555JU3Rnww5osffnmizwMD
2pxSYY9llphjknc9Q27p0KDGBusskGOWGT7tfOGeLhekdDjnmDo1qpQ5IGGf
Uub/zz8pWC/i
           "]]}, "700000"], Annotation[#, 700000, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{830, 802, 806, 807, 808, 809, 810, 811, 836, 839, 842, 843,
            846, 847, 883, 888, 926, 934, 936, 937, 976, 984, 1031, 1039, 
           1079, 1086, 1127, 1134, 1176, 1182, 1225, 1231, 1274, 1280, 1318, 
           1322, 1372, 1377, 1424, 1428, 1469, 1475, 1473, 1472, 1518, 1519, 
           1517, 1516, 1513, 1512, 1462, 1552}], 
          
          LineBox[{869, 868, 865, 863, 860, 864, 908, 907, 903, 910, 952, 958,
            1002, 1006, 1058, 1064, 1105, 1111, 1155, 1161, 1203, 1209, 1252, 
           1260, 1299, 1305, 1341, 1350, 1394, 1403, 1443, 1453, 1488, 1489, 
           1492, 1500, 1536, 1537, 1540, 1545, 1570, 1571, 1572, 1573, 1574, 
           1575, 1576, 1551}], 
          LineBox[CompressedData["
1:eJwl0T8rxHEABvAvd787A8IdJskbYOOck7qLqMtwizKKbE4UkS4Db4HNvxtF
Ft4BG4PDQMjCjMGkfMrwGZ96ep6emXJpoS6EME9/LIQBMgySZYgcw4yQp8Ao
Y4wzQZEpVlhljXU22OKYCx554oUP0vEQuikwyTKbVDnjjjeiKIQW+sgyxyI7
7HPJNd988ckvnYkQOmgnTYo2WmmikQaSJIio50f2gXtq3HLDFYccsMcuZWbJ
0EszcV71rnHKERWWKJKnixTvdnjmnBO2qTBNKfb/yx9cfTCZ
           "]]}, "600000"], Annotation[#, 600000, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwl0KFKQwEYBeB/3M2wJEteYWEoGHSKYjGJbWXgxC5cQUHBYbAoC76CIIiG
IUvKko8ggqBFNA2XfIIFDY4N/MDwlVMO51Sy5tZRLiLqzCYRMyywSJ0GJ7To
0OWDPsV8RIk1NjjgmGtueeWdMUkhYo4qO+yyxz4XXPHIMwN++GXI1ETENGVS
RrJvXnjihksOyVhlniI5PvW/cUebU5rUWCdlki+bejxwzzlnbLPJCsssUU3+
//oD8hMmmA==
           "]], 
          LineBox[CompressedData["
1:eJwl0KFKQwEYBeB/XCcG04IGh3qDYSbRiWVRDIIwJhPFZjNsY+UmgzhQ8BGE
FcNAGAgaBj6BQTAuGcQFhWURBPUDw9dOOOekR61aMxcRO6wkEWusU2ePfQ7p
cMk9D4wYU5yIWGKbOidc0GfAC+9M5yNm2GCTBhldbnhiyA/JZMQCKcuUWGSe
InP8yn3zxSfPPHLNFW2OqbBKgSnedBlyR48zMqpskTLLh22vDLjlnFMO2KWc
/P/1B9I9J0E=
           "]]}, "500000"], Annotation[#, 500000, "Tooltip"]& ], {}, {}}}], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, 
     BaseStyle -> {FontSize -> 20, FontColor -> GrayLevel[0]}, 
     DisplayFunction :> Identity, Frame -> True, FrameLabel -> {{
        FormBox["\"\[Theta]\"", TraditionalForm], None}, {
        FormBox["\"\[Phi]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "GridLinesInFront" -> True}, 
     PlotRange -> {{-3.1384510609362035`, 2.987654613563893}, {0.0001, 
      2.9846130209103037`}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             
             RasterBox[{{{0.471412, 0.108766, 0.527016}}, {{
              0.2613182753535705, 0.45933014859792753`, 
              0.8054831097714523}}, {{0.38835995226245656`, 
              0.6742848066344197, 0.6033382839905524}}, {{0.6097771602039599, 
              0.7436933952524478, 0.3572907163227177}}, {{0.838803635848767, 
              0.6888238739249768, 0.24525776993648285`}}, {{
              0.8963794659315389, 0.41191035728160036`, 
              0.18376499208838676`}}, {{0.857359, 0.131106, 0.132128}}}, {{
                Rational[-15, 2], 
                Rational[-175, 2]}, {
                Rational[15, 2], 
                Rational[175, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-175, 2]}, {
                  Rational[-15, 2], 
                  Rational[-175, 2]}, {
                  Rational[-15, 2], 
                  Rational[175, 2]}, {
                  Rational[15, 2], 
                  Rational[175, 2]}, {
                  Rational[15, 2], 
                  Rational[-175, 2]}}, {{7.5, -87.5}, {-7.5, -87.5}, {-7.5, 
                87.5}, {7.5, 87.5}, {7.5, -87.5}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -62.49999999999997}, {
                    Rational[
                    15, 2], -62.49999999999997}}, {{-7.5, \
-62.49999999999997}, {7.5, -62.49999999999997}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -37.49999999999997}, {
                    Rational[
                    15, 2], -37.49999999999997}}, {{-7.5, \
-37.49999999999997}, {7.5, -37.49999999999997}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -12.499999999999972`}, {
                    Rational[
                    15, 2], -12.499999999999972`}}, {{-7.5, \
-12.499999999999972`}, {7.5, -12.499999999999972`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 12.500000000000028`}, {
                    Rational[15, 2], 12.500000000000028`}}, {{-7.5, 
                  12.500000000000028`}, {7.5, 12.500000000000028`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 37.50000000000003}, {
                    Rational[15, 2], 37.50000000000003}}, {{-7.5, 
                  37.50000000000003}, {7.5, 37.50000000000003}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 62.50000000000003}, {
                    Rational[15, 2], 62.50000000000003}}, {{-7.5, 
                  62.50000000000003}, {7.5, 62.50000000000003}}]]}}}, {
             Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{7.499999999999999, -87.49999999999999}, {
                7.499999999999999, 87.49999999999999}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.499999999999999, -62.50000000000001}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -62.50000000000001}]}, {{
                    7.499999999999999, -37.49999999999998}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -37.49999999999998}]}, {{
                    7.499999999999999, -12.499999999999977`}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -12.499999999999977`}]}, {{
                    7.499999999999999, 12.5}, 
                    Offset[{4., 0}, {7.499999999999999, 12.5}]}, {{
                    7.499999999999999, 37.50000000000003}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    37.50000000000003}]}, {{7.499999999999999, 
                    62.49999999999998}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    62.49999999999998}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["500000", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -62.50000000000001}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["600000", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -37.49999999999998}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["700000", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -12.499999999999977`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["800000", TraditionalForm], 
                    Offset[{7., 0.}, {7.499999999999999, 12.5}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["900000", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    37.50000000000003}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "6"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    62.49999999999998}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 175}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"Rainbow\"", ",", "#1"}], "]"}], "&"}], ",", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "405639.9611292289`", ",", "1.0163541239130124`*^6"}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"500000.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"600000.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"700000.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"800000.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"900000.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"1.`*^6", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7651665388798246`*^9, 3.765166557949825*^9}, 
   3.765166592712825*^9, 3.7651667458228245`*^9, {3.765166776545825*^9, 
   3.7651668049858246`*^9}, 3.7651688748656235`*^9, 3.7651689874241304`*^9, {
   3.765169017543984*^9, 3.7651690225014796`*^9}, 3.7651690570809374`*^9, {
   3.7651691600832367`*^9, 3.765169212901518*^9}, 3.765169285159743*^9, {
   3.765169353812608*^9, 3.7651694584320683`*^9}, 3.765169543901614*^9, {
   3.765169590319256*^9, 3.7651696115203753`*^9}, {3.765169652180441*^9, 
   3.7651697187821007`*^9}, 3.765169790307253*^9, 3.7651698508643074`*^9, {
   3.765169926205841*^9, 3.7651699500792284`*^9}, {3.765170147902008*^9, 
   3.7651701688351016`*^9}, 3.765182954243435*^9, {3.765185231151444*^9, 
   3.7651852431396427`*^9}, 3.765185375486876*^9, 3.7651854432296495`*^9, 
   3.7651854791402407`*^9, 3.765185552101536*^9, 3.7651856157589006`*^9, {
   3.7651857410064244`*^9, 3.765185764986822*^9}, 
   3.765185816145938*^9},ExpressionUUID->"449c3a3d-83e9-487c-9a16-\
b759b3a7fa41"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", 
       RowBox[{
        RowBox[{"ecrosss", "[", 
         RowBox[{"x", ",", "y", ",", 
          RowBox[{"zf", " ", "/.", " ", 
           RowBox[{"mi", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b"}], "]"}], 
        ".", 
        RowBox[{"ecrosss", "[", 
         RowBox[{"x", ",", "y", ",", 
          RowBox[{"zf", " ", "/.", " ", 
           RowBox[{"mi", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b"}], "]"}]}]}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"-", "2"}], "\[Lambda]"}], ",", 
       RowBox[{"2", "\[Lambda]"}], ",", " ", 
       RowBox[{"\[Lambda]", "/", "10"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[Lambda]"}], ",", 
       RowBox[{"2", "\[Lambda]"}], ",", 
       RowBox[{"\[Lambda]", "/", "10"}]}], "}"}]}], "]"}], ",", "1"}], 
  "]"}]], "Input",ExpressionUUID->"fd6ed187-f0eb-43e8-b395-5faf7e174bf9"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.7042000000000001`*^-6"}], ",", 
             RowBox[{"-", "1.7042000000000001`*^-6"}], ",", 
             "5.1776269987560125`*^-55"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.7042000000000001`*^-6"}], ",", 
             RowBox[{"-", "1.6189900000000002`*^-6"}], ",", 
             "3.674750424046571`*^-55"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.7042000000000001`*^-6"}], ",", 
             RowBox[{"-", "1.5337800000000001`*^-6"}], ",", 
             "2.4534788768103763`*^-55"}], "}"}], ",", 
           TemplateBox[{"1675"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            RowBox[{
            "1.7042000000000001`*^-6", ",", "1.5337800000000003`*^-6", ",", 
             "5.3666400677261885`*^-55"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "1.7042000000000001`*^-6", ",", "1.6189900000000002`*^-6", ",", 
             "5.997583444995842`*^-55"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "1.7042000000000001`*^-6", ",", "1.7042000000000001`*^-6", ",", 
             "5.17762699875602`*^-55"}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{84., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 544, 33867141638758674343, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{59., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 544, 33867141638758674343, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{43., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 544, 33867141638758674343, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{73., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[33867141638758674343 === $SessionID, 
   Out[544], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.765169038373067*^9},
 ExpressionUUID -> "066ede2a-318e-4364-964a-51e14ea30a41"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot3D", "[", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", 
        RowBox[{
         RowBox[{"UDsim", "[", 
          RowBox[{"x", ",", "y", ",", 
           RowBox[{"zf", " ", "/.", " ", 
            RowBox[{"mi", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ",", "a", ",", "b"}], "]"}], 
         "/", "Er"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{
         RowBox[{"-", "2"}], "\[Lambda]"}], ",", 
        RowBox[{"2", "\[Lambda]"}], ",", " ", 
        RowBox[{"\[Lambda]", "/", "10"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Lambda]"}], ",", 
        RowBox[{"2", "\[Lambda]"}], ",", 
        RowBox[{"\[Lambda]", "/", "10"}]}], "}"}]}], "]"}], ",", "1"}], "]"}],
   "]"}]], "Input",ExpressionUUID->"3fff1fbc-359b-40b7-8be9-620857214411"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nXm0XVWV7oM0CiKGSEIITUIaIKGLECAkYScEAoRGLK0aVcOy6lXZUEgh
BIj0TVA8RIwKGo9IUcClORq4QIBwCeR6iIAUCmLooQgkgEgjiIKliGi9N7jz
N+/bv73CP3dkOp3nm99c35577bX22tt/5vhPfP59Q4YM+ejQIUPW/39/Hz7+
yNvO+F5/l7+nX/bxS8792PYr+fcHTvn633554orurPe9uGTjtaPTvt/Z//W7
hStu7/7o5ueWrF42Mu0nfnX9b33riOXd0cN+cPavl3447T9cNHOX9pq+7oiT
rjj7ok+tl/Znv3PGTy894dbuP//5yIdn/PiPd2L/yH/cdtRV6y/rjpT/IVe+
tf613725O0nxz16ye8/SHW/q3iE8//avT5x53Ek3dmcL/8Df3ka+A3ktaeQ7
gL/TvV3xt3gP59XdCUU8Pd0thX/Ve38vbeQ7EL/dyHfBe3EuWgefrQaeK96z
n9zId0j853zDv7J/xK8cP/BUY4p42pXxR76V8z1zgJ9qC/kHn5X5DP4beGYM
1KuaKfyPDtS3cr5HD4yHyvWN8VN5/MR4qzzehg2Mz2rb8nhu5Bvjv/L4D700
+KwG9FXdJTyhxwb++Jv5olv+96VzLl02c/WWaefv4Sve/tOEa4anHV3vGniw
p64DP3Z0PXr6P0y4Z4OX7sSOrre//I1ZT+3+k7Sj6/Xkj653VXx0PVV40PVc
4UfXzhddHyx/dL2H4qPrHYp4erp7Cj+6/ifli65HyT91XeSz1d1beNC180XX
typfdH1YMd9WtZfio+synnZl/Oja+aLr4fJPXRfjd6rJwoOuXS90fbPyRdf2
R9fmE13vJjzoet/yeK72Kta3r/L4R9fbKj663l940LXrha4Zz+gTXY/7zInP
/vW096ed/99b57/01j33bZh2/o4PPPwbXZ8S1yvs6Pqmq77yi+t++nra0fXQ
yBc7uu6XP7r+tuKj6x2FB12/LfzoeoTyRdf2R9c7KD66/nIRT08DP7r+e+WL
rm+TP7ou89nqThAedP0X4UfXzhddD1lYyrdVOV90XcbTrlxfdO180fVl8kfX
XynG71TOF127Xuh6O+WLrj2e0bXzRdcXCg+6XlIez3m90vivPB7Q9emKj653
FR50/fvieO6v0C86RNe7BR7s6PqqwIOdeF8NPNj5Oznw8G90vWGMH+zoeifh
QdebyR9d76b46LolPOj6JuFH184XXdsfXTtfdF3G09P9oPCj60nKF12vL390
vUeRz1Z3ofCga9cLXVfKF11fVsy3VV2g+Oi6jKddbVDOt3K+6PoD8kfX5hNd
m390fZfwo+vhyhdd3yZ/dO346HpX4UHXxo+uy/Xtqzz+0bX1gq4XCA+6vr44
nvsrxjN6Q9ebxv0DdnS9kfzR9djAg53f4X4VO3+5/+Hf6PrGuH/Ajq4PlD+6
nqj46Ho74UHXQ4v59ub9fz2vJQ1/dO180fWORTw9jXzR9fXKF13PkT+63rPI
Zyvvz7Gja+NH129fVs8XXW9azLdVjVH81HURT7syfnTtfNH1XPmja/OJro0H
XU8QfnS9Svmia49ndL2t4qNrjzd0vX95PFcez+ja4wFdu77oegvhQdeuF7pG
v+gKXTPfx46uN4/42NH1NoEHO7rmeRp2fp/nM9j5y3yff6Pr/eSPrm9VfHQ9
WnjQ9RbCj66dL7reWv7oepzio+u+Ip6e7kzhR9fOF13Pkj+67i/y2crnh9jR
tfNF184XXQ8r5tuqHB9dl/G0K9cXXTtfdH2A/NG1+UTX5h9dbyP86Nr5ousR
8kfXHj/o2uMNXc8oj+dGvuja/KBr6wVdjxAedG09omvyRT/oeuIfLl427Kah
K7Gj628smHH8Li8PSzu6Xhl4sKPrwwM/dnS976g5b3768bFpB9cX17R/8crv
xqWdv/ZH1wcoPrr+kfCg628LP7qepHzR9YXyR9fOF13PLuLpaeBH18cpX3Rt
f3Q9t8hnq5Evuv6O8KNr1xdd2x9d36n46LqMp12tI9/K+aLrGfJH1+YTXZt/
dP094UfXOytfdL1Y/ujafKJrjzd0vVd5PFcez+h6mvzR9ZGKj66NB11bj+ia
8YxO0PXjm7z7p0+s2ibt6PpXp+z/xhs/3Dbt6PpvAg/2nIfF9Qo7ul722StP
2eyYsWlH1+SLHbz256/jo+sjhQddGz+6fkr5ouuX5Y+uP6b46LqMp6eBH107
X3Rtf3Rd5rPVyBddO190/YjyRdf2R9eOj67LeNrVOvKtpitfdG1/dH1OMX6n
gQddu17o2uMZXTtfdO346Nr5ouuby+O5kS+6dr7o2vHRtfGg6/J47s980UOu
3wYe7Oi6L/Bgz+ejgQe7+zV2dP184MGe92vCg65fkD95fEzx+Ws86HqZ8KNr
54uub5U/unZ8dH1kEU9PI190/YjyRdf2R9eHFflsNfCga+NH184XXZfzbVWO
j67L9W1X68i3cr7oeq380bX5RNfGg66NH107X3Tt8YCuz1V8dO3xhq5/VR7P
lcczujY/6Np8omvjQdfWI7omX8Y9uuZ+CTu6niZ/dM39CXZ0zfwLO7rm/hY7
ut4h7h+wo+uL5I+uVyo++RkPf40fXTtfdL2v/NH1QYqPru8q4ulp5Iuud1S+
6Nr5ous7iny2unOEB107X3TtfNG1/dG18/X8Wvgr40fXzhddmx90bT7RtfGg
66nCj66dL7q2P7qerfjo2uMNXX+3PJ4rj2d07XzRtflE14cLD7ouj+f+zJfx
ja7PqO3P6U1d1/cj9aau6/t/elPX42r7Z3pT11vV9tv0pq6Pqu3P6U1dby1/
dL234qPrfuEp7zfrTV07X3R9gPzR9R2Kj673KOLpaeSLrp0vuna+6HqHIp+t
Bh50bfzo2vmi63K+rcp8ousynnY1qpxv5XzR9ebyR9eTi/E7lfMt7zfrTV07
X3Rtf3TtfNH1XsKDrkeXx3MjX3Tt8YCurRd0fbfwoOvyeO7PfBnH6Pr62n6V
Jalr1puwo+tdAg92dM3zSezour5evyR1fWI8n8eOrjeVv/ebYUfXk4UHXc8R
fu83q+e1pJEvut5V8dH1+CKentw/ht37zerx27kfDzu6HlPks9XdXXjQ9SHC
j65dX3R9cDHfVuX4uY+0iKddGb/3m2FH1xvJH12PK8bvVOYfXe8v/Oj6RuWL
rl1fdO18vX6NHV1X5fFceTyja48HdG29oGuPZ3RdHs/9Wl/rpK63jvV07Oj6
ndjfgh1d71RbX+ukrtl/hR1ds98GO7ret7Ye10ld3yd/dP01xUfXk4QHXa+3
sI4fXY9SvvD0F+XLX+eLrr9RxNPTyBddV8oXXTtfdP2VIp+tRr7eb4YdXbu+
6Lqcb6vaWfHR9cIinnZl/Oja9UXX5gddX1CM36kmCg+6/l/hR9fOF107X3Tt
fNG180XXT5fHc7Vnsb59uX9GeqmsF3TtfNG19Yiu2V/HuETX9FPs6Jr9SNjR
NfsJsaNr9m9gR9dvBB7s6PrDwoOuX5c/ut5G8dG18Xi/WT3f3rye1PNa0sgX
/k5SfP6W8fTk/lvs6Nr5ouvfyh9dl/lsdecLj/ebYUfXuylfdL2kmG+rcr7u
18Jfub7o2vmia+eLrs0nuna+6Nr40fVo5Yuur5c/uvb4QdfGg65/XR7P1WbF
+vZVr8kfXbu+6Hqe8KDrxcXx3F+xH4nxh67nxv0DdnQ9Qf7omv202NH1zLh/
wJ77d+L+ATu65v4QO7o+WP5+nws7uh4rPOh6VDHf3ka+6Hq0/NH1eMWH18lF
PD0N/Oh6qfJF1/ZH13sV+Wx1xwmP95thR9fOF13bH107X3RdxtOu1pFv5XzR
9WHy9/xa/DfwoOtJwo+unS+63lP+6HqM4vt9LuzoenZ5PFcez+ja4x9dV4qP
rkcLD7q2HtE1+TLO0DX7q7Gja+4HsKPrOYEHO7q+L+b72NE16zXY0TXrldjR
tf3R9Z2Kj66nCw+63kX40bXzRde7yx9dT1V8Pw+v4+lp4Oev80XX9kfX9xb5
bDXwoOudhB9dO190bX907fjoulzfdrWOfCvni66PlD+6XlmM32ngQdeThR9d
O1907fqia48fdO3xhq4PKo/nRr7o2vyga/OJrncXHnQ9qTie+zNfxpP3m2FH
1zyfx+79ZtjRNfuRsKNrns9jR9fHx/N57N5vhh1dz1F87zfD7v1m9Xx7G/mi
68XyR9fOF10fUMTT08iXOjhf/trf+83q/q0GHnR9kfB7v5n8K/uja8f3fjPh
r9aRb+V8vd9MfFbmE10bD7p2vdD1JOWLrr8rf+8303irPN7Q9dTyeK7mFevb
1+AHXZtPdN0vPOja9ULX1Jdxg67vj/V07Oj6qVhPx+71a+z5fkxcr7Cja/bn
YEfX7M/B7v1m2NH1WYrv9Wvs6Nr40fUDyhddr5Y/up6j+Oi6jKene4vwo2vn
S33sz1/HR9fOF10/Lfzo2vVF1+YHXTs+ui7jGdxvpnxzPGP3fjPxuY74nQYe
dO180bXri67tj64dH10bD7o2fnQ9o1jfvsrjH11bL+jaeNB1eTz3V9SX8YGu
69eTVuqa8YYdXZMvdnR9UO3600pdoxfs3m+GHV3bP/f3KT66Nh50fbPwo2vn
i67tj64dH107X3Rt/Oj6AeWb13v5U7c5RT5bDTzo2vjRtfNF1+V8W5Xjo+sy
nna1jnwr54uu7Y+uXV90bTzo2vjRtfNF1/ZH146Pro0HXa8pj+fK4xldO190
7fGDrs8WHnRdHs/9mS/jwPvNsKPrfeWf8+vAgx1dL4/7B+zo+ltx/4AdXY+P
+wfs6PpC+Xu/GXb3a+zo2vi936ye15KGP7p2fHT9oyKennxfBju6nqB80fU3
5e/9ZnX/VgOP95vxb+83k39jPLhfC09VxtOuXF907XzR9QXyR9fm0/0au/eb
Yfd+M+zo2vV1v9Z4qzze0LXHJ7oeV6xvX4MfdH274qPrQ4TH+82k38yXeqNr
rlfY0TX3/7nPOHQN/9jRNfN97Oia59XY0TXrC9jR9Xj5o+u9FB9drxQedH2Q
8KNr54uu7Y+unS+63ruIp6eBH107X3Rtf3S9S5HPViPfPAdJ+PnP+aJr+3t+
LTxVGU+7Wke+lfNF16Plj67NJ7o2/+j6AOFH184XXdsfXTtf7zfDjq53K4/n
Rr7o2uMfXVsv6Ppe4UHXrhe6Jl/qiq774vk8dp9vhj3PoQk82H2+GXZ0zXox
dnTdiufz2PNcBfmj68mKj66nCg+6Pkz40fWtyhdd2x9dO77PS6nj6cnzWLCj
60uUL7reU/7oenyRz1Z3X+FB164X9Xe+/D2imO/g83DhyfOChL9yfdG18/X5
ZuIz93eJ/wYedO16oWuPZ3Rtf3Tt+Oja4w1dH1wez7nfTOO/wQ+63l7x0fVs
4UHXri+6vrW236yVuh5e25/TSl2/Xdvf0kpd188PaaWuT6o9b2+lrhfX9tu0
Utf1/Vet1PVl8s/3/BQfXY8THnT9R+H3+Wb1vJZ0/0f+6Hq84qPrU4p4ehr4
0fVw5Yuu7Y+uy3y2Gvmia+eb/VD5Mi7K+Q6uXwtPVcbTrtaRb+4PwZ734fJH
16cV43cq54uu3xJ+dO36omuPZ3TtfPO5mfD4fDONZ+2vy/FfXSx/dD1f8dH1
BOFB18aPrqkvdULX7E/Ajq7hH7v3m2FH1+zHw46u2b+HHV1vJzx5HsDCuj+6
Hqf46Ppk4UHXxo+uRytfdL1E/uja+fo80jqenu67yhddO190bX7Q9U5FPlsN
POh6sfCja9cXXduf8eL4/C3jaed+TuVbOV907fr6PFLxn3rHjq6vEn7vN8OO
ri+Wv/ebabyl3rGja+eLrsv17atcX3Q9SfHR9XzhQdfl8Ty434x6eL8ZdnRt
f59Hih1dMx/Bjq7r5zu1U9dLa/cP7dT1HPmj610UH11vLzzoenQx395Gvuh6
gvzL/bqdup5UxOPzzdqp6xuVL7p2vt5vVvdv6X6pnboeLvzo2vl6v5niV86X
cbR3EY/PN8t8K+dbPt8s+azMJ7o2nvL5Zu3U9T8pX3Q9Sf7eb6bxVnm8lc83
y/HcyBddezyUzzdrp663Fh50vQ79er9Z6voL9f05qWvOe8eOrveq74dJXWu/
UOqa98uw53lX9f05qWv7o+vlio+uJwoPut5a+NG18819pPJH1zsqPrq+vYin
p4E/91spX3Rtf3T9oyKfrQYedO16oWvni67tj64dH12X8Qyeb6Z8K+eLrrVf
K3VtPtG18aDrscKPrp0vut5W/uja4wdde7yh65nl8dzIF12bH3RtveQ+UuFB
11sVx3N/5gu/6Hr7eD6f58ByHx7P57H7/Wvs6Jr1L+z53Cyez2NH1zyfx+79
ZtjR9SzFR9fGg66/Ifx5H6580bXzRdeOj65nFvH0NPD7fLN6/HbDH10fUOSz
1cCDrs8XfnQ9Rvmia/uja8dH12U8g+ebKd/K+fJ3mvzRtflE18aDrr8u/Hkf
rnzR9SL5o2vHR9ceb+h6n/J4zvPNNP4b/KBr84mubxWevA8vjuf+Cv3CI7pm
/wB2dM16OvY8Nz3wYEfXPG/Hjq5vivV07Oia9Ufs6Hqp/L3fDDu6nis86HqN
8Od7/8rX+83q+DuNfL3frI6nJ/eHYEfXzhddmx/vN6v7t3I9Dnuuowo/una+
6Nr8oGvH934z4a+MH107X8aj/b3fTPxX5h9dGz+6flD5omv7o2vH934z7Oja
4xNdl+vb1/BH146Prs0/uvb4RNf1/T+d1HV9v24ndb2str+lk7o+p7YfplOV
94d3UtfP1/bbdKryfrNO5fPNsq6h68MVP8/fEh50favw53kbyhddO1907XzR
dRlPTyPffB9C+aJr+/t8s7p/q4EHXRt/rvcqX3RdzrdVOT66LuMZPN9M+VbO
1+ebic/KfPLXeNC18aNr5+vzzTR+Ko8fdG086PrF8nhu5IuuzU95f3gnde18
0bXxo2vyhRd0zX517D7fDDu6Bg92z6+xo+t23D9gR9e7xf0DdnT9ffmj63sV
P8+ZEx6fb1bPtzffv6jntST7aR1/p5Evuv5JEU9PI190vbvyRdfflT+6LvPZ
auTr/WbY0fVxyhddTy/m26ocH12X8bQr40fXri+6Xix/dH13MX6nMv/eb8a/
0bXri67ND7p2fHTt8YauPT7RtfNF1x4Pnl9j9/lm0mMDP7omX/JH16fE9QF7
fo8u4uc5j6FrnidgR9ebxXwfO7reOOb72NH1ETHfx57niMsfXY9RfHTdJzx5
vp3wo2vnm+fryB9dOz663raIp6f7IeFH184XXW8mf3Q9qshnK7+PgD33Vwo/
una+uR+nmG+rcr7oeqsinnZl/Oja+aLrDeWPrkcX43cq58u4ni78/HW+6Nr8
oGvni6493tD1iPJ4buSLrj3+0bX1gq5vFx507Xqha/IlT3TdG8/nsft8M+x5
rkLgwY6u+T4sdnTNeVbY0TXfl8GOrkfJH12PV3w/D8eOrvcXfnR9rfJF1/ZH
15MU3+eb1fH05HoZdnTN94Pq8duNfNH1VkU+W3neGnZ07Xqha9cXXdsfXe+u
+KnrIp7B72kq38r5+nwz8ZnPt8V/Zf7R9SzhZ7w7X/66vn4ervFWub7oes/y
eK5euKxU375qPfmja+sFXe8tPHluYXE892e+5JPPw2M9HTu65nww7Oia/SfY
fb4ZdnTNeVbY0XX9vIubUtf2R9eLFB9d7yo86JrzoOr59nbHKF90/b/yR9fO
1+eb1fH0NPCj64OVL7q+Tf7ousxnq4EHXRs/unZ9c5/pwlK+g+ebCU9VxtOu
jB9dO190fb380fW3ivE7DTzo+l3li65dX3Tg8cBfjx+fb4YdXT9WHs+VxzO6
Nj/o+iuKn+cWCg+6Xn9haTz3V9QX3Oia75liR9ecz4YdXX8/8GD3fjPs6Bo+
saPrEcKDru2f5yApPrpeJDx5jrXwo+sTlC+6flH+6PoCxfd+szqengZ+dO18
0bX90bXzRdffEJ58/1r40fURyhddP1bMd/B7msKT+82Ev1pHvpXzRdfvyh9d
71iM32ngQdeuF7r+hPLN96/ljz4cn7/OF12/UR7PjXzRtflB19YLuvZ4RtfG
j67RL/jQNd/jzu+Aar8ZdnTN/Rh2v8+FHV3PjPsH7Oj6B3H/gB1dT5M/uh6l
+Oh6tPD4fLN6voPf06znNbjfrI6/k+f9Yvf8uo6np5Evuna+6Ho/+aPrXYt8
trrbCg+63kj48/0h5Yuu7Y+uzSe6Lte3XRk/una+6Hp/+Xt+Lf7z/jy/e6f9
Zti93ww7ura/95tpvFUeb/z1+ETX5fr2VR4Pfp8rzy8OXY8QHn9PU/rN+Q44
0DX7q7Gja+qLHV0zH8n3WELXPB/Gjq553ogdXbN+hx1d63uLqWt9zzF1vYvw
oOuxwo+unS+63lH+6Hqy4qPrMp6e3J+T6x+ha+eLrg+SP7q+u8jn4Ptc2NH1
GOFH184XXbu+6Hqq4qPru4p42vn8XPlWzjfPLZQ/ujaf6Nr8o+uJwo+unS+6
Hid/dO3xg66NJ88tLI/nRr7o2uMfXVsv+d6H8KDr7YrjuT/z5ffQ9U6186D6
Utf188H6UtfUFzu6rq9v9qWup9fWE/tS1/XzoPoG+7X80fUBiu/3r7GXzzfr
S11PVL7o+jvyR9eOXz7frC91bfzl8836Utf2L59v1pe6Nh507XzR9Y7KF13b
H13fqfjl880Sf7WOfCvXN/f3yb98vlnyXzlfdP1d4UfXzhddO1907XzRtfGU
zzfL8dzIl78e/+jaekHXdwhP+Xyz1G+FfomLrtmfgx1ds38JO7oGD3Z/TxM7
uuZ7YdjR9czIFzu6Xi7//K6j4qNr40HXa4UfXTtfdL1G/uja8fNc7SKengZ+
dO180fWt8kfX5xb5bOV+GOzoerXwe7+Z/Cv7o2vni67LeNqV8aNr54uub5N/
7msrxu808KBr1xdd3698vd9M46cR39/TxI6u1zGeq6pY376Gv7+nmecOh67n
Cg+6th7RNeOZ/z+6Bg92dE29sPt7mth9vhl2dM15a9jR9U+FJ78nLH90PVfx
0fXZwoOu+4Q/v4OkfNH1LfJH12cpvs83q+MZPN8MO7q+X/mia/ODrst8thr5
omvXC13vp3zRtf3R9TmKj67LeNqV8aNr54uu7Y+uy/EHzzfD7v1m2P09Tezo
2vmia+eLrj3e0LXri649ntG18/X+cOzebyY9NvCja8Yzfuj63+P+ATu6nir/
PC8l8GBH1+wfwI6u2a+e1x3ev477B+zouiV/z6+xo+vZwoOu9ynm29vIF13v
JX907Xz9PlcdT0/368Kf69fKF10vlD+6LvPZyvdNsKNr54uuv6h80bXri65n
KT66LuNpV8aPrscoX3Rtf3S9vBi/U5l/dO16oetjlS+63lv+6Nrjx/Nr7Oh6
UXk8Vx7P6NrjH12bT59HKj026oWu/732Pc3+1HX9+4P9qWvqi93nm2HPc5Bq
3wfsT13zfA87uv7X2vcH+6vy9zT7B9e5FB9d9wtP+Xua/alr54uuZ8ofXd+u
+LnOVcTTk/tzsKNr54uuR8ofXZf5bDXwoOsDhB9dO190bX7Q9R2Kj67HFPG0
K+NH184339+SP7o2n+ja+Za/p9mfuna+6NrjGV07X3/vAzu63rY8nhv5omuP
f3Tt+qLru4Sn/D3N1G/m++S5n5+1aIPbu8ee9PqG56xd0f1pe7+//M/X/nwn
dnT9q3n3vbT79L+k/crTJ1711RPv6G7x6XNPfPeBt9OO3l+V/xPx9+zIFzvX
gZflv+nXep75dvu27gjF5/pg/9kXPnP693fq63aFn+vGWvmf+r2tRl5xx7Lu
pod98uEvvPbXtHM9eUv+11/2d7d2Dr+l+/Jd599w06NDkjeuM/Z//pqLPnH9
s4PfAcTO9ec38h95/c/fuGXe0u5zis91yf6XHv2RUV/a8Ibuh4Sf65X9N3qv
jtd1fyF+uI7Zf6AuP+xuVeS/031N/s+8x/M1+X1A7Fz3fi3/Ad6ubNSX6+Fv
5f+593i4vPu48HOd/L38p72X1/cb9eX66fE8oNPF3dXin+uqx/PA7y7KfRr1
+K3u6x5v78U5t/tLxec67HwvfM9+VHcT4ef6/Kb86cvvyL50IE71tHjjeu44
A/meW1nXXOffkP+TAzxUC1R3rv/mbcQAz9XIYvx25boMXN++Xz1Yrnvluh81
ME6qjcQbfcTx5w6Mw8q6o794nK8ZGOe5/iJdVB7nJw3oqBGffmT+Nx7QabWV
8NOnzP/lA9eB6m7xQ/8ynlED15lq66Lubmrk+8uB61j1ddWXfvc7+d8wcJ2s
hio+fdDX7bgOV3eVr9vVL+V/4MB1vtqsqOu+xnjbbKCPVM+Kf/rpKx7PA3/z
PNL6OLy9ke/VA32wEZ/+6/jHDfTZRn3py+g3eM++PPzXb84/5rExK7HTlx/+
Vs8+B1w+aKcvH3fioZ2Nd90+7fTlR+T/OHqN+wHs9OVH5U9fPl7x6cuPyZ++
PFL46cuOT1++aMrH39n6C4N2+rLj90Zfnnb92/edufmgnb7s+PRlvjOFnb5s
fujLUxWfvvyQ/C+JvvwN4acvu1705RHiJ7+TLP950ZePLfLfaeBfHX3Z9aUv
m8+Doy/PU3z6sv0/E33Z9aUv239q9OVvix/6sv2HRl92ffM7IfJ/IPryEaov
fdn8zI++7PrmOd/yXxB9eZHw5/qF/OnLHicroy9b13leqfzPi75crnuratSd
vqy653lyHufRl8u6bleuy6zoy1uV697wPzr6suue52rI/9Doy/uqLvm+vvzX
Rl+2runLjbpHX3bd8307+W8Sfdm6pi+7vldEX3Z96cv2py+7vvRl46cvu765
f1P+9GX3hdxfLf/Toi+PKl+3G/70ZV+36cv2py9b17k+Jv+noi9/TPWlL5sf
+rLrm8+35E9f/mbxut2f9Yp6dx8KXZ9Zf08t+zLrCNjfH/bZstOXu/X3xWIc
Dp6DhN37SLGfEPYdZacvs78L+w/CPl52+vJ59ffgYn53a+7fxk5fnqg4Ma66
e8hOX54tnAdznoPs9OUfi4ezwv4T2f2dAuyfD/shsvv7BdhXxV/Xl758sOJM
D/sBstOX7xTOTtjvkD2/zywehoV97yI/PY36xnW1UV/6suv7QNhdX/qy63t1
2F1f+vIewnlm2GcUx2erwc8VYb+7aD+5wf+FYXd96cuur7/TUfefN911py/7
d5eGvVz3VuVxuzTs/bLTl83beWGfVOStnfvqsfeGfUK57pXr/mjYXXd/V0Lj
Lc+317itXN8RrKsW8Xcq1/3asLvu/j4F9irsB8ru71Zgfzzsrq+/Z4H9mLDP
lJ2+7PqeE3bXl768v3iYG/Z9i3pflu9J6Xqb5+vqut2o75qwl3XdV/m6sSTs
u8nu/djYTwr7NNnpy/eJh5lhf0B2+rKv2xuzbla8bg9+pyPu/3K+zHNC7PTl
P8T8Gjvz5e3ieQV2+vKv5c98mXPRsdOXn5Y/8+X1FZ++/DP5M1/uCD99+R75
M19+9dCB5wnY6cv3y5/58sPxvAI7ffkp+TNfZv8wdvry6/Jnvvyi4tOX1zuh
7s98edvD6vjpy/Znvvy8+KEvvy08zJddX/ryK/LP+bLqS192fZkv/+Uf6/Hp
yw/Kn/lyr/DTl++VP/Nl15e+7PjMl11f+vJq+TNf3kH1pS+/Jn/my88rPn35
HfkzX95a9aUv/6/86ct/kp358hrxRl/+s/yZL48r1r1VOS/my2er7vRl88Z8
eYNi/Hb1c/kzX7au6cvWNfPll1R3+rJ1zXz5UdWFvmxdM1+2rv0cO+se8+Vf
Kj59+S/yZ768jepOX35X/syXV4sf+rL9mS+P/3RJdzdVv5F/zpdVX/ryk/Jn
vuz60petO+bLV5Sv29Vd8me+/HJR133VffJnvrxK/NOXfV1ivmxd05d93WO+
vFbx6ctvyZ/58qjidbs/9fhEXNdWha75HgF2+jL7N7BvFPaJstOXp8T9Bvbp
YZ8jO32Z/SfY54X9Htnpy1Xcb2DvhH1/2enLp8Z9CPbVYT9Fdvqy428e9n1k
py8vE86Dwn6d7PTlSeLhzLCPkp2+vJ14/lzYR8pOXz5WdXww7K4vfXl7xZkW
9t1lpy/vIJxXh32q7PTl28TD0LB3i/z0NPg/PeyuL33Z9f1p/HV96cuO3xP2
vWWnL68QztPCfnNxfLYa/FwS9pGy05dHiefzwr6F7PRl15e+bPuA95nTXXf6
sn+3P+w7FeveqpxXX9hdd58Dj/38sJd13a5clxvDvo66V657/K1cd/ry7GJ9
e/KcK43b3KeHfWTYe4v4Ow1+esPuuvtceuyzwr6N7Lm/UXV8MuyuL33Zuj42
7NY1fdnXpQVhny47fdnXvUPDbr3ke8dFnpflPk9dtxv1XRv2sq77GuPn2rD7
uk1f9vicH3bnRV/eTjzMCvuHZacvu46bhH1E8brdn/WN+92cLw+N5/zY6cs/
j+fe2JkvHx3rCNjpyw/Kn/ky7wtgpy8/JH/my8cqPn35YfkzX95S+OnLj8nf
68vY6cuPyp/58j6xjoCdvmz8zJd5Dxo7fdn8MF/eU/Hpy+af+fLXhJ++bH/m
y5uLH/qy8TBfdn3py7+QP/Pls1Rf+rL5Yb78RcWnLz8if+bLri992fVivvwt
8UNftj/z5anin75s/MyXD1R96cvmk/nyFMWnL7tezJddX/qy/enLtjNftq7p
y/Znvlyue6tyXsyXXXf6snljvuy605ddF+bL66h75XHCfPlC8eb1ZezMl61r
+rLxM1+2runLjbrHfNl1py+bf+bLrjt92f7Ml61r+rL9mS+7vvRl42e+7PrS
l82P15ex57kj8me+vFX5ul35us182fXN94blz3zZuqYvGz/zZeuavuzrHvNl
15e+bP6ZL5ev2/3pP6Dy+StYX6ZvYqcvsw6OnfXlubLTl1lPwc768o9kpy/P
rH1He/4K1penyE5fnhL3G9hZX54sO335stp3veevYH25Izt9eW/FYX15luz0
5TnCyfryJ2SnL98rHlhffkD2/F62eGa+fITs9OVzVEfWl13f/L624jBfPkh2
+rLry/qy65vvjYoH1penF/npafDP+vIestOXXd/7w+760pcd/6qwu7705RnC
eUbYDymOz1ajvpeF3fWlL1tfi8L+cdmHxH+uL33Z9vg73XWnL/t3l4XduqYv
O6+bw75S9vy+qPj5atg/WuStXbku14d9HXWvXPfHwu6605c/qjisL0+TfQut
I2Nnfdm6pi9bF6wv31e8Hi7JdUbsrC8fKjt92fVlfdn1zfNrFecYrTvXebip
UV/Wl11f+rKve6wvTyvqfVllfbG+PKN83W7Ul/Xlsq77KvcF1pcr2enL7jus
Lx8ue6V1ZOysLz8sO33Z+mJ92bqmL1Pf++J+FzvrHdiZRz8bz/+x53fk5d8T
82jer8FOv35F/syjvxQ8Y6dfPyV/5tHv/mM9Pv36Hvkzj75O+OnX98n/lJhH
vxDrF9jp1z+TP/Pox2J9ATv9+nH5e90ZO/36VflvGfPoFxSffm3+mUezflGv
b293/RPq/hvEPHqN+KFfezwwjx776RL/ndxXgP3pmEefovrSr83PQTGP/pPq
S7++V/7/EvPoK4Sfft2V/94xj3Z96deOv1nMox8S//Rr44+/3QmqL/3a9Z2n
96ewe905/bXujH1I/Od60a//KvsqvT+l3608rhbGPHq7Yt1bleu+Nv5a1/Rr
8zYq5tF/Luq6XVmns2MefXW57tVK+R8T8+g1qjv92teNw7TurHHbwP9czKPH
F+veafDzpZhHP6/49GvX/YMxj95edadfW9c9MY9+Xvx43Tn5j3m060u/Nn7m
0aervvTrJ+TPPPod1Zd+/YD8T495dG/5ut0YD8yjny/quq/6iXUd82jrmn79
pPz/O+bRO6q+9Gvrmnm0r9v0a+uLefTIqO/PYxzTl/85eMbOPPozstOXhwVO
7MyjR8pOX94t7kOwM4/eS3b6MvsAsTOP7spOX2adAjvz6Ep2+vJpcX+C/Rmt
R2OnLzs+8+h9Zfe6M3bm0Utlpy+PFQ/Mo7eWnb48XDwfFXbXhb7s+jKPdn3p
y1spTlw38nzXOv+d/D4RdubRO8pOXzY/w7QeXeenp8E/82jXl77s+sbfRn3p
y45/TdinyU5fXi6cZ4XdedGXzc+VYd9Kdvqy67g47B+Wnb7s+tKXbR/wPnq6
605f9u/2ht26pi87rxvC7rrTl83bV8K+oshbu3JdrtN6tOpeue6PxF/Xnb48
S3GYR+8nO33Z9WUebV3Tl80P82jXfYbWl7Ezj7Ye6cuuL/No15e+vKXiMI/e
Vnb6sq9LzKMnyu51Z+zMo/uKeh9cd9b1tmGnL7u+a7Qerb7QGD/Mo6fKTl92
32Eebfz05ZHigXn05rLneVrimXn00LDHfGbwO7PxfBs782XWL7B73Rk78+Uv
xPoCdvryKvl73Rk7fflh+TNf/qLi+71m7MyXtxJ+rztjZ77M+gV2rztj93vN
2OnLj8if+TLPqbDTlx+SP/PlvRSfvvyg/JkvXyD8XnfGvoHWnev1WtLwZ77s
+tKXXV/my64vfdn8MF8+XvH9XjN25suur99rxs58+SLx4/easTNfdn3py8bP
fPkQ1Ze+bH6YL09RfPqy68t82fWlL7te+f132ZkvDxNv9GX/LvPlct1blfNi
vuy605fNG/Pl44rxB99rTl3rvWbVveHPfNl197oz9sP0XrPGbQM/82Xrmr5s
fpgvW9f0ZfP/Qa07Y/e6c16HY77s+tKXHZ/5sutLX/Z1ifmy60tfNj9ed8bu
95qxn673mnXdbvh73Vl9oVFfv9esvlO57zBfPlj1zXNM5e91Z/XNRr287hzz
pcY5YNjZp32a7PRl9j9gZ5/2frL7XH3s7NNeLvuJen8ZO/u0R8hOX2Z/O3b2
aY+Rnb7M98Wws097sez05cmKwz7t2bLTl/cVTvZpf0x2n/OPnX3a98lOXz5Q
PH9W7zXX6zt4biF29mm7vvRlx9837DNkpy8bP/u0+2SnL+8tHtinvUORn548
Pw07+7THy05fdn3vC7vrS1/eWXGuYB4tO315T+E8VevO9fiD7zVjvzjs/yV7
fidUPC9YVH+vGTt92fX1+Zx1/wXTXXf6snW9MuzWNX3ZdV8edtfd7zVjXxj2
sUXe2pXrsnRR/b1m1b1y3Z/keYPs9OWxxfr25Hqlxm3uP8fOPu3Di/gH32vG
zj5t193vNWNnn/ZBsvu8ynq+vZXrS1/2uGKftnVNX3Z92aft+h6i95exs097
J9nzO61Fngffd9Z1u1Ff9mmXdd1XuS+wT3tv2enL7jvs054hO335bvHAPu37
ZacvW1+b6L3mmL9lXx4a6xTYmS//Jp7zY6cvbyp/9mlPjnUK7PRl3rvEznyZ
7yFipy//Uv7MlzdV/Jwvy5/58g3C7/Vl7OzT/k2sU2DPc8Dkz3z5qVhHwE5f
fln+zJd3ifGAnb78Z/mzT/slxacvv0/8M1/e+bA6fvrycPmzT/tN8UNfdn2Z
L+9R5L+T693Y2ae9SPWlL78of/Zpv1/xc74sf/ZpLxN++vKD8mef9muqb+7T
lj/7tB8X//TlF+TPPu2dVV/68p/kzz7tVxWfvryJ+Gef9u6qL335Q/KnL1vX
7NN+VbzRlzeWP/u0dyvWvVU16h7z5ZbqTl9+zuM85ssfKMZvV64L+7TXUffK
dWef9quqe86X5c8+7adVF/ryS/Jnn/bEYt07DX7Yp/2y4tOXzT/7tCer7vRl
15192i+KH/ryhvJnvmxd05ffEX7my19TfenLvm77fE7s+V1K+bNP+8rydbvy
dZv5clnXfY36Ml9+QvzTl31dekrnc2KnL/9V/syXX1N8+vJm4p/5MrqO+WH2
5X/g/amwM1/+vOz05c0CJ3bmy6Nlpy8Pj/sN7MyXJ8pOX2YejZ358o9lpy+z
HoGd+XIlO335ZPb/h5358nzZ6ctTFIf58i6yH6J1ZOzMl6+Wnb48UjwwX/6A
7P+mdWTszJc/KDt92fVlvuz60pe3VBzmyzvKTl/eRjiZL0+Wnb5sfpgvu+65
T1s8M1923enLri/zZdeXvjxVcZgvT5advtwnnMyXe4vjs9WdIB6YL4+Qnb48
VDwzX95Ydvqy60tftp35sutOX7aumS9b1/Tl8cLPfHmq7PRl88Z8uVvkrV25
vsyXZ5TrXrnuzJddd/qy4+R8WfYttI6MnfnyNUX8ncq6YL68qewztI6Mnfmy
9U5fdn2ZL7u+9OWPKA7z5XGy05d9XWK+vIvs9GXzw3zZuqYvl3leVlnv9GXX
l/lyWdd9jfHDfHkP2enLxsl8+QbZK60j1+t1e7We7NmXxTPz5feHPearjfVl
7P+u9WXsXl/GfkXMl4+JdQTs9OWH5O9zs7HTlx+R/wdjvjxP8enLj8t//5gv
by389OUn5X9yzJcXx3N+7PTlp+TPfHl6rCNg97nZ2J/T+jJ2+vIq+bO+PEXx
vb6M/WK911yvb2/X9fX6cr1eSxr+x2l9uc7/4HvN2P875svnqL5eX8Y+J+bL
Jyg+fdn1+ueYL28j/PRl+0+J+fJ3xA992eNnU60vY/e52djvifnyXNXX68vY
j4358h6KT182//+yqP5eM3b6sv29vox97aL6e8363cZ1YFHMl61rry9j/2XM
l61rn5uNfZuYL5d13a5clwNjvmxd05dd92Njvmxd05efkP/hMV923b2+jP35
mC+X696prIuTY768p+L7veYchzFfPl/48/un8r9S7zVj93vN2LeO+bLrS192
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
/zjxAw/DFZ9xAs5Dlddutefkg/U9T3jA/2nZGT8vCif88Fw6eYv45tPn8MwV
P0fE73KeI+Pk8riO8bs+Bwx/6tsJ/7nibfvAg7/P28EO/4tr+/CXJZ+s34EH
/lmnwB9+bow4h4rnTyhfeFgqPOR7sfDkd9GFJ88hET/gXCo8Ob8TP34+j534
3xEe4sAP53X63Bv8sd8WcfJcTj2f5zsW2PneE+d7ws+U+rkrOR44N+Yj4o11
BPwZD5w7h53x8EvhIf5yxWGc8HwbnPC/T/18lRwnf4j4a4TnksCzheqyqn6+
TY6fBcIPP78SfvLq1s+3SX7Yt8N3R6j7OPFMXm9F/LXi4Zzac63BcaLzhTKv
lvDzuy8Iv/fPJ5/x1/z7+Tz+2N8W//B5dW2dfXAc8ryX76ZgPyzm0eCE/5W1
fd2D44fnrmvE/9m1/dt9OR7q++cH63im8OR+s9rzlr6sC88xwEkdu7X9CYM8
s39+ifDwfGOt6tgVb/A5Ufh9vg34yevg2nOtvuTneOEv758fzOtrtec8fY11
irUaP+eIf/Iy/94/D354e1n8e7805w6X988P2r8h/uET/jl32M9R499p570M
cMI/z3+Iw/jhOd6SdfCPP+OB58nYqSN4+G6Qn8/jn88B2D8fOKkj+73xh+dH
a88JB+u1r/jx83nsPt8GnOBnPOAPDzOFM7/bprxyv41wejzgD/4HhDO/Yyac
8DBXv0t8zt/g3GrG1a/FZz7fiPicT+1xxfecsO8fv4u/98+fJN7Ag3++Dyu7
98/zu3n+UuDHn/EDb9j9nsXMdfzufPH/uOIwfozf4wec4Dc/8HC/4nv//Czl
dWf4z1d9pwqPnxtj9/lI4Mzzf8Qn8X8mnIyTB8Wn+eG8csYJ54DxfS/srKuC
Bz75HitxqDv72GeKT/bV4099jwl9Yc/33IWH+DwnwR/+x8f1BJxZr+ANf/j8
UsTfWHjYLz1L9TJv8Hms8MPPl4Xf+y7yvHjmQcLv/fn45/fSI/4m4mHLiDNL
42SF+Ccv85/fURR+eLtU/BMf/JyP7/38+Od5/OIfPo+pnSfTn+OQ58bggefl
tXNg+nOcsO6wsXjepn7ee9a9fl5Nf9ZL5+QP3qfFfRR4qEu7dq5Lf/LGuS6b
iP+jlC88GM86zsnPvP5NeKjjCvEDzmeEJ7+nJH7K5+H0Z3zjIQ77qfj+AXX/
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
ekr0SJ3j54m2V7qpwu2Ejyndm+Kfp/4Kfyl+E+E0bBXx07FluA8hZ1qEHxHu
rXQzxe8l7CL6lXlLuKdoBuOL9QrhW3W2kz4NGch6QvS46KOgjyMOmUuF+5T8
fL4v8lNPZN0t3FTXvuKeCjuWbBvQlneED9X5eb+Bwp9zz0uO49q73A+FX6JP
o6+Im1p1/LfitxVuVWc9P0I0XnSP6A3RRrr2bMjcXPR81IFrb0Za+vA5Ydso
v6pnYk00Tvys/8i6J8JdlW6BcH3h/iGLPqTsI+tcF3Dr4Jt07QrhCsIRddbJ
M0R3Bk8c9mF/4YXCqtINFF8TNitZ1krCFUVXBo9ODQ85w0MG/Pyi/9fPK3pP
E+s53UUDq5b3cOZxzR6zy6veu8W+L/aEXVl1HR9RmiXKf47ifi76vwJykHdH
neeW24PgqTdrX6S/TLiKZFwlflXhNVXjxMz2O+tjZ9d5rIwMHvucvsC2X11p
h4hfQ7hmyfvK4NnvNko0us79w/yVRPw5cY3/BdSP/wutKFt865LzMI+dV+f0
o4OnrOMizUbRT7Tz76L30b1T9L4v9tOx9+utovezzY71hq7ogOj1otchZgqP
qHqeYW6BZ13lwKrX6tiHdkCd+Q0iTF76f5Zw/cx76Ngvxzz27xxStR6hA8xr
R1a9RsLayMdF2xkfCY+pen8g+9zgkX+Q8I2i17JmRZ27RL2hblH/GUXPpTPD
xmGPIv/N2OPH3j/2Dx4ccT1CD9ibh168XfQ+QNYte1XdvlMZo9F36CHzMGtQ
3wo3UBvfE94jPL5qOeyHpG5ton4fFr0Pj3a9X/SewA+KLqtZ9D9ysMtYv0IO
9eb/LHXgXvYUXle1XvO8OEf3+DP0Tfh0nec05rZpRa818TxCZ5lzJ9b5/+Yr
pBOOr3ot94bguf5g1f8FWVdlTZX/0eyR5b/0A2FnYm+eX/Rzf0D8/74/rp1d
9HP/nKLLpOxB6GfRax3EZ1Wnb+CeV712xBoI8bPDTrig6PUD5DOeXo0xNrjO
dZ4U9GjE3Vf1WGGNeoJobJ2f7w/TX+JvCZ55necF8xZzM/Mx88zLdZ5rqCtz
Ec8n+onxOzXozkjzcPTnoKjXa1E3/tcznz+JfVG1bJ59L0d+8hKP/OurtqNo
732ilateG2Y9eU78t3gw7/UV/mdhn7L28kTe63eXFG3ns8b1UPyn4P/B6UWv
k5xW9DoO/51/DjnIeCLkEeb/Lf+JWbvh/9FTYRcvt48JPxl24viwLX+KPKSf
EXmXBE2Pax9HOR9FHvLeI+pftL1K3fhPjVz+a98bNuV9oWNzou01XTtLaW/N
rA/8P7pQuFLV/cP/NXjWtwvCi4peIyXN3XW2B16vc/9MiD6aFXWiPmcWbe+e
FWs8syK+X9FtP5X/IlXjLZntUdaOWEvlfy42auvAu8Ne5TnLM5RnLXUYG/Vg
XGL/YK9gH7FPl2f2xKqfx2Or5qnvFOH7zA2h35ur7M4a309ltiPZ28waDft5
p9R5r++UkAePncL+XmwU1ov+faZVvU5D2S+GzGnCZ6qW89x/ZAwNOReHjEui
TMrGlsXmHRj8y8r/GH1cdV0Zk9T9BYV3Up2fzGznzY8xg32FrfWhaHddX1Jn
22xf0S/i98N2rloOc9EuJY+vnUuW+UOd11smhsz3RLvq2mLhbiXX5cMog7rR
h68JO5W8VoOcHUse2zuULGNi1I1ykfdK1e19INo5LPrkhejzW6K/ptfZthwT
5fF8p3zmX+bkp2OOYa5h/Y65gec4/w2ujfTkuybyEeYZzjw2LfhpUc51oTvo
EHPda3HvsN3YNz4uZD0Rsu+vWu5NVfOPxj0aHfKoM3vrsSHZg35ThOEvCpnI
Xrfk5+U6JeswbcKWX7vkOhFPGurVJv730EZ0bljVdih28q1VfwswKOZn+u3Z
qvfdY7MxTkjz75iJdo2PulwQ7aNOAyIt6YZWfS/YP09Z6OtVVbcF2+aZSEMb
J1W9Z+7bnN/Fso91o7z3zoFtg99S+toHezrz+l5zjeOvhbNEPbG5Fb9ivf8b
rlBvgv+ae640ayj8HbaN8EjRUfX+L7Km8DfhWZJRqffzeq2I49oobH3huXxD
wDcJdS7vDFFZ8WcK2wu3FCX1Lgu571QtE507M8bQ6vWux8I61436HqZrf4k/
vOS1ykXiX6/6/8oquv698Dhdy4vvJewdYwOePmDcrSo8ouT/vYfH/x7+o2WK
P0jhP8T3EDZFv9AnpGkK/uD4H0WahVEv1kxnqh6pcIGwnfr3d117t+q8yG6K
NJQ1o+p6UB/q/HnV5ZJ+QMlyzhe2ErYW/VznOaZV8KfqWlF8f+FpJf/Xg+8r
Kii+X8lpmKfgeyluO9ZFRRvUNBcKNxb2E94mGio6WNRDdHHQJRH3cdX/H98W
rq88tyquQ81yetKuwEtFh9Q7TV9hq5rbtTb3pWo5tGWRsAXrpqwDS+55JesZ
7aXP0CV0CiIvcVvz7GRcZuaz6Gf0ZGnoylaKLwk/VfyJJc/fjIH3q55XZ1c9
d7aIcknTIP6kmL9Js5rCJ5c83y6PJ45+/6DqOZl5GJnU/5uq9W7V0L252LTK
N0V1aS86kv+uwm1EV/I/WXiFcPt6h9Hl9VhjF16t8MrirxJuwAd+9V43Xz+u
k66j8t/CvM+6SNX3+pPQnXXqPd4Yq0eLtql3vx4V/MCSdeBy4RjR3uLH0udV
p2+m+3V3yX1O/B9Vy+TejYlxPjrq3Kbe9blY4W3RFeEmwk1FjUH0LXH1orbo
m+jbqsfmh1XzG4pfIryx5HcNNwlvLrlv4X+sOt/PVfPI/KjqtjDuLiu5LtSJ
9weXljxmqQ99tVrcI/p2R/GDmeNFO4u/oeQ+pq+px10K7xVtpE86MK9V3X+D
uC/1nsPa1Xvuax9I+Jeqr6F7dyr/nuJH8swvea57VThctIf4ESWn30L8r1W/
0/gz7t+FJZd7kfCoktdYjgy9YC2lWb3nzeXlN4t45kHe6ZDuq6rHOfe6o+iY
aCd6uV3mscIY3LzedWDM3KpruzIXCO8tuU7jhcfGnIGce7BvIp57fmzEL5Os
+xQ3PXPe/eodJs0xkY55hjmBuYb4DnENHUZnloYub1bveW3zwM1Ch3mm8By6
veQ5ZFjJ9V6edqjCu0U8bbxD+KrwsnrPScxNt9R77joFvZSuHyZcseb6UZfB
9W7fWfVuwzWiIdH+syOOay+ULPPF6J/BkXYVyTpTuHbNPLIKIf+akMN7rWvr
/b4HvleE6Z9TRbtHuFeU3VV0rqibaGXJupr2xrumbnGNNOcEz/uyE+r9jqlB
9KjqOJNvm0pO/3DJ79d2QOeq7rN+Ue4TJY/Tx4Un1nuMdKq3PMbO8fWWw3w0
QfhgyWVPiPlsu6g37+v6RF7wxOAnKd0B9a7TY6LuUVa+5nrNyCynV/TN8VHu
DtE+yuoS/dIr+pM+4d4xd+2Yarw3ajyn5juL3yXidhW1ErWt6N4JNxY+oDzd
GtQO8gqPF50g2qXReVuKDlWdNlLaapP5zRW3JbJFuyNX2Dpk7ya6j/eOkjFC
uIXyHa64dsLNRO3Eb1pxulZRp00UPjTir1Q7jhBdUe85B31n3mFOOr3e8zXz
Sn/RaaKVasa1hCvUPA8xn7xcsm5P5XlZ8hhHV8+ot37uE3L2CFlJzWOfj7Gz
muPrhK+ErTY18u4d9SD+8HrPaaRHb1evuc7MkUdHGaQ/I+pJGxprvn51pLm2
5OfmEGG15rG+NHSS+jBfXCg6SHRgIOGLIoz+XFDv97A3C7cWtqnZhkmFNwlP
Cv27OfibIs+FIYP+u110h2iu6vGE8J2SecbhnJJ1+MaQMyrG2fLxRnh0vfv7
8nr3y7kRxxgdE0h4TdVpgHBD4fUxrtBx5qiBokNFbXVtmLBjzXz/6FvsM+Lp
a+Yu0m9ac55DQgbjeGik4b008x1zHX1Cn20U7/AZg/sHEqZON0R9qBfvqQlv
VXOd6eda6Fr/6K8boy/pk7dLHpOzhWND3nK5hO8WlZX/aV1/PfP7btrN+/0R
wjtDL98oeS6dJWxX81y7drxjpx2dRc+UfH8nC58qWSeQy14F7i/v4tFn0mN/
MlfzfHg+ZFLWDsIpJdusxD9b8jNoctggJ0dZyNs52nhm6PKIqOejwjdLruPI
ej8froj7jx7cFXFcW6x0jwinC99i7ou+er/kfn5POL/kvp8n3KZmfCvzWOgb
95axNzzqMVE0n7yiGSWHZ5ZcvzMi3esljzXiN6s5P3PFQ8KH6z3fEI/ub1/z
3HN4tOOakudxxmZdvW22jer9fMCeI26Xmp+r/I/YUfSZ0r6dWdfuEY0XfVyy
nnwk/LDkfRHwO7I3UTgnM49dwH+KTjX/90BX7xXeV+//IV+InhV9Lvqp5H0y
S0oex4zncfXOS5n4LVpQ8p6Qz0vOj0zkfVGyDUB8Xdn6mS87P3VGHm2hLPaT
TCu5r1oozR4KPyh+z2j3/fUedw8EEl5U8jhdSP+pXT9iw2Xua/qVvv9BcS/V
+9pDET8hyr8o6sD9fCTu8aclz1+flNzn9Mnuwu+Y38V/X7LOTQhZXyn8vPBr
4WeMD2Sgy5nbOj/zPpmnFLeP8DdsJfG/Cz+q9xz4OPcueOLQWXT+A/qZfbDC
g7BxRH8q3zzF/YG9W+8w6T8MOR+GDPjN9GzcVHRwg3mwZ4P1+H3RJNEfyGCM
iLZUfTNd36ps+XdFPbn2VqSdGOOAvD/r2lThUmzsksc7fKns/i0KC6JZwbNX
hz7qLXwy2sz+ob+xZ4X/YDuXPY/Dfxr9Sd99o/ALca/R6wWiyaLuktWoPO+p
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
JalxSPQ17Tg62jK64DPtxzC+C857rKhBea8WloR3CQ9VmpGRj/xXR5pjhD+l
znNMyOA/Jv8/fg97j/9J/G/qKdoMPQMz+8rEfyY8/o+fEL5ate8u/GjhWxuf
PfhMxu/0wvBjhp9AfFPhJxFff/jlxP8g/qXxL4WvP/wN4vsOP4H4GTtQODmz
bzR8eB9ash8zfDxz7ZCSfSMRz/ti3v/g0wTfI7znxBfKzqnXhlnz5Ds+vnvl
+8EtMvsyfCazny725OHbjbbgo/rpzD4P8feIf2nS44N5Sviaw28450Egn287
ak3284wfNXxr4z8Kv2j4O+qQ2T/TyzxDSvbviN9y/HHhT+oU4a9F+wbmDPul
RfvJxQcy/sPxVYyv8E2x+VifErbN7AOW85X+LNr/7R9F+/JC3guZ/a3hHwv/
YvjNw78BPqbw34XfLc6twGcXPt7wnYUvL/wucUYGfu3wvX16yb6n8IeETyp8
kRH3IuOmZH+Mx5fs0wmfXkeX7Jfp3eDxG4Z/Sfxm9w6fC6TnnT7vlXmnzj4i
9hfwTvmQzO/2K03e38K7HdbqedfAfzjeTxyX+X0fa93saWFNnX0v7NngXT17
CdjbgD2zR8X7/UqsLTV53wh7stiPwbcP7Bn7sez3KbyT4V0vexTZn0Ee3l/w
foH3L7z7GEJ9m/y+Zkj8d7ixYpvnporX8K8Pm+eaWDMiD++V+M83suL3PjcH
z3sr3tUOq/i9Fe+EeW87tGJbd1i0l7X2Fip3k9TvzHn3zd4n3nWzj2u1iv+P
sOeKfSPsmdq54vfj2wmzeF/Me3feiXSq2PYjDXs2OsZ/It7js2+F/S3cC/Yq
sZeJPRW8K2AvB/tP2AOD/x/ey7MvjDLYB9I7bEi+bWGf2rKyv0lhfzb7+tgT
xV4W9p+wB4z9iew3o13s/yo1+RsZ9uD9UrbO4x8b3858u8GeOfbm/RX787Dt
+Qbk+yiL727qJKfQ5O9E2PtAeGnZ/8uQydjBN/992BqSWy99nJDZr3XfOp8j
gL84fP2MK9lfHDhNae4v2VfTAyX7iVoveHxS8f0qPt/wB4XftYnMb1n4S8vs
DwqfbJwR80jJvmpIg58xfL1x/gs+4vDRgi88fALwvRrf1fMtPN/d8s37Hpm/
7f408/fp+G7gXJiNyv5mtm2kwd8Bfgz4zppv7vnmmu+++caU7/rwFbCy8MPM
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
          "]], Polygon3DBox[CompressedData["
1:eJxNnXfY1ETXxvfZlmx2k33EBnawi4IUC6CiolixAQoIiKKIAmIDFSyIYAGs
iF2wYwVFbAiCYhcVO/YOdsGCXb/7xz3fdb1/nGvPZCaTyWTmzOnb/Kjhh5yQ
z+Vyf0e5XFG/76a53PVC7qzkcivrudwDKh+u8hkqf6/yXRXX3yC4W3iHLJfb
oZTLdUxyuXpjLrezyjurvIZgO+E3q81wtT1BcJPwYk19NORyrwvqwscKRmoA
0wQXCx+hZzxRzuWu0Fjqwt/S86/SvVN17y8qjxQsVP2Vqu9VzeUeiXO5rQu5
XEvBw8KvV7sr1X4KYxReUZ8z9Kx3BGsLX0tjKmps2wg2FH612lyhtpMF1whv
oWurq26nMP6puucmje20MD76H6q2QwTXCT+94vnpIzhN+CYa72kaywGCpsI3
1T1L9OyZ4fnM3ylqe3KY41l6n/U07qPU/yWq30jwhtreHeanpnldqba/Ceaq
/b/q81Phnwj/T/d+qN9HVH5Y8IHwkYKxws8L46H+Y9oLPhJ+quDcotuMEP6p
4DHhj4Y+G/TOnwv/QnhO3/P9ivt+SPCe8HEa0xka6y2Cy4WfqWvjVXe+4Czh
jRpfL737E3qnVzS++wWrCR+v9pfWvB6uZq4FtzD3ujZBdQ8K7hbeXrBc7/6c
oBlzL7hVdaPC8x5Qf2urvwtVvkzlU1R+UOvhYg23q9bD/NTrjb5/Vd0Rmr8b
9C1vFAwQ3lT3PKu+fwz9T1G7y4teA1cJv0HXpqrvEYKLhC/UtbtVd5fgKeEz
dG226iaG8T6ma7eq7jbBnIrXYw+9f0/Bo8LvUZuZans+c1bzHDAXM0L5R41p
e41/B8Fy4ffq2iyeLZgufA1d66axHyBYU/hG+j6NwjsIthXeSdBR+GqhvJfm
YKTmopugi/A1da1BdVsJ1hX+iPp8Wn1fL7hZ+LWCa4Q/Kbix5jllbh8Iz58j
eCHvPXCX8OfVx8Ya6/6CxcJP1xy/LPxaPa+vnrc19YxHY421fo7VtZmqO1/Q
Xfgxun6a6kcKjhb+nNpvpPv3ESwSvoT3Eb5Sddvq/unq/wvRpuF6/ll6/lUq
j1J5ir5fY5i/TO1TwQ/CZ6o+1byfp/aTVP+o4Lm8v+ntwtdRm4P07IOZD+Gb
ab2M0rc6WLA+tK/muTlZMF54U7XZXG03E6wt/Cm1OVXf+l5969/0rLc1ll3V
trPgX+FLBLvlfe0d4WX1ca/G+pZgdeG/6P7Xw1r6U/e30LW3VXdfqGe9s7de
EtwnfL7a3an20wVPCC9rfr4pmkY1Ez5XbRblvUf+v/1i1b8mWFDx+hwtfBR7
HPqhNrvpXY8XRBrL1RrDGI3zGj1/TdXNq/hZdwi+FP644Myi+2B9837H6VnH
C96NTC+h9d8WPZ6H1OYM4acLZgu/X30+Am0TzBR+T2zaeKDg3tjtb2a/QsOE
P1jxvacJZoXyTUW3ob8r1cfF6uvh0N+tgtuEv8yaZa+pzVS1nSa4X3hrjWlL
jS/H9xN+rL7h6SWvwUGJyzcJv1kwOPH9I6GNghkV03/OpufD+h+qaz1V10Nw
pfATBIcWfW2Y8L3Uxy4ln4FdhR+la5uqbjPBQOFttKb/0vU1tF6f0niO5pto
Lv4puH6S4GK1vURwsfBY36ib6kaG84T+aPu34EjhHTWmP/XtXhNszt5Vmw10
b3fVLau7f569ueAYcLV5X21nCdYR/qK+wf3q6wHBS8I3qLmvOwVV4YN1zxa6
d0vBccJXY0+p7lPBJsKP0p6+U9N7jmA/4b3UZiO1bS7oLby/4C/1/aegn/B2
Gt+lwgcJ1hXeVnPRV3PVT9Au8f2/q+43wWHCJ6buD/wrvc++esbZetb08Lx1
NYaXNJZfBBsK31p99FZffTjjEz9/Y92/ieAI5jd1mbF8zdrX7xEq9xecI3wt
9bFAfX0taCN8D66pbm3BnsK7Cn7U2H4ouHy++ltXdd2EL1V/O+mevxt8hrcM
5zm8zl+h3ErwpfC5gi2F76v7mun+dQT7VTzfMGL/qf9jhR/PmVz0NeZ/guBo
1pLgoorvX6G2ywX7CN9Qc9JJzY8WbC28iZ7xuJ71RXjeKxrvpHDvco33IP2u
p/L6goMrLv+ivn5mjwpfA5qge5cKthaecAYLfy+sn9nqbwD8BvOi/s5LPV+7
q/yFytuqzTK1fSLcz3wyd98X3GYbXftMdY+F9cT7sta2Yk6EdxZ8p7bfCnZh
vpkD1U0UXCB8F93zX4NpaGvhrfXOB+ndNxe0qvp78e2aCvYS3gR+Vn09rbX+
qsa3vfZgW62V1loraaPpHWf57fB48Etq85j26rHqL4PXgGbr3mNEDybreUfo
/tG6/xDBfsKXVgL/JFgm/GRBL9av4CThf+v5HwVe6l/1tT7fRGO/XRDVvB4v
UP2FgnOhd2ozPPKeY+/tpnEO5OwU7C78N/X3jtouYp+p7TP6fUPlNwXPwgtW
3NdF4Rtxf6eSeYZdE/ODvYse4ynMVeq9ubPgv5rn+yjVHSkYL3wfvWN33Xsm
PElm+nc2e0cwPNC/Qao7VrC38O907QnVzRN8y1jU59nwFoJraq5fylwJvhc+
We8wRO/7sN43U/1XujZXdY+H+WR+wecEHpV65vpLwdd8O91zp/o+J/S/j9bA
GTmvib2rXh8HCj89lKfoeSMi7xH2yiaJZYOtBRsLf0N9vqe+32dOhXdQm98a
/M02rnk+eqhtc7VNtH5eU5sHOHsEiwM9P6boPTux4vp3i+7zddrG5j0OEcwS
XlR/X6nuR9Xl1d+tGt+zGl+m99kbWpKaX52s+p/qll+OhzYE/hV+FnxwaPOP
7tkFWiIo6N6y3lm35XYUpMLfUZsP1PZDwRLhs9jvetaVgqvhB3XtWNUNElwa
xrul+tpCcL/wF3TtPvghwfPCT9Q9h+rebQSD4NcEk4XPDf1xXt8u/EzBlJrX
6z1F89hPC98gMa/Kmb0+/GHFa/mt0D/jnS38QcHbwl+ueP0vEbzC3lGfo/Pm
Cej/Tr3s15q/fVTeSvj7mt8u2s/rCJ7OfAavLvzPxGfzx/otq1wSfCT8YPWx
IXMvOJSzU9e2Vt02gg+EP6G+26qunWB+5HIivCKYJ3xaxbLvsKJl2NsFJwk/
UXBbxf0V1VdB8J7wwfoms/RtLhIcJvyl1LLVTNZT6vuvFX4dPFrF422le1sL
PhF+ht7xDeGn6v49df9uGnMB3oixqO4KwTHCH9T6ranuXJWLKvdR+SW1ny1Y
T/iegpeFLxJ0gdYLnhc+Vu0TtW8Pvyh8lq41E757qH9N87mtnv8Z86T5nMQc
61veo/LGKo9VebbKHwquEP546vWL7P2z+lumPkaor/0Fi4VfqTavqe2fyHDC
b9WzN9X7bMY3Fv4KNF5t1w/jfVWwn/BTw/3v6rkty/5mzO8rmcvvsM40np/1
26hyXfCT8Mmqf0XP+k1wrfAvWReqaytYmrj9jsI7CH6Bf9Qc7qWxbCDoXrN8
M61knhL+8k3Blmq7leAt4Y9qzJHalgWPCB+ia7eo7a2CocK/1zP7qm07wRfC
vxX0En4ua1T465nHcnioX4x8InwLwWvwsrr2qfp6VHC18ONYEyXzvPC3tP9P
+L+CV4XfpzYrhb8smCL8aY0p1dhqgoVh/aJ/QWZHf0P9dqrbXvCM8EP0zi2E
7yfoI3wcMqb6+iQ8n/dv0Nhygjd4Nvyx8M6CmcI/1fefUbQO4WXhx+meSSWf
cQMyfz/2Rj58s+66dpTqJob6F1nj+tZNBc8Kfza1/IEs8YfW0wS1ma+2t+ve
Fvrel8DzRNZBoYu6Te27Fq0zeCT1/DH2ip73oPDf1edktT0eHjPoF9i7e4X2
C3Streoqggeq1gehexlXtM7sFrXpUrTOaJbwx9VnUvY3ov9nE6/tPwTPCD9f
49tA4xsEj63+zlJ5Bd8XHknlP6qWfYcKVgrfRjR4qeZ+maCV8M907TjVXRHG
O0n376X+zlR5PeGXCg6NLJMim16u8lEqX6Tyv2o/I7U8w1n+neq+1LUTVHe1
4E/h81LTsj3C+/SKLLuiY+sdecyM/VLB8qr5nzFF65zgL77QtSGquzKMH/m/
ud5vIbK4vs9vunaZ6o4N91+sMXRTv+ewx+vWb6Frg2dBf4V+D93a4WpzmerP
FqxkvyFPo39SH2sL3zWsD/jFf4XfofY3qv5MwdKyacYjVcvzg/OWcZHf79S1
VHXbCx4V/lTVtK8qeEj4GN3/n+4/DB5U5XEqr6H7jlT5Q5W/rXruuwuWCJ+q
9/1I3/qhQP/OU/u62h+h+rWEvwb/KvwMdAbCx+vaOqrfCZ0Y31/3nKTn7Q2N
FT5d1xLVtQvj6aX320pjv1f3TNW9M3VtDdXtLHhS+Dm69hfnFzKIyh+klq+R
tX+vW/5/tWgdAvqGF5gzaH24f1FqXnIW/JDwu/ScLfS8LdGHoUdQm59zPkMe
FH5PxbriG4vWmSzUtR3g7cJ8Uo8+BZ0o+mTOH2j5Lznff7/Wxdoab1PBA5y3
mfU96Mpas14S64s6CX5PXG4ifLWgQ+pSM639UH3uCC+kPo9X37sJ2gm/VGP+
WXU/CS7hXdTmA+GlvNsP15zcBL1V+/ZV62vQ5fwb5I0Wuraz6gYJthX+dWLa
3V7wjfCzBPfoW98rOBtc/f0eWYeKLvWjzN9yQ8ELwrdRH/urrxFBf/d54vOU
M+gLzlBd21V1x4Xxn6D+ppQtE7etWn+KbvNCvoXqTlOft5d8pp3F2tG1u9V+
gNrvoPbXqM/LVHcp9Fr4Hrp2EryxYCfWt+55UHUXq259zfdE9dtMY18H/Zrw
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
HqjyrmozNGcavV3V9hVySxCzNiiz/RNb59uCi5gPfeMj1La/YHrZNoJhiWkW
tOukzLEj2GBOzBxDuCJx/DexhYdn1lVfE+qHZdb9Dw7PIwZpeM4yA+PHhjk+
cfwStk3iE7BVMEenCL+m7Nw4YwTXlm2Pwjb1hmA8bXVtbM4xUdPKnl/2/rRw
PzF36NnZ86dmjk+HtmBDIZ6PmGbidIjXOT+zTeG6xHuavX2D+uytvnsJri87
np69jY2MeCnOP87OIWF+iXfpVnaMB/m9mqu/mxLTDGjHVYI3S7apMf5bypZF
kPluLjun1ZMV8zzwPr0yxzoRs3W88AOqzgVGjAuxLsT8EgcCzTy27ngxci+w
hu6F9ggOLDtG5I3wfOaOmJKbM9sv0BUdEfyZWH+sRWLOuJ+YnycSy6/EAhEP
/kTJPNstmfPHzS7bJxzfcPJL4a+Lrye5Xu6ARuQdcwD9npU5NuvN8Hy+Od9+
SaDP8IPwsvND/9jXiH1/R+XbWQ+Z1+p/oXxC5li7IWF+qKftjLCesVmOToI9
k7WZ+VtjcxmaOd4M2+SUUMY+j22YmFBiQ8m5QJwUa35i5pxqxMXCc7+ZOT8D
sUDfCKazfzLz7k+F8iaNjpsjfu4elR/OHIvPmXRXOJ94d2L8KeODcG7iPcne
PFXjeVLjuYY1Jry34GrhC0KZfCaXFZ2D8KPUOSfJi0h+xNdS5/Ajlx/5Ag+s
O+caccTwUAfVHeP/SMX5zYj9Z/2RW418fYfUHdP8QMU8PLw8OSTJw0EM+4uB
PyaPDPlketXNv71Vcb6XP1PHmxJbSownsZ7wa+TuIR/ioXXLI+TeIYdB9yB/
kEeRfIqH1S1PvFpxfpI/UtuEsQ1jLz4ws7zwTcU0HdqOvzO5FPBxxh+anJqd
Ep+xnLXocNHbor/tmFleIFfMfN3/e2qdJ7pP8vvsndmeja2bmFdiX9Eho0uG
pzm87pxH2ybmweDFkAew9T+l/v5BPqw5HgFfeWJh0Vmhu4LH6lO3/z3+8/js
44+PDQ9bHj7Qg2v230d/RcwC8QnoKNFVoh/tV7dNGts0NKJ/3fkIOZvxmSae
lPPhpMT2XGIH67HPOnIoNiKfx45lJWaK+Khzava1vi7v/H3Qf2zFxBceWfd+
wi6KffTouvsj1vfwvGOMeF98zW/MO/8jMWbEmpGvcEDdzyMWixyJa8WOceud
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
gNLHcw==
          "]], Polygon3DBox[CompressedData["
1:eJwV13m4jnUex/GbrNkTFdlKWbLEsRzZyU6WHDvHORzbsWYpNGgshRlMtriG
NMxkuTDZNXayS3YSWRLZd3Kkef3+eF+Xz8fnu9y/537u+zmFEvu16Js6iqId
SIvKWaOokn9Uez6KqqM+XR3VePXpBmhKr8BT3j56P3pki6IqmaMoJVUUzUsf
RV/hNd56uXTpouiczHnspB9liqLJcn1l+iGDuge8v/N60clIy2sjm2xGszAT
nfSrzU9r4dUya9CMriPXRC6nzAsoSQ/ld5UrmCGKCmEqfc+MCWZ0VZeEiNcZ
FeV20TvxphmV5BL891J7L0MW3u+8aWo/khmK7OrqmdPC3HxmvooY+o7cWLm2
Mu1QUO1ufmF99sjsxjr6OGJ5d+k76C13UG1jtVf4l7GW/k6ugH9vltmEb+j+
ZsfZObXreg4f09dkh6utY2ZdvKpfC/7rcnPpOahFV5Xr5trW6rkOWeUa8rPJ
7ZHZi070Hrmq+uWj8+MU3cTsDq63jD3eRk36f/xicvf1eoCc+h3iNefdpe9g
I11GtrjaAuoKoq1cDXMicxfrvwSv807ItlebLtwD2BfOALG8nPSLOEzfUlv4
uSha6PoX4SldzozSZhTTvzja6RfLK8eLocuhPa+tbElzV+q1AoV5d3hF9Fum
13KkyuJz4L3Mm0xPQSW55vol6FdFr8rowDtrnyT75dUrD17i/cYbyqsZzh15
wzmrba22iLo38Q59yZxVaaLoZEZnjFZhF95uXiqZ1MggV0O/ZMe1zXluRxP6
qtwGud/UXcVDuiN/jtxRmSPIod9l/lq5szI/ozUvRW6m/UbYbSRyudbrvBG8
RnRj5JP7We1CtVvUbUULXkv7dHMdde1WBx15Z+Tmy62TWYvmvAv69dLvjXDG
eJnXlDfefkvsthjV6Xtq96lNH64VWfR/zP9c7SB1g5HFfjvkhsj9V/9vcJLe
Jhcjl0EmY7iOcL2yuXxu431mExDLu8TLyRtLj0NF3gBea/dBOjo9RtBJqMk7
pdePKCq3xT7Z7Xrfbg9wlE4y+4J+JexREnXlfuTNtd8yeima8W7Zb7T94vRq
hQK8jXK95f4pMwd76Rtyo+Sahmda+M7Jvcvr76z2m30ALcN3V/aSuWXVxaCe
XAV+B7n5MguQOZwBb5B+FfWKDfclr4PaQ2ozq8uEWrwuvHO8onQx1OHdVfuZ
2s7qEvCMXhnuLTv/RWYEGsmd5neWyxGeh8jNKy83Rb/TzvMnVOUd581Su0Dd
fDTltVI71c5bwrMN2XiN5NapPaXuZPiM6LpYxMuqLhva0bGYzrsk8yuqhXcP
bzbvFn0b1Xm7eKPMHaCuP5bTCTgtl58ugHflOtvlX3Y5a48zeIG3VW6A2v/I
fI1D9Bqfeyr/f8w9cBw95eqpHaz2OP8E2tMNZFeacdAe36MMHY/jvNx65ULt
8C7jLeClodPifToOu3iP1T1CDbnu7sm67smLzvgXFAvPMHO+MHdveK8ge3jm
qF1v5wt6XUQbXi+1jdTeUHcTb4V7Um673COZx4jCe0y/Sf65Wq9VqBueN3LX
7VJDpiYaqm3D289LTacKPu8ib7l+39MH0ZK3hzeWN5wehtX0QLu0s0tm15UF
o+nz/KVye2X2hTNQ+wtvBe8ofQxxvH6yLdSmuIanKMXbZ+9i4TnnsziMzfRt
tTvV/qHuWThXXh/eHTs3ohuHfcJ3yPX1c++WDr3win4f8H+Xay/TAZ/SDeVG
OpeZ5sxAWfogf7IZk2UmYXs4E34t/YqEZwbOhXc5xqj9St08xNLVZb8044nr
T0Fjuh/u85qH5ytG0j1db33Xe1mvKyhuv/u8EnLr1K1HxnCP4iEvLrw78Ff6
GjbZ7wZ9M3zG4fmCrbx79H38QR92NjH2uuLsLiPZjG/53eX+IfM5moR73Nzn
7bLZHlvQmt7kWkq53mfq/8SL4T5Ve9kuFdRVRH1esmwTtXfU3UUJXry5w7w/
epvZBwm8I2qnmTtb3Sy8x0uUGyk3ROZDdOEl8cbwRtGfICnM5Y3jjaHHohvv
prmv2WWBc/o3ntAHwu8ku1Sgy4czpLugCu+Q3X5AEbXXePnUzpKZjcq8BDM+
NqO//gOQGL5vcnnkpspMwzu8tbzt+sWG3wsozeuhdrzaier+hkH0kfCbV66h
TAPsovugGe+RPR6jZPhNKFvK+Z5Vdwa9wnuL94V+i+jFmEjfU1vMLiv0Wok0
4TvOz6N2tcwqLKFvyBWQmyMzF1XCd4s/Xb/5Mgswjq6F2rwW9PtoFX77qS1r
v41224A3wvuD/4ncMJnh6MqLkysqt1DmazSg24ffrXLtwm8/xMt15A3mJYbP
Fp15H8omqM1jt7yYFO4fvMKboNd4lKebh3e/67ghcx116Ef8Mrxt9HbkCN+D
8LmrbUw3Cc/i8Nzg/corQb8VzovuLXtLbb1w3+Kj8EwLf6vYb6vdtqF7eC/I
HlbbWl2b8Hynk+UmyU2XmRHOgd6ITM7+Kn0NB8K1ynZQmz3sFn6H0IPNeWZu
kpndMDl893GVV4WuigbmDuSl8OLpzpgQnjmY4Dszlh6DDfRR38tWvpdPzU7B
DnoNP1HuU5nPwjMw/I1j9kO5Gc5zJgrxetpxouuYbN8pGELvlvvJzsn27R3e
6fR3OMFLoBNxjP4Wu3m16Np4W7/3zN1o54v0hfCeppvK5ZebZuZUVKYvIqvc
8PC3DCqo7Wv2VLt8aY95GE3/IHdbbY3wfscW+izSqO1J90A5ted5GXkD6Q/C
dz38NuP9qTae7oQYXh89p5gxS//ZGEEPkYuXyy3zEiaGa8UTXhzdEmXVPuCV
MmMDvRGZXdsp9VWd+VO9UsKzTe7//HMNQg==
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0zlMVFEYhuEfRoRhWNwAxYUZF1QsXUo1sREbE7BUChtRFGRQUQFXZNyF
xEosLMTOaCuxExMtxMoEWoydWFg4GtfnxmTevN9359xz7zlnJne4p627JCJm
MZKKeIa3FREzXLIgojEd0cLtGESXPsHTeCkXOVsW0Yrqyog8j6NDnuJ51C80
r76LOzGGUdxDpjbiLt/BbaT1W3wTFfINvo4CyvURvoYyeZiv4gpS+mW+hFL5
Il/AEEr0QR7A35qI83wOZ/Fb7+cz+CWf5lPow089z734IZ/kHnTjBI6j6HoX
H8NR7EYDZqz3i7W/xkMU9D7ehx1yjr/bu/f4ZB+f8BDuywd4C0qxR591Fs/x
1bkUuAPb8Uiv4o+lEfvlSR5DJ/6U22+ux1N53iFPYRwH9Ty3IiNnuej8pzGB
QUxaQzu3IPl9mCZSSc5EeK3w+mFIuD0qku9d96pRmYyTfaIK1clYxTZFbXKP
vIgXY0lyr76UlyEt13E9GpDRl/OKZC65kVdiFWr01bwmmVdu4ixyydz6Wl6X
PENezxvQnDxH38ibsBltGMCcxTzmd/iGJovei60W2MsPMCy/4s+osyEf9J18
BM02YZRfYA79esaGbcMb+VDq///rHx6VWmY=
       "]]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwNzr8rxHEcx/H3bcqPO8WF7cpgOOWEvwDlxHC7cLKeoijEbqAoxH4DRSF2
FEXd7cRgsBjJjyiP4fF9vXv2Gb6Z4kyhlIiIcRK1PjSTJkcpGdFt8wxTZIoV
Vtljn3OWvb2wFaq80qat8ev+o6UuopUedvVeO8Io03RoZRbdS2yzwwln+qm9
454X+rRLvtzfNNX7f7qo6jk7RJ5J+rUn5t0LbLLFEW/6sb3hlmcK2g/v7g9S
DRGNZKlJRXTaAQYZY8LbtD7rnmOdDQ5o1w/tFdc88Mgn/7x6Nhg=
       "]], 
      Line3DBox[{6, 47, 88, 1691, 129, 170, 211, 252, 293, 1772, 334, 375, 
       1853, 416, 457, 498, 1934, 539, 580, 2015, 621, 662, 703, 2096, 744, 
       785, 2177, 826, 867, 908, 2259, 949, 990, 2340, 1031, 1072, 1113, 2421,
        1154, 1195, 2502, 1236, 1277, 1318, 2583, 1359, 1400, 2664, 1441, 
       1482, 1523, 2745, 1564, 1605, 1646}], Line3DBox[CompressedData["
1:eJwVzSFPglEUBuCrWJwKbgbYdGMGA8mAG25mZ4ANJj+AoWPOIslA+ALBZDIQ
CASTiUAgEEzOQCB8warTzWAwO0bA5wvP3nPfnd2zf9E+v1kJITRY3QhhjRx7
HNHOhHAsK9RocU2XOwY8MiGy+yxj3vhhV3fP0pza9CZPib7+RFapc0VB90Rk
7iY7DBgn9BM5I+Y7+Uf3wsK8JLvlBkVifUmWqXLJqe6DjjmiR58Rv/qxnDLj
k3ryN3/mBTtpNzhkfdsdeUaZBk27Wf2tucMDPYYc6EfylSnvfDHnH5M1Nlk=

       "]], Line3DBox[CompressedData["
1:eJwNzD0oxHEcx/HvdcMV56GkPMalDBYZ6AxWJblypExypcvgYTMISQZlu0FI
MiibQTFYlYEiDMYrxaDs4uI1vOr9/fz+/TOFpfxiIiJmSFZHpGihkwHSdRHL
5PQERRbYYodjTrmmwXfrPOtXPmlz75JI+zftdDFIxn7AuJ5inh73GRt6m0NO
uKLXfsmDfuGDrPuGik7WRDTTQT9D9ifGdJ45ht1lVvUmexxxwaj9izv9yBuT
7l++9R+NtRGt9DFtr6qPGNE5ZinYmmwreo0S+5xT9Nbt7VbfU+adH/4Bj64z
MQ==
       "]], Line3DBox[CompressedData["
1:eJwVzz8oxHEYx/EHSfn5NymERN1gM5AbKIsyUL9CWdQpyUA2g0IxGG4zKBSD
4TaDcsMNBspguHKDwXJlkJRdR16GV5+nd9/lO5DbTDfqImKZxiSimR6GGGOr
PWLSzrHI2n/jgDwXFCix6+29rfDKJ71anvqWiIQ+MmQ51adsyhLrDGsF9txH
nHFFkVv9zpZ54Z1x7YFfd1NrRDeDjPKsT9hZFlhlWquy4z7khEtu+NJL9okK
b8xrP3y7G9oiOulnhKTDP+wMKTlWvO3St937HHPONRm9aB8pU+WDGn+YazT9

       "]], Line3DBox[CompressedData["
1:eJwVy78rxHEcx/G3EsPdOYNB4vJjcMVgMCDdbDAcoe5KCkUUpSwGSVEG6haD
pCgDZTFIBqPBYEAMBkUGA/kDkIfhUc/36/P9No3PD86VRcQYFYmIFA1k6f6/
0xELDOgiMyyyTokDTrikxncrPOhnPsi4tyhPRqRppI1emu27DOlRZml3H7Oq
N9njiAs67Ofc6ife6XFfEamIBPW00kXOfk9eF5iiz/3Cst5gh0PO6Ld/caMf
eWPE/cu3rqyKqKWFTor2ZLX/9DATTNrqbEt6jW32OWXaW9bbtb7jlU9++AOH
lDKd
       "]], Line3DBox[CompressedData["
1:eJwVzL8rxHEcx/E3g9Q5d2WjiEVCNoMrZTh1g8GVZECUQfkxmJSBMjBIBnUD
ZWCQDMpAKcpguMEg3WAwXDIYxB/gPL7Do9e7Z58+nfOrxZW6iJilMRWRpYM+
cqxlIkZtkRmWWGeHQ0654oEtb8u2QpXv5C9tn4amiBa6GGCYY71gJ5hjmX7t
gm33ASdccset/mRfeOeLXNKoT0dkaKeXIV71vB1nmkUKWpVN9x5HnHPDj/5o
n3njk0mtxp871RzRSjeDpLMRI3aMKRYS3rbpG+5dSpxxTY9+b8tU+OCXGv8n
pTW4
       "]], Line3DBox[CompressedData["
1:eJwVzj8ohHEcBvDvOxguvKckC+XIQvmTxXBiVkqirih/Ekl5F6sUg0FXDAYp
BoMUg4HhBoPJZDAYbjBIYriBwexj+NTzPN/f8CssZVMbSUTMk6uPaKaTAUZI
8xGbzMiLZGyxzzEX3PJAi3c7VOUPvunQD8g1RLTSzRBjdNlPKcnLZPTpV+zJ
R5xzwz2D9gov8hs1ivojdY3+ToF+ioz+v2VaXmCdcf2dXfmQM66pMGH/4Vl+
5YuSHk0RSRqRp51ehpl1S90m5TlWWbG12bblMidccseaW4/bk1zlk18S+x8C
BDFK
       "]], Line3DBox[CompressedData["
1:eJwNzb8rxHEcx/H33WBwzlcGSrnyI4synFIGcv+Aoigl6pIkcQNlMFwxGAyU
wXDFYDBQBkXdYDCZDIYbpAwUBgMlGeQxPPq8evauT0dxZXw5FRGzZDIRrXTR
zzBrSUTCpD1HiTI7VDjhihs23bXwYL/yyR97Wn1DRBs9DFDgUO9myp6nxAZn
2rb3gGMuuKaq56nZz3zwy61Wl/U3neQZoqaPMGEXWWKdF23Lu88R51T50ke5
t59455tUU0S6MaKZHH0MkujT7sfsGRZYpV0ve3epcMolvfqi+zv7kTd+SGv/
qVk0hw==
       "]], Line3DBox[CompressedData["
1:eJwVzT8oxHEcx+GPP4O6ww0GShdFGQwGShkoyw3UxUAZSBIDYrjBYLhkMBhu
MBguGQyGGwyKGAwMNyhKMUgZbnCDgUEyeAxPr/q8v/1+nfNrE6s1ETFLMhHR
RjcDjDBOrjliWhfZIM8eRU644IYHtr190Xc+E/8fjSi4JbWdHgYZJcuhbUaX
WGeLktuuHnDMGdfccWl71gof/FJ2a2iMaKWLfoYZ48k2pQussEnFbUf3OeKU
K8p82R71jSrf1KYi6psiWuigjyEypGyTOscyOdJueS1QpMQ5t/Ta7vWVKj/U
+ecfE7o2ng==
       "]], Line3DBox[CompressedData["
1:eJwNyj8oxAEYx+H30hn8+TmTDOgUSplkoG64K7OSgSIlg/rJDZTBYEAMBmUw
GBCDQRkMhks3GAw2g2IwiVKnDDeSZ3h6v3168wvlyZVMRMyTNEd0M8AYJdbb
InLM2Clr7HLAOVdUeWDHXwdv9jd1si0Rh1ri5hmkwDhneh+z9jKrbHGt7bsn
XFLhnjt9mFf7ix8yrRGPWpPbRT+jFHnRi0zbS5TZ5FPbc4+54JYqdX2CZ/uD
Gr805CIak4hOehmhQLs+53/KXiRlgx592z3ilBsqDOmp/yf7nRp/ZLV/6qA0
Gg==
       "]], Line3DBox[CompressedData["
1:eJwV0D8ohHEcx/GvUsj9wWy4KwaK1UDdQBkV6gbqymBQHhnEZDCcYjAwGQwU
g4HFYLirGwyKwXDDKYOJQblSrF7P8Opd38+vnnqKKxvzSUdEVMj3RhQZZYoZ
FtnJRyxrwjYHHHPJDQ0eaVH19l3b/NGdiThx69chxigxS5lzW0UTtqhy63aU
blxT44EmddubfvFDZzbiyS2rBUaYZJoFXm1LusYme3y6HeoZV9zT4IVfWyt9
wzeR842+iB4dZJgJSswxYCvrKuvsUnDb11MuuKPGM+O2pn7QzqU/PaKLf1WT
NZM=
       "]], Line3DBox[CompressedData["
1:eJwVyj8oxHEcx+GPonDu/FtuvcGvUCxGw9FdGWUy+JdR+qlTYjacohiYDaco
BlbDqRtuUFYDZbCpG05dMXoMT5/399W3sLmzlHZFxDrDmYiESeYoczCos2rv
ss8p59xyT5Nnqv7l+bQ7/JIdiLjQRtxxpiixQE1P2LAr7HHMg3bmXnNHgyZP
+gwfdpsOfdmIFy3njjFBkRLv+jwrdkqFKl/aiVvjhjoNfvRF3uwWbXpyDEX0
uwUSZikyqq/5v2xvkXL4/08/ci+54pE60/q2/692i2+6vXv5A7ehM74=
       "]], Line3DBox[CompressedData["
1:eJwVzSFLAwEYx+HXIopTD9kXUAwTJuwTGCZMMBoMEzZYFicoCn4AkYWFBT+A
yMLCwrLhwsKCLBkWLiyYDIqKom3PwsPveP/H3WajeXS2EBF1NlYidthlnwNO
uFm369X8mQ739Bkw4pkpd9591V/+SXLedctrkRIVDqnxaGvoJde0Gbh1tEef
ISMyUttUv/ghtxoxdku0QJEyFapktpqec0GLN7e2dumRMmTCny3Tdz5ZWotY
TPxHtymwR5lj8raqntLkli23lj7Q5YmUF0q2iX7wPf+2/y0zA592N0U=
       "]], Line3DBox[CompressedData["
1:eJwVzs0qhGEYBuDHShkzfjLKcrIQZTTKEYwyE5uxtfjE2l9RxAmIoihOQBRF
jRMYRVFYW8zCwsrOb9i4ZnF13+/ds3hzMwuT800RkdCVisgzRIky620RnUw3
OhsccEiVS+55YNNdDy/6L39kW93bumWBYcaZ4Mjex6y+yhp7VG378pwLbrmj
Zh/hWf/im450xGPjj3KQPGOUqNuLJPoyK+zwatuVp5xxzQ0/9gp1/Y130pmI
5vaIjOxngCKjZO2J+yl9kSW26LVvy2NOqHFFwT7n/kn/4JMW7xT/9JQ1YA==

       "]]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwNylcyA2AAhdHfi1drsCUbMGMBCQmi7EKLiBYteu+E6L1FEIRgJc7DmW/m
zq1tiNZFqkII9exWh9BFNz30EqkJoU+T9JNigDSDDDHMCFHfUc0wxjgTNNon
dYos08zQZJ/VOeZZYJGYfUmXWWGVNeL2dd1gky22abbv6B775DigxX6oeY44
5oRW+6mecc4FlyTsV3rNDbfc0Wa/1wceeaJAu/1Zi7zwyhsd9pK+88EnZTrt
X/pNhR9++eMf849GBA==
       "]], 
      Line3DBox[{206, 207, 208, 2942, 209, 210, 211, 212, 213, 2945, 214, 215,
        2947, 216, 217, 218, 2948, 219, 220, 2950, 221, 222, 223, 2952, 224, 
       225, 2955, 226, 227, 228, 2956, 229, 230, 2958, 231, 232, 233, 2960, 
       234, 235, 2963, 236, 237, 238, 2964, 239, 240, 2966, 241, 242, 243, 
       2968, 244, 245, 246}], Line3DBox[CompressedData["
1:eJwNzlVSAgAUhtGLATZ2YCB2507cgDMuQDYgdq7TbkVFsc/DmW/mn/twc2v5
lfVERKxSn4o4TUaccc4FG+mIS73imhtuueOeBx55ouD2WYu88Mobm/aSvvNB
mU+27F/6zQ+//LFtD78kqKCSKnbs1ZokRQ217NrrtIFGmkizZ2/WFlppo519
e4d20kU3PRzYM9pLH/0McGjP6iA5hhjmyD6io4wxzgTH9kmdYpoZZjmxz+k8
CyyyxDL/OJwsnQ==
       "]], Line3DBox[CompressedData["
1:eJwNytk2AmAYhtHfkUPX4B7MkswiRTJliMxTySwzHZlFuV37YK9nre/9mvPF
dKEhhJBjqTGEFlppo50OXppC6NQuuonQQ5ReYvTRz6vfAR1kiGHe3EZ0lDhj
jJPg3TahSVJM8uE2pWmmyTDDLJ+2OZ1ngSxfbou6zAo5Vlnj25bXdTbYpOq2
pdvssMse+/zYDvSQAkV+3Y60xDEnnHJGzXauF1xyRd2trNfccMsd9/zZHvSR
J56p8A/TMyof
       "]], Line3DBox[CompressedData["
1:eJwVz1c2Q2EYhtHflUtjMCUTsJYBMAohotcERwkSvfceovc2H/u72Os56z29
ua2jpb0hpdTKRmNKneTooptiU0p57aFAL330M8AgQwxTcu2IjjLGOBNM2otx
Po6ZYjpqz3SGWeaYj3P2si6wyBIVMntVl1lhlbW4376um2yxzU48076re+xz
wGG8x36kx5xwylm8236uF1xyxTVle01vuKXOXXyf/V4feOSJ5/hm+4u+8sY7
H/Ef9k/94psffvnjH7/HRIQ=
       "]], Line3DBox[CompressedData["
1:eJwNylcyAwAUhtEbLVEieokS0RZkA2YsgF0p0dmL6J3oRO+chzPfzP1vfmJq
bDIREeP8JiM2KLLJFttMZyJ2dJc99jngkCOOOeGUGb9nek6JC2bdLvWKa264
5Y45270+UOaRgtuTPvPCK2+8M2/70E+++GbB7Uf/iFREggoqWbRVaTU1JFly
S2ktddTTQJplW6NmaKKZFbcWbaWNdjroZNXWpd1k6WHNrVf76CfHAHnWbYM6
xDAjjPIPgzI4EA==
       "]], Line3DBox[CompressedData["
1:eJwNylc3AnAAxuG/O3c+gyszIXslK1RGtlAiW5H1xczI+Gaei+f8znnP21ys
ZMsNIYQ8y40htNBKG+08N4XQoZ1E6CJKNz30EqOPF99+HWCQIYZ5tY/oKGOM
M8GbPa6TJJhimnf7jM4yR5J5PuwLukiKNBlq9iVdYZUsa3za13WDTbbY5su+
o7vk2GOfuv1A8xQ4pMi3/UiPKXHCKT/2Mz3ngkuu+LVfa5kKN9zyZ6/qHfc8
8MgT/6b/KJ8=
       "]], Line3DBox[CompressedData["
1:eJwV0EdSQlEQQNHnzJlrcEtuwCoWoFMVxIBZMOecMGDCnDOYEN2S5w1O3aru
P/j96hPNDU01IYRG1mpDaKGVNpKkeK0LoV3TdNBJF91k6KGXPt58268DDDJE
yWxYs+QYYZQxynbjOsEkU7ybTesMs8wxzwIfdou6xDIrfJqt6jobbLJFni+7
bd1hlz2+zQq6zwGHHHFMxa6oJ5xyxo/ZuV5wyRXX3FC1u9U77nng1+xRn3jm
Jb5hfBv+7Erx7nhnvCf+P/+GC0ME
       "]], Line3DBox[CompressedData["
1:eJwVzldSAkEYhdEfI2DAiProltyAVS5A1mnOIkkBc84B8+mHU9/Una7pmV0o
zS1mImKepWzETC5imimKTNIoREzoOGOMMkLdXtBhhhhkgJo9rzmy9NNH1d6r
PXTTRYaKPfTP/b/88M2B/Us/6fDBO2X7m77ywjOP7Nsf9J47brlhz36tV1xy
wTm79jM95YRj2uzYW9rkiEMabNvrWqNKJf0jW/Zyuj/dlb6bvpHOp3dsssF6
enZ2TVdZYZkn/gGDz0OD
       "]], Line3DBox[CompressedData["
1:eJwNylc7AnAYxuG/Q0fO7YRsGVkZZa+MQmREtgO+cWRFvoT74L5+1/U+b6T0
kn2uCyEUaawP4YlHHrjnryGEO73lhmtKXFGzXWqRC875dTvTUwqccEyeH9uR
HnJAjqpbVvfZY5cdMnzbtnWLTTb4clvXNVZZYZlFPm1pTbHAPB9uczpLkhmm
meLdNqkTJBin4jamo4wQZ5gh3myDOkA/fby69WoPMbrpopMoHURop+y3TVtp
oZkmlvgHQ+QnHw==
       "]], Line3DBox[CompressedData["
1:eJwNyscyA2AAhdHf0sozeKW8gBlbJEH0FtGiJEr0XkJ0opdXEjWEnbM4883c
ubX1sUi0KoRQR0N1CM888cgD9/zVhHCnt9xwzRW/9qJecsE5Z1Tsp3rCMUcc
8mMv6AH75Nnj276rO2yzxSZl+4aus8YqK3zZl3WJRRbI8Wmf01lmmCbLhz2j
U0wywTjv9rSOMcoIw7zZhzTFIEkGeLX3ax+99NBNyd6lnXTQThsJWmmhmTgv
vjGN0kQj8/wD47lBhA==
       "]], Line3DBox[CompressedData["
1:eJwV0OdNA0EQgNE5B7ANErRASzSARAHQIDkHY3LOOWdMxubtj6dPN3Mn7V5X
b393XxYRPQyUI9orEW1UKNPaGVFKpYUiBfLp2S6nGUHT90Wzhv7xyw/ffFGw
+9QP3qmTN3vTV1545olHcnYPes8dt2RmN3rNFZdccEbYneoJxxzR7Ig41AP2
2WOXHRp227rFJhvp3GbrusYqKyyzlO5jt6g1Fqim+5nN6xyzzDDNFJNMMM5Y
+g/eHdURhhlikHP+AXVqRv4=
       "]], Line3DBox[CompressedData["
1:eJwV0FkzgmEcxuHHGZHKErJmLXu2FLJmjcgexowPwPc/cz0H1/xm7nkP3uef
//lr/XaEEL5JJkL44pMP2rwzmA7hTV954ZknBuyP2uKBe5r02+/0lgY3XNNn
v9JLLjinTsZ+pqeccMwRafuh1jhgnz1S9qpW2KXMNr32Ld1kgxLrJO1rusoK
yyzRY1/UIgUWmKfbPqezzDBNnoR9SieZYJwxuuyjmmOEYYbIxtvFO8WbxPfT
6dtMfFt8R/xndvgHUCEXrQ==
       "]], Line3DBox[CompressedData["
1:eJwNytk2AmAYhtHfqSNHZiXdkQsQEQkVknmeRebM8xjlGu2DvZ61vveLJXO9
2YYQQoK+xhD+qFPjl3hTCD9a5ZsvPvmgx/aub7zyQsztWZ945IF77ui23eoN
11wRdavoJRecc8YpEduJHlPmiC63Qy1xwD577NBp29YtNtmgw21d11hlhWWW
aLct6gLzzNHmNqtFZigwzRSttknNkyNLi9uEjjNGhlHSjDBMiiGa/Q5qkgH6
SbDLP/heMhI=
       "]], Line3DBox[CompressedData["
1:eJwNylcyA2AAhdHfqydbMKMniK3YgBkLYGmIiBYl0XsnRO+dIAhRzsOZb+bO
rWzvbO0oCyG00VUewh+//FDim5aKEL60yCcfvBOzF/SNV17I02x/1iceeeCe
Jvud3nLDNVc02i/1gnPOOCVqP9FjjjjkgIh9X3PsscsODfZt3WKTDdapt6/p
Kisss0SdfVEXmGeOWWrtMzrNFJNMUGPPaJpxxhil2j6iKYYZYpAB+knSR4Iq
316N00M3Wf4BucJMdw==
       "]]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
wZvdzZvZQfAuh/cDVfdZCu82eBvDux/emV7ezAQ+eZU3M/HreXmzRG+9ypuZ
Pl7ezNYjb7aZOh3xpB1MvEE8ZonH7F/EJ3OpA3aiDhhBPHOZuiF5JFvMzTPY
u9RVE7h5BkuewcQh3uhEXW+jqtt+SB3wOHXAHVLn9eIfO5664UnyDJupM1ov
r2InES/tgvfvKLfOHh3exvDOhHcqvL0VL/G8vQrvD4p3ErwJFW9neCW+6gbv
Onhzw0u8ak+oOi/xniXeM7fh3QFvOXiPwbsQ3qfwjoD3JXXbJvDOgZf5l2U+
Yo8qfe8ofaWOHDPc1Ze8ma0Nb1LFu0bxfqT0DYM3Et7R8KYhvpW+iCP0RYyC
dyu8zBdsN3iZP9qm8P4JL/G57Q7vWTdPaJ/BW1jpe1bpuxDe9kpfeZ83Kd5U
8F6Cdw+84fCOgTcZvMO8vJn92Mubmfzkzep5eTN7wsub2SLkzS55+QE7y8sP
2F/ID1z08gn2sJdPsKvIJ1zi+kGur3bzKnY+96nv5hnsZ15+wzYkz3DPyw9Y
8j9mA/mBXZInIq+wz82r2O1cl3zaE+6Tmvvs4D7kr+x2nlvazatY8j+2rg+v
5M0uqOvLFO9i7lPPzZvZ9Dy3Ec99jJ3psHM/dkpeTPJke+Haz/Ut6jp5JEse
yWxx80j2FM+twHO1LrWw87ziWuHmzWyE0v0U99nEfeoo3qteHsk2cPNmQV3C
sHOn0nczXNLPJ/mknT68GxRvdJ5bjueKnZuxs4qbJ7TkCe0auMiXWvKldqWb
Nwve5xf1Pl/Fz43V+5wFOyVvhq52j+KSvOEGdf2Jek8kv1rXy5vZ+Dde5c3M
bPJm0m92n36zXeTNpB/pBeNSGcalCaofSeo7F1V/zi7GvZKMk8npz5nHOLmW
cbUU4+pM8ipj6M+Zwbi0kt+dJIxj1xnHzjOOtWbc2824V1j1m/VlnHxf9SN1
ph9J6i/U42ws+pF+9uGV+g71L9td9ddVhZd6mZ0LL/Um25x+s9nwLoOX+oXZ
De9b8P4N7w3FK/11P/j016VTvI3gTQXvJXgf/Oz2m02Cd6CPvsK7Bd4y8L4N
70SlbzP0/QPekaq/7iy8CeG9Ce9teNuofjPNOwjeTIr3F9Vvdg7e+OX/d97r
EofA2w3exfCWV/2TgxVvR3glD3xY9U9uhDc+vFHwRql+sx3wfu+jr/QT9qXf
rDj9ZofJm42h32w2/Wb13bxZcJ4Yg3lEXuYdz5h3SN7sbId4zjxlEvMU+j0M
/R52BvOaB8yDJtGPdIH+gSeqH6ki84i1zLPmMO+4zLxjKPOUgcxT5ql+pBDm
NR+o/qskzIOkX0L66worXuk3i02/WV54k70bx+GdCi/9HmYLvLPhpT/EhMMr
/TD0z5j88LaAt7jqR9qleOlnMItUP9JL+pE+Uby3mef+BK/MizPCK3kk0fd5
Vpf3UV+3v24CvD/DuwveyfA+grcTvPfgfQpvdnhbwxsHXvKi5qDilXnoEqVv
CpWHEd4H2dx5rrzPX8Ibot5n6a/LAe/XueK8llf3m01V7/NcxXsd3oLwNoC3
PLzkRc1eeEeqvMpSpe8d9M2k+s1aJfP6zUq6eTO7nH6zxuTNfiDvd4q83zLs
H1DF7Uea5OYZzDXyij+4eRWTyaf/aiF5y2puHsmkIa9bAvsHkiccTp7wGryd
yCvy/tvV+Ad/2gB5yN74U/K0l8jTvozl9l9tgnex5AkLxnd4x8BLv6UJoR+p
guqv+wzeWIr3V3grq/4ryesWg3cMvE3gPQBvF9VvthzeG/B+DW8f1V8XCm9C
1W+2Gd7p8K456/KOkDwwvE/Qt5TilbpJXMW7VPGKvgmUviPgbQfveXh7Kl4L
r9QR6M+0o5S+N+GV/lXpN+N7NDLeJk0Zz+EdDi/juYmLvlV99E2heE/BW1Px
Sp1C+nuljlMP3p3wTlK8C+A9DG9FePvL7x39Zum9vJmdT7/ZOi9vZjvTb1aQ
vNkg6nRv0Z8zgXjjAXXq1tT15rt5hmCd96TqvyKPZMqp/pyj1BmTu3kG01bV
JVnfYfZS1ytCfJKMOuBV6oASn59X/WaniX9Yf2E2UDevR7zUE176+c00eP+G
tw28Eo9NgbcvvGfcPJIhjxTsrxPeTvCmUP1IXeBNBS/xmCEes7LeIQG8t1R/
3Q3VfyX9Ztvg7Ur/VXN4W8Ib7w28y+GdDm9PVdcmnjf34C2p+s2a0CeQDN7F
qu6cEt528G6DtyC8zL/MNXhlvU9WVQc/Dy/xsClP3TwxvH3hjQVvD3jvwtsW
3nVuXtT0Uf2TwvtQ9deJvtfDXN5F8LZQ+naAd6uqUzMfMcxH7Cl4S8M7Ad7j
8A5X/WYlyZvVod/sAv1mFcmbnaGvZg19NdXID+i+sgU+/WZrVf+V9Pk0Uv05
JejPqUeeQfpq3qevZoebNzOSb5D8mL6u+5He5T6hqh8p7zG37+scdi5W/Uia
a6lPv5nkkeQ+K1Q/kvSbzaEPqi7PfYCdmRSvX1+Z5t3u5lVMatWPJM99wnMr
qv6rJdj5i5s3M0dU/5Vf3528J2t9+q8O4Ofaqt9M7NyLnZIHPODDK3m1bVwn
32jS+ui7Q+kr/YSr1fus++uW+/TXyfWz6ruooXjXqP463Scm+UzdV7bDh3c/
1+U9eY/7bOY+jeg3u0G/2TbyZu3pN3tKv5nKm5mXjEuyrm0y41g/xrFTjGPX
Gfc6q77i3oyTsVWf+UbG1Zf8juRhXK3LuER9yiYkn5+ccewK41i4m1cx5FXs
V4x7Mk7+rvpy5Xdkgfod0b+zwivjNvUscw7ee+p3Tfrk/4I3GrzD4N0N71fw
ZoD3BzUOX2McTgzvDfW73E6N85In1HFOStVvdiDs9by3VVyh9b2g9O2i+uRn
wPuc/qtO8Oo+/EdSb1J9zi8VL3lRewje9vBuV/11wtte9dWLvsOVvvI7+8iH
t6/ivQlvJ3jnwrsM3sfwNoRX4qIh6Cv1xGzoOwnedfDqOPO44hV9v1a8HeGV
+mA/+s1y0292WPWbfUW/WWt3nab5inmEyiOZOMw7sjPvuBbdnaf0Yp7yI/Oa
Q8xrFqj+q9T055RiHrSdeUQj5hE7mUecoh+J/gS7kHkH/RvmD+YpS1R/znXm
rZ+qfqQYrCP7SfUjybwpjrtu0USD93N4zaaYDm8fn/66paq/Lhu8WeENg7c6
vFPg/Zx5Fv0JVvoTZB7aEd4VivcevHkU73bmfeUV76fwvkjm6kueMNh/9fOP
sRze1vBKHua0ykvIPPcQ89zE8P4Nb154x8C7H31nwzvTzZsZ1uHaNYr3Crz5
FO8dn36zLCrPkwve+Op9HviW21/XVPIqqt/Mqn6zT9A3JrwR8JaHtyW8+ZW+
q9T73BneGYr3KbySN7tMv9nmpF6/WRXyZjnoN6tGv1lb8mb0Q5pj5P3WYH/0
rDGdPOGf8OYmrxidvPFnPv1XcVR/zlnylj+7eST7jLxfQezXeeAz8KZRedRV
Pv1m/fDnXfKW98hbJsH/mnc1vEs6uLzD3LyZ5Xu3eRRvXpV3Fd5Rah207jf7
wc0j2bbwSj/hV6ofSdYpR8JbGt5xivclvJnhLQnvUXiXw9v+aKzX8kp/3e2s
Lq/UEb734Q2Ht7zS9zb6yvc4Gt7f4ZU8oV53L3nR4/D+BO98xRtCv1kOeIvC
Gwmv5IE7nnH17af0lbpPEcXL752NrXg/ye6+z1rfvPCOgrc1vMvgrQ8v/aVm
m9K3jOqf3E6/WXz6zRaTN4vrrdM07ek3q0rebCx1uhDqdEOJN+5Q1yPPYBcS
n0yjDtiLOuAJN89gyTPYn1Q/UkHqjJI3m0+drjt1utRunsFuoa5XlPgkNXVA
+ufNAeIZ4h87UfWbEQ/bVPRfZSceHqd4RynedvDOgFfqnv11XRte8khW5VXs
tDC3bi79SMRX5h13HV+wH0nyKu+ofqTD8OaBl3jPXHHXLdrF8BaCdyi85EXt
X/Ayv7C/wztf9deRR7LnFC/xbXAfEtF3HPqqPJJtBW8aH30L+egr/VeF4WX+
Yu7DuxXeofB+KHVzeKPD213p2x7eZfBOVvqeUf1mT+FVeUKbGt63VT/hH/Cm
9OE1bp7wP30a2ZS+F+EdTb/ZB/SbNVX9ZpH0m1Ujb0b+xy5T/Ve672iR6kc6
qvqy5D4ruY9ap2nT0xck6wcf0ldDfsBsVv1IklfYRT5BX5e8mdyHvJnZrvqR
xtIXVN3Nq1jyP7amu44v2He01KcfaZWbJwz6TeVVrOG51dy8mc30Bt4d7jrN
//QpSd9aeu6zU/GSr7N1VH/dUqWL1nelT7/ZSjeP9B+/yXO7oK+sh/XrA9T9
dbt9eLe5eSSb2ae/rh7PLa/6zaQvrrq7Djeoo/TXad1XuHlCu17dR557OcLl
JW9m31d2an23u3mzYN/dDqUveUIjedHG9Jtd8fJmZrPqN4ui30zWaepxWOpT
U9S4LfWsKMa9Dmr/q8mMky/pyx2k+q/q03+Vl3E1uxqXZN1iKjVuS55BftdY
n27yM+7pPvO0qh8pAeNqEsZVvZ9bWTevYvupcVv/rk2HdxS80dR+X3vhjc7v
yGfwNlB97FKvIU9oyasYWZfaQfGqPFKwDzmV2t+MvFnwd0THFSXcPOF/fpd1
3LLQh7cvvOvhzUn/VWp4M6s4Kqa7LjUYh4T59F9JHmm+0lflzewy9E2h9nOL
pvY3k7hrgOoD1/rKOs2J6n3uBe8heHvyPud016UG3+dEbh7YXlH79em+cZU3
s+1UXz15M/sF/WbH1P5m39Bv1kb1m+VS/Vcy74jBvNIw72haKdZr13mVYl5z
SM3TySOZ3MyDcjMPOsU8ohTziG3MI06odT1H1P5XPZinWNWPFJ15jcoj2fOq
/0p4WcdnE/j0I+WD9/3PXz8PJW9myJvZUMWbC97s8B6Atxq8E+A1al65AV6Z
l7WCd4vqR5K8xNeK95LKYwjvx2p/M91vFtzf6aTLO0Tx0r9k17l5MxPJvP5z
dx2uKQrvXNmvSa1T2+TmkSz7QZmtPvoWVrxb4a2k+gm/Uu+z7G/2SOl7cJS7
rm2guw7XsA7XrnXzwOZd9M0Dr857bIe3k+onXK70bQHvBqXvC/T91M2b2Rle
3szUJm/2Gf1mv9NvVoO8WUnVnyN5zgVt3LxoV5/+K1mnyf54hv3xTDTVn3Nc
5WllP6j377rrplnHZ0aSJ5R1fB/65I3ZL84yPtiFqh/pDHla+b7KwHtA5e0/
nOn2141S/UiSN86n9r8q4LOf2wK135fwvgfv526e0PRT+1+lV+vQZT/DM4q3
v+K9D28KeBlv7WHFu7NT7Nfu90Ve1MRSdQHhNWodt/BeVft9Sf9VfHhzqX7C
MfCGwvtY7W+2QfGWVHl14T0Pb2o3bxasUwhv919c3r7wfg5vSniNep8r+rzP
K9X7LHls+nutrMNl/0nD75GVfuBKat297G/G750trfav20u/WXT6zRaRN8vC
/mZt6TerSd6sv+o3G6v6kaQ/5y93HV9wH5Uzqj/n/s+v39/sS+qMqdy8memh
9v3Q/VeSV9F1T9lnI73ahyTOU2fdoqlJnbEq8VInVWeXPNJteJlfmEVu3sz0
V/tf6X6kUqofaanqNxPe7qruLPtfbVL9ZslU/5X0I2VWvGfcdZqmGrxlVH+d
8I5WvO0Vr65rn/PhVXkzMxR9k6h+wo6q/0rX5UXfpEpfyRMmVbyyLnUdvIWo
m0teVL/PveG9BW9HeJeq/fpYD2LOq/3cnvu8z+QJg/2T0k/4h0+/2Ra1f53u
J5T55seqv076HMbSb5aVfrOq5M0a0G+2n36zGuTN9P5XtVT/VYTax0z6lA77
9F8tU/t9Bfe/og+qrJtXCe5/tVL1X+1SfWU7VX/OFjdvZjKqfaXkueTNTA2e
q/etqvOG/a/OqD60ZT79ZlUUbyyeW1z1m0kf0Wo3r/KfPivJH0k+aZcP727F
u5jn1lH9dctUn5juK1N5s//0ZZ1V/WaVVX9d6mP/u76blb7BdbdwyfrbPQVe
32+WXvXpCW/xY25fH3kzs1m9z346vklf6Z+sqPTNEeHub/ZQ9T1ape8u9d5q
3dW61CCv5M0a0G92n36zdeTNOtJvdpJ+s/3uuQDBfSZ/8ulHimQcu6V+17Yz
7vVQfbmDVX8O9QjzE+PqZ2pcknpNGrUf1Gm1H9QGxr0Cbt4s2Het+5H+Vn3p
8rvzWPHq3+VI1W9GXsVIHmkCvC/V/lfH4H2XvvRm8EaPcPu6r7h5s2A/UoTq
R9LjvPCyP4NNrXiLHnTjBOH9W/3OTlF90fK7rOO0BfD2VPpKXjQc3t7wBuA9
p/r2ryp9z6t+s46K17h5s//EOcK7SP1u6n1xy6h+wj6qf1L3yUu9bxi8MVT/
JPU1M433+TM3T/if91nHXSfh/QPe9aq/jnWapq/63Zd+s2z0m51182amGf1m
zVW/GecCmAfJnDyDuc+6HlnHN+qSO+8ezzzlJ+Y1+5jXzFP9Zmnoz0nm5hmC
8wjZJ/+w6je74eYZDP0bdq7a74t944P7css8qDXzoNKqH4k8oXkMbz54/4Y3
K7zxc8VweKf58G6Cl34JGx3et+G9Au+38I6GN+bk188rWcdn2qh591fwhjGP
U+s0zV14S7nrNE06eJ/CK+vyrsKbG97S38V67To+1mna3T79ZmeZ58ZwzwWw
OeAdBO9U9J0L7zl4Zd49Ft6V7rkPJi36qnW4JkrpK+/z94pX1qk9yOrmhXb1
dffrW+zTT7hd6fsU3vfUfn3F4JW8aAKl7yGlL/05dql6n99RvNJv1slbp2nL
kDf7nH6zH+k3q0jerKjK60r/VZ2DsV6bJ/xS9SN9o/qvviAPqdZp2tXkLdU6
TZucPKdax2c7qn4ko/pzFqt+pHLkIZfjT8lLZ1D9SHq/L8nrtq33lsM71F23
GMyTf+fmVWwZn/6rlT79Zknuuuc4jPTpN2uv8qiSJzwEbxV4Z8IreVr2hzRf
wFsE3nOK91K8OK/Ne4u+jG+2kOq/Kq7y6sIbK7ublxbe+Kq/bqTqNzsGb1rV
TyjnYuyBtw68W9V+boXh/Rbe7+C9CO8G6TdTef6+qt9M9C2u9C0Pb9w3vM+S
x35OHruQ4pV+M1mn2VjpK3lR+lEN/ahmIrxr6Dd7l36zXeTNVrO/WRf6zb4i
b8b+wJb+div7xj+hrtecup7srzuLOmAX6oASr7K/q2V/V1tU9V/1PuDWVaUf
qTV1usTEG93V/leyji8DdcCz1AG3Es/UVP1IUifdRJ3xAnXkafTnH1T7m3VX
vC3UOU2y3xd5QnvqDbxSV+2g9nMT3pZq/yviMRsKbwGf/iupa7dQdfB7an+z
3+G9A+8ieJ/BK+s09f5mi9R+X3/49BP+7bO/WeRBd78v9su1FeFNofRdq+ry
6eE9p/av6w3vX0pfC29S6ubz4d2k9uuT/smn8DaDd5q7LtX2VO+z3t+siOJ9
Gub2RWh9E/jsX5cP3rTwnlf9hB0V73X0nUS/WSb6zYqRN6tPv9kh+s1Kkje7
Ql/NVLVv1XnVV7bEzZvZI2q/L+k3W+6z31ca71wA29TdJz/YJ7bNZ/+rvW5e
JdiPtFXtByX9OWodn91LX1Axnsv5BXbaG/qvlvj0X61W/UjruE8T1Y8USh/U
bzz3DnZ+gp1yfoHex2y/6r/apfqv9L5hap2mHQpvRcU7U/VNaR1XuutS7Ul9
Xe33VVfxTjru7vel9yU75K5blPNJzR7Fu1vx6v669Urfasdev3/dErUvGXlg
S37MLn5Df53w7uA+DRVvInh/Vfu5pcLOA2/orxM/7H2DvnKeQhP6zSLpN1vt
rtO00Wu7/Wa6P0f6rzi/xg5T/TknGff6M+7tZtwrwDiZmn4k2Z9hP+PqTfpz
IskzXFf7QW1nXEqg9r+6q/a/2qX2v2L9vm3GOJlZ9V+lVudLyjhMntB3f7Or
av8r2e9rB7w/q/2vJG92EN7l8K6Dt5fa70v6fjm/xt5X+1/J+aF7VZ+87jN/
T/Vfva/2N9P9dT+r/qt+ivcsvH3g3QrvT2r/OskjbYe3KXHCCnjbwDtbxRXx
4KW+Yx7B2xzeMJ/9zWT/On1e6vQwd38z2b8upnqf9f5mN9T+dbJf3yZ4Syle
0Xc1vCOJE4bB20/puwve+5wP+xzeB/C2hHef4pX+yS6qv64P/WaV6Dc7pfrN
OBfA/qb6zbKpeXF25h2Z6Dcryrzj0JnEzjxF1mlWZV4TyrxmiOpHYt94czXW
6/vNqjCPqKzmHZvVflAyL9vs058T8OlHqqr6kUqoeVMOeOlPCM4rs8+K+9p+
M9nfjP2U7Hi1v9lWtf8V56mZL9V+X3fhHQ/vPHiHqHVtO908ks16110nJbxz
1boq3W8Ww4dX1jH12uKelyr7I1WHdx284+B9DG9zeB/AG8L5oR/A21POBVDn
aW5w82Z2tOo3E97sd1/fX1efeX1FdX5oOaVvLnU+rJyDkP+D+K/tn6yg9uv7
y2e/vovw3lLnw1aCNwzeifDOVvu59VP7m0legv2UgvvXSb+Zod+sktrfLJR+
s6zkzaqR91tP3q8X9r+TOMFrz32QvCL9h6aE2t8sFXlI2Ued80zNqOzuOlk5
pyOCvG5h1Z8j63BPwjtOnT8o52nG9d4fm4485B/4k/fNtidveQb/N4d3PLwy
/rT7xD1vcalPf11Ftf9VNp/9vqQfqaLqR3oEr4w/cs5FLXj3uHnC4DkRp+GN
BW9GeIvD+wTe+vDugrchvLPhHQrvL+lc3nU++5v9oHhzqXXNut9M8/6tzunQ
/WZH4F2u9N2geDPAWwte9ku0I+A9Di/jj12rztOcWCKhwzvazRMazs81ZeHt
Cm9MeJMr3sk++9f9rfSV/c1qw7sf3hWKdz+80eHNAm9p4aXfbD3naeYhb/Zl
LK/frCH9ZgXImxnqdKmo0y0l3riozpc86NN/dUP1Iz3y2d/svpc3M++q/hyp
S76r+nPk/MHyxCcPvXjGPKMOeJl4phR10jnUDaOIf6SOHJO6arLWXrxUUPEu
UeeHst+s2eHDe8dnf7OKindAmHuepq7DZnDzKoY8ki0FL/GqYX9a+xzeyfAS
79k18LLexLxPXXUt8WEeeNPCu9pdt2hY32H2qn4z4b3mw1te9V/9Ef76fsJe
6jxN4m1zQJ0vKbxyvqTstzxB8YbDuwreqfSbjYP3G3hTwjvL533e9gZ9pQ4e
U9XBhXcSdfM0an+zNvDK+iO9z4/f+bAxFnu8tdV5qbJf8Xj6zTLTb9ZMnad5
in6z1uTN9H5Quh9J+nAW+exvpvbJD+4bps9bjDjq7rv1jL6alPTVrCU/sFv1
WUmeYT3XD3Nd9pOX8yU/4D67VD9Sc7XPmN63qr7P/lcrfXhlHR/nKZjZPvtf
JeK5VdR+X+RV7HY3bxY8T3OXT7/ZbtWPJOdLHlC8uXiu5HP0vmR1FK/0E65W
/YRH1XXtN91PeIO+r9I+/Veyn78+L3Wfm0cK7gO2080jBfvW9ived3jub4o3
VO2zJ+dmRvqcH6rPFdX9dbUUb9Vjrr5al42KV/JkkifcKudevIFX9JXzNI/S
b7aDvFk7+s2Se3kzs5m8mewjepNx+HvGpdmMY10Zxw759F/J+S9z1P5Xsg/k
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
cL9fuX6X77qBGrczqvNN9Pgp/cO71Pe720cv0VHO62WcNmFKd7nPHa7LOvqP
ee5FnqvPJTnG9Vqsm37/hrduejv9n5LHnkQe+33my+HEOVWYv/yq8l3NyYfM
JS56SBy1lXxIcuKoY/F+C9+dMq/E1cH8z0LitC/Ih3zszqfMFOZr87j/fuLA
JcSB7VUeOydx4wqVxybvZ6oSdxUlLm1BXCp54KHEOSeJc9IT56wkLupFXHTG
nS+b3cyPahN3Pfi+bNFezRuGjltY/ch3kyoEZL58ljjNkueUvOgj4rpsxHXd
uf9o4sDpxPmZVJ7zJ+LGX1W+i/my/VnlsesQly7BP0fQNx761lP6Hq3m6TsB
/79A39Uqjz1o29KuKZ8XDE2u9J2PvnlUHlvi9l/Qd43Kd01G3y7uvMkwbzJb
VD5T8gMNVZ2iI/p2xz8D0fdv9M2PPzegbzv0XYv/p6DvWvRNjr7FXtUn6obu
8vJe/9F3A/pGou8T9P0Yff9Q+k7zqVP8iL5NVB57IvrWVnns3Ru8PHYK5svk
/20A3UOV7unRvYLS/S66D0GXkISu7g/Ic342Zlbepr/mkzyY73edV33XfXy+
64Xo3kZ91x+i+3ZVv6BeYxrjh2Iqz9Bdfden0P0r/LwW3bug+w50mYTu29E9
N7qHv5pH1Q894OWzg7qfR/d1qn7xDN0/RPe+qj61BN3lPSyJ7rXRvYv6rleh
+2/qu66Jvrvxj9Qfv0XfGkrf0ozbI/H/U75ri76P0Xdw23fL7+32RWha9JX5
8gKlbwml71z0Xe/mwcwB9O2q6lO8n2an+q4XoW8Tnzx2OzcfYh6i7+f4c6P6
rtfj/6noux59E6PvKfQtl2h9idUJa/iO27t9vuvf3TynpV5mJa8+hTx2Wm++
bKsxX55HHjvgzZftN8yXq7DeKoUXb5vuxNtHWFdyhnUl/dy4y4SpdVjsY2PY
x8asUet0jqj1Wfr6eq5f4/o+rq9T65hmqede5/qfXG/oxl2mDOtfqrlxlxnG
Oq/qPutiNrlxl2G+bLf6rJfZr9bLyPzpmM91mS+v5XoE1xPE9a5f5bn5eG5M
4udYXlxt4nB91FN3nVFqb58ck3GSE1ebIZHe9b7wHsNvxNVmsKw/4voO5U+t
b6iPjst91qOtdedNJky9Jxd57jyeW9vNh5iRXFfzZbOAdWSVlb53j7j6yn7g
6ZS+el3eVrW+T+bHe9z8hgnj+lEffQ/76JsEfW/w3Fw8Nx76xkHfGFwf/dSZ
N5ljx1x9K/D9fsL3e8SdL5vS6D7AnU+Zo/hzkI/u9d35VFDHDe78yISr9YZ+
6xPJk5j96u9lPeYSpTt5EvOXj+6H8UMlpXsy3gc5l/Alfn4bf+508yTB713m
U9uVjqK7Ves6te77le5rlO4J0f06z82tvuvY6P6W0l10nO3zXSc55X7XMm6f
8hm39yt/yvkFx5W+F7h+SOko1w+r69e5vtdH34VqPaboO5brvyh9Lfr+qPSN
rs6D0Pv8WzVuf6jWOep99WW+vFHymG/QN9JH35Toe0WN2wnQN4rrn3L9AfbU
Yb1kKm++bJ8zX35GfblbF6++/LHb92UKEee0dOMuY6hTzHH7B8zeH9w+rpGL
KyQ9V69Y6CeqDrWEOO3zou78WuqPM6g/LlD1x13Egb1V/bE5cWMmVae4Qpy5
RdUp1hOXXiDu6kmc8xl1iunEOauIi3oSFy0mLppMHLWNOkVm4q5H3nw5EH9S
0tNpGpUP1pdPEKedoE5xi7jrtqo/9uf+I4kD1xIHfuLG1aYGcWMzVV9eT5xZ
142rTQ013xR9i6s+OtG39Bv0TYlerQdmvvtDSJzQj5W+M9E3gL45lL770Xe1
0vcw+g5QdSjqpPZRJVffq+g7Hl6DvnPRdx3+6Y2+GdC3naovd0TfhW5cbTei
r9SLm+WNWbZKgQaBEeUnFlw8s/J/9D2OvvdUHSoX+g51+0NMKPoWxJ4S6FsH
fXsqfdeqPjepL08L9erLWZkvS19BXXQ/pHT/TvVZie650X0mutxH9x3onhQd
V1Z5sq5RkpSBPEr3Gehu0D2Fqj+GUH9cpnQ/gu79VX25OrqfcedTdgu698QP
RdC9M7rPdvMk9g7zl19UfbkPus9W9eVD6C7zqcSvvud6gcI9e2XNWax6UPeT
6H4M3R/6fNcDVN/IVnSvoPoKGqL7aKX7RnTvrb5r5svmAv4hz2kqom9TpW9R
9J2O//9G393omxi9XnzzTrXTdwoHCip9J6j+gdxK30boe1zVl9NSX56kvute
6Buhvuun6NsR3gD6zkFf+S76oW9yvuuCPn0jC908mF2HvtL3ddObLwfyv+rn
rBJ6H95T6LsHfSUf8gB9P0XfgT7fdQ7smUp9+R3qy3WYLy+gvvwZ9eXvmC/X
oD71kvpyR+JtqUccIP/fR+ZNXN/C9cY+53GvcuOrYL1pibou9YuVPvVHFXfZ
hao+IvXHSVyvpeoUGanLVFF1inNH3fPcn6h6k+ybIeeAZ1H75eq60h53P41g
neKwz3WZX4dy/QjXH3P9Js/9nOc+57nRqEMl5noKdz5l88O7RNWh5lOH6unO
l+1h/NYdv53k+i5VZ4xU+/r61ZuWu/Om4PVgn4BPvwHzZTtP1ZtE3/FqP17h
LUQdqoLSN/pRdx9jqSdmUPre43pWtV+u1neXj46S99gieROuH+T6Oq4TV5vn
XCd+tp8pfXX/QBalbzGlb1W+38TUl1eq+vJcdJf5lHzXe/FnT5k3qf2ZG/p8
19bnu179huu6nyRYj+a5S9X+0nqf7RpK9+744Wel+7fqfXih6stbVX1Z9oXe
7tNXIPuH6/2lD/nofkDpfpTrT+I482XLfNk84rnM6+3b6rsWHeOyX/Rk9V03
Oeld7wjvUfzGfNl2xW/HuX5Q1ev1ft2hPt/vqjfUl/V3HTxHT+3rXkXpO8On
vnw94vX6Tjnq6qv7Qzb61Jf9xu2dPt+11JF1X0G4mz+xh3y+60+VvvfU78hl
rtenvhyH+vIN5stLyG+nIr+dj99r5tH2d28ebdMwj5b6VGbi25qqfnGZ+tQU
4qXY1KfmU794Sf2iyZeHUh/7+d76EidLFvh2bb3QR26/n6lE/eILNx4zcb14
zK5V9YuTxIfjsEf6Ff8knkzkzqPNc+LPZW48ZphnmStuv59J4cVjZgbxzwLi
pT+JlyIkHpa+a+oXRYi3yzT/+PGY7S1Ci1K/uAjvVeK3ydQvrhCPvSTey+xT
l5S6c0m3TztYdx6k6lOsK7EdVH3qJ+LV46r+mEKtn0qHvnvQdxz+j4++s9A3
Bnq1+Gz6pGvL8ocWVPqORN+K6Put0jc9+u7l/nvR9wH6TlbrLPqibyyl7wP0
nefmScxa9N2Ef3qh78fo296dT5l+qj41Cn2voG9S9K2EvokSZp9S5GL1wGV4
L6PvPPSVPMkL9H1frbMQfWegb1YffRsofZegby1Vd57uzaNN7D3u+qlq6G6V
7pnQvbrS/bLqN4iL7nOV7pv2J2/TrnTa0O+V7qPR/Wd0/1Lp/nENt/+fPm3z
EN3Hq34Dyf/Erfz69TUL8ENBdJ+O7jvxW190Z55luuHnheg+DN23SP4K3e+i
+2fonmf58xXvp2gZmt+bRwe/60voPhfdn6H7U3T/AN2H+HzX+bCntFoX2c5n
3VxD9V2LvlvU+rgPVd1Z9E1a3dVXj9vPGLdLjV8Qv0P3wqFFlb7D0bca+lZQ
+t6m7rxPfdfn0XeCGrcH+YzbrK8xy9W4zTzaXHPzY+Y99J2o+oXIf5q5+H8s
+kair+gl33VpNW5fQ9+Jqp8kemVP3wzo20HpO1utn5pB3TkWdedKzKPrkd/m
99oe5vda9vm8xD6fLYnD5Rxe5sumtdvHG9wvsa6qT0n9wm+/xEU+dQ0Vbwfr
kqtV/WKROq+ZeMzMVHUNqVOERvzv9YvSbh9vcL/N5W68HaxrrHT7/YL1C30O
sq5bBefbqt6h65gX3H5OQz+nvcFz9T6oU91+TvMYroxuvG16Ubf63Z1PBetQ
bVX9cSfXG/jUnYN9tkp3XXeOUNd13Wq5O58K7gdbiefqfgN9bnVceIsofb+l
r6Coqk9lUDrKud6Z1bneuu68w0dHmWfp90H16wb37bz2/1PfpMdcfWvx/d7m
+x2l6s4z0L29Ol9bvuv26ruWc9X1PqhyrrrKnwTr0apPO9iHsMKdZ/23Tq3O
YZdzuqUPYb56H8QPafFDKaV7TfW96+96o893vdmnLrnDnWcFv+u9Pvru8alj
XnLXXwTroVd47gtVH9e6zz72+u/6Qy9PYjrBy3zZhOO33938mNmn+nZ03Xn1
G77f/6/fta47V1Dj9gylu/DmUvshy/UWR90+Iq3jevVd079tQ9W4Ld/1VjVu
y3e9y+d7P+Azbl9R+kqf0nmfcUb6tCW/nZP89s9qXfMF6s5vM1+WfQCyEOc0
cOMu8w71i9lu3GUWUb+IRhz1ZYdPGkXtvL7eeHFXQOKuEdQvqlK/+E7VL5JQ
v1jpxl02QtWnpH7BunV7XdUvrhNnDlP1C6lLblfr49JRv+hJnDOfuHcEcdFV
Wb9GHBWznhdHlSWuHni1e6ce2Vrwb63Qy+582UyifnGYuCuaF3eZd4nrOrpx
l5lL/aKcWtcs+2mMUPWp1cSZndW65t+JS4+r+lQZVZ+S9a0N0Hea269rVqFv
PPTqtLlPy9IJPw7kU/oORt/a6FtP1Z3vUHcOd/t1/5mne/pOVfp2VPrK+tbT
6Punz7r1lao+FQ99Zd+Jxeg7BH1l3vQn+r6gPvUe+s6dvsg+PtU80Dp7hQKJ
29cKvQLvDfQdhb4HlL7voW9LVZ+Sdevf+tSde6l1zaznNX+ouvP6NV7dWfYb
Ed0boXvk/2PdubjqN5DvegG6P2Q+VfHrY/la5ssV+Mrnu2Y+ZUqp7/o5uqs+
XrsV3QerfpIG6H5C6R6B7t3cPl7bG91nqrrzPeYvNfDzTHQfh+4X0WUAur/D
d/0Tun/yah+hZoGqXt9BqMynrqP7uDru/CsE3TP69JOsQ/cGqu78G7rPUrqf
UOvZdZ7wutI3D/q2UPoWVPq+hb4L0fc++tYrHDt3y9z5AnmVvsPQtzr6NlH6
5mLcPqPG7cvoO1991x3Q94nSF147Cd5v0Hca+lo3HxJc19wWfy5C36HoG6a+
6xD0/Rx9Z/Fd//xq3vx/x239XZ9E35jomxp9u6pxm32iTAF3vmxiU3duyHy5
LvntJOS3HzFfrkbdKiF1q67E2ydVfWq0Wv8o6xB/deMue0LVp6QecUjVJeX6
QVWnuMn1XaruLOteZ6v68g2uD/FZ//ju0devf0x22Lte142rbUqfuqTUCySu
1utYw3zqUNLXt4nrB1U9ejnXT3E9pdunbb/kuUmIn+NSl4zG9QhVlzwo6z3d
fk671OvXtb1V/VHWOY7yWdfcxKc+Jfrq9YzLfa5Lv72sW9+t6tF6naPM02Xd
+ii1zlp4txx7/brmpehen+vSPyDrCnego67v7+Y6OlmZ9xx058XB9Yynfdan
S5/nSunv5Hpq9L3Gc/NInRF946Pvy7Gsf1T6DoW3JvpW5Pv9gO/3tKo7D0P3
4e58yrLOwg5Tum9Q/QanVd15i8/3u8anLrlG1Z0PqHq01CVXqnXNcp71BLXO
XbimU4f9Ren+J/XK2mpds3zX+336SQ6qc6slXyL9IRtkfQXXTyrdw5TuK9R3
ncrt47X5eW4itz/fxlDftfDWPO7qLtd/8vq07UBVd47Eb3+qfpLd6vuSfpJI
VXfW/QPLfL7rNT7fdbBOrX4v6qi68xT1vgnX28Kr9I0R4Y7bej24fL/6XHJ9
Tncwz+FzjvNxN+8R1F30Xcb1M0pf/V0ne/L6Orj0mayhvnycfcBWnXLmy/Yv
1jVHU/VlWfealzgnPXFRD+pQHd24yzJfNkmIo2J0XZxj3LrCgaxq/WModYoM
1ClejHHXvZagTjFCrXudRBxYU9WhShM3rlX7vF0kzqyh6lAziEubqDqU1Jff
d/v9DH28Zilx0UziqPnUKWQ/mbusa573ap+3cv9ZH7eNOsVhVYeS9Y+duf9E
4sAOxPmpsKcSceP7xI21sJ/1nrYNcWZetY8f677tcPxzAn0XVfX0DeDPDOj7
Fvq2VXXG2eibCH2jYo+ekOJGydCE6Cv72i1GX/rw7edqXXP5X9z9OfU+fi3U
+sdi6LtDrX9crda30q9rOqs+Z1nXLPsvSV1vD/o2QN+R+H8u+o5H36PoteiV
rnVC872qN9YO6ks/p6Wf06aWvn30zY6+c5W+v6Pvmd9cfT9A3w+x/yb6NkLf
91R9ucwWr74cxnx5HLqnRPdO+O0Yup9Gd6O+66/QvYuP7tKfP65xyaTVmuYL
ja2+6+Xo/hG6p1K6F0F32ddX77v7G/aMRff3le56XbOse5X55q/o/qfPfgVF
0X0TurdBd1l/MUfmv+guOtZinnzv1fddKaj7RXSfj+7XVd9IRtVXILo3R/cn
6F4B3XOge0FVXx6N7jnglXXrhdB3EP6JQN876PuDqi9PR99u+D8m+i5B36eM
w2suzys5tlje0ExKX9bXmBzo+65a1zwAfWepdesb1Xofre86tR/FVPStpr7r
bujbUH3Xsq45HfruRN9f0XeEuw+YmYG+p9Cr65Atl6Ny1Q2t4s2Xg/peQN+l
St/n6JsFfQdx//Ho2wN9T6PvPOrLF9ifM7mqL8ejvhynnDdflnXNKVkXOYt4
+zD5/wvk/8e5/X6Gfj/zm8Rj6jy+9T71pqWqHiHX9fq4PapOIfWIaaqOfIvr
A3zWx52iHlFS1Sk2H3bry/Q/myQ+9eUMqv74pnMPpd50guuruH5CrWuex/Ur
XH+HuOsczy3Ec9MRd0XHzoRSn1LrXltQh2qh1j+2ZH3rFHhF34v4bbzSV+pT
zVR9WeqMW9z4OdgnsMZH39U++gb789U6VukfuM31HlyvrvRNrvoE5HoM1jX/
5MbVJqmqM8r6VjnXcqs7XzaS55B6oq4/HvepP8p1Wf94nOsZ0Pcyz/2K52by
Wd+q9c2Jvt3Qtzzfb06+39ib3fpyLnSfo3S/hD/HKN3p2zdNffoKtvnorvaF
+8918mBml35PeO4CVX+U/QpGqL4C4bqDHwor3c/zvf/gU19e6+bBTFZVfwxT
uocp3aXP97RPHfmYO58yzKdsGnc+ZfIq3eOhe4jSXe9X8If6rt9mXfM8eA/h
tyv4bQJ+k30MZD17S7mOLmfRZaNP38hKH91XuvNls9tnXbPoW03pK/sVqD58
U+vY67/rn4663/Vzn3OHyYeYLGq9s+greY79qo4s+p508yTmkNJ3qdI3rdqP
QusrdeeP1XrnGdSXW1JfnqTqy03YN7uwuw9YcH3cUFWnKESd4iRxUULqFNOo
U6Qmjvqo9bmfP89VJDTzq7iraeAOcUhH6hTdqFN8xN8nJ66LVtOL65Zw/53E
gQVZHzfR7euz1FlsOfr6LhNnJmT/1efEXZ8Tl94iLv0ghRd3tSfO6Uqd4oLs
d0pcNJO4SPp1exNHfVDP3X+18d+fDz9ws01gS78ssZPahqEH4b1DnNaDOsVt
4q5Y1ClSEde1U/vrXicOHI091FnMeOLGfaoOFUmcuVfVoYYTl2bDPzI/nYG+
I1R9eSf6XsT/sVQdSvqrG56u8vzql4Z16/9X3+boOwx9v1L6dkTfc9x/G/p2
Q9912DMUfXeib2bsv4i+tdBXeLOhb6wZnr7H8U879O2Lvn/KekP0nYK+cl5J
D/TNg76P0avMoVHT2//ROrD61T5gzUMP+NShsmV1+rEN/fZmonuugQlH387u
uQamP/ouU/sn/42+c1R9efJmr75cnn7sYei+UvWxy3ddDt27q++a8yyCffJx
0H0OumdHxyWZE6Tdu7NU6Dvofhs/dED37ugu6yxSoHt0dF+lvuuv1Xct9eUm
6J5Ofdex0X0jfsiD7if4rvfit67oXhHdu+Pnceg+D913oksvdM+B7lnQcU7j
/qnWlm0T6LI6wc2hNX8N6q7ry3KuDfMpQx++mab6CmS/gt+x53t076Xqy6J7
yDG3P1n03YK+SSq7+6J3Qd9RPvuiH1f15aU/uOePpPy1wjuj6uUMzae+69/Q
dzj6llbfdaOabn15O/o2RV+LPX+i7zL0/Qz7L6FvYfSNUOP2bfR9hn86o29V
9F0u50eg72j0lf39+qFvZvSVdehFO0QkvtSnbSC7d+5BaJj6rv9C3xhZnX7s
YF/QMO6v952TfdrHU1/OT315DPPly3H+DOSte8WOOxsV3nP5BTvoYuoxJcbV
DPTe8Xj7qRhXbK/oVxumzXrRLrizsG2yf+KcVTLfIy6Q/WPlHLTKnAuWgXOy
QrKFpZh484Kt0qJT/g9zXzHjm9RoFK9FvUA/7t+d+6/i/o845+sh53wt5Zwv
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
Lo0u+Xye+w7PncxzVzEfGcl85LDKe+9kHlQdv83Entuyj6PKe+fjufHdeN7u
8eJ5O1/VEe5mc/PkXbEzPXZOxc6x+Ccc/9RXdQTi+WBdYLWqIyxRdYSc2d15
KPNfMwt/XozlzI9sQbgyYudgOdcEO8dhZ6iqI4Qrf37Hc6WedRw75Vy+iT51
BJmXlSTvMUXlbUbjnyMqj72QPMYZlUcSe6JhT2XskTxVU/IzDfmOGJ8N47MJ
d+NVkyzczYccxg+D8UMYfliAPWexpxz2XIX3L3hzwSv58yTkXX/3sSdC2ZMR
e97GHu0fybcsVXnyH5V/NuGfX1Q9ZQr2pPSx54SyZ5Oy55pP3WQ59hxX9uj9
yiR+fo/8G/FnMM+ZUV1/rPLzsu55p8rPt8DOFD75eYkn/fbNk/pRJ5/88N/k
t2V/hnX8fQf+vgd/77ePWbDPX53ftFnyY+jyyI3nTeajbl5d8vMRyp/iN+JM
81Ll5w8q+4mXTHRVv9P7KO5Q+fnb5OfHqPz8cPLzaZT/tx1x/a/rC+J/4k9D
/GPHKv/X5bmyj/d6/r49f9+dv9f93ruV/zepPnPiTzOT93+fG3+afSovl1Hl
jWXepPOulVV+fvsJdz9AyTcuIT+fHL8xvzaTsGe7yg9P5ru7wne3lfdnKe9P
4lavzw+PwT8zsfMKdtZW+fkPyc+nUjouVeutxP5hB1z7S2D/NDXOk/czm5U/
Q7E/P/nhu7z/fn7W9U3pa5LxbQZ+yK/y80vJz49U9vc44I4bxZX9O7C/Gf6n
L8tGSZ6H56bB/h1vyM9Pw/5rqr4p9nwY5n5HS/m9fqbyzMUmlXl1fpnOMxPP
G+J5U8eN501s8rSSJxT/58b+mG48b9YRn1R04+RgvaCxG88HTEhI/3+fLyb5
5K3ES9n4fRR/TsGf1/BnfuyM38CN03Q9K6PKz/+q6gjHsPM8dlbBzsIhm+78
z7lgFfDbc1VHmKXiuskqvq2MP7NhZyLsnIad8j7ExZ+PVX6+msrPn1B2lgva
GRL9f87zKh4ScnPRv87zEjuXYWcC7Ayo/LzUj57J/gLYuQI7FzCPkHOnZV6m
+yEl/zyP+cstWf+q8vPh2BM3thPPmwzZ3X6hSSrv3ZfnHmM+QtxlVPxp7zMP
knh+obJnvht/muI8N4PKz29R+Xn5+y/4+w/4e/qtbdKEbt6beN4ewj/lVH7+
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
cE2MTtXus6h7CkvhMdoKP99R/LCaczH5avgq91zGt7wselTjFU8SvTr5ajhS
4moJeMqFn9/P33uIv7ezr7cJa4Lnuxj9/BbBM1706nHxE0p9gfqHfD7DVxh/
1RU8C2P8s17wlJb6/GGNjb5/1kp9wWbw3Awe03uTz4eWz58bw8Orfv5H4eeN
914n/PxecEodX0geEt4aw28bP/+m6LdnCz98LLz0ozH6bdPP23w4062I3iPc
Ah6bU8k5K5zK7/KC6OdXCr9t+vPtws/H6Y0N/yz44V7YqSd8/ve+3ibTz0f5
+brMTXhZ+PlXynyeU/n59jH4LZ9/A3+OiPH/Qvz/MHZWs75/zP2I3i8Ynvb4
3/Q22cR/EfFf4fMM4U7eu368d+q3muZn4h8dRdBX+PmR4C8Qfvh80W/rfZnp
8f4ofOb/8N5tIH4uJX7mkz8U4Z+n8c/r+Gc6OL8VnIZnHHjqxfDzbQX/vhL/
Xkb78Nj5yO7xS6SvkcU/Opnw78LPq58V/2PShycLO+XCz/+LuJ0r+Cdu+v/9
v0368Bj/eQD/F1kfHvTzT9l5HP8/h/8X4P+J4P8J/EPE/0NEPz+V7zX9Nav6
yeTNq5xDoTpw/V4MwM9Xx/ThMf/PuM6vO7DvyLDL/O9+MXi+E1266eebOXdG
dE6E6dK7iN77BunDY/dNNaW/zRLh56eU+Pp5471zwWl6m1D6BZku/a560yvn
O9wjfvsZnK3A+SM4NT95BH/WAOeZop9/0+5riIci8Sf9ZMIHwLkUnD+IP5N+
zErNZbjWubHRuQxHwPl7cH4Fzrr4c6HUd5TDz18EzsXgnMw54rfwulN57hTh
n/vw904U/bzVn1p9RF/wfAse0wXNJi/dx78/yXPP5bmLYvrGlAmfTD4fWN3B
UtGlrwQP90HhRp77dW2fn29+Zdr/b/l69XAa6zeyfhA464OzGJx/Ef65Tww/
b3npdHAetLkKws+Tzwf3+HiCF/FneW2/r9Hn4NzDv48E5xnWfxecO4Wf/ybm
vsP02NvAafMB3pbzWjnP3V7b78NDv7Lgc9HPbxO936vCY/SI4eft/mW36Ujp
V3P6oPR7dKP0//lc+OcLSn29otURWH8n03FpX5fe4LH+Oa3g5w/y9xrvUQTv
8V4MH654Gkmflsn4Zzv+eRj/xPFU5p988c8K8ByEB34ZPC3AswA8n8Xw8/a9
241/nsM/5TH1BQ+BR/lY09vUh387DP/2HfkkeX5wLLyx4ztuc6Q2Ce9tOPPL
qucVa27z+WHVn78dw88/LfzwnRV+Xxrlhyey3uYvWH+VdTH8sOnYld8rEH7+
Qfjt3jH4l8T4U/n5gxX+fPMs4ect/9f7hQ3Cz7eDn38+hp+/QPzfoNzv6xJ3
P6L9WP4i/q+10/f/u/J7TZX7EePnVT9/sNznyXOJ/+nEv+lbTIe8ivfO9CEN
8NvPws8vkvupNjH6+R7CD48v8fvJWH+VyeBZJPyw6Y3/xXtn94AH2Wd6cB7U
+o5x+Mf2sR3SH8zw1BE9v75Hit/6khn/0AH8heAPwT8Pf74r+vl3wJ/fxO8P
c5HEs/Hzit/uAdETBvvww4QBPj/P/L6gUPAf2uTfhyr+xeAfKnyy6W3sfu1D
9tURMfr5Ql/vlLkfuUfqF87Y4vuf+tPgn8KH35i3s7JPfjKfL/ki0m/Z+rEs
lu8pOpaAfD40HYv5fyj+Xy16b+o3M3Vq+8DzMXg6gudBl+iQ6mP/iHNr60b6
2Nt9Pf1Dwj/Adw2SeD4GPhkdS1AXnO/F9Lc5J6a/jeXze4SfNx1LQeKWyv7z
CedmR/1mect+8paW4Pwb/lyCP01PngXOk8G5CpwWD8uIh8UD/HqEheC0fP5L
6cPTCZydnOuV6huf45bt7R3pG286ltr48x5wNsOfnDdDqy8+Kvp56/+5UvqO
9uG5qtdqzN+7VvrbjMKO1r0av2287gR4ztH8uz7Xzi8HROe8XPjkl6S/x0/g
2QEe04eY/rmY504Ufj4rnc8Hls9b35i1rO/B+gXSN8buTbTe/Bbh5+eD82bs
H9cjjXObzXMAp+qi27Ke+4Xwicv9OPwEnBXgHMi/a5/b7uA8E971afy5CX/a
c2tc4fe3ORWcZeAcC859PPcY+r3047nt4T2mwXvMY5/8mn7Ik+iHPIp+yNoX
KDtGV99EeOnt+LMNOOcbb895uQ/v1x2Cx+4Lsuhv3JL+xgPpb2w8ZH56vw2t
v1xz/PZn/PaB3cMKf34tOOeBZz547gfPHvzWBL+NwG/rhX+bw3rykHC66Gy/
xZ/j8Odo/Gn4+4L/ePBr34mb8PNy6edzvfTBUD9YnDx+hf/emZ7wEHrCyeCn
bi6cLf2OLsT/zfH/YPF/qzKfh2+B/4fhf+uruVL6/1icWF1DDv6cCJ6R0q9+
Af3Yv8KfL+DPEfjT8nX4+GCp3Beonw/Tr7sX/dLn0K97FM/N57lv8NyP6U/+
t9vS/clPpz/5pfjnWvwzBP8w3zpcJby08ZYN+Hsf5+89Cp5W4JkFHuuT/4zg
0X7pp4BH/VOAfwzPSpsvJ/7R3/EIeLqCZyZ47HcZDp7XwbMbPBfe5s8jaIB/
muKfx/CPzQ1fJv6xfaM9+8Yo4tb6UU+GJzksPM9B1k9ifU5e6eHOt+Zk3+lc
w2j/7Y7OPXFv4r7ihs591On7hhk+MLvv3LeOfHdXsa23urxGzhX1Hn9/iuc8
ZUdh68x8WMsHcjinj/D1luHv2P9Nn2zrV7J+DOs7uXu3fTLjzFTe1TZaD/ig
c7mp/njdnRtX65QbMv3xmrucGlMmNc6+S+ouBzt3Q2p9nnPdrqx1c2Y9553w
Z71fg6/uB19t52W7Vx0h91NaD2L3RxY/+6XOyOz3xf6zdr7G/gnYX499+x1/
4nfMxz+m9y6R/hK2/iT2t7Gs77js7et6P9o0pXNuG+V7c5378cpaPYp7O7co
+ftn+NVmyy69+8P8azL9Vcz/eZV90XsUt3KJ36b057ZedUeH8IPq/Z7n7zX9
1XDONZ3hB4wn4T4008/WzhGrSn0+RPVvo+3+EfvXka8+MNDzZ/AF8fZUTH3f
mZJffcn6cazPdde916vu6b+Iz/90bthZvbpnJ/0cNsrpWvwd/359XlaXXQcy
9xSZ+MSf2YMq+8x3zqzX/lTGI8XV41jd2cd8vy7k7z0npv5I49N4MLX/jN0n
Yr878XmN8PnrJD7xZ9CQvK6e6MOPJz6fZ31/13XwkHZnF9+XjMNovUCuSwyt
f+qA1LlmXtKfGX1+s2VvnTC0oHWx1mX0conXUnr+Ti7x0+JIfYTGp/WV1X4F
T0v88D0Kcn1/ZnS2RyQ+D0l8Kp9m/betDwnzMoKWUt/djXh7UvQt/3uZ38/c
4pP3PRhp8Zn476YDml6djT8zeq02zm1q1blvav88JTX32Pxzc+LkxgMaN81W
XVxyv+2b0lM95NycKaur9FT1pT7L3lOt1zN9r92vzSV+psj+aXH+g8TnKtk/
38f+QOyP8X+v8BLs7/HPp2ER8fms7J8r2D8/q+19j8L1rB+X2T/vrZyLrftn
8n3+Z6ekH5Pn2j3D+3XMtve3ZYsllXOW9V4y+Z3tl5pHnNwnlkbnESs/bPxb
kfQbNz72Y+JnHfcCdQZVv3/afbHFZ1mpr5PU+H/R30+C7ezP8yQ+JxCfBfjn
U+KzhP2zWcz33fxZmKhROTdtsnNjonzFAOdK32k/OHu8c7NT88Vs/tTtLdpU
zuF6Cn7jIP8+yiWWfTLyT9nPusTj0XlVDZL5ysj0fJYm10TynMiclHrHRuak
MHc+XM487g7M20rmN4nl6XkldaJ2bJ71XObQPc76K5PvD3NDFuyMzA1hLmG4
E/sPsT7HuZJO6Xzso2g+Bp5gAfZHsT6Sp7XuEMnTbB7c2cwL68T6bOdyjqbz
t4+i+ZvNU/sG+z1tvlhVXrdueySvu8q5diXpvtNrot+vSP/n8/pF+j/bHMb9
2B9s876Tfjkv3YfZswOe8Cf8s4j1kX7IeV0j/ZD5e4PjmQc3hfXJ93DmgXTe
uCD6XTb/b8b+bNYn97d25JPL6kTySeYqBn/A/hbWN3euw3+l80wPv/k/C/+v
Y30y/2xO/pnTKJJ/fob+Zwv6H5vPu0bOa1tFt7PC+qDOSPO9zP8NS6XOV/ud
Wh2H9l8tE/sF2M/FPnOlw63S91X7keZhX/Vp2jd1eLlvX3VxS8X+JPRaNgdh
neAvwf6Nzv1pbbqP4profhvpZ/j7myL9DC0eiM/wXn6v5Hv1+hnpvoKeHYvn
jcRzL9ZX9fdLXNIn0t/P7Jdj/+Gq9/fifuk8fEHU/lfYn479R1ifzM9/ID/P
7xLJzy3eTiTe/ly1Xy3YlM7b10TzdsO/Dvu9WZ+My33k8yOj+bzOkbe40jkR
2+Qe6mX6aF0ws/q+UhI/mf5d1j9qldyHlov9mtg/f6YXn8FWwWn2N4t95uIF
W2Lsz9nm4zf7On/Z7D/I/Z31UzUeYbPMJU/u8/t3p/sCeftGpD9Pw7Mj/Xls
f/5S4qG1cy2uTffJWRPd32z/rEE8zKhab/1qJvw90q/G7B/E/lNV8ZZ4LH2u
8fZP+z4S/+EI1ifzmKGcd569KnLesf35LPbPF1h/vXMjd6fPQdXun6eB/wk/
PlPno+T3tOp8tF/6J7/lx2do99VbYvbPohnV9zGW3zcsYH+7k9/3fbFfKvYf
EPuKc4nYf6rC12Ea/g9j8NfG/qwZ1et4dX+2/bO92Ff/JPOVxNF0nfvxLSPn
qap6czcoWm9u+1sp8ZDP79XFuXFfp+u+j0bPZRYPzKEO5rM+uW9b/XXttpH6
a4vnL2T/7J/E+Uz6nHggal/nPr9RFc92fpxxVc4v7R/F/uCq/bPJsPS50vOD
4a8D/rdZ38s5O29Oi/pH90+LT+3jt0H2n3z2n/NnVF/3t1D2nzvY31r7399M
HeJGsd9K7MfpRrT+8TY/fjL45fsevFLu298j9hV/mcwnMv9sEPu3u2Tin67b
Sv0umfNpVf2UmxOtn7L97VPiYTi/V+dkvnd3uo7paPSca/HwPfEwKZM/J8ZS
T/RotJ7I7B+V/DwZb4sfS5+7D0Tt2/uyF/sFrG/jEhs5jz8XPY8z/ze4hnib
XpU/jxuUPqd7flD8szL5baIP5/dbpkbO73F5I9+vEF482C77T7f09zfsxvcx
bi6A7T81d/r5p+rqd4h9+oKG98+sPv98R+ybnr8r9pdjn+97UCH2u2/z8at9
3f9Nb3+fn5/8wj/JfePYqe+2js0/k///vagemPNjOJvfK5vfK3mu2HBaWpdb
bf5ZIvlAlT42sSuqjzX7L2H/P6ryT5fX+9/nn4+yPvn3fAO/MX9EhN+weDsg
+JN59l+npXkPD7+dZ4uxf18Vnr7wIY2nRvgQ3T9t3wjt3BKTfx5Dfth/pne+
yORvS2L2T+ufqXXcEj8B3/cg34//jP13xb7p01r5+UMmv90p9huIfc2fdX+m
HieDX/PnHVXno4sbpnU1P0b5luT51/QtrU6M6Fv0fF3G71WQ/P5+mtaZ7Ira
2U88DCF/25g5jyceQu9xXp+I3sP2t0uw/ybrC52ruz7NC5VG7et5ZwXrB7jE
FviiqydE+CI7v3fE/krWJ78jhRPTPNKuKI/E+rAr9itYP8o545fO6Rfhl/4P
7E7HBw==
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{351.80461431866104`, 152.14895167403373`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-1.7042000000000001`*^-6, 
    1.7042000000000001`*^-6}, {-1.7042000000000001`*^-6, 
    1.7042000000000001`*^-6}, {-9.972486960570421, 0}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.5847326243222408`, -2.9256602295179825`, 0.6157391743469983},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.7651691982640543`*^9},ExpressionUUID->"c4318b4c-0b6e-486a-80b7-\
8b32ea456a08"]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{1026, 936},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FontSize->26,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 127, 1, 41, "Text"],
Cell[687, 23, 1557, 39, 88, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[CellGroupData[{
Cell[2269, 66, 112, 1, 70, "Section"],
Cell[2384, 69, 17728, 498, 865, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[20115, 569, 359, 7, 30, "Input"],
Cell[CellGroupData[{
Cell[20499, 580, 435, 11, 30, "Input"],
Cell[20937, 593, 6979, 129, 250, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27953, 727, 378, 10, 30, "Input"],
Cell[28334, 739, 6640, 122, 235, "Output"]
}, Open  ]],
Cell[34989, 864, 269, 4, 41, "Text"],
Cell[35261, 870, 1559, 44, 116, "Input"],
Cell[CellGroupData[{
Cell[36845, 918, 2976, 81, 88, "Input"],
Cell[39824, 1001, 1518, 39, 36, "Output"],
Cell[41345, 1042, 1515, 39, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42897, 1086, 2752, 74, 126, "Input"],
Cell[45652, 1162, 1566, 46, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47255, 1213, 1599, 46, 125, "Input"],
Cell[48857, 1261, 825, 23, 63, "Output"]
}, Open  ]],
Cell[49697, 1287, 296, 8, 30, "Input"],
Cell[CellGroupData[{
Cell[50018, 1299, 471, 10, 30, "Input"],
Cell[50492, 1311, 3540, 106, 88, "Output"]
}, Open  ]],
Cell[54047, 1420, 4131, 118, 107, "Input"],
Cell[CellGroupData[{
Cell[58203, 1542, 1082, 26, 34, "Input"],
Cell[59288, 1570, 63816, 1038, 315, "Output"]
}, Open  ]],
Cell[123119, 2611, 94, 1, 30, "Input"],
Cell[123216, 2614, 204, 3, 54, "Input"],
Cell[123423, 2619, 14523, 326, 663, "Input"],
Cell[137949, 2947, 242, 5, 54, "Input"],
Cell[138194, 2954, 16899, 365, 913, "Input"],
Cell[155096, 3321, 264, 5, 54, "Input"],
Cell[155363, 3328, 16895, 365, 899, "Input"],
Cell[CellGroupData[{
Cell[172283, 3697, 1167, 25, 50, "Input"],
Cell[173453, 3724, 11876, 241, 104, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185366, 3970, 257, 6, 30, "Input"],
Cell[185626, 3978, 528, 10, 23, "Message"],
Cell[186157, 3990, 526, 10, 23, "Message"],
Cell[186686, 4002, 526, 10, 23, "Message"],
Cell[187215, 4014, 539, 10, 21, "Message"],
Cell[187757, 4026, 29642, 532, 382, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[217436, 4563, 730, 19, 50, "Input"],
Cell[218169, 4584, 38320, 773, 406, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[256526, 5362, 799, 15, 126, "Input"],
Cell[257328, 5379, 572, 10, 23, "Message"],
Cell[257903, 5391, 572, 10, 23, "Message"],
Cell[258478, 5403, 569, 10, 23, "Message"],
Cell[259050, 5415, 580, 10, 21, "Message"],
Cell[259633, 5427, 29691, 532, 382, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[289361, 5964, 170, 3, 30, "Input"],
Cell[289534, 5969, 330, 7, 23, "Message"],
Cell[289867, 5978, 332, 7, 23, "Message"],
Cell[290202, 5987, 330, 7, 23, "Message"],
Cell[290535, 5996, 341, 7, 21, "Message"],
Cell[290879, 6005, 48368, 971, 393, "Output"]
}, Open  ]],
Cell[339262, 6979, 183, 3, 54, "Input"],
Cell[339448, 6984, 287, 7, 30, "Input"],
Cell[CellGroupData[{
Cell[339760, 6995, 4248, 120, 173, "Input"],
Cell[344011, 7117, 282, 5, 30, "Output"],
Cell[344296, 7124, 603, 15, 34, "Output"],
Cell[344902, 7141, 299672, 4857, 193, "Output"]
}, Open  ]],
Cell[644589, 12001, 253, 3, 53, "Text"],
Cell[CellGroupData[{
Cell[644867, 12008, 599, 16, 50, "Input"],
Cell[645469, 12026, 172, 4, 34, "Output"],
Cell[645644, 12032, 191, 5, 34, "Output"]
}, Open  ]],
Cell[645850, 12040, 229, 4, 54, "Input"],
Cell[CellGroupData[{
Cell[646104, 12048, 7237, 160, 254, "Input"],
Cell[653344, 12210, 69060, 1350, 369, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[722441, 13565, 335, 8, 30, "Input"],
Cell[722779, 13575, 311, 9, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[723127, 13589, 685, 19, 30, "Input"],
Cell[723815, 13610, 199, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[724051, 13618, 25895, 582, 1209, "Input"],
Cell[749949, 14202, 218550, 4238, 536, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[968536, 18445, 25090, 565, 1147, "Input"],
Cell[993629, 19012, 307832, 5952, 536, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1301498, 24969, 20018, 454, 834, "Input"],
Cell[1321519, 25425, 585, 11, 23, "Message"],
Cell[1322107, 25438, 586, 11, 23, "Message"],
Cell[1322696, 25451, 36470, 715, 285, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1359203, 26171, 19563, 449, 834, "Input"],
Cell[1378769, 26622, 25740, 526, 284, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1404546, 27153, 4292, 107, 173, "Input"],
Cell[1408841, 27262, 1901, 49, 248, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1410779, 27316, 4292, 107, 173, "Input"],
Cell[1415074, 27425, 1881, 49, 229, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1417004, 27480, 305, 7, 111, "Section"],
Cell[1417312, 27489, 731, 18, 30, "Input"],
Cell[1418046, 27509, 1586, 45, 116, "Input"],
Cell[CellGroupData[{
Cell[1419657, 27558, 10806, 270, 589, "Input"],
Cell[1430466, 27830, 1386, 25, 34, "Output"],
Cell[1431855, 27857, 908234, 14965, 582, 275449, 4594, "CachedBoxData", \
"BoxData", "Output"],
Cell[2340092, 42824, 69930, 1317, 379, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2410059, 44146, 1146, 32, 50, "Input"],
Cell[2411208, 44180, 8719, 228, 176, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2419964, 44413, 985, 27, 30, "Input"],
Cell[2420952, 44442, 132922, 2226, 167, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

